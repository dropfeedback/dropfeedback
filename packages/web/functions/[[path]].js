var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __require = /* @__PURE__ */ ((x3) => typeof require < "u" ? require : typeof Proxy < "u" ? new Proxy(x3, {
  get: (a4, b3) => (typeof require < "u" ? require : a4)[b3]
}) : x3)(function(x3) {
  if (typeof require < "u")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x3 + '" is not supported');
});
var __esm = (fn, res) => function() {
  return fn && (res = (0, fn[__getOwnPropNames(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function() {
  return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all3) => {
  for (var name in all3)
    __defProp(target, name, { get: all3[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);

// ../../node_modules/cookie/index.js
var require_cookie = __commonJS({
  "../../node_modules/cookie/index.js"(exports) {
    "use strict";
    exports.parse = parse3;
    exports.serialize = serialize2;
    var __toString = Object.prototype.toString, fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
    function parse3(str, options) {
      if (typeof str != "string")
        throw new TypeError("argument str must be a string");
      for (var obj = {}, opt = options || {}, dec = opt.decode || decode, index3 = 0; index3 < str.length; ) {
        var eqIdx = str.indexOf("=", index3);
        if (eqIdx === -1)
          break;
        var endIdx = str.indexOf(";", index3);
        if (endIdx === -1)
          endIdx = str.length;
        else if (endIdx < eqIdx) {
          index3 = str.lastIndexOf(";", eqIdx - 1) + 1;
          continue;
        }
        var key = str.slice(index3, eqIdx).trim();
        if (obj[key] === void 0) {
          var val = str.slice(eqIdx + 1, endIdx).trim();
          val.charCodeAt(0) === 34 && (val = val.slice(1, -1)), obj[key] = tryDecode(val, dec);
        }
        index3 = endIdx + 1;
      }
      return obj;
    }
    function serialize2(name, val, options) {
      var opt = options || {}, enc = opt.encode || encode3;
      if (typeof enc != "function")
        throw new TypeError("option encode is invalid");
      if (!fieldContentRegExp.test(name))
        throw new TypeError("argument name is invalid");
      var value = enc(val);
      if (value && !fieldContentRegExp.test(value))
        throw new TypeError("argument val is invalid");
      var str = name + "=" + value;
      if (opt.maxAge != null) {
        var maxAge = opt.maxAge - 0;
        if (isNaN(maxAge) || !isFinite(maxAge))
          throw new TypeError("option maxAge is invalid");
        str += "; Max-Age=" + Math.floor(maxAge);
      }
      if (opt.domain) {
        if (!fieldContentRegExp.test(opt.domain))
          throw new TypeError("option domain is invalid");
        str += "; Domain=" + opt.domain;
      }
      if (opt.path) {
        if (!fieldContentRegExp.test(opt.path))
          throw new TypeError("option path is invalid");
        str += "; Path=" + opt.path;
      }
      if (opt.expires) {
        var expires = opt.expires;
        if (!isDate3(expires) || isNaN(expires.valueOf()))
          throw new TypeError("option expires is invalid");
        str += "; Expires=" + expires.toUTCString();
      }
      if (opt.httpOnly && (str += "; HttpOnly"), opt.secure && (str += "; Secure"), opt.priority) {
        var priority = typeof opt.priority == "string" ? opt.priority.toLowerCase() : opt.priority;
        switch (priority) {
          case "low":
            str += "; Priority=Low";
            break;
          case "medium":
            str += "; Priority=Medium";
            break;
          case "high":
            str += "; Priority=High";
            break;
          default:
            throw new TypeError("option priority is invalid");
        }
      }
      if (opt.sameSite) {
        var sameSite = typeof opt.sameSite == "string" ? opt.sameSite.toLowerCase() : opt.sameSite;
        switch (sameSite) {
          case !0:
            str += "; SameSite=Strict";
            break;
          case "lax":
            str += "; SameSite=Lax";
            break;
          case "strict":
            str += "; SameSite=Strict";
            break;
          case "none":
            str += "; SameSite=None";
            break;
          default:
            throw new TypeError("option sameSite is invalid");
        }
      }
      return str;
    }
    function decode(str) {
      return str.indexOf("%") !== -1 ? decodeURIComponent(str) : str;
    }
    function encode3(val) {
      return encodeURIComponent(val);
    }
    function isDate3(val) {
      return __toString.call(val) === "[object Date]" || val instanceof Date;
    }
    function tryDecode(str, decode2) {
      try {
        return decode2(str);
      } catch {
        return str;
      }
    }
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/warnings.js
function warnOnce(condition, message) {
  !condition && !alreadyWarned[message] && (alreadyWarned[message] = !0, console.warn(message));
}
var alreadyWarned, init_warnings = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/warnings.js"() {
    alreadyWarned = {};
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/cookies.js
async function encodeCookieValue(sign, value, secrets) {
  let encoded = encodeData(value);
  return secrets.length > 0 && (encoded = await sign(encoded, secrets[0])), encoded;
}
async function decodeCookieValue(unsign, value, secrets) {
  if (secrets.length > 0) {
    for (let secret of secrets) {
      let unsignedValue = await unsign(value, secret);
      if (unsignedValue !== !1)
        return decodeData(unsignedValue);
    }
    return null;
  }
  return decodeData(value);
}
function encodeData(value) {
  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));
}
function decodeData(value) {
  try {
    return JSON.parse(decodeURIComponent(myEscape(atob(value))));
  } catch {
    return {};
  }
}
function myEscape(value) {
  let str = value.toString(), result = "", index3 = 0, chr, code;
  for (; index3 < str.length; )
    chr = str.charAt(index3++), /[\w*+\-./@]/.exec(chr) ? result += chr : (code = chr.charCodeAt(0), code < 256 ? result += "%" + hex(code, 2) : result += "%u" + hex(code, 4).toUpperCase());
  return result;
}
function hex(code, length) {
  let result = code.toString(16);
  for (; result.length < length; )
    result = "0" + result;
  return result;
}
function myUnescape(value) {
  let str = value.toString(), result = "", index3 = 0, chr, part;
  for (; index3 < str.length; ) {
    if (chr = str.charAt(index3++), chr === "%") {
      if (str.charAt(index3) === "u") {
        if (part = str.slice(index3 + 1, index3 + 5), /^[\da-f]{4}$/i.exec(part)) {
          result += String.fromCharCode(parseInt(part, 16)), index3 += 5;
          continue;
        }
      } else if (part = str.slice(index3, index3 + 2), /^[\da-f]{2}$/i.exec(part)) {
        result += String.fromCharCode(parseInt(part, 16)), index3 += 2;
        continue;
      }
    }
    result += chr;
  }
  return result;
}
function warnOnceAboutExpiresCookie(name, expires) {
  warnOnce(!expires, `The "${name}" cookie has an "expires" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \`commitSession(session, { expires })\` if using a session storage object, or \`cookie.serialize("value", { expires })\` if you're using the cookie directly.`);
}
var import_cookie, createCookieFactory, isCookie, init_cookies = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/cookies.js"() {
    import_cookie = __toESM(require_cookie());
    init_warnings();
    createCookieFactory = ({
      sign,
      unsign
    }) => (name, cookieOptions = {}) => {
      let {
        secrets = [],
        ...options
      } = {
        path: "/",
        sameSite: "lax",
        ...cookieOptions
      };
      return warnOnceAboutExpiresCookie(name, options.expires), {
        get name() {
          return name;
        },
        get isSigned() {
          return secrets.length > 0;
        },
        get expires() {
          return typeof options.maxAge < "u" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;
        },
        async parse(cookieHeader, parseOptions) {
          if (!cookieHeader)
            return null;
          let cookies = (0, import_cookie.parse)(cookieHeader, {
            ...options,
            ...parseOptions
          });
          return name in cookies ? cookies[name] === "" ? "" : await decodeCookieValue(unsign, cookies[name], secrets) : null;
        },
        async serialize(value, serializeOptions) {
          return (0, import_cookie.serialize)(name, value === "" ? "" : await encodeCookieValue(sign, value, secrets), {
            ...options,
            ...serializeOptions
          });
        }
      };
    }, isCookie = (object) => object != null && typeof object.name == "string" && typeof object.isSigned == "boolean" && typeof object.parse == "function" && typeof object.serialize == "function";
  }
});

// ../../node_modules/@web3-storage/multipart-parser/esm/src/utils.js
function stringToArray(s4) {
  let utf8 = unescape(encodeURIComponent(s4));
  return Uint8Array.from(utf8, (_, i3) => utf8.charCodeAt(i3));
}
function arrayToString(a4) {
  let utf8 = String.fromCharCode.apply(null, a4);
  return decodeURIComponent(escape(utf8));
}
function mergeArrays(...arrays) {
  let out = new Uint8Array(arrays.reduce((total, arr) => total + arr.length, 0)), offset2 = 0;
  for (let arr of arrays)
    out.set(arr, offset2), offset2 += arr.length;
  return out;
}
function arraysEqual(a4, b3) {
  if (a4.length !== b3.length)
    return !1;
  for (let i3 = 0; i3 < a4.length; i3++)
    if (a4[i3] !== b3[i3])
      return !1;
  return !0;
}
var init_utils = __esm({
  "../../node_modules/@web3-storage/multipart-parser/esm/src/utils.js"() {
  }
});

// ../../node_modules/@web3-storage/multipart-parser/esm/src/search.js
function coerce(a4) {
  return a4 instanceof Uint8Array ? (index3) => a4[index3] : a4;
}
function jsmemcmp(buf1, pos1, buf2, pos2, len) {
  let fn1 = coerce(buf1), fn2 = coerce(buf2);
  for (let i3 = 0; i3 < len; ++i3)
    if (fn1(pos1 + i3) !== fn2(pos2 + i3))
      return !1;
  return !0;
}
function createOccurenceTable(s4) {
  let table = new Array(256).fill(s4.length);
  if (s4.length > 1)
    for (let i3 = 0; i3 < s4.length - 1; i3++)
      table[s4[i3]] = s4.length - 1 - i3;
  return table;
}
var MATCH, StreamSearch, ReadableStreamSearch, EOQ, QueueableStreamSearch, init_search = __esm({
  "../../node_modules/@web3-storage/multipart-parser/esm/src/search.js"() {
    init_utils();
    MATCH = Symbol("Match"), StreamSearch = class {
      constructor(needle) {
        this._lookbehind = new Uint8Array(), typeof needle == "string" ? this._needle = needle = stringToArray(needle) : this._needle = needle, this._lastChar = needle[needle.length - 1], this._occ = createOccurenceTable(needle);
      }
      feed(chunk) {
        let pos = 0, tokens, allTokens = [];
        for (; pos !== chunk.length; )
          [pos, ...tokens] = this._feed(chunk, pos), allTokens.push(...tokens);
        return allTokens;
      }
      end() {
        let tail = this._lookbehind;
        return this._lookbehind = new Uint8Array(), tail;
      }
      _feed(data, bufPos) {
        let tokens = [], pos = -this._lookbehind.length;
        if (pos < 0) {
          for (; pos < 0 && pos <= data.length - this._needle.length; ) {
            let ch = this._charAt(data, pos + this._needle.length - 1);
            if (ch === this._lastChar && this._memcmp(data, pos, this._needle.length - 1))
              return pos > -this._lookbehind.length && tokens.push(this._lookbehind.slice(0, this._lookbehind.length + pos)), tokens.push(MATCH), this._lookbehind = new Uint8Array(), [
                pos + this._needle.length,
                ...tokens
              ];
            pos += this._occ[ch];
          }
          if (pos < 0)
            for (; pos < 0 && !this._memcmp(data, pos, data.length - pos); )
              pos++;
          if (pos >= 0)
            tokens.push(this._lookbehind), this._lookbehind = new Uint8Array();
          else {
            let bytesToCutOff = this._lookbehind.length + pos;
            return bytesToCutOff > 0 && (tokens.push(this._lookbehind.slice(0, bytesToCutOff)), this._lookbehind = this._lookbehind.slice(bytesToCutOff)), this._lookbehind = Uint8Array.from(new Array(this._lookbehind.length + data.length), (_, i3) => this._charAt(data, i3 - this._lookbehind.length)), [
              data.length,
              ...tokens
            ];
          }
        }
        for (pos += bufPos; pos <= data.length - this._needle.length; ) {
          let ch = data[pos + this._needle.length - 1];
          if (ch === this._lastChar && data[pos] === this._needle[0] && jsmemcmp(this._needle, 0, data, pos, this._needle.length - 1))
            return pos > bufPos && tokens.push(data.slice(bufPos, pos)), tokens.push(MATCH), [
              pos + this._needle.length,
              ...tokens
            ];
          pos += this._occ[ch];
        }
        if (pos < data.length) {
          for (; pos < data.length && (data[pos] !== this._needle[0] || !jsmemcmp(data, pos, this._needle, 0, data.length - pos)); )
            ++pos;
          pos < data.length && (this._lookbehind = data.slice(pos));
        }
        return pos > 0 && tokens.push(data.slice(bufPos, pos < data.length ? pos : data.length)), [
          data.length,
          ...tokens
        ];
      }
      _charAt(data, pos) {
        return pos < 0 ? this._lookbehind[this._lookbehind.length + pos] : data[pos];
      }
      _memcmp(data, pos, len) {
        return jsmemcmp(this._charAt.bind(this, data), pos, this._needle, 0, len);
      }
    }, ReadableStreamSearch = class {
      constructor(needle, _readableStream) {
        this._readableStream = _readableStream, this._search = new StreamSearch(needle);
      }
      async *[Symbol.asyncIterator]() {
        let reader = this._readableStream.getReader();
        try {
          for (; ; ) {
            let result = await reader.read();
            if (result.done)
              break;
            yield* this._search.feed(result.value);
          }
          let tail = this._search.end();
          tail.length && (yield tail);
        } finally {
          reader.releaseLock();
        }
      }
    }, EOQ = Symbol("End of Queue"), QueueableStreamSearch = class {
      constructor(needle) {
        this._chunksQueue = [], this._closed = !1, this._search = new StreamSearch(needle);
      }
      push(...chunks) {
        if (this._closed)
          throw new Error("cannot call push after close");
        this._chunksQueue.push(...chunks), this._notify && this._notify();
      }
      close() {
        if (this._closed)
          throw new Error("close was already called");
        this._closed = !0, this._chunksQueue.push(EOQ), this._notify && this._notify();
      }
      async *[Symbol.asyncIterator]() {
        for (; ; ) {
          let chunk;
          for (; !(chunk = this._chunksQueue.shift()); )
            await new Promise((resolve) => this._notify = resolve), this._notify = void 0;
          if (chunk === EOQ)
            break;
          yield* this._search.feed(chunk);
        }
        let tail = this._search.end();
        tail.length && (yield tail);
      }
    };
  }
});

// ../../node_modules/@web3-storage/multipart-parser/esm/src/index.js
function parseContentDisposition(header) {
  let parts = header.split(";").map((part) => part.trim());
  if (parts.shift() !== "form-data")
    throw new Error('malformed content-disposition header: missing "form-data" in `' + JSON.stringify(parts) + "`");
  let out = {};
  for (let part of parts) {
    let kv = part.split("=", 2);
    if (kv.length !== 2)
      throw new Error("malformed content-disposition header: key-value pair not found - " + part + " in `" + header + "`");
    let [name, value] = kv;
    if (value[0] === '"' && value[value.length - 1] === '"')
      out[name] = value.slice(1, -1).replace(/\\"/g, '"');
    else if (value[0] !== '"' && value[value.length - 1] !== '"')
      out[name] = value;
    else if (value[0] === '"' && value[value.length - 1] !== '"' || value[0] !== '"' && value[value.length - 1] === '"')
      throw new Error("malformed content-disposition header: mismatched quotations in `" + header + "`");
  }
  if (!out.name)
    throw new Error("malformed content-disposition header: missing field name in `" + header + "`");
  return out;
}
function parsePartHeaders(lines) {
  let entries = [], disposition = !1, line;
  for (; typeof (line = lines.shift()) < "u"; ) {
    let colon = line.indexOf(":");
    if (colon === -1)
      throw new Error("malformed multipart-form header: missing colon");
    let header = line.slice(0, colon).trim().toLowerCase(), value = line.slice(colon + 1).trim();
    switch (header) {
      case "content-disposition":
        disposition = !0, entries.push(...Object.entries(parseContentDisposition(value)));
        break;
      case "content-type":
        entries.push([
          "contentType",
          value
        ]);
    }
  }
  if (!disposition)
    throw new Error("malformed multipart-form header: missing content-disposition");
  return Object.fromEntries(entries);
}
async function readHeaderLines(it, needle) {
  let firstChunk = !0, lastTokenWasMatch = !1, headerLines = [[]], crlfSearch = new StreamSearch(CRLF);
  for (; ; ) {
    let result = await it.next();
    if (result.done)
      throw new Error("malformed multipart-form data: unexpected end of stream");
    if (firstChunk && result.value !== MATCH && arraysEqual(result.value.slice(0, 2), dash))
      return [
        void 0,
        new Uint8Array()
      ];
    let chunk;
    if (result.value !== MATCH)
      chunk = result.value;
    else if (!lastTokenWasMatch)
      chunk = needle;
    else
      throw new Error("malformed multipart-form data: unexpected boundary");
    if (!chunk.length)
      continue;
    firstChunk && (firstChunk = !1);
    let tokens = crlfSearch.feed(chunk);
    for (let [i3, token] of tokens.entries()) {
      let isMatch = token === MATCH;
      if (!(!isMatch && !token.length)) {
        if (lastTokenWasMatch && isMatch)
          return tokens.push(crlfSearch.end()), [
            headerLines.filter((chunks) => chunks.length).map(mergeArrays2).map(arrayToString),
            mergeArrays(...tokens.slice(i3 + 1).map((token2) => token2 === MATCH ? CRLF : token2))
          ];
        (lastTokenWasMatch = isMatch) ? headerLines.push([]) : headerLines[headerLines.length - 1].push(token);
      }
    }
  }
}
async function* streamMultipart(body, boundary) {
  let needle = mergeArrays(dash, stringToArray(boundary)), it = new ReadableStreamSearch(needle, body)[Symbol.asyncIterator]();
  for (; ; ) {
    let result = await it.next();
    if (result.done)
      return;
    if (result.value === MATCH)
      break;
  }
  let crlfSearch = new StreamSearch(CRLF);
  for (; ; ) {
    let feedChunk = function(chunk) {
      let chunks = [];
      for (let token of crlfSearch.feed(chunk))
        trailingCRLF && chunks.push(CRLF), (trailingCRLF = token === MATCH) || chunks.push(token);
      return mergeArrays(...chunks);
    }, [headerLines, tail] = await readHeaderLines(it, needle);
    if (!headerLines)
      return;
    async function nextToken() {
      let result = await it.next();
      if (result.done)
        throw new Error("malformed multipart-form data: unexpected end of stream");
      return result;
    }
    let trailingCRLF = !1, done = !1;
    async function nextChunk() {
      let result = await nextToken(), chunk;
      if (result.value !== MATCH)
        chunk = result.value;
      else if (!trailingCRLF)
        chunk = CRLF;
      else
        return done = !0, { value: crlfSearch.end() };
      return { value: feedChunk(chunk) };
    }
    let bufferedChunks = [{ value: feedChunk(tail) }];
    for (yield {
      ...parsePartHeaders(headerLines),
      data: {
        [Symbol.asyncIterator]() {
          return this;
        },
        async next() {
          for (; ; ) {
            let result = bufferedChunks.shift();
            if (!result)
              break;
            if (result.value.length > 0)
              return result;
          }
          for (; ; ) {
            if (done)
              return {
                done,
                value: void 0
              };
            let result = await nextChunk();
            if (result.value.length > 0)
              return result;
          }
        }
      }
    }; !done; )
      bufferedChunks.push(await nextChunk());
  }
}
var mergeArrays2, dash, CRLF, init_src = __esm({
  "../../node_modules/@web3-storage/multipart-parser/esm/src/index.js"() {
    init_search();
    init_utils();
    mergeArrays2 = Function.prototype.apply.bind(mergeArrays, void 0), dash = stringToArray("--"), CRLF = stringToArray(`\r
`);
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/formData.js
function composeUploadHandlers(...handlers) {
  return async (part) => {
    for (let handler of handlers) {
      let value = await handler(part);
      if (typeof value < "u" && value !== null)
        return value;
    }
  };
}
async function parseMultipartFormData(request, uploadHandler) {
  let contentType = request.headers.get("Content-Type") || "", [type, boundary] = contentType.split(/\s*;\s*boundary=/);
  if (!request.body || !boundary || type !== "multipart/form-data")
    throw new TypeError("Could not parse content as FormData.");
  let formData = new FormData(), parts = streamMultipart(request.body, boundary);
  for await (let part of parts) {
    if (part.done)
      break;
    typeof part.filename == "string" && (part.filename = part.filename.split(/[/\\]/).pop());
    let value = await uploadHandler(part);
    typeof value < "u" && value !== null && formData.append(part.name, value);
  }
  return formData;
}
var init_formData = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/formData.js"() {
    init_src();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/router/dist/router.js
function _extends() {
  return _extends = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends.apply(this, arguments);
}
function invariant(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}
function warning(cond, message) {
  if (!cond) {
    typeof console < "u" && console.warn(message);
    try {
      throw new Error(message);
    } catch {
    }
  }
}
function createKey() {
  return Math.random().toString(36).substr(2, 8);
}
function createLocation(current, to, state, key) {
  return state === void 0 && (state = null), _extends({
    pathname: typeof current == "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to == "string" ? parsePath(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey()
  });
}
function createPath(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
}
function parsePath(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
    let searchIndex = path.indexOf("?");
    searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
  }
  return parsedPath;
}
function isIndexRoute(route) {
  return route.index === !0;
}
function convertRoutesToDataRoutes(routes2, mapRouteProperties2, parentPath, manifest) {
  return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index3) => {
    let treePath = [...parentPath, index3], id3 = typeof route.id == "string" ? route.id : treePath.join("-");
    if (invariant(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant(!manifest[id3], 'Found a route id collision on id "' + id3 + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute(route)) {
      let indexRoute = _extends({}, route, mapRouteProperties2(route), {
        id: id3
      });
      return manifest[id3] = indexRoute, indexRoute;
    } else {
      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties2(route), {
        id: id3,
        children: void 0
      });
      return manifest[id3] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties2, treePath, manifest)), pathOrLayoutRoute;
    }
  });
}
function matchRoutes(routes2, locationArg, basename) {
  basename === void 0 && (basename = "/");
  let location = typeof locationArg == "string" ? parsePath(locationArg) : locationArg, pathname = stripBasename(location.pathname || "/", basename);
  if (pathname == null)
    return null;
  let branches = flattenRoutes(routes2);
  rankRouteBranches(branches);
  let matches = null;
  for (let i3 = 0; matches == null && i3 < branches.length; ++i3)
    matches = matchRouteBranch(
      branches[i3],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI(pathname)
    );
  return matches;
}
function flattenRoutes(routes2, branches, parentsMeta, parentPath) {
  branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
  let flattenRoute = (route, index3, relativePath) => {
    let meta2 = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === !0,
      childrenIndex: index3,
      route
    };
    meta2.relativePath.startsWith("/") && (invariant(meta2.relativePath.startsWith(parentPath), 'Absolute route path "' + meta2.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta2.relativePath = meta2.relativePath.slice(parentPath.length));
    let path = joinPaths([parentPath, meta2.relativePath]), routesMeta = parentsMeta.concat(meta2);
    route.children && route.children.length > 0 && (invariant(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
    ), flattenRoutes(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
      path,
      score: computeScore(path, route.index),
      routesMeta
    });
  };
  return routes2.forEach((route, index3) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
      flattenRoute(route, index3);
    else
      for (let exploded of explodeOptionalSegments(route.path))
        flattenRoute(route, index3, exploded);
  }), branches;
}
function explodeOptionalSegments(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
  if (rest.length === 0)
    return isOptional ? [required, ""] : [required];
  let restExploded = explodeOptionalSegments(rest.join("/")), result = [];
  return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches(branches) {
  branches.sort((a4, b3) => a4.score !== b3.score ? b3.score - a4.score : compareIndexes(a4.routesMeta.map((meta2) => meta2.childrenIndex), b3.routesMeta.map((meta2) => meta2.childrenIndex)));
}
function computeScore(path, index3) {
  let segments = path.split("/"), initialScore = segments.length;
  return segments.some(isSplat) && (initialScore += splatPenalty), index3 && (initialScore += indexRouteValue), segments.filter((s4) => !isSplat(s4)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === "" ? emptySegmentValue : staticSegmentValue), initialScore);
}
function compareIndexes(a4, b3) {
  return a4.length === b3.length && a4.slice(0, -1).every((n2, i3) => n2 === b3[i3]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a4[a4.length - 1] - b3[b3.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch(branch, pathname) {
  let {
    routesMeta
  } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
  for (let i3 = 0; i3 < routesMeta.length; ++i3) {
    let meta2 = routesMeta[i3], end = i3 === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match2 = matchPath({
      path: meta2.relativePath,
      caseSensitive: meta2.caseSensitive,
      end
    }, remainingPathname);
    if (!match2)
      return null;
    Object.assign(matchedParams, match2.params);
    let route = meta2.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths([matchedPathname, match2.pathname]),
      pathnameBase: normalizePathname(joinPaths([matchedPathname, match2.pathnameBase])),
      route
    }), match2.pathnameBase !== "/" && (matchedPathname = joinPaths([matchedPathname, match2.pathnameBase]));
  }
  return matches;
}
function matchPath(pattern, pathname) {
  typeof pattern == "string" && (pattern = {
    path: pattern,
    caseSensitive: !1,
    end: !0
  });
  let [matcher, compiledParams] = compilePath(pattern.path, pattern.caseSensitive, pattern.end), match2 = pathname.match(matcher);
  if (!match2)
    return null;
  let matchedPathname = match2[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match2.slice(1);
  return {
    params: compiledParams.reduce((memo2, _ref, index3) => {
      let {
        paramName,
        isOptional
      } = _ref;
      if (paramName === "*") {
        let splatValue = captureGroups[index3] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      let value = captureGroups[index3];
      return isOptional && !value ? memo2[paramName] = void 0 : memo2[paramName] = safelyDecodeURIComponent(value || "", paramName), memo2;
    }, {}),
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath(path, caseSensitive, end) {
  caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:(\w+)(\?)?/g, (_, paramName, isOptional) => (params.push({
    paramName,
    isOptional: isOptional != null
  }), isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return path.endsWith("*") ? (params.push({
    paramName: "*"
  }), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), params];
}
function safelyDecodeURI(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    return warning(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ").")), value;
  }
}
function safelyDecodeURIComponent(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    return warning(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")), value;
  }
}
function stripBasename(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
    return null;
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
  return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
}
function resolvePath(to, fromPathname) {
  fromPathname === void 0 && (fromPathname = "/");
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to == "string" ? parsePath(to) : to;
  return {
    pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname,
    search: normalizeSearch(search),
    hash: normalizeHash(hash)
  };
}
function resolvePathname(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  return relativePath.split("/").forEach((segment) => {
    segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
  }), segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches(matches) {
  return matches.filter((match2, index3) => index3 === 0 || match2.route.path && match2.route.path.length > 0);
}
function getResolveToMatches(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches(matches);
  return v7_relativeSplatPath ? pathMatches.map((match2, idx) => idx === matches.length - 1 ? match2.pathname : match2.pathnameBase) : pathMatches.map((match2) => match2.pathnameBase);
}
function resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {
  isPathRelative === void 0 && (isPathRelative = !1);
  let to;
  typeof toArg == "string" ? to = parsePath(toArg) : (to = _extends({}, toArg), invariant(!to.pathname || !to.pathname.includes("?"), getInvalidPathError("?", "pathname", "search", to)), invariant(!to.pathname || !to.pathname.includes("#"), getInvalidPathError("#", "pathname", "hash", to)), invariant(!to.search || !to.search.includes("#"), getInvalidPathError("#", "search", "hash", to)));
  let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
  if (toPathname == null)
    from = locationPathname;
  else {
    let routePathnameIndex = routePathnames.length - 1;
    if (!isPathRelative && toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      for (; toSegments[0] === ".."; )
        toSegments.shift(), routePathnameIndex -= 1;
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
}
function isTrackedPromise(value) {
  return value instanceof Promise && value._tracked === !0;
}
function unwrapTrackedPromise(value) {
  if (!isTrackedPromise(value))
    return value;
  if (value._error)
    throw value._error;
  return value._data;
}
function isRouteErrorResponse(error) {
  return error != null && typeof error.status == "number" && typeof error.statusText == "string" && typeof error.internal == "boolean" && "data" in error;
}
function createStaticHandler(routes2, opts) {
  invariant(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties2;
  if (opts != null && opts.mapRouteProperties)
    mapRouteProperties2 = opts.mapRouteProperties;
  else if (opts != null && opts.detectErrorBoundary) {
    let detectErrorBoundary = opts.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties;
  let future2 = _extends({
    v7_relativeSplatPath: !1
  }, opts ? opts.future : null), dataRoutes = convertRoutesToDataRoutes(routes2, mapRouteProperties2, void 0, manifest);
  async function query(request, _temp3) {
    let {
      requestContext
    } = _temp3 === void 0 ? {} : _temp3, url2 = new URL(request.url), method = request.method, location = createLocation("", createPath(url2), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD") {
      let error = getInternalRouterError(405, {
        method
      }), {
        matches: methodNotAllowedMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    } else if (!matches) {
      let error = getInternalRouterError(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    let result = await queryImpl(request, location, matches, requestContext);
    return isResponse(result) ? result : _extends({
      location,
      basename
    }, result);
  }
  async function queryRoute(request, _temp4) {
    let {
      routeId,
      requestContext
    } = _temp4 === void 0 ? {} : _temp4, url2 = new URL(request.url), method = request.method, location = createLocation("", createPath(url2), null, "default"), matches = matchRoutes(dataRoutes, location, basename);
    if (!isValidMethod(method) && method !== "HEAD" && method !== "OPTIONS")
      throw getInternalRouterError(405, {
        method
      });
    if (!matches)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let match2 = routeId ? matches.find((m4) => m4.route.id === routeId) : getTargetMatch(matches, location);
    if (routeId && !match2)
      throw getInternalRouterError(403, {
        pathname: location.pathname,
        routeId
      });
    if (!match2)
      throw getInternalRouterError(404, {
        pathname: location.pathname
      });
    let result = await queryImpl(request, location, matches, requestContext, match2);
    if (isResponse(result))
      return result;
    let error = result.errors ? Object.values(result.errors)[0] : void 0;
    if (error !== void 0)
      throw error;
    if (result.actionData)
      return Object.values(result.actionData)[0];
    if (result.loaderData) {
      var _result$activeDeferre;
      let data = Object.values(result.loaderData)[0];
      return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match2.route.id] && (data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match2.route.id]), data;
    }
  }
  async function queryImpl(request, location, matches, requestContext, routeMatch) {
    invariant(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
    try {
      if (isMutationMethod(request.method.toLowerCase()))
        return await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);
      let result = await loadRouteData(request, matches, requestContext, routeMatch);
      return isResponse(result) ? result : _extends({}, result, {
        actionData: null,
        actionHeaders: {}
      });
    } catch (e3) {
      if (isQueryRouteResponse(e3)) {
        if (e3.type === ResultType.error)
          throw e3.response;
        return e3.response;
      }
      if (isRedirectResponse(e3))
        return e3;
      throw e3;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    } else if (result = await callLoaderOrAction("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }), request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted: " + request.method + " " + request.url);
    }
    if (isRedirectResult(result))
      throw new Response(null, {
        status: result.status,
        headers: {
          Location: result.location
        }
      });
    if (isDeferredResult(result)) {
      let error = getInternalRouterError(400, {
        type: "defer-action"
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType.error,
        error
      };
    }
    if (isRouteRequest) {
      if (isErrorResult(result))
        throw result.error;
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: {
          [actionMatch.route.id]: result.data
        },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    if (isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
        [boundaryMatch.route.id]: result.error
      });
      return _extends({}, context2, {
        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,
        actionData: null,
        actionHeaders: _extends({}, result.headers ? {
          [actionMatch.route.id]: result.headers
        } : {})
      });
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    }), context = await loadRouteData(loaderRequest, matches, requestContext);
    return _extends({}, context, result.statusCode ? {
      statusCode: result.statusCode
    } : {}, {
      actionData: {
        [actionMatch.route.id]: result.data
      },
      actionHeaders: _extends({}, result.headers ? {
        [actionMatch.route.id]: result.headers
      } : {})
    });
  }
  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
      throw getInternalRouterError(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch?.route.id
      });
    let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0])).filter((m4) => m4.route.loader || m4.route.lazy);
    if (matchesToLoad.length === 0)
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce((acc, m4) => Object.assign(acc, {
          [m4.route.id]: null
        }), {}),
        errors: pendingActionError || null,
        statusCode: 200,
        loaderHeaders: {},
        activeDeferreds: null
      };
    let results = await Promise.all([...matchesToLoad.map((match2) => callLoaderOrAction("loader", request, match2, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }))]);
    if (request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted: " + request.method + " " + request.url);
    }
    let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match2) => match2.route.id));
    return matches.forEach((match2) => {
      executedLoaders.has(match2.route.id) || (context.loaderData[match2.route.id] = null);
    }), _extends({}, context, {
      matches,
      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
    });
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError(routes2, context, error) {
  return _extends({}, context, {
    statusCode: 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes2[0].id]: error
    }
  });
}
function normalizeTo(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {
  let contextualMatches, activeRouteMatch;
  if (fromRouteId) {
    contextualMatches = [];
    for (let match2 of matches)
      if (contextualMatches.push(match2), match2.route.id === fromRouteId) {
        activeRouteMatch = match2;
        break;
      }
  } else
    contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
  let path = resolveTo(to || ".", getResolveToMatches(contextualMatches, v7_relativeSplatPath), stripBasename(location.pathname, basename) || location.pathname, relative === "path");
  return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths([basename, path.pathname])), createPath(path);
}
function getLoaderMatchesUntilBoundary(matches, boundaryId) {
  let boundaryMatches = matches;
  if (boundaryId) {
    let index3 = matches.findIndex((m4) => m4.route.id === boundaryId);
    index3 >= 0 && (boundaryMatches = matches.slice(0, index3));
  }
  return boundaryMatches;
}
async function loadLazyRouteModule(route, mapRouteProperties2, manifest) {
  if (!route.lazy)
    return;
  let lazyRoute = await route.lazy();
  if (!route.lazy)
    return;
  let routeToUpdate = manifest[route.id];
  invariant(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
  }
  Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function callLoaderOrAction(type, request, match2, matches, manifest, mapRouteProperties2, basename, v7_relativeSplatPath, opts) {
  opts === void 0 && (opts = {});
  let resultType, result, onReject, runHandler = (handler) => {
    let reject, abortPromise = new Promise((_, r3) => reject = r3);
    return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
      request,
      params: match2.params,
      context: opts.requestContext
    }), abortPromise]);
  };
  try {
    let handler = match2.route[type];
    if (match2.route.lazy)
      if (handler) {
        let handlerError, values = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e3) => {
            handlerError = e3;
          }),
          loadLazyRouteModule(match2.route, mapRouteProperties2, manifest)
        ]);
        if (handlerError)
          throw handlerError;
        result = values[0];
      } else if (await loadLazyRouteModule(match2.route, mapRouteProperties2, manifest), handler = match2.route[type], handler)
        result = await runHandler(handler);
      else if (type === "action") {
        let url2 = new URL(request.url), pathname = url2.pathname + url2.search;
        throw getInternalRouterError(405, {
          method: request.method,
          pathname,
          routeId: match2.route.id
        });
      } else
        return {
          type: ResultType.data,
          data: void 0
        };
    else if (handler)
      result = await runHandler(handler);
    else {
      let url2 = new URL(request.url), pathname = url2.pathname + url2.search;
      throw getInternalRouterError(404, {
        pathname
      });
    }
    invariant(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match2.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e3) {
    resultType = ResultType.error, result = e3;
  } finally {
    onReject && request.signal.removeEventListener("abort", onReject);
  }
  if (isResponse(result)) {
    let status = result.status;
    if (redirectStatusCodes.has(status)) {
      let location = result.headers.get("Location");
      if (invariant(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX.test(location))
        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match2) + 1), basename, !0, location, v7_relativeSplatPath);
      else if (!opts.isStaticRequest) {
        let currentUrl = new URL(request.url), url2 = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename(url2.pathname, basename) != null;
        url2.origin === currentUrl.origin && isSameBasename && (location = url2.pathname + url2.search + url2.hash);
      }
      if (opts.isStaticRequest)
        throw result.headers.set("Location", location), result;
      return {
        type: ResultType.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null,
        reloadDocument: result.headers.get("X-Remix-Reload-Document") !== null
      };
    }
    if (opts.isRouteRequest)
      throw {
        type: resultType === ResultType.error ? ResultType.error : ResultType.data,
        response: result
      };
    let data;
    try {
      let contentType = result.headers.get("Content-Type");
      contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text();
    } catch (e3) {
      return {
        type: ResultType.error,
        error: e3
      };
    }
    return resultType === ResultType.error ? {
      type: resultType,
      error: new ErrorResponseImpl(status, result.statusText, data),
      headers: result.headers
    } : {
      type: ResultType.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (resultType === ResultType.error)
    return {
      type: resultType,
      error: result
    };
  if (isDeferredData(result)) {
    var _result$init, _result$init2;
    return {
      type: ResultType.deferred,
      deferredData: result,
      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
    };
  }
  return {
    type: ResultType.data,
    data: result
  };
}
function processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
  return results.forEach((result, index3) => {
    let id3 = matchesToLoad[index3].route.id;
    if (invariant(!isRedirectResult(result), "Cannot handle redirect results in processLoaderData"), isErrorResult(result)) {
      let boundaryMatch = findNearestBoundary(matches, id3), error = result.error;
      pendingError && (error = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error), loaderData[id3] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id3] = result.headers);
    } else
      isDeferredResult(result) ? (activeDeferreds.set(id3, result.deferredData), loaderData[id3] = result.deferredData.data) : loaderData[id3] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id3] = result.headers);
  }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function findNearestBoundary(matches, routeId) {
  return (routeId ? matches.slice(0, matches.findIndex((m4) => m4.route.id === routeId) + 1) : [...matches]).reverse().find((m4) => m4.route.hasErrorBoundary === !0) || matches[0];
}
function getShortCircuitMatches(routes2) {
  let route = routes2.length === 1 ? routes2[0] : routes2.find((r3) => r3.index || !r3.path || r3.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError(status, _temp5) {
  let {
    pathname,
    routeId,
    method,
    type
  } = _temp5 === void 0 ? {} : _temp5, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
  return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type === "defer-action" ? errorMessage = "defer() is not supported in actions" : type === "invalid-body" && (errorMessage = "Unable to encode submission body")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponseImpl(status || 500, statusText, new Error(errorMessage), !0);
}
function isDeferredResult(result) {
  return result.type === ResultType.deferred;
}
function isErrorResult(result) {
  return result.type === ResultType.error;
}
function isRedirectResult(result) {
  return (result && result.type) === ResultType.redirect;
}
function isDeferredData(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectResponse(result) {
  if (!isResponse(result))
    return !1;
  let status = result.status, location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse(obj) {
  return obj && isResponse(obj.response) && (obj.type === ResultType.data || obj.type === ResultType.error);
}
function isValidMethod(method) {
  return validRequestMethods.has(method.toLowerCase());
}
function isMutationMethod(method) {
  return validMutationMethods.has(method.toLowerCase());
}
function hasNakedIndexQuery(search) {
  return new URLSearchParams(search).getAll("index").some((v2) => v2 === "");
}
function getTargetMatch(matches, location) {
  let search = typeof location == "string" ? parsePath(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || ""))
    return matches[matches.length - 1];
  let pathMatches = getPathContributingMatches(matches);
  return pathMatches[pathMatches.length - 1];
}
var Action, ResultType, immutableRouteKeys, paramRe, dynamicSegmentValue, indexRouteValue, emptySegmentValue, staticSegmentValue, splatPenalty, isSplat, joinPaths, normalizePathname, normalizeSearch, normalizeHash, json, AbortedDeferredError, DeferredData, defer, redirect, redirectDocument, ErrorResponseImpl, validMutationMethodsArr, validMutationMethods, validRequestMethodsArr, validRequestMethods, redirectStatusCodes, ABSOLUTE_URL_REGEX, defaultMapRouteProperties, UNSAFE_DEFERRED_SYMBOL, init_router = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/router/dist/router.js"() {
    (function(Action3) {
      Action3.Pop = "POP", Action3.Push = "PUSH", Action3.Replace = "REPLACE";
    })(Action || (Action = {}));
    (function(ResultType3) {
      ResultType3.data = "data", ResultType3.deferred = "deferred", ResultType3.redirect = "redirect", ResultType3.error = "error";
    })(ResultType || (ResultType = {}));
    immutableRouteKeys = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    paramRe = /^:\w+$/, dynamicSegmentValue = 3, indexRouteValue = 2, emptySegmentValue = 1, staticSegmentValue = 10, splatPenalty = -2, isSplat = (s4) => s4 === "*";
    joinPaths = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError = class extends Error {
    }, DeferredData = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r3) => reject = r3), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, void 0, data), (error) => this.onSettle(promise, key, error));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error, data) {
        if (this.controller.signal.aborted && error instanceof AbortedDeferredError)
          return this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
            get: () => error
          }), Promise.reject(error);
        if (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error === void 0 && data === void 0) {
          let undefinedError = new Error('Deferred data for key "' + key + '" resolved/rejected with `undefined`, you must resolve/reject with a value or `null`.');
          return Object.defineProperty(promise, "_error", {
            get: () => undefinedError
          }), this.emit(!1, key), Promise.reject(undefinedError);
        }
        return data === void 0 ? (Object.defineProperty(promise, "_error", {
          get: () => error
        }), this.emit(!1, key), Promise.reject(error)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key), data);
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v2, k3) => this.pendingKeysSet.delete(k3)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref3) => {
          let [key, value] = _ref3;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    defer = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData(data, responseInit);
    }, redirect = function(url2, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url2), new Response(null, _extends({}, responseInit, {
        headers
      }));
    }, redirectDocument = (url2, init) => {
      let response = redirect(url2, init);
      return response.headers.set("X-Remix-Reload-Document", "true"), response;
    }, ErrorResponseImpl = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    validMutationMethodsArr = ["post", "put", "patch", "delete"], validMutationMethods = new Set(validMutationMethodsArr), validRequestMethodsArr = ["get", ...validMutationMethodsArr], validRequestMethods = new Set(validRequestMethodsArr), redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, defaultMapRouteProperties = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    }), UNSAFE_DEFERRED_SYMBOL = Symbol("deferred");
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/mode.js
function isServerMode(value) {
  return value === ServerMode.Development || value === ServerMode.Production || value === ServerMode.Test;
}
var ServerMode, init_mode = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/mode.js"() {
    ServerMode = /* @__PURE__ */ function(ServerMode2) {
      return ServerMode2.Development = "development", ServerMode2.Production = "production", ServerMode2.Test = "test", ServerMode2;
    }({});
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/errors.js
function sanitizeError(error, serverMode) {
  if (error instanceof Error && serverMode !== ServerMode.Development) {
    let sanitized = new Error("Unexpected Server Error");
    return sanitized.stack = void 0, sanitized;
  }
  return error;
}
function sanitizeErrors(errors, serverMode) {
  return Object.entries(errors).reduce((acc, [routeId, error]) => Object.assign(acc, {
    [routeId]: sanitizeError(error, serverMode)
  }), {});
}
function serializeError(error, serverMode) {
  let sanitized = sanitizeError(error, serverMode);
  return {
    message: sanitized.message,
    stack: sanitized.stack
  };
}
function serializeErrors(errors, serverMode) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (isRouteErrorResponse(val))
      serialized[key] = {
        ...val,
        __type: "RouteErrorResponse"
      };
    else if (val instanceof Error) {
      let sanitized = sanitizeError(val, serverMode);
      serialized[key] = {
        message: sanitized.message,
        stack: sanitized.stack,
        __type: "Error",
        // If this is a subclass (i.e., ReferenceError), send up the type so we
        // can re-create the same type during hydration.  This will only apply
        // in dev mode since all production errors are sanitized to normal
        // Error instances
        ...sanitized.name !== "Error" ? {
          __subType: sanitized.name
        } : {}
      };
    } else
      serialized[key] = val;
  return serialized;
}
var init_errors = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/errors.js"() {
    init_router();
    init_mode();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/responses.js
function isDeferredData2(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse2(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectStatusCode(statusCode) {
  return redirectStatusCodes2.has(statusCode);
}
function isRedirectResponse2(response) {
  return isRedirectStatusCode(response.status);
}
function isTrackedPromise2(value) {
  return value != null && typeof value.then == "function" && value._tracked === !0;
}
function createDeferredReadableStream(deferredData, signal, serverMode) {
  let encoder = new TextEncoder();
  return new ReadableStream({
    async start(controller) {
      let criticalData = {}, preresolvedKeys = [];
      for (let [key, value] of Object.entries(deferredData.data))
        isTrackedPromise2(value) ? (criticalData[key] = `${DEFERRED_VALUE_PLACEHOLDER_PREFIX}${key}`, (typeof value._data < "u" || typeof value._error < "u") && preresolvedKeys.push(key)) : criticalData[key] = value;
      controller.enqueue(encoder.encode(JSON.stringify(criticalData) + `

`));
      for (let preresolvedKey of preresolvedKeys)
        enqueueTrackedPromise(controller, encoder, preresolvedKey, deferredData.data[preresolvedKey], serverMode);
      let unsubscribe = deferredData.subscribe((aborted, settledKey) => {
        settledKey && enqueueTrackedPromise(controller, encoder, settledKey, deferredData.data[settledKey], serverMode);
      });
      await deferredData.resolveData(signal), unsubscribe(), controller.close();
    }
  });
}
function enqueueTrackedPromise(controller, encoder, settledKey, promise, serverMode) {
  "_error" in promise ? controller.enqueue(encoder.encode("error:" + JSON.stringify({
    [settledKey]: promise._error instanceof Error ? serializeError(promise._error, serverMode) : promise._error
  }) + `

`)) : controller.enqueue(encoder.encode("data:" + JSON.stringify({
    [settledKey]: promise._data ?? null
  }) + `

`));
}
var json3, defer3, redirect3, redirectDocument2, redirectStatusCodes2, DEFERRED_VALUE_PLACEHOLDER_PREFIX, init_responses = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/responses.js"() {
    init_router();
    init_errors();
    json3 = (data, init = {}) => json(data, init), defer3 = (data, init = {}) => defer(data, init), redirect3 = (url2, init = 302) => redirect(url2, init), redirectDocument2 = (url2, init = 302) => redirectDocument(url2, init);
    redirectStatusCodes2 = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);
    DEFERRED_VALUE_PLACEHOLDER_PREFIX = "__deferred_promise:";
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/entry.js
function createEntryRouteModules(manifest) {
  return Object.keys(manifest).reduce((memo2, routeId) => (memo2[routeId] = manifest[routeId].module, memo2), {});
}
var init_entry = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/entry.js"() {
  }
});

// ../../node_modules/set-cookie-parser/lib/set-cookie.js
var require_set_cookie = __commonJS({
  "../../node_modules/set-cookie-parser/lib/set-cookie.js"(exports, module) {
    "use strict";
    var defaultParseOptions = {
      decodeValues: !0,
      map: !1,
      silent: !1
    };
    function isNonEmptyString(str) {
      return typeof str == "string" && !!str.trim();
    }
    function parseString(setCookieValue, options) {
      var parts = setCookieValue.split(";").filter(isNonEmptyString), nameValuePairStr = parts.shift(), parsed = parseNameValuePair(nameValuePairStr), name = parsed.name, value = parsed.value;
      options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions;
      try {
        value = options.decodeValues ? decodeURIComponent(value) : value;
      } catch (e3) {
        console.error(
          "set-cookie-parser encountered an error while decoding a cookie with value '" + value + "'. Set options.decodeValues to false to disable this feature.",
          e3
        );
      }
      var cookie = {
        name,
        value
      };
      return parts.forEach(function(part) {
        var sides2 = part.split("="), key = sides2.shift().trimLeft().toLowerCase(), value2 = sides2.join("=");
        key === "expires" ? cookie.expires = new Date(value2) : key === "max-age" ? cookie.maxAge = parseInt(value2, 10) : key === "secure" ? cookie.secure = !0 : key === "httponly" ? cookie.httpOnly = !0 : key === "samesite" ? cookie.sameSite = value2 : cookie[key] = value2;
      }), cookie;
    }
    function parseNameValuePair(nameValuePairStr) {
      var name = "", value = "", nameValueArr = nameValuePairStr.split("=");
      return nameValueArr.length > 1 ? (name = nameValueArr.shift(), value = nameValueArr.join("=")) : value = nameValuePairStr, { name, value };
    }
    function parse3(input, options) {
      if (options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, !input)
        return options.map ? {} : [];
      if (input.headers)
        if (typeof input.headers.getSetCookie == "function")
          input = input.headers.getSetCookie();
        else if (input.headers["set-cookie"])
          input = input.headers["set-cookie"];
        else {
          var sch = input.headers[Object.keys(input.headers).find(function(key) {
            return key.toLowerCase() === "set-cookie";
          })];
          !sch && input.headers.cookie && !options.silent && console.warn(
            "Warning: set-cookie-parser appears to have been called on a request object. It is designed to parse Set-Cookie headers from responses, not Cookie headers from requests. Set the option {silent: true} to suppress this warning."
          ), input = sch;
        }
      if (Array.isArray(input) || (input = [input]), options = options ? Object.assign({}, defaultParseOptions, options) : defaultParseOptions, options.map) {
        var cookies = {};
        return input.filter(isNonEmptyString).reduce(function(cookies2, str) {
          var cookie = parseString(str, options);
          return cookies2[cookie.name] = cookie, cookies2;
        }, cookies);
      } else
        return input.filter(isNonEmptyString).map(function(str) {
          return parseString(str, options);
        });
    }
    function splitCookiesString2(cookiesString) {
      if (Array.isArray(cookiesString))
        return cookiesString;
      if (typeof cookiesString != "string")
        return [];
      var cookiesStrings = [], pos = 0, start, ch, lastComma, nextStart, cookiesSeparatorFound;
      function skipWhitespace() {
        for (; pos < cookiesString.length && /\s/.test(cookiesString.charAt(pos)); )
          pos += 1;
        return pos < cookiesString.length;
      }
      function notSpecialChar() {
        return ch = cookiesString.charAt(pos), ch !== "=" && ch !== ";" && ch !== ",";
      }
      for (; pos < cookiesString.length; ) {
        for (start = pos, cookiesSeparatorFound = !1; skipWhitespace(); )
          if (ch = cookiesString.charAt(pos), ch === ",") {
            for (lastComma = pos, pos += 1, skipWhitespace(), nextStart = pos; pos < cookiesString.length && notSpecialChar(); )
              pos += 1;
            pos < cookiesString.length && cookiesString.charAt(pos) === "=" ? (cookiesSeparatorFound = !0, pos = nextStart, cookiesStrings.push(cookiesString.substring(start, lastComma)), start = pos) : pos = lastComma + 1;
          } else
            pos += 1;
        (!cookiesSeparatorFound || pos >= cookiesString.length) && cookiesStrings.push(cookiesString.substring(start, cookiesString.length));
      }
      return cookiesStrings;
    }
    module.exports = parse3;
    module.exports.parse = parse3;
    module.exports.parseString = parseString;
    module.exports.splitCookiesString = splitCookiesString2;
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/headers.js
function getDocumentHeadersRR(build, context) {
  let boundaryIdx = context.errors ? context.matches.findIndex((m4) => context.errors[m4.route.id]) : -1, matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches, errorHeaders;
  if (boundaryIdx >= 0) {
    let {
      actionHeaders,
      actionData,
      loaderHeaders,
      loaderData
    } = context;
    context.matches.slice(boundaryIdx).some((match2) => {
      let id3 = match2.route.id;
      return actionHeaders[id3] && (!actionData || actionData[id3] === void 0) ? errorHeaders = actionHeaders[id3] : loaderHeaders[id3] && loaderData[id3] === void 0 && (errorHeaders = loaderHeaders[id3]), errorHeaders != null;
    });
  }
  return matches.reduce((parentHeaders, match2, idx) => {
    let {
      id: id3
    } = match2.route, routeModule = build.routes[id3].module, loaderHeaders = context.loaderHeaders[id3] || new Headers(), actionHeaders = context.actionHeaders[id3] || new Headers(), includeErrorHeaders = errorHeaders != null && idx === matches.length - 1, includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;
    if (routeModule.headers == null) {
      let headers2 = new Headers(parentHeaders);
      return includeErrorCookies && prependCookies(errorHeaders, headers2), prependCookies(actionHeaders, headers2), prependCookies(loaderHeaders, headers2), headers2;
    }
    let headers = new Headers(routeModule.headers ? typeof routeModule.headers == "function" ? routeModule.headers({
      loaderHeaders,
      parentHeaders,
      actionHeaders,
      errorHeaders: includeErrorHeaders ? errorHeaders : void 0
    }) : routeModule.headers : void 0);
    return includeErrorCookies && prependCookies(errorHeaders, headers), prependCookies(actionHeaders, headers), prependCookies(loaderHeaders, headers), prependCookies(parentHeaders, headers), headers;
  }, new Headers());
}
function prependCookies(parentHeaders, childHeaders) {
  let parentSetCookieString = parentHeaders.get("Set-Cookie");
  parentSetCookieString && (0, import_set_cookie_parser.splitCookiesString)(parentSetCookieString).forEach((cookie) => {
    childHeaders.append("Set-Cookie", cookie);
  });
}
var import_set_cookie_parser, init_headers = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/headers.js"() {
    import_set_cookie_parser = __toESM(require_set_cookie());
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/invariant.js
function invariant2(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw console.error("The following error is a bug in Remix; please open an issue! https://github.com/remix-run/remix/issues/new"), new Error(message);
}
var init_invariant = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/invariant.js"() {
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js
function matchServerRoutes(routes2, pathname) {
  let matches = matchRoutes(routes2, pathname);
  return matches ? matches.map((match2) => ({
    params: match2.params,
    pathname: match2.pathname,
    route: match2.route
  })) : null;
}
var init_routeMatching = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/routeMatching.js"() {
    init_router();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/data.js
async function callRouteActionRR({
  loadContext,
  action,
  params,
  request,
  routeId
}) {
  let result = await action({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined an action for route "${routeId}" but didn't return anything from your \`action\` function. Please return a value or \`null\`.`);
  return isResponse2(result) ? result : json3(result);
}
async function callRouteLoaderRR({
  loadContext,
  loader: loader4,
  params,
  request,
  routeId
}) {
  let result = await loader4({
    request: stripDataParam(stripIndexParam(request)),
    context: loadContext,
    params
  });
  if (result === void 0)
    throw new Error(`You defined a loader for route "${routeId}" but didn't return anything from your \`loader\` function. Please return a value or \`null\`.`);
  return isDeferredData2(result) ? result.init && isRedirectStatusCode(result.init.status || 200) ? redirect3(new Headers(result.init.headers).get("Location"), result.init) : result : isResponse2(result) ? result : json3(result);
}
function stripIndexParam(request) {
  let url2 = new URL(request.url), indexValues = url2.searchParams.getAll("index");
  url2.searchParams.delete("index");
  let indexValuesToKeep = [];
  for (let indexValue of indexValues)
    indexValue && indexValuesToKeep.push(indexValue);
  for (let toKeep of indexValuesToKeep)
    url2.searchParams.append("index", toKeep);
  let init = {
    method: request.method,
    body: request.body,
    headers: request.headers,
    signal: request.signal
  };
  return init.body && (init.duplex = "half"), new Request(url2.href, init);
}
function stripDataParam(request) {
  let url2 = new URL(request.url);
  url2.searchParams.delete("_data");
  let init = {
    method: request.method,
    body: request.body,
    headers: request.headers,
    signal: request.signal
  };
  return init.body && (init.duplex = "half"), new Request(url2.href, init);
}
var init_data = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/data.js"() {
    init_responses();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/routes.js
function groupRoutesByParentId(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createRoutes(manifest, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => ({
    ...route,
    children: createRoutes(manifest, route.id, routesByParentId)
  }));
}
function createStaticHandlerDataRoutes(manifest, future2, parentId = "", routesByParentId = groupRoutesByParentId(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let commonRoute = {
      // Always include root due to default boundaries
      hasErrorBoundary: route.id === "root" || route.module.ErrorBoundary != null,
      id: route.id,
      path: route.path,
      loader: route.module.loader ? (
        // Need to use RR's version here to permit the optional context even
        // though we know it'll always be provided in remix
        (args) => callRouteLoaderRR({
          request: args.request,
          params: args.params,
          loadContext: args.context,
          loader: route.module.loader,
          routeId: route.id
        })
      ) : void 0,
      action: route.module.action ? (args) => callRouteActionRR({
        request: args.request,
        params: args.params,
        loadContext: args.context,
        action: route.module.action,
        routeId: route.id
      }) : void 0,
      handle: route.module.handle
    };
    return route.index ? {
      index: !0,
      ...commonRoute
    } : {
      caseSensitive: route.caseSensitive,
      children: createStaticHandlerDataRoutes(manifest, future2, route.id, routesByParentId),
      ...commonRoute
    };
  });
}
var init_routes = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/routes.js"() {
    init_data();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/markup.js
function escapeHtml(html) {
  return html.replace(ESCAPE_REGEX, (match2) => ESCAPE_LOOKUP[match2]);
}
var ESCAPE_LOOKUP, ESCAPE_REGEX, init_markup = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/markup.js"() {
    ESCAPE_LOOKUP = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX = /[&><\u2028\u2029]/g;
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js
function createServerHandoffString(serverHandoff) {
  return escapeHtml(JSON.stringify(serverHandoff));
}
var init_serverHandoff = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/serverHandoff.js"() {
    init_markup();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/dev.js
async function broadcastDevReady(build, origin) {
  if (origin ??= "", !origin)
    throw Error("Dev server origin not set");
  let url2 = new URL(origin);
  url2.pathname = "ping";
  let response = await fetch(url2.href, {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      buildHash: build.assets.version
    })
  }).catch((error) => {
    throw console.error(`Could not reach Remix dev server at ${url2}`), error;
  });
  if (!response.ok)
    throw console.error(`Could not reach Remix dev server at ${url2} (${response.status})`), Error(await response.text());
}
function logDevReady(build) {
  console.log(`[REMIX DEV] ${build.assets.version} ready`);
}
function setDevServerHooks(devServerHooks) {
  globalThis[globalDevServerHooksKey] = devServerHooks;
}
function getDevServerHooks() {
  return globalThis[globalDevServerHooksKey];
}
var globalDevServerHooksKey, init_dev = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/dev.js"() {
    globalDevServerHooksKey = "__remix_devServerHooks";
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/server.js
function derive(build, mode2) {
  var _build$future;
  let routes2 = createRoutes(build.routes), dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future), serverMode = isServerMode(mode2) ? mode2 : ServerMode.Production, staticHandler = createStaticHandler(dataRoutes, {
    future: {
      v7_relativeSplatPath: (_build$future = build.future) === null || _build$future === void 0 ? void 0 : _build$future.v3_relativeSplatPath
    }
  }), errorHandler = build.entry.module.handleError || ((error, {
    request
  }) => {
    serverMode !== ServerMode.Test && !request.signal.aborted && console.error(
      // @ts-expect-error This is "private" from users but intended for internal use
      isRouteErrorResponse(error) && error.error ? error.error : error
    );
  });
  return {
    routes: routes2,
    dataRoutes,
    serverMode,
    staticHandler,
    errorHandler
  };
}
async function handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    if (isRedirectResponse2(response)) {
      let headers = new Headers(response.headers);
      return headers.set("X-Remix-Redirect", headers.get("Location")), headers.set("X-Remix-Status", response.status), headers.delete("Location"), response.headers.get("Set-Cookie") !== null && headers.set("X-Remix-Revalidate", "yes"), new Response(null, {
        status: 204,
        headers
      });
    }
    if (UNSAFE_DEFERRED_SYMBOL in response) {
      let deferredData = response[UNSAFE_DEFERRED_SYMBOL], body = createDeferredReadableStream(deferredData, request.signal, serverMode), init = deferredData.init || {}, headers = new Headers(init.headers);
      return headers.set("Content-Type", "text/remix-deferred"), headers.set("X-Remix-Response", "yes"), init.headers = headers, new Response(body, init);
    }
    return response.headers.set("X-Remix-Response", "yes"), response;
  } catch (error) {
    if (isResponse2(error))
      return error.headers.set("X-Remix-Catch", "yes"), error;
    if (isRouteErrorResponse(error))
      return error && handleError(error), errorResponseToJson(error, serverMode);
    let errorInstance = error instanceof Error ? error : new Error("Unexpected Server Error");
    return handleError(errorInstance), json(serializeError(errorInstance, serverMode), {
      status: 500,
      headers: {
        "X-Remix-Error": "yes"
      }
    });
  }
}
async function handleDocumentRequestRR(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {
  let context;
  try {
    context = await staticHandler.query(request, {
      requestContext: loadContext
    });
  } catch (error) {
    return handleError(error), new Response(null, {
      status: 500
    });
  }
  if (isResponse2(context))
    return context;
  context.errors && (Object.values(context.errors).forEach((err) => {
    (!isRouteErrorResponse(err) || err.error) && handleError(err);
  }), context.errors = sanitizeErrors(context.errors, serverMode));
  let headers = getDocumentHeadersRR(build, context), entryContext = {
    manifest: build.assets,
    routeModules: createEntryRouteModules(build.routes),
    staticHandlerContext: context,
    criticalCss,
    serverHandoffString: createServerHandoffString({
      url: context.location.pathname,
      criticalCss,
      state: {
        loaderData: context.loaderData,
        actionData: context.actionData,
        errors: serializeErrors(context.errors, serverMode)
      },
      future: build.future
    }),
    future: build.future,
    serializeError: (err) => serializeError(err, serverMode)
  }, handleDocumentRequestFunction = build.entry.module.default;
  try {
    return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
  } catch (error) {
    handleError(error), context = getStaticContextFromError(staticHandler.dataRoutes, context, error), context.errors && (context.errors = sanitizeErrors(context.errors, serverMode)), entryContext = {
      ...entryContext,
      staticHandlerContext: context,
      serverHandoffString: createServerHandoffString({
        url: context.location.pathname,
        state: {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors(context.errors, serverMode)
        },
        future: build.future
      })
    };
    try {
      return await handleDocumentRequestFunction(request, context.statusCode, headers, entryContext, loadContext);
    } catch (error2) {
      return handleError(error2), returnLastResortErrorResponse(error2, serverMode);
    }
  }
}
async function handleResourceRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError) {
  try {
    let response = await staticHandler.queryRoute(request, {
      routeId,
      requestContext: loadContext
    });
    return invariant2(isResponse2(response), "Expected a Response to be returned from queryRoute"), response;
  } catch (error) {
    return isResponse2(error) ? (error.headers.set("X-Remix-Catch", "yes"), error) : isRouteErrorResponse(error) ? (error && handleError(error), errorResponseToJson(error, serverMode)) : (handleError(error), returnLastResortErrorResponse(error, serverMode));
  }
}
function errorResponseToJson(errorResponse, serverMode) {
  return json(serializeError(
    // @ts-expect-error This is "private" from users but intended for internal use
    errorResponse.error || new Error("Unexpected Server Error"),
    serverMode
  ), {
    status: errorResponse.status,
    statusText: errorResponse.statusText,
    headers: {
      "X-Remix-Error": "yes"
    }
  });
}
function returnLastResortErrorResponse(error, serverMode) {
  let message = "Unexpected Server Error";
  return serverMode !== ServerMode.Production && (message += `

${String(error)}`), new Response(message, {
    status: 500,
    headers: {
      "Content-Type": "text/plain"
    }
  });
}
var createRequestHandler, init_server = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/server.js"() {
    init_router();
    init_entry();
    init_errors();
    init_headers();
    init_invariant();
    init_mode();
    init_routeMatching();
    init_routes();
    init_responses();
    init_serverHandoff();
    init_dev();
    createRequestHandler = (build, mode2) => {
      let _build, routes2, serverMode, staticHandler, errorHandler;
      return async function(request, loadContext = {}) {
        if (_build = typeof build == "function" ? await build() : build, typeof build == "function") {
          let derived = derive(_build, mode2);
          routes2 = derived.routes, serverMode = derived.serverMode, staticHandler = derived.staticHandler, errorHandler = derived.errorHandler;
        } else if (!routes2 || !serverMode || !staticHandler || !errorHandler) {
          let derived = derive(_build, mode2);
          routes2 = derived.routes, serverMode = derived.serverMode, staticHandler = derived.staticHandler, errorHandler = derived.errorHandler;
        }
        let url2 = new URL(request.url), matches = matchServerRoutes(routes2, url2.pathname), handleError = (error) => {
          if (mode2 === ServerMode.Development) {
            var _getDevServerHooks, _getDevServerHooks$pr;
            (_getDevServerHooks = getDevServerHooks()) === null || _getDevServerHooks === void 0 || (_getDevServerHooks$pr = _getDevServerHooks.processRequestError) === null || _getDevServerHooks$pr === void 0 || _getDevServerHooks$pr.call(_getDevServerHooks, error);
          }
          errorHandler(error, {
            context: loadContext,
            params: matches && matches.length > 0 ? matches[0].params : {},
            request
          });
        }, response;
        if (url2.searchParams.has("_data")) {
          let routeId = url2.searchParams.get("_data");
          if (response = await handleDataRequestRR(serverMode, staticHandler, routeId, request, loadContext, handleError), _build.entry.module.handleDataRequest) {
            var _matches$find;
            response = await _build.entry.module.handleDataRequest(response, {
              context: loadContext,
              params: (matches == null || (_matches$find = matches.find((m4) => m4.route.id == routeId)) === null || _matches$find === void 0 ? void 0 : _matches$find.params) || {},
              request
            });
          }
        } else if (matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null)
          response = await handleResourceRequestRR(serverMode, staticHandler, matches.slice(-1)[0].route.id, request, loadContext, handleError);
        else {
          var _getDevServerHooks2, _getDevServerHooks2$g;
          let criticalCss = mode2 === ServerMode.Development ? await ((_getDevServerHooks2 = getDevServerHooks()) === null || _getDevServerHooks2 === void 0 || (_getDevServerHooks2$g = _getDevServerHooks2.getCriticalCss) === null || _getDevServerHooks2$g === void 0 ? void 0 : _getDevServerHooks2$g.call(_getDevServerHooks2, _build, url2.pathname)) : void 0;
          response = await handleDocumentRequestRR(serverMode, _build, staticHandler, request, loadContext, handleError, criticalCss);
        }
        return request.method === "HEAD" ? new Response(null, {
          headers: response.headers,
          status: response.status,
          statusText: response.statusText
        }) : response;
      };
    };
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions.js
function flash(name) {
  return `__flash_${name}__`;
}
function warnOnceAboutSigningSessionCookie(cookie) {
  warnOnce(cookie.isSigned, `The "${cookie.name}" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`);
}
var createSession, isSession, createSessionStorageFactory, init_sessions = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions.js"() {
    init_cookies();
    init_warnings();
    createSession = (initialData = {}, id3 = "") => {
      let map = new Map(Object.entries(initialData));
      return {
        get id() {
          return id3;
        },
        get data() {
          return Object.fromEntries(map);
        },
        has(name) {
          return map.has(name) || map.has(flash(name));
        },
        get(name) {
          if (map.has(name))
            return map.get(name);
          let flashName = flash(name);
          if (map.has(flashName)) {
            let value = map.get(flashName);
            return map.delete(flashName), value;
          }
        },
        set(name, value) {
          map.set(name, value);
        },
        flash(name, value) {
          map.set(flash(name), value);
        },
        unset(name) {
          map.delete(name);
        }
      };
    }, isSession = (object) => object != null && typeof object.id == "string" && typeof object.data < "u" && typeof object.has == "function" && typeof object.get == "function" && typeof object.set == "function" && typeof object.flash == "function" && typeof object.unset == "function", createSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg,
      createData,
      readData,
      updateData,
      deleteData
    }) => {
      let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options) {
          let id3 = cookieHeader && await cookie.parse(cookieHeader, options), data = id3 && await readData(id3);
          return createSession(data || {}, id3 || "");
        },
        async commitSession(session, options) {
          let {
            id: id3,
            data
          } = session, expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;
          return id3 ? await updateData(id3, data, expires) : id3 = await createData(data, expires), cookie.serialize(id3, options);
        },
        async destroySession(session, options) {
          return await deleteData(session.id), cookie.serialize("", {
            ...options,
            maxAge: void 0,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js
var createCookieSessionStorageFactory, init_cookieStorage = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js"() {
    init_cookies();
    init_sessions();
    createCookieSessionStorageFactory = (createCookie) => ({
      cookie: cookieArg
    } = {}) => {
      let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || "__session", cookieArg);
      return warnOnceAboutSigningSessionCookie(cookie), {
        async getSession(cookieHeader, options) {
          return createSession(cookieHeader && await cookie.parse(cookieHeader, options) || {});
        },
        async commitSession(session, options) {
          let serializedCookie = await cookie.serialize(session.data, options);
          if (serializedCookie.length > 4096)
            throw new Error("Cookie length will exceed browser maximum. Length: " + serializedCookie.length);
          return serializedCookie;
        },
        async destroySession(_session, options) {
          return cookie.serialize("", {
            ...options,
            maxAge: void 0,
            expires: /* @__PURE__ */ new Date(0)
          });
        }
      };
    };
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js
var createMemorySessionStorageFactory, init_memoryStorage = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js"() {
    createMemorySessionStorageFactory = (createSessionStorage) => ({
      cookie
    } = {}) => {
      let map = /* @__PURE__ */ new Map();
      return createSessionStorage({
        cookie,
        async createData(data, expires) {
          let id3 = Math.random().toString(36).substring(2, 10);
          return map.set(id3, {
            data,
            expires
          }), id3;
        },
        async readData(id3) {
          if (map.has(id3)) {
            let {
              data,
              expires
            } = map.get(id3);
            if (!expires || expires > /* @__PURE__ */ new Date())
              return data;
            expires && map.delete(id3);
          }
          return null;
        },
        async updateData(id3, data, expires) {
          map.set(id3, {
            data,
            expires
          });
        },
        async deleteData(id3) {
          map.delete(id3);
        }
      });
    };
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/upload/errors.js
var MaxPartSizeExceededError, init_errors2 = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/upload/errors.js"() {
    MaxPartSizeExceededError = class extends Error {
      constructor(field, maxBytes) {
        super(`Field "${field}" exceeded upload size of ${maxBytes} bytes.`), this.field = field, this.maxBytes = maxBytes;
      }
    };
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js
function createMemoryUploadHandler({
  filter: filter3,
  maxPartSize = 3e6
} = {}) {
  return async ({
    filename,
    contentType,
    name,
    data
  }) => {
    if (filter3 && !await filter3({
      filename,
      contentType,
      name
    }))
      return;
    let size2 = 0, chunks = [];
    for await (let chunk of data) {
      if (size2 += chunk.byteLength, size2 > maxPartSize)
        throw new MaxPartSizeExceededError(name, maxPartSize);
      chunks.push(chunk);
    }
    return typeof filename == "string" ? new File(chunks, filename, {
      type: contentType
    }) : await new Blob(chunks, {
      type: contentType
    }).text();
  };
}
var init_memoryUploadHandler = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js"() {
    init_errors2();
  }
});

// ../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  MaxPartSizeExceededError: () => MaxPartSizeExceededError,
  broadcastDevReady: () => broadcastDevReady,
  createCookieFactory: () => createCookieFactory,
  createCookieSessionStorageFactory: () => createCookieSessionStorageFactory,
  createMemorySessionStorageFactory: () => createMemorySessionStorageFactory,
  createRequestHandler: () => createRequestHandler,
  createSession: () => createSession,
  createSessionStorageFactory: () => createSessionStorageFactory,
  defer: () => defer3,
  isCookie: () => isCookie,
  isSession: () => isSession,
  json: () => json3,
  logDevReady: () => logDevReady,
  redirect: () => redirect3,
  redirectDocument: () => redirectDocument2,
  unstable_composeUploadHandlers: () => composeUploadHandlers,
  unstable_createMemoryUploadHandler: () => createMemoryUploadHandler,
  unstable_parseMultipartFormData: () => parseMultipartFormData,
  unstable_setDevServerHooks: () => setDevServerHooks
});
var init_esm = __esm({
  "../../node_modules/@remix-run/cloudflare/node_modules/@remix-run/server-runtime/dist/esm/index.js"() {
    init_cookies();
    init_formData();
    init_responses();
    init_server();
    init_sessions();
    init_cookieStorage();
    init_memoryStorage();
    init_memoryUploadHandler();
    init_errors2();
    init_dev();
  }
});

// ../../node_modules/@remix-run/cloudflare/dist/crypto.js
var require_crypto = __commonJS({
  "../../node_modules/@remix-run/cloudflare/dist/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var encoder = new TextEncoder(), sign = async (value, secret) => {
      let key = await createKey3(secret, ["sign"]), data = encoder.encode(value), signature = await crypto.subtle.sign("HMAC", key, data), hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(/=+$/, "");
      return value + "." + hash;
    }, unsign = async (signed, secret) => {
      let index3 = signed.lastIndexOf("."), value = signed.slice(0, index3), hash = signed.slice(index3 + 1), key = await createKey3(secret, ["verify"]), data = encoder.encode(value), signature = byteStringToUint8Array(atob(hash));
      return await crypto.subtle.verify("HMAC", key, signature, data) ? value : !1;
    };
    async function createKey3(secret, usages) {
      return await crypto.subtle.importKey("raw", encoder.encode(secret), {
        name: "HMAC",
        hash: "SHA-256"
      }, !1, usages);
    }
    function byteStringToUint8Array(byteString) {
      let array = new Uint8Array(byteString.length);
      for (let i3 = 0; i3 < byteString.length; i3++)
        array[i3] = byteString.charCodeAt(i3);
      return array;
    }
    exports.sign = sign;
    exports.unsign = unsign;
  }
});

// ../../node_modules/@remix-run/cloudflare/dist/implementations.js
var require_implementations = __commonJS({
  "../../node_modules/@remix-run/cloudflare/dist/implementations.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var serverRuntime = (init_esm(), __toCommonJS(esm_exports)), crypto2 = require_crypto(), createCookie = serverRuntime.createCookieFactory({
      sign: crypto2.sign,
      unsign: crypto2.unsign
    }), createCookieSessionStorage = serverRuntime.createCookieSessionStorageFactory(createCookie), createSessionStorage = serverRuntime.createSessionStorageFactory(createCookie), createMemorySessionStorage = serverRuntime.createMemorySessionStorageFactory(createSessionStorage);
    exports.createCookie = createCookie;
    exports.createCookieSessionStorage = createCookieSessionStorage;
    exports.createMemorySessionStorage = createMemorySessionStorage;
    exports.createSessionStorage = createSessionStorage;
  }
});

// ../../node_modules/@remix-run/cloudflare/dist/sessions/workersKVStorage.js
var require_workersKVStorage = __commonJS({
  "../../node_modules/@remix-run/cloudflare/dist/sessions/workersKVStorage.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var implementations = require_implementations();
    function createWorkersKVSessionStorage({
      cookie,
      kv
    }) {
      return implementations.createSessionStorage({
        cookie,
        async createData(data, expires) {
          for (; ; ) {
            let randomBytes = new Uint8Array(8);
            crypto.getRandomValues(randomBytes);
            let id3 = [...randomBytes].map((x3) => x3.toString(16).padStart(2, "0")).join("");
            if (!await kv.get(id3, "json"))
              return await kv.put(id3, JSON.stringify(data), {
                expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
              }), id3;
          }
        },
        async readData(id3) {
          let session = await kv.get(id3);
          return session ? JSON.parse(session) : null;
        },
        async updateData(id3, data, expires) {
          await kv.put(id3, JSON.stringify(data), {
            expiration: expires ? Math.round(expires.getTime() / 1e3) : void 0
          });
        },
        async deleteData(id3) {
          await kv.delete(id3);
        }
      });
    }
    exports.createWorkersKVSessionStorage = createWorkersKVSessionStorage;
  }
});

// ../../node_modules/@remix-run/cloudflare/dist/index.js
var require_dist = __commonJS({
  "../../node_modules/@remix-run/cloudflare/dist/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var workersKVStorage = require_workersKVStorage(), implementations = require_implementations(), serverRuntime = (init_esm(), __toCommonJS(esm_exports));
    exports.createWorkersKVSessionStorage = workersKVStorage.createWorkersKVSessionStorage;
    exports.createCookie = implementations.createCookie;
    exports.createCookieSessionStorage = implementations.createCookieSessionStorage;
    exports.createMemorySessionStorage = implementations.createMemorySessionStorage;
    exports.createSessionStorage = implementations.createSessionStorage;
    Object.defineProperty(exports, "MaxPartSizeExceededError", {
      enumerable: !0,
      get: function() {
        return serverRuntime.MaxPartSizeExceededError;
      }
    });
    Object.defineProperty(exports, "broadcastDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.broadcastDevReady;
      }
    });
    Object.defineProperty(exports, "createRequestHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createRequestHandler;
      }
    });
    Object.defineProperty(exports, "createSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.createSession;
      }
    });
    Object.defineProperty(exports, "defer", {
      enumerable: !0,
      get: function() {
        return serverRuntime.defer;
      }
    });
    Object.defineProperty(exports, "isCookie", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isCookie;
      }
    });
    Object.defineProperty(exports, "isSession", {
      enumerable: !0,
      get: function() {
        return serverRuntime.isSession;
      }
    });
    Object.defineProperty(exports, "json", {
      enumerable: !0,
      get: function() {
        return serverRuntime.json;
      }
    });
    Object.defineProperty(exports, "logDevReady", {
      enumerable: !0,
      get: function() {
        return serverRuntime.logDevReady;
      }
    });
    Object.defineProperty(exports, "redirect", {
      enumerable: !0,
      get: function() {
        return serverRuntime.redirect;
      }
    });
    Object.defineProperty(exports, "redirectDocument", {
      enumerable: !0,
      get: function() {
        return serverRuntime.redirectDocument;
      }
    });
    Object.defineProperty(exports, "unstable_composeUploadHandlers", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_composeUploadHandlers;
      }
    });
    Object.defineProperty(exports, "unstable_createMemoryUploadHandler", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_createMemoryUploadHandler;
      }
    });
    Object.defineProperty(exports, "unstable_parseMultipartFormData", {
      enumerable: !0,
      get: function() {
        return serverRuntime.unstable_parseMultipartFormData;
      }
    });
  }
});

// ../../node_modules/@remix-run/router/dist/router.js
var router_exports = {};
__export(router_exports, {
  AbortedDeferredError: () => AbortedDeferredError2,
  Action: () => Action2,
  IDLE_BLOCKER: () => IDLE_BLOCKER,
  IDLE_FETCHER: () => IDLE_FETCHER,
  IDLE_NAVIGATION: () => IDLE_NAVIGATION,
  UNSAFE_DEFERRED_SYMBOL: () => UNSAFE_DEFERRED_SYMBOL2,
  UNSAFE_DeferredData: () => DeferredData2,
  UNSAFE_ErrorResponseImpl: () => ErrorResponseImpl2,
  UNSAFE_convertRouteMatchToUiMatch: () => convertRouteMatchToUiMatch,
  UNSAFE_convertRoutesToDataRoutes: () => convertRoutesToDataRoutes2,
  UNSAFE_getResolveToMatches: () => getResolveToMatches2,
  UNSAFE_invariant: () => invariant3,
  UNSAFE_warning: () => warning2,
  createBrowserHistory: () => createBrowserHistory,
  createHashHistory: () => createHashHistory,
  createMemoryHistory: () => createMemoryHistory,
  createPath: () => createPath2,
  createRouter: () => createRouter,
  createStaticHandler: () => createStaticHandler2,
  defer: () => defer4,
  generatePath: () => generatePath,
  getStaticContextFromError: () => getStaticContextFromError2,
  getToPathname: () => getToPathname,
  isDeferredData: () => isDeferredData3,
  isRouteErrorResponse: () => isRouteErrorResponse2,
  joinPaths: () => joinPaths2,
  json: () => json4,
  matchPath: () => matchPath2,
  matchRoutes: () => matchRoutes2,
  normalizePathname: () => normalizePathname2,
  parsePath: () => parsePath2,
  redirect: () => redirect4,
  redirectDocument: () => redirectDocument3,
  resolvePath: () => resolvePath2,
  resolveTo: () => resolveTo2,
  stripBasename: () => stripBasename2
});
function _extends2() {
  return _extends2 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends2.apply(this, arguments);
}
function createMemoryHistory(options) {
  options === void 0 && (options = {});
  let {
    initialEntries = ["/"],
    initialIndex,
    v5Compat = !1
  } = options, entries;
  entries = initialEntries.map((entry2, index4) => createMemoryLocation(entry2, typeof entry2 == "string" ? null : entry2.state, index4 === 0 ? "default" : void 0));
  let index3 = clampIndex(initialIndex ?? entries.length - 1), action = Action2.Pop, listener = null;
  function clampIndex(n2) {
    return Math.min(Math.max(n2, 0), entries.length - 1);
  }
  function getCurrentLocation() {
    return entries[index3];
  }
  function createMemoryLocation(to, state, key) {
    state === void 0 && (state = null);
    let location = createLocation2(entries ? getCurrentLocation().pathname : "/", to, state, key);
    return warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in memory history: " + JSON.stringify(to)), location;
  }
  function createHref(to) {
    return typeof to == "string" ? to : createPath2(to);
  }
  return {
    get index() {
      return index3;
    },
    get action() {
      return action;
    },
    get location() {
      return getCurrentLocation();
    },
    createHref,
    createURL(to) {
      return new URL(createHref(to), "http://localhost");
    },
    encodeLocation(to) {
      let path = typeof to == "string" ? parsePath2(to) : to;
      return {
        pathname: path.pathname || "",
        search: path.search || "",
        hash: path.hash || ""
      };
    },
    push(to, state) {
      action = Action2.Push;
      let nextLocation = createMemoryLocation(to, state);
      index3 += 1, entries.splice(index3, entries.length, nextLocation), v5Compat && listener && listener({
        action,
        location: nextLocation,
        delta: 1
      });
    },
    replace(to, state) {
      action = Action2.Replace;
      let nextLocation = createMemoryLocation(to, state);
      entries[index3] = nextLocation, v5Compat && listener && listener({
        action,
        location: nextLocation,
        delta: 0
      });
    },
    go(delta) {
      action = Action2.Pop;
      let nextIndex = clampIndex(index3 + delta), nextLocation = entries[nextIndex];
      index3 = nextIndex, listener && listener({
        action,
        location: nextLocation,
        delta
      });
    },
    listen(fn) {
      return listener = fn, () => {
        listener = null;
      };
    }
  };
}
function createBrowserHistory(options) {
  options === void 0 && (options = {});
  function createBrowserLocation(window2, globalHistory) {
    let {
      pathname,
      search,
      hash
    } = window2.location;
    return createLocation2(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createBrowserHref(window2, to) {
    return typeof to == "string" ? to : createPath2(to);
  }
  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);
}
function createHashHistory(options) {
  options === void 0 && (options = {});
  function createHashLocation(window2, globalHistory) {
    let {
      pathname = "/",
      search = "",
      hash = ""
    } = parsePath2(window2.location.hash.substr(1));
    return !pathname.startsWith("/") && !pathname.startsWith(".") && (pathname = "/" + pathname), createLocation2(
      "",
      {
        pathname,
        search,
        hash
      },
      // state defaults to `null` because `window.history.state` does
      globalHistory.state && globalHistory.state.usr || null,
      globalHistory.state && globalHistory.state.key || "default"
    );
  }
  function createHashHref(window2, to) {
    let base = window2.document.querySelector("base"), href = "";
    if (base && base.getAttribute("href")) {
      let url2 = window2.location.href, hashIndex = url2.indexOf("#");
      href = hashIndex === -1 ? url2 : url2.slice(0, hashIndex);
    }
    return href + "#" + (typeof to == "string" ? to : createPath2(to));
  }
  function validateHashLocation(location, to) {
    warning2(location.pathname.charAt(0) === "/", "relative pathnames are not supported in hash history.push(" + JSON.stringify(to) + ")");
  }
  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);
}
function invariant3(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}
function warning2(cond, message) {
  if (!cond) {
    typeof console < "u" && console.warn(message);
    try {
      throw new Error(message);
    } catch {
    }
  }
}
function createKey2() {
  return Math.random().toString(36).substr(2, 8);
}
function getHistoryState(location, index3) {
  return {
    usr: location.state,
    key: location.key,
    idx: index3
  };
}
function createLocation2(current, to, state, key) {
  return state === void 0 && (state = null), _extends2({
    pathname: typeof current == "string" ? current : current.pathname,
    search: "",
    hash: ""
  }, typeof to == "string" ? parsePath2(to) : to, {
    state,
    // TODO: This could be cleaned up.  push/replace should probably just take
    // full Locations now and avoid the need to run through this flow at all
    // But that's a pretty big refactor to the current test suite so going to
    // keep as is for the time being and just let any incoming keys take precedence
    key: to && to.key || key || createKey2()
  });
}
function createPath2(_ref) {
  let {
    pathname = "/",
    search = "",
    hash = ""
  } = _ref;
  return search && search !== "?" && (pathname += search.charAt(0) === "?" ? search : "?" + search), hash && hash !== "#" && (pathname += hash.charAt(0) === "#" ? hash : "#" + hash), pathname;
}
function parsePath2(path) {
  let parsedPath = {};
  if (path) {
    let hashIndex = path.indexOf("#");
    hashIndex >= 0 && (parsedPath.hash = path.substr(hashIndex), path = path.substr(0, hashIndex));
    let searchIndex = path.indexOf("?");
    searchIndex >= 0 && (parsedPath.search = path.substr(searchIndex), path = path.substr(0, searchIndex)), path && (parsedPath.pathname = path);
  }
  return parsedPath;
}
function getUrlBasedHistory(getLocation, createHref, validateLocation, options) {
  options === void 0 && (options = {});
  let {
    window: window2 = document.defaultView,
    v5Compat = !1
  } = options, globalHistory = window2.history, action = Action2.Pop, listener = null, index3 = getIndex();
  index3 == null && (index3 = 0, globalHistory.replaceState(_extends2({}, globalHistory.state, {
    idx: index3
  }), ""));
  function getIndex() {
    return (globalHistory.state || {
      idx: null
    }).idx;
  }
  function handlePop() {
    action = Action2.Pop;
    let nextIndex = getIndex(), delta = nextIndex == null ? null : nextIndex - index3;
    index3 = nextIndex, listener && listener({
      action,
      location: history.location,
      delta
    });
  }
  function push(to, state) {
    action = Action2.Push;
    let location = createLocation2(history.location, to, state);
    validateLocation && validateLocation(location, to), index3 = getIndex() + 1;
    let historyState = getHistoryState(location, index3), url2 = history.createHref(location);
    try {
      globalHistory.pushState(historyState, "", url2);
    } catch (error) {
      if (error instanceof DOMException && error.name === "DataCloneError")
        throw error;
      window2.location.assign(url2);
    }
    v5Compat && listener && listener({
      action,
      location: history.location,
      delta: 1
    });
  }
  function replace(to, state) {
    action = Action2.Replace;
    let location = createLocation2(history.location, to, state);
    validateLocation && validateLocation(location, to), index3 = getIndex();
    let historyState = getHistoryState(location, index3), url2 = history.createHref(location);
    globalHistory.replaceState(historyState, "", url2), v5Compat && listener && listener({
      action,
      location: history.location,
      delta: 0
    });
  }
  function createURL(to) {
    let base = window2.location.origin !== "null" ? window2.location.origin : window2.location.href, href = typeof to == "string" ? to : createPath2(to);
    return invariant3(base, "No window.location.(origin|href) available to create URL for href: " + href), new URL(href, base);
  }
  let history = {
    get action() {
      return action;
    },
    get location() {
      return getLocation(window2, globalHistory);
    },
    listen(fn) {
      if (listener)
        throw new Error("A history only accepts one active listener");
      return window2.addEventListener(PopStateEventType, handlePop), listener = fn, () => {
        window2.removeEventListener(PopStateEventType, handlePop), listener = null;
      };
    },
    createHref(to) {
      return createHref(window2, to);
    },
    createURL,
    encodeLocation(to) {
      let url2 = createURL(to);
      return {
        pathname: url2.pathname,
        search: url2.search,
        hash: url2.hash
      };
    },
    push,
    replace,
    go(n2) {
      return globalHistory.go(n2);
    }
  };
  return history;
}
function isIndexRoute2(route) {
  return route.index === !0;
}
function convertRoutesToDataRoutes2(routes2, mapRouteProperties2, parentPath, manifest) {
  return parentPath === void 0 && (parentPath = []), manifest === void 0 && (manifest = {}), routes2.map((route, index3) => {
    let treePath = [...parentPath, index3], id3 = typeof route.id == "string" ? route.id : treePath.join("-");
    if (invariant3(route.index !== !0 || !route.children, "Cannot specify children on an index route"), invariant3(!manifest[id3], 'Found a route id collision on id "' + id3 + `".  Route id's must be globally unique within Data Router usages`), isIndexRoute2(route)) {
      let indexRoute = _extends2({}, route, mapRouteProperties2(route), {
        id: id3
      });
      return manifest[id3] = indexRoute, indexRoute;
    } else {
      let pathOrLayoutRoute = _extends2({}, route, mapRouteProperties2(route), {
        id: id3,
        children: void 0
      });
      return manifest[id3] = pathOrLayoutRoute, route.children && (pathOrLayoutRoute.children = convertRoutesToDataRoutes2(route.children, mapRouteProperties2, treePath, manifest)), pathOrLayoutRoute;
    }
  });
}
function matchRoutes2(routes2, locationArg, basename) {
  basename === void 0 && (basename = "/");
  let location = typeof locationArg == "string" ? parsePath2(locationArg) : locationArg, pathname = stripBasename2(location.pathname || "/", basename);
  if (pathname == null)
    return null;
  let branches = flattenRoutes2(routes2);
  rankRouteBranches2(branches);
  let matches = null;
  for (let i3 = 0; matches == null && i3 < branches.length; ++i3)
    matches = matchRouteBranch2(
      branches[i3],
      // Incoming pathnames are generally encoded from either window.location
      // or from router.navigate, but we want to match against the unencoded
      // paths in the route definitions.  Memory router locations won't be
      // encoded here but there also shouldn't be anything to decode so this
      // should be a safe operation.  This avoids needing matchRoutes to be
      // history-aware.
      safelyDecodeURI2(pathname)
    );
  return matches;
}
function convertRouteMatchToUiMatch(match2, loaderData) {
  let {
    route,
    pathname,
    params
  } = match2;
  return {
    id: route.id,
    pathname,
    params,
    data: loaderData[route.id],
    handle: route.handle
  };
}
function flattenRoutes2(routes2, branches, parentsMeta, parentPath) {
  branches === void 0 && (branches = []), parentsMeta === void 0 && (parentsMeta = []), parentPath === void 0 && (parentPath = "");
  let flattenRoute = (route, index3, relativePath) => {
    let meta2 = {
      relativePath: relativePath === void 0 ? route.path || "" : relativePath,
      caseSensitive: route.caseSensitive === !0,
      childrenIndex: index3,
      route
    };
    meta2.relativePath.startsWith("/") && (invariant3(meta2.relativePath.startsWith(parentPath), 'Absolute route path "' + meta2.relativePath + '" nested under path ' + ('"' + parentPath + '" is not valid. An absolute child route path ') + "must start with the combined path of all its parent routes."), meta2.relativePath = meta2.relativePath.slice(parentPath.length));
    let path = joinPaths2([parentPath, meta2.relativePath]), routesMeta = parentsMeta.concat(meta2);
    route.children && route.children.length > 0 && (invariant3(
      // Our types know better, but runtime JS may not!
      // @ts-expect-error
      route.index !== !0,
      "Index routes must not have child routes. Please remove " + ('all child routes from route path "' + path + '".')
    ), flattenRoutes2(route.children, branches, routesMeta, path)), !(route.path == null && !route.index) && branches.push({
      path,
      score: computeScore2(path, route.index),
      routesMeta
    });
  };
  return routes2.forEach((route, index3) => {
    var _route$path;
    if (route.path === "" || !((_route$path = route.path) != null && _route$path.includes("?")))
      flattenRoute(route, index3);
    else
      for (let exploded of explodeOptionalSegments2(route.path))
        flattenRoute(route, index3, exploded);
  }), branches;
}
function explodeOptionalSegments2(path) {
  let segments = path.split("/");
  if (segments.length === 0)
    return [];
  let [first, ...rest] = segments, isOptional = first.endsWith("?"), required = first.replace(/\?$/, "");
  if (rest.length === 0)
    return isOptional ? [required, ""] : [required];
  let restExploded = explodeOptionalSegments2(rest.join("/")), result = [];
  return result.push(...restExploded.map((subpath) => subpath === "" ? required : [required, subpath].join("/"))), isOptional && result.push(...restExploded), result.map((exploded) => path.startsWith("/") && exploded === "" ? "/" : exploded);
}
function rankRouteBranches2(branches) {
  branches.sort((a4, b3) => a4.score !== b3.score ? b3.score - a4.score : compareIndexes2(a4.routesMeta.map((meta2) => meta2.childrenIndex), b3.routesMeta.map((meta2) => meta2.childrenIndex)));
}
function computeScore2(path, index3) {
  let segments = path.split("/"), initialScore = segments.length;
  return segments.some(isSplat2) && (initialScore += splatPenalty2), index3 && (initialScore += indexRouteValue2), segments.filter((s4) => !isSplat2(s4)).reduce((score, segment) => score + (paramRe2.test(segment) ? dynamicSegmentValue2 : segment === "" ? emptySegmentValue2 : staticSegmentValue2), initialScore);
}
function compareIndexes2(a4, b3) {
  return a4.length === b3.length && a4.slice(0, -1).every((n2, i3) => n2 === b3[i3]) ? (
    // If two routes are siblings, we should try to match the earlier sibling
    // first. This allows people to have fine-grained control over the matching
    // behavior by simply putting routes with identical paths in the order they
    // want them tried.
    a4[a4.length - 1] - b3[b3.length - 1]
  ) : (
    // Otherwise, it doesn't really make sense to rank non-siblings by index,
    // so they sort equally.
    0
  );
}
function matchRouteBranch2(branch, pathname) {
  let {
    routesMeta
  } = branch, matchedParams = {}, matchedPathname = "/", matches = [];
  for (let i3 = 0; i3 < routesMeta.length; ++i3) {
    let meta2 = routesMeta[i3], end = i3 === routesMeta.length - 1, remainingPathname = matchedPathname === "/" ? pathname : pathname.slice(matchedPathname.length) || "/", match2 = matchPath2({
      path: meta2.relativePath,
      caseSensitive: meta2.caseSensitive,
      end
    }, remainingPathname);
    if (!match2)
      return null;
    Object.assign(matchedParams, match2.params);
    let route = meta2.route;
    matches.push({
      // TODO: Can this as be avoided?
      params: matchedParams,
      pathname: joinPaths2([matchedPathname, match2.pathname]),
      pathnameBase: normalizePathname2(joinPaths2([matchedPathname, match2.pathnameBase])),
      route
    }), match2.pathnameBase !== "/" && (matchedPathname = joinPaths2([matchedPathname, match2.pathnameBase]));
  }
  return matches;
}
function generatePath(originalPath, params) {
  params === void 0 && (params = {});
  let path = originalPath;
  path.endsWith("*") && path !== "*" && !path.endsWith("/*") && (warning2(!1, 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".')), path = path.replace(/\*$/, "/*"));
  let prefix = path.startsWith("/") ? "/" : "", stringify = (p2) => p2 == null ? "" : typeof p2 == "string" ? p2 : String(p2), segments = path.split(/\/+/).map((segment, index3, array) => {
    if (index3 === array.length - 1 && segment === "*")
      return stringify(params["*"]);
    let keyMatch = segment.match(/^:(\w+)(\??)$/);
    if (keyMatch) {
      let [, key, optional] = keyMatch, param = params[key];
      return invariant3(optional === "?" || param != null, 'Missing ":' + key + '" param'), stringify(param);
    }
    return segment.replace(/\?$/g, "");
  }).filter((segment) => !!segment);
  return prefix + segments.join("/");
}
function matchPath2(pattern, pathname) {
  typeof pattern == "string" && (pattern = {
    path: pattern,
    caseSensitive: !1,
    end: !0
  });
  let [matcher, compiledParams] = compilePath2(pattern.path, pattern.caseSensitive, pattern.end), match2 = pathname.match(matcher);
  if (!match2)
    return null;
  let matchedPathname = match2[0], pathnameBase = matchedPathname.replace(/(.)\/+$/, "$1"), captureGroups = match2.slice(1);
  return {
    params: compiledParams.reduce((memo2, _ref, index3) => {
      let {
        paramName,
        isOptional
      } = _ref;
      if (paramName === "*") {
        let splatValue = captureGroups[index3] || "";
        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\/+$/, "$1");
      }
      let value = captureGroups[index3];
      return isOptional && !value ? memo2[paramName] = void 0 : memo2[paramName] = safelyDecodeURIComponent2(value || "", paramName), memo2;
    }, {}),
    pathname: matchedPathname,
    pathnameBase,
    pattern
  };
}
function compilePath2(path, caseSensitive, end) {
  caseSensitive === void 0 && (caseSensitive = !1), end === void 0 && (end = !0), warning2(path === "*" || !path.endsWith("*") || path.endsWith("/*"), 'Route path "' + path + '" will be treated as if it were ' + ('"' + path.replace(/\*$/, "/*") + '" because the `*` character must ') + "always follow a `/` in the pattern. To get rid of this warning, " + ('please change the route path to "' + path.replace(/\*$/, "/*") + '".'));
  let params = [], regexpSource = "^" + path.replace(/\/*\*?$/, "").replace(/^\/*/, "/").replace(/[\\.*+^${}|()[\]]/g, "\\$&").replace(/\/:(\w+)(\?)?/g, (_, paramName, isOptional) => (params.push({
    paramName,
    isOptional: isOptional != null
  }), isOptional ? "/?([^\\/]+)?" : "/([^\\/]+)"));
  return path.endsWith("*") ? (params.push({
    paramName: "*"
  }), regexpSource += path === "*" || path === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$") : end ? regexpSource += "\\/*$" : path !== "" && path !== "/" && (regexpSource += "(?:(?=\\/|$))"), [new RegExp(regexpSource, caseSensitive ? void 0 : "i"), params];
}
function safelyDecodeURI2(value) {
  try {
    return decodeURI(value);
  } catch (error) {
    return warning2(!1, 'The URL path "' + value + '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' + ("encoding (" + error + ").")), value;
  }
}
function safelyDecodeURIComponent2(value, paramName) {
  try {
    return decodeURIComponent(value);
  } catch (error) {
    return warning2(!1, 'The value for the URL param "' + paramName + '" will not be decoded because' + (' the string "' + value + '" is a malformed URL segment. This is probably') + (" due to a bad percent encoding (" + error + ").")), value;
  }
}
function stripBasename2(pathname, basename) {
  if (basename === "/")
    return pathname;
  if (!pathname.toLowerCase().startsWith(basename.toLowerCase()))
    return null;
  let startIndex = basename.endsWith("/") ? basename.length - 1 : basename.length, nextChar = pathname.charAt(startIndex);
  return nextChar && nextChar !== "/" ? null : pathname.slice(startIndex) || "/";
}
function resolvePath2(to, fromPathname) {
  fromPathname === void 0 && (fromPathname = "/");
  let {
    pathname: toPathname,
    search = "",
    hash = ""
  } = typeof to == "string" ? parsePath2(to) : to;
  return {
    pathname: toPathname ? toPathname.startsWith("/") ? toPathname : resolvePathname2(toPathname, fromPathname) : fromPathname,
    search: normalizeSearch2(search),
    hash: normalizeHash2(hash)
  };
}
function resolvePathname2(relativePath, fromPathname) {
  let segments = fromPathname.replace(/\/+$/, "").split("/");
  return relativePath.split("/").forEach((segment) => {
    segment === ".." ? segments.length > 1 && segments.pop() : segment !== "." && segments.push(segment);
  }), segments.length > 1 ? segments.join("/") : "/";
}
function getInvalidPathError2(char, field, dest, path) {
  return "Cannot include a '" + char + "' character in a manually specified " + ("`to." + field + "` field [" + JSON.stringify(path) + "].  Please separate it out to the ") + ("`to." + dest + "` field. Alternatively you may provide the full path as ") + 'a string in <Link to="..."> and the router will parse it for you.';
}
function getPathContributingMatches2(matches) {
  return matches.filter((match2, index3) => index3 === 0 || match2.route.path && match2.route.path.length > 0);
}
function getResolveToMatches2(matches, v7_relativeSplatPath) {
  let pathMatches = getPathContributingMatches2(matches);
  return v7_relativeSplatPath ? pathMatches.map((match2, idx) => idx === matches.length - 1 ? match2.pathname : match2.pathnameBase) : pathMatches.map((match2) => match2.pathnameBase);
}
function resolveTo2(toArg, routePathnames, locationPathname, isPathRelative) {
  isPathRelative === void 0 && (isPathRelative = !1);
  let to;
  typeof toArg == "string" ? to = parsePath2(toArg) : (to = _extends2({}, toArg), invariant3(!to.pathname || !to.pathname.includes("?"), getInvalidPathError2("?", "pathname", "search", to)), invariant3(!to.pathname || !to.pathname.includes("#"), getInvalidPathError2("#", "pathname", "hash", to)), invariant3(!to.search || !to.search.includes("#"), getInvalidPathError2("#", "search", "hash", to)));
  let isEmptyPath = toArg === "" || to.pathname === "", toPathname = isEmptyPath ? "/" : to.pathname, from;
  if (toPathname == null)
    from = locationPathname;
  else if (isPathRelative) {
    let fromSegments = routePathnames.length === 0 ? [] : routePathnames[routePathnames.length - 1].replace(/^\//, "").split("/");
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      for (; toSegments[0] === ".."; )
        toSegments.shift(), fromSegments.pop();
      to.pathname = toSegments.join("/");
    }
    from = "/" + fromSegments.join("/");
  } else {
    let routePathnameIndex = routePathnames.length - 1;
    if (toPathname.startsWith("..")) {
      let toSegments = toPathname.split("/");
      for (; toSegments[0] === ".."; )
        toSegments.shift(), routePathnameIndex -= 1;
      to.pathname = toSegments.join("/");
    }
    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : "/";
  }
  let path = resolvePath2(to, from), hasExplicitTrailingSlash = toPathname && toPathname !== "/" && toPathname.endsWith("/"), hasCurrentTrailingSlash = (isEmptyPath || toPathname === ".") && locationPathname.endsWith("/");
  return !path.pathname.endsWith("/") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash) && (path.pathname += "/"), path;
}
function getToPathname(to) {
  return to === "" || to.pathname === "" ? "/" : typeof to == "string" ? parsePath2(to).pathname : to.pathname;
}
function isTrackedPromise3(value) {
  return value instanceof Promise && value._tracked === !0;
}
function unwrapTrackedPromise2(value) {
  if (!isTrackedPromise3(value))
    return value;
  if (value._error)
    throw value._error;
  return value._data;
}
function isRouteErrorResponse2(error) {
  return error != null && typeof error.status == "number" && typeof error.statusText == "string" && typeof error.internal == "boolean" && "data" in error;
}
function createRouter(init) {
  let routerWindow = init.window ? init.window : typeof window < "u" ? window : void 0, isBrowser3 = typeof routerWindow < "u" && typeof routerWindow.document < "u" && typeof routerWindow.document.createElement < "u", isServer2 = !isBrowser3;
  invariant3(init.routes.length > 0, "You must provide a non-empty routes array to createRouter");
  let mapRouteProperties2;
  if (init.mapRouteProperties)
    mapRouteProperties2 = init.mapRouteProperties;
  else if (init.detectErrorBoundary) {
    let detectErrorBoundary = init.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties2;
  let manifest = {}, dataRoutes = convertRoutesToDataRoutes2(init.routes, mapRouteProperties2, void 0, manifest), inFlightDataRoutes, basename = init.basename || "/", future2 = _extends2({
    v7_fetcherPersist: !1,
    v7_normalizeFormMethod: !1,
    v7_partialHydration: !1,
    v7_prependBasename: !1,
    v7_relativeSplatPath: !1
  }, init.future), unlistenHistory = null, subscribers = /* @__PURE__ */ new Set(), savedScrollPositions2 = null, getScrollRestorationKey = null, getScrollPosition = null, initialScrollRestored = init.hydrationData != null, initialMatches = matchRoutes2(dataRoutes, init.history.location, basename), initialErrors = null;
  if (initialMatches == null) {
    let error = getInternalRouterError2(404, {
      pathname: init.history.location.pathname
    }), {
      matches,
      route
    } = getShortCircuitMatches2(dataRoutes);
    initialMatches = matches, initialErrors = {
      [route.id]: error
    };
  }
  let initialized, hasLazyRoutes = initialMatches.some((m4) => m4.route.lazy), hasLoaders = initialMatches.some((m4) => m4.route.loader);
  if (hasLazyRoutes)
    initialized = !1;
  else if (!hasLoaders)
    initialized = !0;
  else if (future2.v7_partialHydration) {
    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null, errors = init.hydrationData ? init.hydrationData.errors : null;
    initialized = initialMatches.every((m4) => m4.route.loader && m4.route.loader.hydrate !== !0 && (loaderData && loaderData[m4.route.id] !== void 0 || errors && errors[m4.route.id] !== void 0));
  } else
    initialized = init.hydrationData != null;
  let router, state = {
    historyAction: init.history.action,
    location: init.history.location,
    matches: initialMatches,
    initialized,
    navigation: IDLE_NAVIGATION,
    // Don't restore on initial updateState() if we were SSR'd
    restoreScrollPosition: init.hydrationData != null ? !1 : null,
    preventScrollReset: !1,
    revalidation: "idle",
    loaderData: init.hydrationData && init.hydrationData.loaderData || {},
    actionData: init.hydrationData && init.hydrationData.actionData || null,
    errors: init.hydrationData && init.hydrationData.errors || initialErrors,
    fetchers: /* @__PURE__ */ new Map(),
    blockers: /* @__PURE__ */ new Map()
  }, pendingAction = Action2.Pop, pendingPreventScrollReset = !1, pendingNavigationController, pendingViewTransitionEnabled = !1, appliedViewTransitions = /* @__PURE__ */ new Map(), removePageHideEventListener = null, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [], fetchControllers = /* @__PURE__ */ new Map(), incrementingLoadId = 0, pendingNavigationLoadId = -1, fetchReloadIds = /* @__PURE__ */ new Map(), fetchRedirectIds = /* @__PURE__ */ new Set(), fetchLoadMatches = /* @__PURE__ */ new Map(), activeFetchers = /* @__PURE__ */ new Map(), deletedFetchers = /* @__PURE__ */ new Set(), activeDeferreds = /* @__PURE__ */ new Map(), blockerFunctions = /* @__PURE__ */ new Map(), ignoreNextHistoryUpdate = !1;
  function initialize() {
    if (unlistenHistory = init.history.listen((_ref) => {
      let {
        action: historyAction,
        location,
        delta
      } = _ref;
      if (ignoreNextHistoryUpdate) {
        ignoreNextHistoryUpdate = !1;
        return;
      }
      warning2(blockerFunctions.size === 0 || delta != null, "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.");
      let blockerKey = shouldBlockNavigation({
        currentLocation: state.location,
        nextLocation: location,
        historyAction
      });
      if (blockerKey && delta != null) {
        ignoreNextHistoryUpdate = !0, init.history.go(delta * -1), updateBlocker(blockerKey, {
          state: "blocked",
          location,
          proceed() {
            updateBlocker(blockerKey, {
              state: "proceeding",
              proceed: void 0,
              reset: void 0,
              location
            }), init.history.go(delta);
          },
          reset() {
            let blockers = new Map(state.blockers);
            blockers.set(blockerKey, IDLE_BLOCKER), updateState({
              blockers
            });
          }
        });
        return;
      }
      return startNavigation(historyAction, location);
    }), isBrowser3) {
      restoreAppliedTransitions(routerWindow, appliedViewTransitions);
      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);
      routerWindow.addEventListener("pagehide", _saveAppliedTransitions), removePageHideEventListener = () => routerWindow.removeEventListener("pagehide", _saveAppliedTransitions);
    }
    return state.initialized || startNavigation(Action2.Pop, state.location, {
      initialHydration: !0
    }), router;
  }
  function dispose() {
    unlistenHistory && unlistenHistory(), removePageHideEventListener && removePageHideEventListener(), subscribers.clear(), pendingNavigationController && pendingNavigationController.abort(), state.fetchers.forEach((_, key) => deleteFetcher(key)), state.blockers.forEach((_, key) => deleteBlocker(key));
  }
  function subscribe(fn) {
    return subscribers.add(fn), () => subscribers.delete(fn);
  }
  function updateState(newState, opts) {
    opts === void 0 && (opts = {}), state = _extends2({}, state, newState);
    let completedFetchers = [], deletedFetchersKeys = [];
    future2.v7_fetcherPersist && state.fetchers.forEach((fetcher, key) => {
      fetcher.state === "idle" && (deletedFetchers.has(key) ? deletedFetchersKeys.push(key) : completedFetchers.push(key));
    }), [...subscribers].forEach((subscriber) => subscriber(state, {
      deletedFetchers: deletedFetchersKeys,
      unstable_viewTransitionOpts: opts.viewTransitionOpts,
      unstable_flushSync: opts.flushSync === !0
    })), future2.v7_fetcherPersist && (completedFetchers.forEach((key) => state.fetchers.delete(key)), deletedFetchersKeys.forEach((key) => deleteFetcher(key)));
  }
  function completeNavigation(location, newState, _temp) {
    var _location$state, _location$state2;
    let {
      flushSync: flushSync2
    } = _temp === void 0 ? {} : _temp, isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod2(state.navigation.formMethod) && state.navigation.state === "loading" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== !0, actionData;
    newState.actionData ? Object.keys(newState.actionData).length > 0 ? actionData = newState.actionData : actionData = null : isActionReload ? actionData = state.actionData : actionData = null;
    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData, blockers = state.blockers;
    blockers.size > 0 && (blockers = new Map(blockers), blockers.forEach((_, k3) => blockers.set(k3, IDLE_BLOCKER)));
    let preventScrollReset = pendingPreventScrollReset === !0 || state.navigation.formMethod != null && isMutationMethod2(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== !0;
    inFlightDataRoutes && (dataRoutes = inFlightDataRoutes, inFlightDataRoutes = void 0), isUninterruptedRevalidation || pendingAction === Action2.Pop || (pendingAction === Action2.Push ? init.history.push(location, location.state) : pendingAction === Action2.Replace && init.history.replace(location, location.state));
    let viewTransitionOpts;
    if (pendingAction === Action2.Pop) {
      let priorPaths = appliedViewTransitions.get(state.location.pathname);
      priorPaths && priorPaths.has(location.pathname) ? viewTransitionOpts = {
        currentLocation: state.location,
        nextLocation: location
      } : appliedViewTransitions.has(location.pathname) && (viewTransitionOpts = {
        currentLocation: location,
        nextLocation: state.location
      });
    } else if (pendingViewTransitionEnabled) {
      let toPaths = appliedViewTransitions.get(state.location.pathname);
      toPaths ? toPaths.add(location.pathname) : (toPaths = /* @__PURE__ */ new Set([location.pathname]), appliedViewTransitions.set(state.location.pathname, toPaths)), viewTransitionOpts = {
        currentLocation: state.location,
        nextLocation: location
      };
    }
    updateState(_extends2({}, newState, {
      actionData,
      loaderData,
      historyAction: pendingAction,
      location,
      initialized: !0,
      navigation: IDLE_NAVIGATION,
      revalidation: "idle",
      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),
      preventScrollReset,
      blockers
    }), {
      viewTransitionOpts,
      flushSync: flushSync2 === !0
    }), pendingAction = Action2.Pop, pendingPreventScrollReset = !1, pendingViewTransitionEnabled = !1, isUninterruptedRevalidation = !1, isRevalidationRequired = !1, cancelledDeferredRoutes = [], cancelledFetcherLoads = [];
  }
  async function navigate(to, opts) {
    if (typeof to == "number") {
      init.history.go(to);
      return;
    }
    let normalizedPath = normalizeTo2(state.location, state.matches, basename, future2.v7_prependBasename, to, future2.v7_relativeSplatPath, opts?.fromRouteId, opts?.relative), {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !1, normalizedPath, opts), currentLocation = state.location, nextLocation = createLocation2(state.location, path, opts && opts.state);
    nextLocation = _extends2({}, nextLocation, init.history.encodeLocation(nextLocation));
    let userReplace = opts && opts.replace != null ? opts.replace : void 0, historyAction = Action2.Push;
    userReplace === !0 ? historyAction = Action2.Replace : userReplace === !1 || submission != null && isMutationMethod2(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search && (historyAction = Action2.Replace);
    let preventScrollReset = opts && "preventScrollReset" in opts ? opts.preventScrollReset === !0 : void 0, flushSync2 = (opts && opts.unstable_flushSync) === !0, blockerKey = shouldBlockNavigation({
      currentLocation,
      nextLocation,
      historyAction
    });
    if (blockerKey) {
      updateBlocker(blockerKey, {
        state: "blocked",
        location: nextLocation,
        proceed() {
          updateBlocker(blockerKey, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: nextLocation
          }), navigate(to, opts);
        },
        reset() {
          let blockers = new Map(state.blockers);
          blockers.set(blockerKey, IDLE_BLOCKER), updateState({
            blockers
          });
        }
      });
      return;
    }
    return await startNavigation(historyAction, nextLocation, {
      submission,
      // Send through the formData serialization error if we have one so we can
      // render at the right error boundary after we match routes
      pendingError: error,
      preventScrollReset,
      replace: opts && opts.replace,
      enableViewTransition: opts && opts.unstable_viewTransition,
      flushSync: flushSync2
    });
  }
  function revalidate() {
    if (interruptActiveLoads(), updateState({
      revalidation: "loading"
    }), state.navigation.state !== "submitting") {
      if (state.navigation.state === "idle") {
        startNavigation(state.historyAction, state.location, {
          startUninterruptedRevalidation: !0
        });
        return;
      }
      startNavigation(pendingAction || state.historyAction, state.navigation.location, {
        overrideNavigation: state.navigation
      });
    }
  }
  async function startNavigation(historyAction, location, opts) {
    pendingNavigationController && pendingNavigationController.abort(), pendingNavigationController = null, pendingAction = historyAction, isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === !0, saveScrollPosition(state.location, state.matches), pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === !0;
    let routesToUse = inFlightDataRoutes || dataRoutes, loadingNavigation = opts && opts.overrideNavigation, matches = matchRoutes2(routesToUse, location, basename), flushSync2 = (opts && opts.flushSync) === !0;
    if (!matches) {
      let error = getInternalRouterError2(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches2(routesToUse);
      cancelActiveDeferreds(), completeNavigation(location, {
        matches: notFoundMatches,
        loaderData: {},
        errors: {
          [route.id]: error
        }
      }, {
        flushSync: flushSync2
      });
      return;
    }
    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod2(opts.submission.formMethod))) {
      completeNavigation(location, {
        matches
      }, {
        flushSync: flushSync2
      });
      return;
    }
    pendingNavigationController = new AbortController();
    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission), pendingActionData, pendingError;
    if (opts && opts.pendingError)
      pendingError = {
        [findNearestBoundary2(matches).route.id]: opts.pendingError
      };
    else if (opts && opts.submission && isMutationMethod2(opts.submission.formMethod)) {
      let actionOutput = await handleAction(request, location, opts.submission, matches, {
        replace: opts.replace,
        flushSync: flushSync2
      });
      if (actionOutput.shortCircuited)
        return;
      pendingActionData = actionOutput.pendingActionData, pendingError = actionOutput.pendingActionError, loadingNavigation = getLoadingNavigation(location, opts.submission), flushSync2 = !1, request = new Request(request.url, {
        signal: request.signal
      });
    }
    let {
      shortCircuited,
      loaderData,
      errors
    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, opts && opts.initialHydration === !0, flushSync2, pendingActionData, pendingError);
    shortCircuited || (pendingNavigationController = null, completeNavigation(location, _extends2({
      matches
    }, pendingActionData ? {
      actionData: pendingActionData
    } : {}, {
      loaderData,
      errors
    })));
  }
  async function handleAction(request, location, submission, matches, opts) {
    opts === void 0 && (opts = {}), interruptActiveLoads();
    let navigation = getSubmittingNavigation(location, submission);
    updateState({
      navigation
    }, {
      flushSync: opts.flushSync === !0
    });
    let result, actionMatch = getTargetMatch2(matches, location);
    if (!actionMatch.route.action && !actionMatch.route.lazy)
      result = {
        type: ResultType2.error,
        error: getInternalRouterError2(405, {
          method: request.method,
          pathname: location.pathname,
          routeId: actionMatch.route.id
        })
      };
    else if (result = await callLoaderOrAction2("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath), request.signal.aborted)
      return {
        shortCircuited: !0
      };
    if (isRedirectResult2(result)) {
      let replace;
      return opts && opts.replace != null ? replace = opts.replace : replace = result.location === state.location.pathname + state.location.search, await startRedirectNavigation(state, result, {
        submission,
        replace
      }), {
        shortCircuited: !0
      };
    }
    if (isErrorResult2(result)) {
      let boundaryMatch = findNearestBoundary2(matches, actionMatch.route.id);
      return (opts && opts.replace) !== !0 && (pendingAction = Action2.Push), {
        // Send back an empty object we can use to clear out any prior actionData
        pendingActionData: {},
        pendingActionError: {
          [boundaryMatch.route.id]: result.error
        }
      };
    }
    if (isDeferredResult2(result))
      throw getInternalRouterError2(400, {
        type: "defer-action"
      });
    return {
      pendingActionData: {
        [actionMatch.route.id]: result.data
      }
    };
  }
  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, initialHydration, flushSync2, pendingActionData, pendingError) {
    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission), activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation), routesToUse = inFlightDataRoutes || dataRoutes, [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, future2.v7_partialHydration && initialHydration === !0, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);
    if (cancelActiveDeferreds((routeId) => !(matches && matches.some((m4) => m4.route.id === routeId)) || matchesToLoad && matchesToLoad.some((m4) => m4.route.id === routeId)), pendingNavigationLoadId = ++incrementingLoadId, matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {
      let updatedFetchers2 = markFetchRedirectsDone();
      return completeNavigation(location, _extends2({
        matches,
        loaderData: {},
        // Commit pending error if we're short circuiting
        errors: pendingError || null
      }, pendingActionData ? {
        actionData: pendingActionData
      } : {}, updatedFetchers2 ? {
        fetchers: new Map(state.fetchers)
      } : {}), {
        flushSync: flushSync2
      }), {
        shortCircuited: !0
      };
    }
    if (!isUninterruptedRevalidation && (!future2.v7_partialHydration || !initialHydration)) {
      revalidatingFetchers.forEach((rf) => {
        let fetcher = state.fetchers.get(rf.key), revalidatingFetcher = getLoadingFetcher(void 0, fetcher ? fetcher.data : void 0);
        state.fetchers.set(rf.key, revalidatingFetcher);
      });
      let actionData = pendingActionData || state.actionData;
      updateState(_extends2({
        navigation: loadingNavigation
      }, actionData ? Object.keys(actionData).length === 0 ? {
        actionData: null
      } : {
        actionData
      } : {}, revalidatingFetchers.length > 0 ? {
        fetchers: new Map(state.fetchers)
      } : {}), {
        flushSync: flushSync2
      });
    }
    revalidatingFetchers.forEach((rf) => {
      fetchControllers.has(rf.key) && abortFetcher(rf.key), rf.controller && fetchControllers.set(rf.key, rf.controller);
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f2) => abortFetcher(f2.key));
    pendingNavigationController && pendingNavigationController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);
    if (request.signal.aborted)
      return {
        shortCircuited: !0
      };
    pendingNavigationController && pendingNavigationController.signal.removeEventListener("abort", abortPendingFetchRevalidations), revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));
    let redirect8 = findRedirect(results);
    if (redirect8) {
      if (redirect8.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect8.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      return await startRedirectNavigation(state, redirect8.result, {
        replace
      }), {
        shortCircuited: !0
      };
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);
    activeDeferreds.forEach((deferredData, routeId) => {
      deferredData.subscribe((aborted) => {
        (aborted || deferredData.done) && activeDeferreds.delete(routeId);
      });
    });
    let updatedFetchers = markFetchRedirectsDone(), didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId), shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;
    return _extends2({
      loaderData,
      errors
    }, shouldUpdateFetchers ? {
      fetchers: new Map(state.fetchers)
    } : {});
  }
  function fetch2(key, routeId, href, opts) {
    if (isServer2)
      throw new Error("router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.");
    fetchControllers.has(key) && abortFetcher(key);
    let flushSync2 = (opts && opts.unstable_flushSync) === !0, routesToUse = inFlightDataRoutes || dataRoutes, normalizedPath = normalizeTo2(state.location, state.matches, basename, future2.v7_prependBasename, href, future2.v7_relativeSplatPath, routeId, opts?.relative), matches = matchRoutes2(routesToUse, normalizedPath, basename);
    if (!matches) {
      setFetcherError(key, routeId, getInternalRouterError2(404, {
        pathname: normalizedPath
      }), {
        flushSync: flushSync2
      });
      return;
    }
    let {
      path,
      submission,
      error
    } = normalizeNavigateOptions(future2.v7_normalizeFormMethod, !0, normalizedPath, opts);
    if (error) {
      setFetcherError(key, routeId, error, {
        flushSync: flushSync2
      });
      return;
    }
    let match2 = getTargetMatch2(matches, path);
    if (pendingPreventScrollReset = (opts && opts.preventScrollReset) === !0, submission && isMutationMethod2(submission.formMethod)) {
      handleFetcherAction(key, routeId, path, match2, matches, flushSync2, submission);
      return;
    }
    fetchLoadMatches.set(key, {
      routeId,
      path
    }), handleFetcherLoader(key, routeId, path, match2, matches, flushSync2, submission);
  }
  async function handleFetcherAction(key, routeId, path, match2, requestMatches, flushSync2, submission) {
    if (interruptActiveLoads(), fetchLoadMatches.delete(key), !match2.route.action && !match2.route.lazy) {
      let error = getInternalRouterError2(405, {
        method: submission.formMethod,
        pathname: path,
        routeId
      });
      setFetcherError(key, routeId, error, {
        flushSync: flushSync2
      });
      return;
    }
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {
      flushSync: flushSync2
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId, actionResult = await callLoaderOrAction2("action", fetchRequest, match2, requestMatches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath);
    if (fetchRequest.signal.aborted) {
      fetchControllers.get(key) === abortController && fetchControllers.delete(key);
      return;
    }
    if (deletedFetchers.has(key)) {
      updateFetcherState(key, getDoneFetcher(void 0));
      return;
    }
    if (isRedirectResult2(actionResult))
      if (fetchControllers.delete(key), pendingNavigationLoadId > originatingLoadId) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      } else
        return fetchRedirectIds.add(key), updateFetcherState(key, getLoadingFetcher(submission)), startRedirectNavigation(state, actionResult, {
          fetcherSubmission: submission
        });
    if (isErrorResult2(actionResult)) {
      setFetcherError(key, routeId, actionResult.error);
      return;
    }
    if (isDeferredResult2(actionResult))
      throw getInternalRouterError2(400, {
        type: "defer-action"
      });
    let nextLocation = state.navigation.location || state.location, revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal), routesToUse = inFlightDataRoutes || dataRoutes, matches = state.navigation.state !== "idle" ? matchRoutes2(routesToUse, state.navigation.location, basename) : state.matches;
    invariant3(matches, "Didn't find any matches after fetcher action");
    let loadId = ++incrementingLoadId;
    fetchReloadIds.set(key, loadId);
    let loadFetcher = getLoadingFetcher(submission, actionResult.data);
    state.fetchers.set(key, loadFetcher);
    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(
      init.history,
      state,
      matches,
      submission,
      nextLocation,
      !1,
      isRevalidationRequired,
      cancelledDeferredRoutes,
      cancelledFetcherLoads,
      deletedFetchers,
      fetchLoadMatches,
      fetchRedirectIds,
      routesToUse,
      basename,
      {
        [match2.route.id]: actionResult.data
      },
      void 0
      // No need to send through errors since we short circuit above
    );
    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {
      let staleKey = rf.key, existingFetcher2 = state.fetchers.get(staleKey), revalidatingFetcher = getLoadingFetcher(void 0, existingFetcher2 ? existingFetcher2.data : void 0);
      state.fetchers.set(staleKey, revalidatingFetcher), fetchControllers.has(staleKey) && abortFetcher(staleKey), rf.controller && fetchControllers.set(staleKey, rf.controller);
    }), updateState({
      fetchers: new Map(state.fetchers)
    });
    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));
    abortController.signal.addEventListener("abort", abortPendingFetchRevalidations);
    let {
      results,
      loaderResults,
      fetcherResults
    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);
    if (abortController.signal.aborted)
      return;
    abortController.signal.removeEventListener("abort", abortPendingFetchRevalidations), fetchReloadIds.delete(key), fetchControllers.delete(key), revalidatingFetchers.forEach((r3) => fetchControllers.delete(r3.key));
    let redirect8 = findRedirect(results);
    if (redirect8) {
      if (redirect8.idx >= matchesToLoad.length) {
        let fetcherKey = revalidatingFetchers[redirect8.idx - matchesToLoad.length].key;
        fetchRedirectIds.add(fetcherKey);
      }
      return startRedirectNavigation(state, redirect8.result);
    }
    let {
      loaderData,
      errors
    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, void 0, revalidatingFetchers, fetcherResults, activeDeferreds);
    if (state.fetchers.has(key)) {
      let doneFetcher = getDoneFetcher(actionResult.data);
      state.fetchers.set(key, doneFetcher);
    }
    abortStaleFetchLoads(loadId), state.navigation.state === "loading" && loadId > pendingNavigationLoadId ? (invariant3(pendingAction, "Expected pending action"), pendingNavigationController && pendingNavigationController.abort(), completeNavigation(state.navigation.location, {
      matches,
      loaderData,
      errors,
      fetchers: new Map(state.fetchers)
    })) : (updateState({
      errors,
      loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors),
      fetchers: new Map(state.fetchers)
    }), isRevalidationRequired = !1);
  }
  async function handleFetcherLoader(key, routeId, path, match2, matches, flushSync2, submission) {
    let existingFetcher = state.fetchers.get(key);
    updateFetcherState(key, getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : void 0), {
      flushSync: flushSync2
    });
    let abortController = new AbortController(), fetchRequest = createClientSideRequest(init.history, path, abortController.signal);
    fetchControllers.set(key, abortController);
    let originatingLoadId = incrementingLoadId, result = await callLoaderOrAction2("loader", fetchRequest, match2, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath);
    if (isDeferredResult2(result) && (result = await resolveDeferredData(result, fetchRequest.signal, !0) || result), fetchControllers.get(key) === abortController && fetchControllers.delete(key), !fetchRequest.signal.aborted) {
      if (deletedFetchers.has(key)) {
        updateFetcherState(key, getDoneFetcher(void 0));
        return;
      }
      if (isRedirectResult2(result))
        if (pendingNavigationLoadId > originatingLoadId) {
          updateFetcherState(key, getDoneFetcher(void 0));
          return;
        } else {
          fetchRedirectIds.add(key), await startRedirectNavigation(state, result);
          return;
        }
      if (isErrorResult2(result)) {
        setFetcherError(key, routeId, result.error);
        return;
      }
      invariant3(!isDeferredResult2(result), "Unhandled fetcher deferred data"), updateFetcherState(key, getDoneFetcher(result.data));
    }
  }
  async function startRedirectNavigation(state2, redirect8, _temp2) {
    let {
      submission,
      fetcherSubmission,
      replace
    } = _temp2 === void 0 ? {} : _temp2;
    redirect8.revalidate && (isRevalidationRequired = !0);
    let redirectLocation = createLocation2(state2.location, redirect8.location, {
      _isRedirect: !0
    });
    if (invariant3(redirectLocation, "Expected a location on the redirect navigation"), isBrowser3) {
      let isDocumentReload = !1;
      if (redirect8.reloadDocument)
        isDocumentReload = !0;
      else if (ABSOLUTE_URL_REGEX2.test(redirect8.location)) {
        let url2 = init.history.createURL(redirect8.location);
        isDocumentReload = // Hard reload if it's an absolute URL to a new origin
        url2.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename
        stripBasename2(url2.pathname, basename) == null;
      }
      if (isDocumentReload) {
        replace ? routerWindow.location.replace(redirect8.location) : routerWindow.location.assign(redirect8.location);
        return;
      }
    }
    pendingNavigationController = null;
    let redirectHistoryAction = replace === !0 ? Action2.Replace : Action2.Push, {
      formMethod,
      formAction,
      formEncType
    } = state2.navigation;
    !submission && !fetcherSubmission && formMethod && formAction && formEncType && (submission = getSubmissionFromNavigation(state2.navigation));
    let activeSubmission = submission || fetcherSubmission;
    if (redirectPreserveMethodStatusCodes.has(redirect8.status) && activeSubmission && isMutationMethod2(activeSubmission.formMethod))
      await startNavigation(redirectHistoryAction, redirectLocation, {
        submission: _extends2({}, activeSubmission, {
          formAction: redirect8.location
        }),
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    else {
      let overrideNavigation = getLoadingNavigation(redirectLocation, submission);
      await startNavigation(redirectHistoryAction, redirectLocation, {
        overrideNavigation,
        // Send fetcher submissions through for shouldRevalidate
        fetcherSubmission,
        // Preserve this flag across redirects
        preventScrollReset: pendingPreventScrollReset
      });
    }
  }
  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {
    let results = await Promise.all([...matchesToLoad.map((match2) => callLoaderOrAction2("loader", request, match2, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath)), ...fetchersToLoad.map((f2) => f2.matches && f2.match && f2.controller ? callLoaderOrAction2("loader", createClientSideRequest(init.history, f2.path, f2.controller.signal), f2.match, f2.matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath) : {
      type: ResultType2.error,
      error: getInternalRouterError2(404, {
        pathname: f2.path
      })
    })]), loaderResults = results.slice(0, matchesToLoad.length), fetcherResults = results.slice(matchesToLoad.length);
    return await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), !1, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map((f2) => f2.match), fetcherResults, fetchersToLoad.map((f2) => f2.controller ? f2.controller.signal : null), !0)]), {
      results,
      loaderResults,
      fetcherResults
    };
  }
  function interruptActiveLoads() {
    isRevalidationRequired = !0, cancelledDeferredRoutes.push(...cancelActiveDeferreds()), fetchLoadMatches.forEach((_, key) => {
      fetchControllers.has(key) && (cancelledFetcherLoads.push(key), abortFetcher(key));
    });
  }
  function updateFetcherState(key, fetcher, opts) {
    opts === void 0 && (opts = {}), state.fetchers.set(key, fetcher), updateState({
      fetchers: new Map(state.fetchers)
    }, {
      flushSync: (opts && opts.flushSync) === !0
    });
  }
  function setFetcherError(key, routeId, error, opts) {
    opts === void 0 && (opts = {});
    let boundaryMatch = findNearestBoundary2(state.matches, routeId);
    deleteFetcher(key), updateState({
      errors: {
        [boundaryMatch.route.id]: error
      },
      fetchers: new Map(state.fetchers)
    }, {
      flushSync: (opts && opts.flushSync) === !0
    });
  }
  function getFetcher(key) {
    return future2.v7_fetcherPersist && (activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1), deletedFetchers.has(key) && deletedFetchers.delete(key)), state.fetchers.get(key) || IDLE_FETCHER;
  }
  function deleteFetcher(key) {
    let fetcher = state.fetchers.get(key);
    fetchControllers.has(key) && !(fetcher && fetcher.state === "loading" && fetchReloadIds.has(key)) && abortFetcher(key), fetchLoadMatches.delete(key), fetchReloadIds.delete(key), fetchRedirectIds.delete(key), deletedFetchers.delete(key), state.fetchers.delete(key);
  }
  function deleteFetcherAndUpdateState(key) {
    if (future2.v7_fetcherPersist) {
      let count2 = (activeFetchers.get(key) || 0) - 1;
      count2 <= 0 ? (activeFetchers.delete(key), deletedFetchers.add(key)) : activeFetchers.set(key, count2);
    } else
      deleteFetcher(key);
    updateState({
      fetchers: new Map(state.fetchers)
    });
  }
  function abortFetcher(key) {
    let controller = fetchControllers.get(key);
    invariant3(controller, "Expected fetch controller: " + key), controller.abort(), fetchControllers.delete(key);
  }
  function markFetchersDone(keys) {
    for (let key of keys) {
      let fetcher = getFetcher(key), doneFetcher = getDoneFetcher(fetcher.data);
      state.fetchers.set(key, doneFetcher);
    }
  }
  function markFetchRedirectsDone() {
    let doneKeys = [], updatedFetchers = !1;
    for (let key of fetchRedirectIds) {
      let fetcher = state.fetchers.get(key);
      invariant3(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (fetchRedirectIds.delete(key), doneKeys.push(key), updatedFetchers = !0);
    }
    return markFetchersDone(doneKeys), updatedFetchers;
  }
  function abortStaleFetchLoads(landedId) {
    let yeetedKeys = [];
    for (let [key, id3] of fetchReloadIds)
      if (id3 < landedId) {
        let fetcher = state.fetchers.get(key);
        invariant3(fetcher, "Expected fetcher: " + key), fetcher.state === "loading" && (abortFetcher(key), fetchReloadIds.delete(key), yeetedKeys.push(key));
      }
    return markFetchersDone(yeetedKeys), yeetedKeys.length > 0;
  }
  function getBlocker(key, fn) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    return blockerFunctions.get(key) !== fn && blockerFunctions.set(key, fn), blocker;
  }
  function deleteBlocker(key) {
    state.blockers.delete(key), blockerFunctions.delete(key);
  }
  function updateBlocker(key, newBlocker) {
    let blocker = state.blockers.get(key) || IDLE_BLOCKER;
    invariant3(blocker.state === "unblocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "blocked" || blocker.state === "blocked" && newBlocker.state === "proceeding" || blocker.state === "blocked" && newBlocker.state === "unblocked" || blocker.state === "proceeding" && newBlocker.state === "unblocked", "Invalid blocker state transition: " + blocker.state + " -> " + newBlocker.state);
    let blockers = new Map(state.blockers);
    blockers.set(key, newBlocker), updateState({
      blockers
    });
  }
  function shouldBlockNavigation(_ref2) {
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = _ref2;
    if (blockerFunctions.size === 0)
      return;
    blockerFunctions.size > 1 && warning2(!1, "A router only supports one blocker at a time");
    let entries = Array.from(blockerFunctions.entries()), [blockerKey, blockerFunction] = entries[entries.length - 1], blocker = state.blockers.get(blockerKey);
    if (!(blocker && blocker.state === "proceeding") && blockerFunction({
      currentLocation,
      nextLocation,
      historyAction
    }))
      return blockerKey;
  }
  function cancelActiveDeferreds(predicate) {
    let cancelledRouteIds = [];
    return activeDeferreds.forEach((dfd, routeId) => {
      (!predicate || predicate(routeId)) && (dfd.cancel(), cancelledRouteIds.push(routeId), activeDeferreds.delete(routeId));
    }), cancelledRouteIds;
  }
  function enableScrollRestoration(positions, getPosition, getKey) {
    if (savedScrollPositions2 = positions, getScrollPosition = getPosition, getScrollRestorationKey = getKey || null, !initialScrollRestored && state.navigation === IDLE_NAVIGATION) {
      initialScrollRestored = !0;
      let y4 = getSavedScrollPosition(state.location, state.matches);
      y4 != null && updateState({
        restoreScrollPosition: y4
      });
    }
    return () => {
      savedScrollPositions2 = null, getScrollPosition = null, getScrollRestorationKey = null;
    };
  }
  function getScrollKey(location, matches) {
    return getScrollRestorationKey && getScrollRestorationKey(location, matches.map((m4) => convertRouteMatchToUiMatch(m4, state.loaderData))) || location.key;
  }
  function saveScrollPosition(location, matches) {
    if (savedScrollPositions2 && getScrollPosition) {
      let key = getScrollKey(location, matches);
      savedScrollPositions2[key] = getScrollPosition();
    }
  }
  function getSavedScrollPosition(location, matches) {
    if (savedScrollPositions2) {
      let key = getScrollKey(location, matches), y4 = savedScrollPositions2[key];
      if (typeof y4 == "number")
        return y4;
    }
    return null;
  }
  function _internalSetRoutes(newRoutes) {
    manifest = {}, inFlightDataRoutes = convertRoutesToDataRoutes2(newRoutes, mapRouteProperties2, void 0, manifest);
  }
  return router = {
    get basename() {
      return basename;
    },
    get future() {
      return future2;
    },
    get state() {
      return state;
    },
    get routes() {
      return dataRoutes;
    },
    get window() {
      return routerWindow;
    },
    initialize,
    subscribe,
    enableScrollRestoration,
    navigate,
    fetch: fetch2,
    revalidate,
    // Passthrough to history-aware createHref used by useHref so we get proper
    // hash-aware URLs in DOM paths
    createHref: (to) => init.history.createHref(to),
    encodeLocation: (to) => init.history.encodeLocation(to),
    getFetcher,
    deleteFetcher: deleteFetcherAndUpdateState,
    dispose,
    getBlocker,
    deleteBlocker,
    _internalFetchControllers: fetchControllers,
    _internalActiveDeferreds: activeDeferreds,
    // TODO: Remove setRoutes, it's temporary to avoid dealing with
    // updating the tree while validating the update algorithm.
    _internalSetRoutes
  }, router;
}
function createStaticHandler2(routes2, opts) {
  invariant3(routes2.length > 0, "You must provide a non-empty routes array to createStaticHandler");
  let manifest = {}, basename = (opts ? opts.basename : null) || "/", mapRouteProperties2;
  if (opts != null && opts.mapRouteProperties)
    mapRouteProperties2 = opts.mapRouteProperties;
  else if (opts != null && opts.detectErrorBoundary) {
    let detectErrorBoundary = opts.detectErrorBoundary;
    mapRouteProperties2 = (route) => ({
      hasErrorBoundary: detectErrorBoundary(route)
    });
  } else
    mapRouteProperties2 = defaultMapRouteProperties2;
  let future2 = _extends2({
    v7_relativeSplatPath: !1
  }, opts ? opts.future : null), dataRoutes = convertRoutesToDataRoutes2(routes2, mapRouteProperties2, void 0, manifest);
  async function query(request, _temp3) {
    let {
      requestContext
    } = _temp3 === void 0 ? {} : _temp3, url2 = new URL(request.url), method = request.method, location = createLocation2("", createPath2(url2), null, "default"), matches = matchRoutes2(dataRoutes, location, basename);
    if (!isValidMethod2(method) && method !== "HEAD") {
      let error = getInternalRouterError2(405, {
        method
      }), {
        matches: methodNotAllowedMatches,
        route
      } = getShortCircuitMatches2(dataRoutes);
      return {
        basename,
        location,
        matches: methodNotAllowedMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    } else if (!matches) {
      let error = getInternalRouterError2(404, {
        pathname: location.pathname
      }), {
        matches: notFoundMatches,
        route
      } = getShortCircuitMatches2(dataRoutes);
      return {
        basename,
        location,
        matches: notFoundMatches,
        loaderData: {},
        actionData: null,
        errors: {
          [route.id]: error
        },
        statusCode: error.status,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    let result = await queryImpl(request, location, matches, requestContext);
    return isResponse3(result) ? result : _extends2({
      location,
      basename
    }, result);
  }
  async function queryRoute(request, _temp4) {
    let {
      routeId,
      requestContext
    } = _temp4 === void 0 ? {} : _temp4, url2 = new URL(request.url), method = request.method, location = createLocation2("", createPath2(url2), null, "default"), matches = matchRoutes2(dataRoutes, location, basename);
    if (!isValidMethod2(method) && method !== "HEAD" && method !== "OPTIONS")
      throw getInternalRouterError2(405, {
        method
      });
    if (!matches)
      throw getInternalRouterError2(404, {
        pathname: location.pathname
      });
    let match2 = routeId ? matches.find((m4) => m4.route.id === routeId) : getTargetMatch2(matches, location);
    if (routeId && !match2)
      throw getInternalRouterError2(403, {
        pathname: location.pathname,
        routeId
      });
    if (!match2)
      throw getInternalRouterError2(404, {
        pathname: location.pathname
      });
    let result = await queryImpl(request, location, matches, requestContext, match2);
    if (isResponse3(result))
      return result;
    let error = result.errors ? Object.values(result.errors)[0] : void 0;
    if (error !== void 0)
      throw error;
    if (result.actionData)
      return Object.values(result.actionData)[0];
    if (result.loaderData) {
      var _result$activeDeferre;
      let data = Object.values(result.loaderData)[0];
      return (_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match2.route.id] && (data[UNSAFE_DEFERRED_SYMBOL2] = result.activeDeferreds[match2.route.id]), data;
    }
  }
  async function queryImpl(request, location, matches, requestContext, routeMatch) {
    invariant3(request.signal, "query()/queryRoute() requests must contain an AbortController signal");
    try {
      if (isMutationMethod2(request.method.toLowerCase()))
        return await submit(request, matches, routeMatch || getTargetMatch2(matches, location), requestContext, routeMatch != null);
      let result = await loadRouteData(request, matches, requestContext, routeMatch);
      return isResponse3(result) ? result : _extends2({}, result, {
        actionData: null,
        actionHeaders: {}
      });
    } catch (e3) {
      if (isQueryRouteResponse2(e3)) {
        if (e3.type === ResultType2.error)
          throw e3.response;
        return e3.response;
      }
      if (isRedirectResponse3(e3))
        return e3;
      throw e3;
    }
  }
  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {
    let result;
    if (!actionMatch.route.action && !actionMatch.route.lazy) {
      let error = getInternalRouterError2(405, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: actionMatch.route.id
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType2.error,
        error
      };
    } else if (result = await callLoaderOrAction2("action", request, actionMatch, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }), request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted: " + request.method + " " + request.url);
    }
    if (isRedirectResult2(result))
      throw new Response(null, {
        status: result.status,
        headers: {
          Location: result.location
        }
      });
    if (isDeferredResult2(result)) {
      let error = getInternalRouterError2(400, {
        type: "defer-action"
      });
      if (isRouteRequest)
        throw error;
      result = {
        type: ResultType2.error,
        error
      };
    }
    if (isRouteRequest) {
      if (isErrorResult2(result))
        throw result.error;
      return {
        matches: [actionMatch],
        loaderData: {},
        actionData: {
          [actionMatch.route.id]: result.data
        },
        errors: null,
        // Note: statusCode + headers are unused here since queryRoute will
        // return the raw Response or value
        statusCode: 200,
        loaderHeaders: {},
        actionHeaders: {},
        activeDeferreds: null
      };
    }
    if (isErrorResult2(result)) {
      let boundaryMatch = findNearestBoundary2(matches, actionMatch.route.id), context2 = await loadRouteData(request, matches, requestContext, void 0, {
        [boundaryMatch.route.id]: result.error
      });
      return _extends2({}, context2, {
        statusCode: isRouteErrorResponse2(result.error) ? result.error.status : 500,
        actionData: null,
        actionHeaders: _extends2({}, result.headers ? {
          [actionMatch.route.id]: result.headers
        } : {})
      });
    }
    let loaderRequest = new Request(request.url, {
      headers: request.headers,
      redirect: request.redirect,
      signal: request.signal
    }), context = await loadRouteData(loaderRequest, matches, requestContext);
    return _extends2({}, context, result.statusCode ? {
      statusCode: result.statusCode
    } : {}, {
      actionData: {
        [actionMatch.route.id]: result.data
      },
      actionHeaders: _extends2({}, result.headers ? {
        [actionMatch.route.id]: result.headers
      } : {})
    });
  }
  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {
    let isRouteRequest = routeMatch != null;
    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy))
      throw getInternalRouterError2(400, {
        method: request.method,
        pathname: new URL(request.url).pathname,
        routeId: routeMatch?.route.id
      });
    let matchesToLoad = (routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary2(matches, Object.keys(pendingActionError || {})[0])).filter((m4) => m4.route.loader || m4.route.lazy);
    if (matchesToLoad.length === 0)
      return {
        matches,
        // Add a null for all matched routes for proper revalidation on the client
        loaderData: matches.reduce((acc, m4) => Object.assign(acc, {
          [m4.route.id]: null
        }), {}),
        errors: pendingActionError || null,
        statusCode: 200,
        loaderHeaders: {},
        activeDeferreds: null
      };
    let results = await Promise.all([...matchesToLoad.map((match2) => callLoaderOrAction2("loader", request, match2, matches, manifest, mapRouteProperties2, basename, future2.v7_relativeSplatPath, {
      isStaticRequest: !0,
      isRouteRequest,
      requestContext
    }))]);
    if (request.signal.aborted) {
      let method = isRouteRequest ? "queryRoute" : "query";
      throw new Error(method + "() call aborted: " + request.method + " " + request.url);
    }
    let activeDeferreds = /* @__PURE__ */ new Map(), context = processRouteLoaderData2(matches, matchesToLoad, results, pendingActionError, activeDeferreds), executedLoaders = new Set(matchesToLoad.map((match2) => match2.route.id));
    return matches.forEach((match2) => {
      executedLoaders.has(match2.route.id) || (context.loaderData[match2.route.id] = null);
    }), _extends2({}, context, {
      matches,
      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null
    });
  }
  return {
    dataRoutes,
    query,
    queryRoute
  };
}
function getStaticContextFromError2(routes2, context, error) {
  return _extends2({}, context, {
    statusCode: 500,
    errors: {
      [context._deepestRenderedBoundaryId || routes2[0].id]: error
    }
  });
}
function isSubmissionNavigation(opts) {
  return opts != null && ("formData" in opts && opts.formData != null || "body" in opts && opts.body !== void 0);
}
function normalizeTo2(location, matches, basename, prependBasename, to, v7_relativeSplatPath, fromRouteId, relative) {
  let contextualMatches, activeRouteMatch;
  if (fromRouteId) {
    contextualMatches = [];
    for (let match2 of matches)
      if (contextualMatches.push(match2), match2.route.id === fromRouteId) {
        activeRouteMatch = match2;
        break;
      }
  } else
    contextualMatches = matches, activeRouteMatch = matches[matches.length - 1];
  let path = resolveTo2(to || ".", getResolveToMatches2(contextualMatches, v7_relativeSplatPath), stripBasename2(location.pathname, basename) || location.pathname, relative === "path");
  return to == null && (path.search = location.search, path.hash = location.hash), (to == null || to === "" || to === ".") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery2(path.search) && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), prependBasename && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths2([basename, path.pathname])), createPath2(path);
}
function normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {
  if (!opts || !isSubmissionNavigation(opts))
    return {
      path
    };
  if (opts.formMethod && !isValidMethod2(opts.formMethod))
    return {
      path,
      error: getInternalRouterError2(405, {
        method: opts.formMethod
      })
    };
  let getInvalidBodyError = () => ({
    path,
    error: getInternalRouterError2(400, {
      type: "invalid-body"
    })
  }), rawFormMethod = opts.formMethod || "get", formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase(), formAction = stripHashFromPath(path);
  if (opts.body !== void 0) {
    if (opts.formEncType === "text/plain") {
      if (!isMutationMethod2(formMethod))
        return getInvalidBodyError();
      let text = typeof opts.body == "string" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (
        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data
        Array.from(opts.body.entries()).reduce((acc, _ref3) => {
          let [name, value] = _ref3;
          return "" + acc + name + "=" + value + `
`;
        }, "")
      ) : String(opts.body);
      return {
        path,
        submission: {
          formMethod,
          formAction,
          formEncType: opts.formEncType,
          formData: void 0,
          json: void 0,
          text
        }
      };
    } else if (opts.formEncType === "application/json") {
      if (!isMutationMethod2(formMethod))
        return getInvalidBodyError();
      try {
        let json8 = typeof opts.body == "string" ? JSON.parse(opts.body) : opts.body;
        return {
          path,
          submission: {
            formMethod,
            formAction,
            formEncType: opts.formEncType,
            formData: void 0,
            json: json8,
            text: void 0
          }
        };
      } catch {
        return getInvalidBodyError();
      }
    }
  }
  invariant3(typeof FormData == "function", "FormData is not available in this environment");
  let searchParams, formData;
  if (opts.formData)
    searchParams = convertFormDataToSearchParams(opts.formData), formData = opts.formData;
  else if (opts.body instanceof FormData)
    searchParams = convertFormDataToSearchParams(opts.body), formData = opts.body;
  else if (opts.body instanceof URLSearchParams)
    searchParams = opts.body, formData = convertSearchParamsToFormData(searchParams);
  else if (opts.body == null)
    searchParams = new URLSearchParams(), formData = new FormData();
  else
    try {
      searchParams = new URLSearchParams(opts.body), formData = convertSearchParamsToFormData(searchParams);
    } catch {
      return getInvalidBodyError();
    }
  let submission = {
    formMethod,
    formAction,
    formEncType: opts && opts.formEncType || "application/x-www-form-urlencoded",
    formData,
    json: void 0,
    text: void 0
  };
  if (isMutationMethod2(submission.formMethod))
    return {
      path,
      submission
    };
  let parsedPath = parsePath2(path);
  return isFetcher && parsedPath.search && hasNakedIndexQuery2(parsedPath.search) && searchParams.append("index", ""), parsedPath.search = "?" + searchParams, {
    path: createPath2(parsedPath),
    submission
  };
}
function getLoaderMatchesUntilBoundary2(matches, boundaryId) {
  let boundaryMatches = matches;
  if (boundaryId) {
    let index3 = matches.findIndex((m4) => m4.route.id === boundaryId);
    index3 >= 0 && (boundaryMatches = matches.slice(0, index3));
  }
  return boundaryMatches;
}
function getMatchesToLoad(history, state, matches, submission, location, isInitialLoad, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, deletedFetchers, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {
  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : void 0, currentUrl = history.createURL(state.location), nextUrl = history.createURL(location), boundaryId = pendingError ? Object.keys(pendingError)[0] : void 0, navigationMatches = getLoaderMatchesUntilBoundary2(matches, boundaryId).filter((match2, index3) => {
    if (isInitialLoad)
      return isUnhydratedRoute(state, match2.route);
    if (match2.route.lazy)
      return !0;
    if (match2.route.loader == null)
      return !1;
    if (isNewLoader(state.loaderData, state.matches[index3], match2) || cancelledDeferredRoutes.some((id3) => id3 === match2.route.id))
      return !0;
    let currentRouteMatch = state.matches[index3], nextRouteMatch = match2;
    return shouldRevalidateLoader(match2, _extends2({
      currentUrl,
      currentParams: currentRouteMatch.params,
      nextUrl,
      nextParams: nextRouteMatch.params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: (
        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate
        isRevalidationRequired || // Clicked the same link, resubmitted a GET form
        currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders
        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)
      )
    }));
  }), revalidatingFetchers = [];
  return fetchLoadMatches.forEach((f2, key) => {
    if (isInitialLoad || !matches.some((m4) => m4.route.id === f2.routeId) || deletedFetchers.has(key))
      return;
    let fetcherMatches = matchRoutes2(routesToUse, f2.path, basename);
    if (!fetcherMatches) {
      revalidatingFetchers.push({
        key,
        routeId: f2.routeId,
        path: f2.path,
        matches: null,
        match: null,
        controller: null
      });
      return;
    }
    let fetcher = state.fetchers.get(key), fetcherMatch = getTargetMatch2(fetcherMatches, f2.path), shouldRevalidate = !1;
    fetchRedirectIds.has(key) ? shouldRevalidate = !1 : cancelledFetcherLoads.includes(key) ? shouldRevalidate = !0 : fetcher && fetcher.state !== "idle" && fetcher.data === void 0 ? shouldRevalidate = isRevalidationRequired : shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends2({
      currentUrl,
      currentParams: state.matches[state.matches.length - 1].params,
      nextUrl,
      nextParams: matches[matches.length - 1].params
    }, submission, {
      actionResult,
      defaultShouldRevalidate: isRevalidationRequired
    })), shouldRevalidate && revalidatingFetchers.push({
      key,
      routeId: f2.routeId,
      path: f2.path,
      matches: fetcherMatches,
      match: fetcherMatch,
      controller: new AbortController()
    });
  }), [navigationMatches, revalidatingFetchers];
}
function isUnhydratedRoute(state, route) {
  return route.loader ? route.loader.hydrate ? !0 : state.loaderData[route.id] === void 0 && (!state.errors || // Loader ran but errored - don't re-run
  state.errors[route.id] === void 0) : !1;
}
function isNewLoader(currentLoaderData, currentMatch, match2) {
  let isNew = (
    // [a] -> [a, b]
    !currentMatch || // [a, b] -> [a, c]
    match2.route.id !== currentMatch.route.id
  ), isMissingData = currentLoaderData[match2.route.id] === void 0;
  return isNew || isMissingData;
}
function isNewRouteInstance(currentMatch, match2) {
  let currentPath = currentMatch.route.path;
  return (
    // param change for this match, /users/123 -> /users/456
    currentMatch.pathname !== match2.pathname || // splat param changed, which is not present in match.path
    // e.g. /files/images/avatar.jpg -> files/finances.xls
    currentPath != null && currentPath.endsWith("*") && currentMatch.params["*"] !== match2.params["*"]
  );
}
function shouldRevalidateLoader(loaderMatch, arg) {
  if (loaderMatch.route.shouldRevalidate) {
    let routeChoice = loaderMatch.route.shouldRevalidate(arg);
    if (typeof routeChoice == "boolean")
      return routeChoice;
  }
  return arg.defaultShouldRevalidate;
}
async function loadLazyRouteModule2(route, mapRouteProperties2, manifest) {
  if (!route.lazy)
    return;
  let lazyRoute = await route.lazy();
  if (!route.lazy)
    return;
  let routeToUpdate = manifest[route.id];
  invariant3(routeToUpdate, "No route found in manifest");
  let routeUpdates = {};
  for (let lazyRouteProperty in lazyRoute) {
    let isPropertyStaticallyDefined = routeToUpdate[lazyRouteProperty] !== void 0 && // This property isn't static since it should always be updated based
    // on the route updates
    lazyRouteProperty !== "hasErrorBoundary";
    warning2(!isPropertyStaticallyDefined, 'Route "' + routeToUpdate.id + '" has a static property "' + lazyRouteProperty + '" defined but its lazy function is also returning a value for this property. ' + ('The lazy route property "' + lazyRouteProperty + '" will be ignored.')), !isPropertyStaticallyDefined && !immutableRouteKeys2.has(lazyRouteProperty) && (routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty]);
  }
  Object.assign(routeToUpdate, routeUpdates), Object.assign(routeToUpdate, _extends2({}, mapRouteProperties2(routeToUpdate), {
    lazy: void 0
  }));
}
async function callLoaderOrAction2(type, request, match2, matches, manifest, mapRouteProperties2, basename, v7_relativeSplatPath, opts) {
  opts === void 0 && (opts = {});
  let resultType, result, onReject, runHandler = (handler) => {
    let reject, abortPromise = new Promise((_, r3) => reject = r3);
    return onReject = () => reject(), request.signal.addEventListener("abort", onReject), Promise.race([handler({
      request,
      params: match2.params,
      context: opts.requestContext
    }), abortPromise]);
  };
  try {
    let handler = match2.route[type];
    if (match2.route.lazy)
      if (handler) {
        let handlerError, values = await Promise.all([
          // If the handler throws, don't let it immediately bubble out,
          // since we need to let the lazy() execution finish so we know if this
          // route has a boundary that can handle the error
          runHandler(handler).catch((e3) => {
            handlerError = e3;
          }),
          loadLazyRouteModule2(match2.route, mapRouteProperties2, manifest)
        ]);
        if (handlerError)
          throw handlerError;
        result = values[0];
      } else if (await loadLazyRouteModule2(match2.route, mapRouteProperties2, manifest), handler = match2.route[type], handler)
        result = await runHandler(handler);
      else if (type === "action") {
        let url2 = new URL(request.url), pathname = url2.pathname + url2.search;
        throw getInternalRouterError2(405, {
          method: request.method,
          pathname,
          routeId: match2.route.id
        });
      } else
        return {
          type: ResultType2.data,
          data: void 0
        };
    else if (handler)
      result = await runHandler(handler);
    else {
      let url2 = new URL(request.url), pathname = url2.pathname + url2.search;
      throw getInternalRouterError2(404, {
        pathname
      });
    }
    invariant3(result !== void 0, "You defined " + (type === "action" ? "an action" : "a loader") + " for route " + ('"' + match2.route.id + "\" but didn't return anything from your `" + type + "` ") + "function. Please return a value or `null`.");
  } catch (e3) {
    resultType = ResultType2.error, result = e3;
  } finally {
    onReject && request.signal.removeEventListener("abort", onReject);
  }
  if (isResponse3(result)) {
    let status = result.status;
    if (redirectStatusCodes3.has(status)) {
      let location = result.headers.get("Location");
      if (invariant3(location, "Redirects returned/thrown from loaders/actions must have a Location header"), !ABSOLUTE_URL_REGEX2.test(location))
        location = normalizeTo2(new URL(request.url), matches.slice(0, matches.indexOf(match2) + 1), basename, !0, location, v7_relativeSplatPath);
      else if (!opts.isStaticRequest) {
        let currentUrl = new URL(request.url), url2 = location.startsWith("//") ? new URL(currentUrl.protocol + location) : new URL(location), isSameBasename = stripBasename2(url2.pathname, basename) != null;
        url2.origin === currentUrl.origin && isSameBasename && (location = url2.pathname + url2.search + url2.hash);
      }
      if (opts.isStaticRequest)
        throw result.headers.set("Location", location), result;
      return {
        type: ResultType2.redirect,
        status,
        location,
        revalidate: result.headers.get("X-Remix-Revalidate") !== null,
        reloadDocument: result.headers.get("X-Remix-Reload-Document") !== null
      };
    }
    if (opts.isRouteRequest)
      throw {
        type: resultType === ResultType2.error ? ResultType2.error : ResultType2.data,
        response: result
      };
    let data;
    try {
      let contentType = result.headers.get("Content-Type");
      contentType && /\bapplication\/json\b/.test(contentType) ? data = await result.json() : data = await result.text();
    } catch (e3) {
      return {
        type: ResultType2.error,
        error: e3
      };
    }
    return resultType === ResultType2.error ? {
      type: resultType,
      error: new ErrorResponseImpl2(status, result.statusText, data),
      headers: result.headers
    } : {
      type: ResultType2.data,
      data,
      statusCode: result.status,
      headers: result.headers
    };
  }
  if (resultType === ResultType2.error)
    return {
      type: resultType,
      error: result
    };
  if (isDeferredData3(result)) {
    var _result$init, _result$init2;
    return {
      type: ResultType2.deferred,
      deferredData: result,
      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,
      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)
    };
  }
  return {
    type: ResultType2.data,
    data: result
  };
}
function createClientSideRequest(history, location, signal, submission) {
  let url2 = history.createURL(stripHashFromPath(location)).toString(), init = {
    signal
  };
  if (submission && isMutationMethod2(submission.formMethod)) {
    let {
      formMethod,
      formEncType
    } = submission;
    init.method = formMethod.toUpperCase(), formEncType === "application/json" ? (init.headers = new Headers({
      "Content-Type": formEncType
    }), init.body = JSON.stringify(submission.json)) : formEncType === "text/plain" ? init.body = submission.text : formEncType === "application/x-www-form-urlencoded" && submission.formData ? init.body = convertFormDataToSearchParams(submission.formData) : init.body = submission.formData;
  }
  return new Request(url2, init);
}
function convertFormDataToSearchParams(formData) {
  let searchParams = new URLSearchParams();
  for (let [key, value] of formData.entries())
    searchParams.append(key, typeof value == "string" ? value : value.name);
  return searchParams;
}
function convertSearchParamsToFormData(searchParams) {
  let formData = new FormData();
  for (let [key, value] of searchParams.entries())
    formData.append(key, value);
  return formData;
}
function processRouteLoaderData2(matches, matchesToLoad, results, pendingError, activeDeferreds) {
  let loaderData = {}, errors = null, statusCode, foundError = !1, loaderHeaders = {};
  return results.forEach((result, index3) => {
    let id3 = matchesToLoad[index3].route.id;
    if (invariant3(!isRedirectResult2(result), "Cannot handle redirect results in processLoaderData"), isErrorResult2(result)) {
      let boundaryMatch = findNearestBoundary2(matches, id3), error = result.error;
      pendingError && (error = Object.values(pendingError)[0], pendingError = void 0), errors = errors || {}, errors[boundaryMatch.route.id] == null && (errors[boundaryMatch.route.id] = error), loaderData[id3] = void 0, foundError || (foundError = !0, statusCode = isRouteErrorResponse2(result.error) ? result.error.status : 500), result.headers && (loaderHeaders[id3] = result.headers);
    } else
      isDeferredResult2(result) ? (activeDeferreds.set(id3, result.deferredData), loaderData[id3] = result.deferredData.data) : loaderData[id3] = result.data, result.statusCode != null && result.statusCode !== 200 && !foundError && (statusCode = result.statusCode), result.headers && (loaderHeaders[id3] = result.headers);
  }), pendingError && (errors = pendingError, loaderData[Object.keys(pendingError)[0]] = void 0), {
    loaderData,
    errors,
    statusCode: statusCode || 200,
    loaderHeaders
  };
}
function processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {
  let {
    loaderData,
    errors
  } = processRouteLoaderData2(matches, matchesToLoad, results, pendingError, activeDeferreds);
  for (let index3 = 0; index3 < revalidatingFetchers.length; index3++) {
    let {
      key,
      match: match2,
      controller
    } = revalidatingFetchers[index3];
    invariant3(fetcherResults !== void 0 && fetcherResults[index3] !== void 0, "Did not find corresponding fetcher result");
    let result = fetcherResults[index3];
    if (!(controller && controller.signal.aborted))
      if (isErrorResult2(result)) {
        let boundaryMatch = findNearestBoundary2(state.matches, match2?.route.id);
        errors && errors[boundaryMatch.route.id] || (errors = _extends2({}, errors, {
          [boundaryMatch.route.id]: result.error
        })), state.fetchers.delete(key);
      } else if (isRedirectResult2(result))
        invariant3(!1, "Unhandled fetcher revalidation redirect");
      else if (isDeferredResult2(result))
        invariant3(!1, "Unhandled fetcher deferred data");
      else {
        let doneFetcher = getDoneFetcher(result.data);
        state.fetchers.set(key, doneFetcher);
      }
  }
  return {
    loaderData,
    errors
  };
}
function mergeLoaderData(loaderData, newLoaderData, matches, errors) {
  let mergedLoaderData = _extends2({}, newLoaderData);
  for (let match2 of matches) {
    let id3 = match2.route.id;
    if (newLoaderData.hasOwnProperty(id3) ? newLoaderData[id3] !== void 0 && (mergedLoaderData[id3] = newLoaderData[id3]) : loaderData[id3] !== void 0 && match2.route.loader && (mergedLoaderData[id3] = loaderData[id3]), errors && errors.hasOwnProperty(id3))
      break;
  }
  return mergedLoaderData;
}
function findNearestBoundary2(matches, routeId) {
  return (routeId ? matches.slice(0, matches.findIndex((m4) => m4.route.id === routeId) + 1) : [...matches]).reverse().find((m4) => m4.route.hasErrorBoundary === !0) || matches[0];
}
function getShortCircuitMatches2(routes2) {
  let route = routes2.length === 1 ? routes2[0] : routes2.find((r3) => r3.index || !r3.path || r3.path === "/") || {
    id: "__shim-error-route__"
  };
  return {
    matches: [{
      params: {},
      pathname: "",
      pathnameBase: "",
      route
    }],
    route
  };
}
function getInternalRouterError2(status, _temp5) {
  let {
    pathname,
    routeId,
    method,
    type
  } = _temp5 === void 0 ? {} : _temp5, statusText = "Unknown Server Error", errorMessage = "Unknown @remix-run/router error";
  return status === 400 ? (statusText = "Bad Request", method && pathname && routeId ? errorMessage = "You made a " + method + ' request to "' + pathname + '" but ' + ('did not provide a `loader` for route "' + routeId + '", ') + "so there is no way to handle the request." : type === "defer-action" ? errorMessage = "defer() is not supported in actions" : type === "invalid-body" && (errorMessage = "Unable to encode submission body")) : status === 403 ? (statusText = "Forbidden", errorMessage = 'Route "' + routeId + '" does not match URL "' + pathname + '"') : status === 404 ? (statusText = "Not Found", errorMessage = 'No route matches URL "' + pathname + '"') : status === 405 && (statusText = "Method Not Allowed", method && pathname && routeId ? errorMessage = "You made a " + method.toUpperCase() + ' request to "' + pathname + '" but ' + ('did not provide an `action` for route "' + routeId + '", ') + "so there is no way to handle the request." : method && (errorMessage = 'Invalid request method "' + method.toUpperCase() + '"')), new ErrorResponseImpl2(status || 500, statusText, new Error(errorMessage), !0);
}
function findRedirect(results) {
  for (let i3 = results.length - 1; i3 >= 0; i3--) {
    let result = results[i3];
    if (isRedirectResult2(result))
      return {
        result,
        idx: i3
      };
  }
}
function stripHashFromPath(path) {
  let parsedPath = typeof path == "string" ? parsePath2(path) : path;
  return createPath2(_extends2({}, parsedPath, {
    hash: ""
  }));
}
function isHashChangeOnly(a4, b3) {
  return a4.pathname !== b3.pathname || a4.search !== b3.search ? !1 : a4.hash === "" ? b3.hash !== "" : a4.hash === b3.hash ? !0 : b3.hash !== "";
}
function isDeferredResult2(result) {
  return result.type === ResultType2.deferred;
}
function isErrorResult2(result) {
  return result.type === ResultType2.error;
}
function isRedirectResult2(result) {
  return (result && result.type) === ResultType2.redirect;
}
function isDeferredData3(value) {
  let deferred = value;
  return deferred && typeof deferred == "object" && typeof deferred.data == "object" && typeof deferred.subscribe == "function" && typeof deferred.cancel == "function" && typeof deferred.resolveData == "function";
}
function isResponse3(value) {
  return value != null && typeof value.status == "number" && typeof value.statusText == "string" && typeof value.headers == "object" && typeof value.body < "u";
}
function isRedirectResponse3(result) {
  if (!isResponse3(result))
    return !1;
  let status = result.status, location = result.headers.get("Location");
  return status >= 300 && status <= 399 && location != null;
}
function isQueryRouteResponse2(obj) {
  return obj && isResponse3(obj.response) && (obj.type === ResultType2.data || obj.type === ResultType2.error);
}
function isValidMethod2(method) {
  return validRequestMethods2.has(method.toLowerCase());
}
function isMutationMethod2(method) {
  return validMutationMethods2.has(method.toLowerCase());
}
async function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {
  for (let index3 = 0; index3 < results.length; index3++) {
    let result = results[index3], match2 = matchesToLoad[index3];
    if (!match2)
      continue;
    let currentMatch = currentMatches.find((m4) => m4.route.id === match2.route.id), isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match2) && (currentLoaderData && currentLoaderData[match2.route.id]) !== void 0;
    if (isDeferredResult2(result) && (isFetcher || isRevalidatingLoader)) {
      let signal = signals[index3];
      invariant3(signal, "Expected an AbortSignal for revalidating fetcher deferred result"), await resolveDeferredData(result, signal, isFetcher).then((result2) => {
        result2 && (results[index3] = result2 || results[index3]);
      });
    }
  }
}
async function resolveDeferredData(result, signal, unwrap) {
  if (unwrap === void 0 && (unwrap = !1), !await result.deferredData.resolveData(signal)) {
    if (unwrap)
      try {
        return {
          type: ResultType2.data,
          data: result.deferredData.unwrappedData
        };
      } catch (e3) {
        return {
          type: ResultType2.error,
          error: e3
        };
      }
    return {
      type: ResultType2.data,
      data: result.deferredData.data
    };
  }
}
function hasNakedIndexQuery2(search) {
  return new URLSearchParams(search).getAll("index").some((v2) => v2 === "");
}
function getTargetMatch2(matches, location) {
  let search = typeof location == "string" ? parsePath2(location).search : location.search;
  if (matches[matches.length - 1].route.index && hasNakedIndexQuery2(search || ""))
    return matches[matches.length - 1];
  let pathMatches = getPathContributingMatches2(matches);
  return pathMatches[pathMatches.length - 1];
}
function getSubmissionFromNavigation(navigation) {
  let {
    formMethod,
    formAction,
    formEncType,
    text,
    formData,
    json: json8
  } = navigation;
  if (!(!formMethod || !formAction || !formEncType)) {
    if (text != null)
      return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: void 0,
        text
      };
    if (formData != null)
      return {
        formMethod,
        formAction,
        formEncType,
        formData,
        json: void 0,
        text: void 0
      };
    if (json8 !== void 0)
      return {
        formMethod,
        formAction,
        formEncType,
        formData: void 0,
        json: json8,
        text: void 0
      };
  }
}
function getLoadingNavigation(location, submission) {
  return submission ? {
    state: "loading",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  } : {
    state: "loading",
    location,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0
  };
}
function getSubmittingNavigation(location, submission) {
  return {
    state: "submitting",
    location,
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text
  };
}
function getLoadingFetcher(submission, data) {
  return submission ? {
    state: "loading",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data
  } : {
    state: "loading",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data
  };
}
function getSubmittingFetcher(submission, existingFetcher) {
  return {
    state: "submitting",
    formMethod: submission.formMethod,
    formAction: submission.formAction,
    formEncType: submission.formEncType,
    formData: submission.formData,
    json: submission.json,
    text: submission.text,
    data: existingFetcher ? existingFetcher.data : void 0
  };
}
function getDoneFetcher(data) {
  return {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data
  };
}
function restoreAppliedTransitions(_window, transitions) {
  try {
    let sessionPositions = _window.sessionStorage.getItem(TRANSITIONS_STORAGE_KEY);
    if (sessionPositions) {
      let json8 = JSON.parse(sessionPositions);
      for (let [k3, v2] of Object.entries(json8 || {}))
        v2 && Array.isArray(v2) && transitions.set(k3, new Set(v2 || []));
    }
  } catch {
  }
}
function persistAppliedTransitions(_window, transitions) {
  if (transitions.size > 0) {
    let json8 = {};
    for (let [k3, v2] of transitions)
      json8[k3] = [...v2];
    try {
      _window.sessionStorage.setItem(TRANSITIONS_STORAGE_KEY, JSON.stringify(json8));
    } catch (error) {
      warning2(!1, "Failed to save applied view transitions in sessionStorage (" + error + ").");
    }
  }
}
var Action2, PopStateEventType, ResultType2, immutableRouteKeys2, paramRe2, dynamicSegmentValue2, indexRouteValue2, emptySegmentValue2, staticSegmentValue2, splatPenalty2, isSplat2, joinPaths2, normalizePathname2, normalizeSearch2, normalizeHash2, json4, AbortedDeferredError2, DeferredData2, defer4, redirect4, redirectDocument3, ErrorResponseImpl2, validMutationMethodsArr2, validMutationMethods2, validRequestMethodsArr2, validRequestMethods2, redirectStatusCodes3, redirectPreserveMethodStatusCodes, IDLE_NAVIGATION, IDLE_FETCHER, IDLE_BLOCKER, ABSOLUTE_URL_REGEX2, defaultMapRouteProperties2, TRANSITIONS_STORAGE_KEY, UNSAFE_DEFERRED_SYMBOL2, init_router2 = __esm({
  "../../node_modules/@remix-run/router/dist/router.js"() {
    (function(Action3) {
      Action3.Pop = "POP", Action3.Push = "PUSH", Action3.Replace = "REPLACE";
    })(Action2 || (Action2 = {}));
    PopStateEventType = "popstate";
    (function(ResultType3) {
      ResultType3.data = "data", ResultType3.deferred = "deferred", ResultType3.redirect = "redirect", ResultType3.error = "error";
    })(ResultType2 || (ResultType2 = {}));
    immutableRouteKeys2 = /* @__PURE__ */ new Set(["lazy", "caseSensitive", "path", "id", "index", "children"]);
    paramRe2 = /^:\w+$/, dynamicSegmentValue2 = 3, indexRouteValue2 = 2, emptySegmentValue2 = 1, staticSegmentValue2 = 10, splatPenalty2 = -2, isSplat2 = (s4) => s4 === "*";
    joinPaths2 = (paths) => paths.join("/").replace(/\/\/+/g, "/"), normalizePathname2 = (pathname) => pathname.replace(/\/+$/, "").replace(/^\/*/, "/"), normalizeSearch2 = (search) => !search || search === "?" ? "" : search.startsWith("?") ? search : "?" + search, normalizeHash2 = (hash) => !hash || hash === "#" ? "" : hash.startsWith("#") ? hash : "#" + hash, json4 = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init, headers = new Headers(responseInit.headers);
      return headers.has("Content-Type") || headers.set("Content-Type", "application/json; charset=utf-8"), new Response(JSON.stringify(data), _extends2({}, responseInit, {
        headers
      }));
    }, AbortedDeferredError2 = class extends Error {
    }, DeferredData2 = class {
      constructor(data, responseInit) {
        this.pendingKeysSet = /* @__PURE__ */ new Set(), this.subscribers = /* @__PURE__ */ new Set(), this.deferredKeys = [], invariant3(data && typeof data == "object" && !Array.isArray(data), "defer() only accepts plain objects");
        let reject;
        this.abortPromise = new Promise((_, r3) => reject = r3), this.controller = new AbortController();
        let onAbort = () => reject(new AbortedDeferredError2("Deferred data aborted"));
        this.unlistenAbortSignal = () => this.controller.signal.removeEventListener("abort", onAbort), this.controller.signal.addEventListener("abort", onAbort), this.data = Object.entries(data).reduce((acc, _ref2) => {
          let [key, value] = _ref2;
          return Object.assign(acc, {
            [key]: this.trackPromise(key, value)
          });
        }, {}), this.done && this.unlistenAbortSignal(), this.init = responseInit;
      }
      trackPromise(key, value) {
        if (!(value instanceof Promise))
          return value;
        this.deferredKeys.push(key), this.pendingKeysSet.add(key);
        let promise = Promise.race([value, this.abortPromise]).then((data) => this.onSettle(promise, key, void 0, data), (error) => this.onSettle(promise, key, error));
        return promise.catch(() => {
        }), Object.defineProperty(promise, "_tracked", {
          get: () => !0
        }), promise;
      }
      onSettle(promise, key, error, data) {
        if (this.controller.signal.aborted && error instanceof AbortedDeferredError2)
          return this.unlistenAbortSignal(), Object.defineProperty(promise, "_error", {
            get: () => error
          }), Promise.reject(error);
        if (this.pendingKeysSet.delete(key), this.done && this.unlistenAbortSignal(), error === void 0 && data === void 0) {
          let undefinedError = new Error('Deferred data for key "' + key + '" resolved/rejected with `undefined`, you must resolve/reject with a value or `null`.');
          return Object.defineProperty(promise, "_error", {
            get: () => undefinedError
          }), this.emit(!1, key), Promise.reject(undefinedError);
        }
        return data === void 0 ? (Object.defineProperty(promise, "_error", {
          get: () => error
        }), this.emit(!1, key), Promise.reject(error)) : (Object.defineProperty(promise, "_data", {
          get: () => data
        }), this.emit(!1, key), data);
      }
      emit(aborted, settledKey) {
        this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));
      }
      subscribe(fn) {
        return this.subscribers.add(fn), () => this.subscribers.delete(fn);
      }
      cancel() {
        this.controller.abort(), this.pendingKeysSet.forEach((v2, k3) => this.pendingKeysSet.delete(k3)), this.emit(!0);
      }
      async resolveData(signal) {
        let aborted = !1;
        if (!this.done) {
          let onAbort = () => this.cancel();
          signal.addEventListener("abort", onAbort), aborted = await new Promise((resolve) => {
            this.subscribe((aborted2) => {
              signal.removeEventListener("abort", onAbort), (aborted2 || this.done) && resolve(aborted2);
            });
          });
        }
        return aborted;
      }
      get done() {
        return this.pendingKeysSet.size === 0;
      }
      get unwrappedData() {
        return invariant3(this.data !== null && this.done, "Can only unwrap data on initialized and settled deferreds"), Object.entries(this.data).reduce((acc, _ref3) => {
          let [key, value] = _ref3;
          return Object.assign(acc, {
            [key]: unwrapTrackedPromise2(value)
          });
        }, {});
      }
      get pendingKeys() {
        return Array.from(this.pendingKeysSet);
      }
    };
    defer4 = function(data, init) {
      init === void 0 && (init = {});
      let responseInit = typeof init == "number" ? {
        status: init
      } : init;
      return new DeferredData2(data, responseInit);
    }, redirect4 = function(url2, init) {
      init === void 0 && (init = 302);
      let responseInit = init;
      typeof responseInit == "number" ? responseInit = {
        status: responseInit
      } : typeof responseInit.status > "u" && (responseInit.status = 302);
      let headers = new Headers(responseInit.headers);
      return headers.set("Location", url2), new Response(null, _extends2({}, responseInit, {
        headers
      }));
    }, redirectDocument3 = (url2, init) => {
      let response = redirect4(url2, init);
      return response.headers.set("X-Remix-Reload-Document", "true"), response;
    }, ErrorResponseImpl2 = class {
      constructor(status, statusText, data, internal) {
        internal === void 0 && (internal = !1), this.status = status, this.statusText = statusText || "", this.internal = internal, data instanceof Error ? (this.data = data.toString(), this.error = data) : this.data = data;
      }
    };
    validMutationMethodsArr2 = ["post", "put", "patch", "delete"], validMutationMethods2 = new Set(validMutationMethodsArr2), validRequestMethodsArr2 = ["get", ...validMutationMethodsArr2], validRequestMethods2 = new Set(validRequestMethodsArr2), redirectStatusCodes3 = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]), redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]), IDLE_NAVIGATION = {
      state: "idle",
      location: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    }, IDLE_FETCHER = {
      state: "idle",
      data: void 0,
      formMethod: void 0,
      formAction: void 0,
      formEncType: void 0,
      formData: void 0,
      json: void 0,
      text: void 0
    }, IDLE_BLOCKER = {
      state: "unblocked",
      proceed: void 0,
      reset: void 0,
      location: void 0
    }, ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, defaultMapRouteProperties2 = (route) => ({
      hasErrorBoundary: Boolean(route.hasErrorBoundary)
    }), TRANSITIONS_STORAGE_KEY = "remix-router-transitions";
    UNSAFE_DEFERRED_SYMBOL2 = Symbol("deferred");
  }
});

// ../../node_modules/react/cjs/react.production.min.js
var require_react_production_min = __commonJS({
  "../../node_modules/react/cjs/react.production.min.js"(exports) {
    "use strict";
    var l2 = Symbol.for("react.element"), n2 = Symbol.for("react.portal"), p2 = Symbol.for("react.fragment"), q2 = Symbol.for("react.strict_mode"), r3 = Symbol.for("react.profiler"), t4 = Symbol.for("react.provider"), u3 = Symbol.for("react.context"), v2 = Symbol.for("react.forward_ref"), w2 = Symbol.for("react.suspense"), x3 = Symbol.for("react.memo"), y4 = Symbol.for("react.lazy"), z3 = Symbol.iterator;
    function A(a4) {
      return a4 === null || typeof a4 != "object" ? null : (a4 = z3 && a4[z3] || a4["@@iterator"], typeof a4 == "function" ? a4 : null);
    }
    var B2 = { isMounted: function() {
      return !1;
    }, enqueueForceUpdate: function() {
    }, enqueueReplaceState: function() {
    }, enqueueSetState: function() {
    } }, C = Object.assign, D2 = {};
    function E2(a4, b3, e3) {
      this.props = a4, this.context = b3, this.refs = D2, this.updater = e3 || B2;
    }
    E2.prototype.isReactComponent = {};
    E2.prototype.setState = function(a4, b3) {
      if (typeof a4 != "object" && typeof a4 != "function" && a4 != null)
        throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
      this.updater.enqueueSetState(this, a4, b3, "setState");
    };
    E2.prototype.forceUpdate = function(a4) {
      this.updater.enqueueForceUpdate(this, a4, "forceUpdate");
    };
    function F() {
    }
    F.prototype = E2.prototype;
    function G2(a4, b3, e3) {
      this.props = a4, this.context = b3, this.refs = D2, this.updater = e3 || B2;
    }
    var H4 = G2.prototype = new F();
    H4.constructor = G2;
    C(H4, E2.prototype);
    H4.isPureReactComponent = !0;
    var I2 = Array.isArray, J = Object.prototype.hasOwnProperty, K2 = { current: null }, L3 = { key: !0, ref: !0, __self: !0, __source: !0 };
    function M4(a4, b3, e3) {
      var d4, c3 = {}, k3 = null, h4 = null;
      if (b3 != null)
        for (d4 in b3.ref !== void 0 && (h4 = b3.ref), b3.key !== void 0 && (k3 = "" + b3.key), b3)
          J.call(b3, d4) && !L3.hasOwnProperty(d4) && (c3[d4] = b3[d4]);
      var g2 = arguments.length - 2;
      if (g2 === 1)
        c3.children = e3;
      else if (1 < g2) {
        for (var f2 = Array(g2), m4 = 0; m4 < g2; m4++)
          f2[m4] = arguments[m4 + 2];
        c3.children = f2;
      }
      if (a4 && a4.defaultProps)
        for (d4 in g2 = a4.defaultProps, g2)
          c3[d4] === void 0 && (c3[d4] = g2[d4]);
      return { $$typeof: l2, type: a4, key: k3, ref: h4, props: c3, _owner: K2.current };
    }
    function N2(a4, b3) {
      return { $$typeof: l2, type: a4.type, key: b3, ref: a4.ref, props: a4.props, _owner: a4._owner };
    }
    function O2(a4) {
      return typeof a4 == "object" && a4 !== null && a4.$$typeof === l2;
    }
    function escape2(a4) {
      var b3 = { "=": "=0", ":": "=2" };
      return "$" + a4.replace(/[=:]/g, function(a5) {
        return b3[a5];
      });
    }
    var P = /\/+/g;
    function Q2(a4, b3) {
      return typeof a4 == "object" && a4 !== null && a4.key != null ? escape2("" + a4.key) : b3.toString(36);
    }
    function R2(a4, b3, e3, d4, c3) {
      var k3 = typeof a4;
      (k3 === "undefined" || k3 === "boolean") && (a4 = null);
      var h4 = !1;
      if (a4 === null)
        h4 = !0;
      else
        switch (k3) {
          case "string":
          case "number":
            h4 = !0;
            break;
          case "object":
            switch (a4.$$typeof) {
              case l2:
              case n2:
                h4 = !0;
            }
        }
      if (h4)
        return h4 = a4, c3 = c3(h4), a4 = d4 === "" ? "." + Q2(h4, 0) : d4, I2(c3) ? (e3 = "", a4 != null && (e3 = a4.replace(P, "$&/") + "/"), R2(c3, b3, e3, "", function(a5) {
          return a5;
        })) : c3 != null && (O2(c3) && (c3 = N2(c3, e3 + (!c3.key || h4 && h4.key === c3.key ? "" : ("" + c3.key).replace(P, "$&/") + "/") + a4)), b3.push(c3)), 1;
      if (h4 = 0, d4 = d4 === "" ? "." : d4 + ":", I2(a4))
        for (var g2 = 0; g2 < a4.length; g2++) {
          k3 = a4[g2];
          var f2 = d4 + Q2(k3, g2);
          h4 += R2(k3, b3, e3, f2, c3);
        }
      else if (f2 = A(a4), typeof f2 == "function")
        for (a4 = f2.call(a4), g2 = 0; !(k3 = a4.next()).done; )
          k3 = k3.value, f2 = d4 + Q2(k3, g2++), h4 += R2(k3, b3, e3, f2, c3);
      else if (k3 === "object")
        throw b3 = String(a4), Error("Objects are not valid as a React child (found: " + (b3 === "[object Object]" ? "object with keys {" + Object.keys(a4).join(", ") + "}" : b3) + "). If you meant to render a collection of children, use an array instead.");
      return h4;
    }
    function S5(a4, b3, e3) {
      if (a4 == null)
        return a4;
      var d4 = [], c3 = 0;
      return R2(a4, d4, "", "", function(a5) {
        return b3.call(e3, a5, c3++);
      }), d4;
    }
    function T3(a4) {
      if (a4._status === -1) {
        var b3 = a4._result;
        b3 = b3(), b3.then(function(b4) {
          (a4._status === 0 || a4._status === -1) && (a4._status = 1, a4._result = b4);
        }, function(b4) {
          (a4._status === 0 || a4._status === -1) && (a4._status = 2, a4._result = b4);
        }), a4._status === -1 && (a4._status = 0, a4._result = b3);
      }
      if (a4._status === 1)
        return a4._result.default;
      throw a4._result;
    }
    var U2 = { current: null }, V = { transition: null }, W = { ReactCurrentDispatcher: U2, ReactCurrentBatchConfig: V, ReactCurrentOwner: K2 };
    exports.Children = { map: S5, forEach: function(a4, b3, e3) {
      S5(a4, function() {
        b3.apply(this, arguments);
      }, e3);
    }, count: function(a4) {
      var b3 = 0;
      return S5(a4, function() {
        b3++;
      }), b3;
    }, toArray: function(a4) {
      return S5(a4, function(a5) {
        return a5;
      }) || [];
    }, only: function(a4) {
      if (!O2(a4))
        throw Error("React.Children.only expected to receive a single React element child.");
      return a4;
    } };
    exports.Component = E2;
    exports.Fragment = p2;
    exports.Profiler = r3;
    exports.PureComponent = G2;
    exports.StrictMode = q2;
    exports.Suspense = w2;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = W;
    exports.cloneElement = function(a4, b3, e3) {
      if (a4 == null)
        throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + a4 + ".");
      var d4 = C({}, a4.props), c3 = a4.key, k3 = a4.ref, h4 = a4._owner;
      if (b3 != null) {
        if (b3.ref !== void 0 && (k3 = b3.ref, h4 = K2.current), b3.key !== void 0 && (c3 = "" + b3.key), a4.type && a4.type.defaultProps)
          var g2 = a4.type.defaultProps;
        for (f2 in b3)
          J.call(b3, f2) && !L3.hasOwnProperty(f2) && (d4[f2] = b3[f2] === void 0 && g2 !== void 0 ? g2[f2] : b3[f2]);
      }
      var f2 = arguments.length - 2;
      if (f2 === 1)
        d4.children = e3;
      else if (1 < f2) {
        g2 = Array(f2);
        for (var m4 = 0; m4 < f2; m4++)
          g2[m4] = arguments[m4 + 2];
        d4.children = g2;
      }
      return { $$typeof: l2, type: a4.type, key: c3, ref: k3, props: d4, _owner: h4 };
    };
    exports.createContext = function(a4) {
      return a4 = { $$typeof: u3, _currentValue: a4, _currentValue2: a4, _threadCount: 0, Provider: null, Consumer: null, _defaultValue: null, _globalName: null }, a4.Provider = { $$typeof: t4, _context: a4 }, a4.Consumer = a4;
    };
    exports.createElement = M4;
    exports.createFactory = function(a4) {
      var b3 = M4.bind(null, a4);
      return b3.type = a4, b3;
    };
    exports.createRef = function() {
      return { current: null };
    };
    exports.forwardRef = function(a4) {
      return { $$typeof: v2, render: a4 };
    };
    exports.isValidElement = O2;
    exports.lazy = function(a4) {
      return { $$typeof: y4, _payload: { _status: -1, _result: a4 }, _init: T3 };
    };
    exports.memo = function(a4, b3) {
      return { $$typeof: x3, type: a4, compare: b3 === void 0 ? null : b3 };
    };
    exports.startTransition = function(a4) {
      var b3 = V.transition;
      V.transition = {};
      try {
        a4();
      } finally {
        V.transition = b3;
      }
    };
    exports.unstable_act = function() {
      throw Error("act(...) is not supported in production builds of React.");
    };
    exports.useCallback = function(a4, b3) {
      return U2.current.useCallback(a4, b3);
    };
    exports.useContext = function(a4) {
      return U2.current.useContext(a4);
    };
    exports.useDebugValue = function() {
    };
    exports.useDeferredValue = function(a4) {
      return U2.current.useDeferredValue(a4);
    };
    exports.useEffect = function(a4, b3) {
      return U2.current.useEffect(a4, b3);
    };
    exports.useId = function() {
      return U2.current.useId();
    };
    exports.useImperativeHandle = function(a4, b3, e3) {
      return U2.current.useImperativeHandle(a4, b3, e3);
    };
    exports.useInsertionEffect = function(a4, b3) {
      return U2.current.useInsertionEffect(a4, b3);
    };
    exports.useLayoutEffect = function(a4, b3) {
      return U2.current.useLayoutEffect(a4, b3);
    };
    exports.useMemo = function(a4, b3) {
      return U2.current.useMemo(a4, b3);
    };
    exports.useReducer = function(a4, b3, e3) {
      return U2.current.useReducer(a4, b3, e3);
    };
    exports.useRef = function(a4) {
      return U2.current.useRef(a4);
    };
    exports.useState = function(a4) {
      return U2.current.useState(a4);
    };
    exports.useSyncExternalStore = function(a4, b3, e3) {
      return U2.current.useSyncExternalStore(a4, b3, e3);
    };
    exports.useTransition = function() {
      return U2.current.useTransition();
    };
    exports.version = "18.2.0";
  }
});

// ../../node_modules/react/index.js
var require_react = __commonJS({
  "../../node_modules/react/index.js"(exports, module) {
    "use strict";
    module.exports = require_react_production_min();
  }
});

// ../../node_modules/react-router/dist/index.js
var dist_exports = {};
__export(dist_exports, {
  AbortedDeferredError: () => AbortedDeferredError2,
  Await: () => Await,
  MemoryRouter: () => MemoryRouter,
  Navigate: () => Navigate,
  NavigationType: () => Action2,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider,
  Routes: () => Routes,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_mapRouteProperties: () => mapRouteProperties,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useRoutesImpl: () => useRoutesImpl,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath2,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  defer: () => defer4,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse2,
  json: () => json4,
  matchPath: () => matchPath2,
  matchRoutes: () => matchRoutes2,
  parsePath: () => parsePath2,
  redirect: () => redirect4,
  redirectDocument: () => redirectDocument3,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath2,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useBlocker: () => useBlocker,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes
});
function _extends3() {
  return _extends3 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends3.apply(this, arguments);
}
function useHref(to, _temp) {
  let {
    relative
  } = _temp === void 0 ? {} : _temp;
  useInRouterContext() || invariant3(!1);
  let {
    basename,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    hash,
    pathname,
    search
  } = useResolvedPath(to, {
    relative
  }), joinedPathname = pathname;
  return basename !== "/" && (joinedPathname = pathname === "/" ? basename : joinPaths2([basename, pathname])), navigator2.createHref({
    pathname: joinedPathname,
    search,
    hash
  });
}
function useInRouterContext() {
  return React.useContext(LocationContext) != null;
}
function useLocation() {
  return useInRouterContext() || invariant3(!1), React.useContext(LocationContext).location;
}
function useNavigationType() {
  return React.useContext(LocationContext).navigationType;
}
function useMatch(pattern) {
  useInRouterContext() || invariant3(!1);
  let {
    pathname
  } = useLocation();
  return React.useMemo(() => matchPath2(pattern, pathname), [pathname, pattern]);
}
function useIsomorphicLayoutEffect(cb) {
  React.useContext(NavigationContext).static || React.useLayoutEffect(cb);
}
function useNavigate() {
  let {
    isDataRoute
  } = React.useContext(RouteContext);
  return isDataRoute ? useNavigateStable() : useNavigateUnstable();
}
function useNavigateUnstable() {
  useInRouterContext() || invariant3(!1);
  let dataRouterContext = React.useContext(DataRouterContext), {
    basename,
    future: future2,
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getResolveToMatches2(matches, future2.v7_relativeSplatPath)), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options) {
    if (options === void 0 && (options = {}), !activeRef.current)
      return;
    if (typeof to == "number") {
      navigator2.go(to);
      return;
    }
    let path = resolveTo2(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === "path");
    dataRouterContext == null && basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths2([basename, path.pathname])), (options.replace ? navigator2.replace : navigator2.push)(path, options.state, options);
  }, [basename, navigator2, routePathnamesJson, locationPathname, dataRouterContext]);
}
function useOutletContext() {
  return React.useContext(OutletContext);
}
function useOutlet(context) {
  let outlet = React.useContext(RouteContext).outlet;
  return outlet && /* @__PURE__ */ React.createElement(OutletContext.Provider, {
    value: context
  }, outlet);
}
function useParams() {
  let {
    matches
  } = React.useContext(RouteContext), routeMatch = matches[matches.length - 1];
  return routeMatch ? routeMatch.params : {};
}
function useResolvedPath(to, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    future: future2
  } = React.useContext(NavigationContext), {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), routePathnamesJson = JSON.stringify(getResolveToMatches2(matches, future2.v7_relativeSplatPath));
  return React.useMemo(() => resolveTo2(to, JSON.parse(routePathnamesJson), locationPathname, relative === "path"), [to, routePathnamesJson, locationPathname, relative]);
}
function useRoutes(routes2, locationArg) {
  return useRoutesImpl(routes2, locationArg);
}
function useRoutesImpl(routes2, locationArg, dataRouterState, future2) {
  useInRouterContext() || invariant3(!1);
  let {
    navigator: navigator2
  } = React.useContext(NavigationContext), {
    matches: parentMatches
  } = React.useContext(RouteContext), routeMatch = parentMatches[parentMatches.length - 1], parentParams = routeMatch ? routeMatch.params : {}, parentPathname = routeMatch ? routeMatch.pathname : "/", parentPathnameBase = routeMatch ? routeMatch.pathnameBase : "/", parentRoute = routeMatch && routeMatch.route, locationFromContext = useLocation(), location;
  if (locationArg) {
    var _parsedLocationArg$pa;
    let parsedLocationArg = typeof locationArg == "string" ? parsePath2(locationArg) : locationArg;
    parentPathnameBase === "/" || (_parsedLocationArg$pa = parsedLocationArg.pathname) != null && _parsedLocationArg$pa.startsWith(parentPathnameBase) || invariant3(!1), location = parsedLocationArg;
  } else
    location = locationFromContext;
  let pathname = location.pathname || "/", remainingPathname = parentPathnameBase === "/" ? pathname : pathname.slice(parentPathnameBase.length) || "/", matches = matchRoutes2(routes2, {
    pathname: remainingPathname
  }), renderedMatches = _renderMatches(matches && matches.map((match2) => Object.assign({}, match2, {
    params: Object.assign({}, parentParams, match2.params),
    pathname: joinPaths2([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathname).pathname : match2.pathname
    ]),
    pathnameBase: match2.pathnameBase === "/" ? parentPathnameBase : joinPaths2([
      parentPathnameBase,
      // Re-encode pathnames that were decoded inside matchRoutes
      navigator2.encodeLocation ? navigator2.encodeLocation(match2.pathnameBase).pathname : match2.pathnameBase
    ])
  })), parentMatches, dataRouterState, future2);
  return locationArg && renderedMatches ? /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    value: {
      location: _extends3({
        pathname: "/",
        search: "",
        hash: "",
        state: null,
        key: "default"
      }, location),
      navigationType: Action2.Pop
    }
  }, renderedMatches) : renderedMatches;
}
function DefaultErrorComponent() {
  let error = useRouteError(), message = isRouteErrorResponse2(error) ? error.status + " " + error.statusText : error instanceof Error ? error.message : JSON.stringify(error), stack = error instanceof Error ? error.stack : null, lightgrey = "rgba(200,200,200, 0.5)", preStyles = {
    padding: "0.5rem",
    backgroundColor: lightgrey
  }, codeStyles = {
    padding: "2px 4px",
    backgroundColor: lightgrey
  };
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement("h2", null, "Unexpected Application Error!"), /* @__PURE__ */ React.createElement("h3", {
    style: {
      fontStyle: "italic"
    }
  }, message), stack ? /* @__PURE__ */ React.createElement("pre", {
    style: preStyles
  }, stack) : null, null);
}
function RenderedRoute(_ref) {
  let {
    routeContext,
    match: match2,
    children
  } = _ref, dataRouterContext = React.useContext(DataRouterContext);
  return dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match2.route.errorElement || match2.route.ErrorBoundary) && (dataRouterContext.staticContext._deepestRenderedBoundaryId = match2.route.id), /* @__PURE__ */ React.createElement(RouteContext.Provider, {
    value: routeContext
  }, children);
}
function _renderMatches(matches, parentMatches, dataRouterState, future2) {
  var _dataRouterState2;
  if (parentMatches === void 0 && (parentMatches = []), dataRouterState === void 0 && (dataRouterState = null), future2 === void 0 && (future2 = null), matches == null) {
    var _dataRouterState;
    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors)
      matches = dataRouterState.matches;
    else
      return null;
  }
  let renderedMatches = matches, errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;
  if (errors != null) {
    let errorIndex = renderedMatches.findIndex((m4) => m4.route.id && errors?.[m4.route.id]);
    errorIndex >= 0 || invariant3(!1), renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));
  }
  let renderFallback = !1, fallbackIndex = -1;
  if (dataRouterState && future2 && future2.v7_partialHydration)
    for (let i3 = 0; i3 < renderedMatches.length; i3++) {
      let match2 = renderedMatches[i3];
      if ((match2.route.HydrateFallback || match2.route.hydrateFallbackElement) && (fallbackIndex = i3), match2.route.loader && match2.route.id && dataRouterState.loaderData[match2.route.id] === void 0 && (!dataRouterState.errors || dataRouterState.errors[match2.route.id] === void 0)) {
        renderFallback = !0, fallbackIndex >= 0 ? renderedMatches = renderedMatches.slice(0, fallbackIndex + 1) : renderedMatches = [renderedMatches[0]];
        break;
      }
    }
  return renderedMatches.reduceRight((outlet, match2, index3) => {
    let error, shouldRenderHydrateFallback = !1, errorElement = null, hydrateFallbackElement = null;
    dataRouterState && (error = errors && match2.route.id ? errors[match2.route.id] : void 0, errorElement = match2.route.errorElement || defaultErrorElement, renderFallback && (fallbackIndex < 0 && index3 === 0 ? (warningOnce("route-fallback", !1, "No `HydrateFallback` element provided to render during initial hydration"), shouldRenderHydrateFallback = !0, hydrateFallbackElement = null) : fallbackIndex === index3 && (shouldRenderHydrateFallback = !0, hydrateFallbackElement = match2.route.hydrateFallbackElement || null)));
    let matches2 = parentMatches.concat(renderedMatches.slice(0, index3 + 1)), getChildren = () => {
      let children;
      return error ? children = errorElement : shouldRenderHydrateFallback ? children = hydrateFallbackElement : match2.route.Component ? children = /* @__PURE__ */ React.createElement(match2.route.Component, null) : match2.route.element ? children = match2.route.element : children = outlet, /* @__PURE__ */ React.createElement(RenderedRoute, {
        match: match2,
        routeContext: {
          outlet,
          matches: matches2,
          isDataRoute: dataRouterState != null
        },
        children
      });
    };
    return dataRouterState && (match2.route.ErrorBoundary || match2.route.errorElement || index3 === 0) ? /* @__PURE__ */ React.createElement(RenderErrorBoundary, {
      location: dataRouterState.location,
      revalidation: dataRouterState.revalidation,
      component: errorElement,
      error,
      children: getChildren(),
      routeContext: {
        outlet: null,
        matches: matches2,
        isDataRoute: !0
      }
    }) : getChildren();
  }, null);
}
function useDataRouterContext(hookName) {
  let ctx = React.useContext(DataRouterContext);
  return ctx || invariant3(!1), ctx;
}
function useDataRouterState(hookName) {
  let state = React.useContext(DataRouterStateContext);
  return state || invariant3(!1), state;
}
function useRouteContext(hookName) {
  let route = React.useContext(RouteContext);
  return route || invariant3(!1), route;
}
function useCurrentRouteId(hookName) {
  let route = useRouteContext(hookName), thisRoute = route.matches[route.matches.length - 1];
  return thisRoute.route.id || invariant3(!1), thisRoute.route.id;
}
function useRouteId() {
  return useCurrentRouteId(DataRouterStateHook.UseRouteId);
}
function useNavigation() {
  return useDataRouterState(DataRouterStateHook.UseNavigation).navigation;
}
function useRevalidator() {
  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator), state = useDataRouterState(DataRouterStateHook.UseRevalidator);
  return React.useMemo(() => ({
    revalidate: dataRouterContext.router.revalidate,
    state: state.revalidation
  }), [dataRouterContext.router.revalidate, state.revalidation]);
}
function useMatches() {
  let {
    matches,
    loaderData
  } = useDataRouterState(DataRouterStateHook.UseMatches);
  return React.useMemo(() => matches.map((m4) => convertRouteMatchToUiMatch(m4, loaderData)), [matches, loaderData]);
}
function useLoaderData() {
  let state = useDataRouterState(DataRouterStateHook.UseLoaderData), routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  if (state.errors && state.errors[routeId] != null) {
    console.error("You cannot `useLoaderData` in an errorElement (routeId: " + routeId + ")");
    return;
  }
  return state.loaderData[routeId];
}
function useRouteLoaderData(routeId) {
  return useDataRouterState(DataRouterStateHook.UseRouteLoaderData).loaderData[routeId];
}
function useActionData() {
  let state = useDataRouterState(DataRouterStateHook.UseActionData), routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);
  return state.actionData ? state.actionData[routeId] : void 0;
}
function useRouteError() {
  var _state$errors;
  let error = React.useContext(RouteErrorContext), state = useDataRouterState(DataRouterStateHook.UseRouteError), routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);
  return error !== void 0 ? error : (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];
}
function useAsyncValue() {
  let value = React.useContext(AwaitContext);
  return value?._data;
}
function useAsyncError() {
  let value = React.useContext(AwaitContext);
  return value?._error;
}
function useBlocker(shouldBlock) {
  let {
    router,
    basename
  } = useDataRouterContext(DataRouterHook.UseBlocker), state = useDataRouterState(DataRouterStateHook.UseBlocker), [blockerKey, setBlockerKey] = React.useState(""), blockerFunction = React.useCallback((arg) => {
    if (typeof shouldBlock != "function")
      return !!shouldBlock;
    if (basename === "/")
      return shouldBlock(arg);
    let {
      currentLocation,
      nextLocation,
      historyAction
    } = arg;
    return shouldBlock({
      currentLocation: _extends3({}, currentLocation, {
        pathname: stripBasename2(currentLocation.pathname, basename) || currentLocation.pathname
      }),
      nextLocation: _extends3({}, nextLocation, {
        pathname: stripBasename2(nextLocation.pathname, basename) || nextLocation.pathname
      }),
      historyAction
    });
  }, [basename, shouldBlock]);
  return React.useEffect(() => {
    let key = String(++blockerId);
    return setBlockerKey(key), () => router.deleteBlocker(key);
  }, [router]), React.useEffect(() => {
    blockerKey !== "" && router.getBlocker(blockerKey, blockerFunction);
  }, [router, blockerKey, blockerFunction]), blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;
}
function useNavigateStable() {
  let {
    router
  } = useDataRouterContext(DataRouterHook.UseNavigateStable), id3 = useCurrentRouteId(DataRouterStateHook.UseNavigateStable), activeRef = React.useRef(!1);
  return useIsomorphicLayoutEffect(() => {
    activeRef.current = !0;
  }), React.useCallback(function(to, options) {
    options === void 0 && (options = {}), activeRef.current && (typeof to == "number" ? router.navigate(to) : router.navigate(to, _extends3({
      fromRouteId: id3
    }, options)));
  }, [router, id3]);
}
function warningOnce(key, cond, message) {
  !cond && !alreadyWarned2[key] && (alreadyWarned2[key] = !0);
}
function RouterProvider(_ref) {
  let {
    fallbackElement,
    router,
    future: future2
  } = _ref, [state, setStateImpl] = React.useState(router.state), {
    v7_startTransition
  } = future2 || {}, setState = React.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]), React.useEffect(() => {
  }, []);
  let navigator2 = React.useMemo(() => ({
    createHref: router.createHref,
    encodeLocation: router.encodeLocation,
    go: (n2) => router.navigate(n2),
    push: (to, state2, opts) => router.navigate(to, {
      state: state2,
      preventScrollReset: opts?.preventScrollReset
    }),
    replace: (to, state2, opts) => router.navigate(to, {
      replace: !0,
      state: state2,
      preventScrollReset: opts?.preventScrollReset
    })
  }), [router]), basename = router.basename || "/", dataRouterContext = React.useMemo(() => ({
    router,
    navigator: navigator2,
    static: !1,
    basename
  }), [router, navigator2, basename]);
  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ React.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ React.createElement(Router, {
    basename,
    location: state.location,
    navigationType: state.historyAction,
    navigator: navigator2,
    future: {
      v7_relativeSplatPath: router.future.v7_relativeSplatPath
    }
  }, state.initialized || router.future.v7_partialHydration ? /* @__PURE__ */ React.createElement(DataRoutes, {
    routes: router.routes,
    future: router.future,
    state
  }) : fallbackElement))), null);
}
function DataRoutes(_ref2) {
  let {
    routes: routes2,
    future: future2,
    state
  } = _ref2;
  return useRoutesImpl(routes2, void 0, state, future2);
}
function MemoryRouter(_ref3) {
  let {
    basename,
    children,
    initialEntries,
    initialIndex,
    future: future2
  } = _ref3, historyRef = React.useRef();
  historyRef.current == null && (historyRef.current = createMemoryHistory({
    initialEntries,
    initialIndex,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setStateImpl] = React.useState({
    action: history.action,
    location: history.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React.useCallback((newState) => {
    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React.useLayoutEffect(() => history.listen(setState), [history, setState]), /* @__PURE__ */ React.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future: future2
  });
}
function Navigate(_ref4) {
  let {
    to,
    replace,
    state,
    relative
  } = _ref4;
  useInRouterContext() || invariant3(!1);
  let {
    future: future2,
    static: isStatic
  } = React.useContext(NavigationContext), {
    matches
  } = React.useContext(RouteContext), {
    pathname: locationPathname
  } = useLocation(), navigate = useNavigate(), path = resolveTo2(to, getResolveToMatches2(matches, future2.v7_relativeSplatPath), locationPathname, relative === "path"), jsonPath = JSON.stringify(path);
  return React.useEffect(() => navigate(JSON.parse(jsonPath), {
    replace,
    state,
    relative
  }), [navigate, jsonPath, relative, replace, state]), null;
}
function Outlet(props) {
  return useOutlet(props.context);
}
function Route(_props) {
  invariant3(!1);
}
function Router(_ref5) {
  let {
    basename: basenameProp = "/",
    children = null,
    location: locationProp,
    navigationType = Action2.Pop,
    navigator: navigator2,
    static: staticProp = !1,
    future: future2
  } = _ref5;
  useInRouterContext() && invariant3(!1);
  let basename = basenameProp.replace(/^\/*/, "/"), navigationContext = React.useMemo(() => ({
    basename,
    navigator: navigator2,
    static: staticProp,
    future: _extends3({
      v7_relativeSplatPath: !1
    }, future2)
  }), [basename, future2, navigator2, staticProp]);
  typeof locationProp == "string" && (locationProp = parsePath2(locationProp));
  let {
    pathname = "/",
    search = "",
    hash = "",
    state = null,
    key = "default"
  } = locationProp, locationContext = React.useMemo(() => {
    let trailingPathname = stripBasename2(pathname, basename);
    return trailingPathname == null ? null : {
      location: {
        pathname: trailingPathname,
        search,
        hash,
        state,
        key
      },
      navigationType
    };
  }, [basename, pathname, search, hash, state, key, navigationType]);
  return locationContext == null ? null : /* @__PURE__ */ React.createElement(NavigationContext.Provider, {
    value: navigationContext
  }, /* @__PURE__ */ React.createElement(LocationContext.Provider, {
    children,
    value: locationContext
  }));
}
function Routes(_ref6) {
  let {
    children,
    location
  } = _ref6;
  return useRoutes(createRoutesFromChildren(children), location);
}
function Await(_ref7) {
  let {
    children,
    errorElement,
    resolve
  } = _ref7;
  return /* @__PURE__ */ React.createElement(AwaitErrorBoundary, {
    resolve,
    errorElement
  }, /* @__PURE__ */ React.createElement(ResolveAwait, null, children));
}
function ResolveAwait(_ref8) {
  let {
    children
  } = _ref8, data = useAsyncValue(), toRender = typeof children == "function" ? children(data) : children;
  return /* @__PURE__ */ React.createElement(React.Fragment, null, toRender);
}
function createRoutesFromChildren(children, parentPath) {
  parentPath === void 0 && (parentPath = []);
  let routes2 = [];
  return React.Children.forEach(children, (element, index3) => {
    if (!/* @__PURE__ */ React.isValidElement(element))
      return;
    let treePath = [...parentPath, index3];
    if (element.type === React.Fragment) {
      routes2.push.apply(routes2, createRoutesFromChildren(element.props.children, treePath));
      return;
    }
    element.type !== Route && invariant3(!1), !element.props.index || !element.props.children || invariant3(!1);
    let route = {
      id: element.props.id || treePath.join("-"),
      caseSensitive: element.props.caseSensitive,
      element: element.props.element,
      Component: element.props.Component,
      index: element.props.index,
      path: element.props.path,
      loader: element.props.loader,
      action: element.props.action,
      errorElement: element.props.errorElement,
      ErrorBoundary: element.props.ErrorBoundary,
      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,
      shouldRevalidate: element.props.shouldRevalidate,
      handle: element.props.handle,
      lazy: element.props.lazy
    };
    element.props.children && (route.children = createRoutesFromChildren(element.props.children, treePath)), routes2.push(route);
  }), routes2;
}
function renderMatches(matches) {
  return _renderMatches(matches);
}
function mapRouteProperties(route) {
  let updates = {
    // Note: this check also occurs in createRoutesFromChildren so update
    // there if you change this -- please and thank you!
    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null
  };
  return route.Component && Object.assign(updates, {
    element: /* @__PURE__ */ React.createElement(route.Component),
    Component: void 0
  }), route.HydrateFallback && Object.assign(updates, {
    hydrateFallbackElement: /* @__PURE__ */ React.createElement(route.HydrateFallback),
    HydrateFallback: void 0
  }), route.ErrorBoundary && Object.assign(updates, {
    errorElement: /* @__PURE__ */ React.createElement(route.ErrorBoundary),
    ErrorBoundary: void 0
  }), updates;
}
function createMemoryRouter(routes2, opts) {
  return createRouter({
    basename: opts?.basename,
    future: _extends3({}, opts?.future, {
      v7_prependBasename: !0
    }),
    history: createMemoryHistory({
      initialEntries: opts?.initialEntries,
      initialIndex: opts?.initialIndex
    }),
    hydrationData: opts?.hydrationData,
    routes: routes2,
    mapRouteProperties
  }).initialize();
}
var React, DataRouterContext, DataRouterStateContext, AwaitContext, NavigationContext, LocationContext, RouteContext, RouteErrorContext, OutletContext, defaultErrorElement, RenderErrorBoundary, DataRouterHook, DataRouterStateHook, blockerId, alreadyWarned2, START_TRANSITION, startTransitionImpl, AwaitRenderStatus, neverSettledPromise, AwaitErrorBoundary, init_dist = __esm({
  "../../node_modules/react-router/dist/index.js"() {
    React = __toESM(require_react());
    init_router2();
    init_router2();
    DataRouterContext = /* @__PURE__ */ React.createContext(null), DataRouterStateContext = /* @__PURE__ */ React.createContext(null), AwaitContext = /* @__PURE__ */ React.createContext(null), NavigationContext = /* @__PURE__ */ React.createContext(null), LocationContext = /* @__PURE__ */ React.createContext(null), RouteContext = /* @__PURE__ */ React.createContext({
      outlet: null,
      matches: [],
      isDataRoute: !1
    }), RouteErrorContext = /* @__PURE__ */ React.createContext(null);
    OutletContext = /* @__PURE__ */ React.createContext(null);
    defaultErrorElement = /* @__PURE__ */ React.createElement(DefaultErrorComponent, null), RenderErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          location: props.location,
          revalidation: props.revalidation,
          error: props.error
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      static getDerivedStateFromProps(props, state) {
        return state.location !== props.location || state.revalidation !== "idle" && props.revalidation === "idle" ? {
          error: props.error,
          location: props.location,
          revalidation: props.revalidation
        } : {
          error: props.error !== void 0 ? props.error : state.error,
          location: state.location,
          revalidation: props.revalidation || state.revalidation
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("React Router caught the following error during render", error, errorInfo);
      }
      render() {
        return this.state.error !== void 0 ? /* @__PURE__ */ React.createElement(RouteContext.Provider, {
          value: this.props.routeContext
        }, /* @__PURE__ */ React.createElement(RouteErrorContext.Provider, {
          value: this.state.error,
          children: this.props.component
        })) : this.props.children;
      }
    };
    DataRouterHook = /* @__PURE__ */ function(DataRouterHook3) {
      return DataRouterHook3.UseBlocker = "useBlocker", DataRouterHook3.UseRevalidator = "useRevalidator", DataRouterHook3.UseNavigateStable = "useNavigate", DataRouterHook3;
    }(DataRouterHook || {}), DataRouterStateHook = /* @__PURE__ */ function(DataRouterStateHook3) {
      return DataRouterStateHook3.UseBlocker = "useBlocker", DataRouterStateHook3.UseLoaderData = "useLoaderData", DataRouterStateHook3.UseActionData = "useActionData", DataRouterStateHook3.UseRouteError = "useRouteError", DataRouterStateHook3.UseNavigation = "useNavigation", DataRouterStateHook3.UseRouteLoaderData = "useRouteLoaderData", DataRouterStateHook3.UseMatches = "useMatches", DataRouterStateHook3.UseRevalidator = "useRevalidator", DataRouterStateHook3.UseNavigateStable = "useNavigate", DataRouterStateHook3.UseRouteId = "useRouteId", DataRouterStateHook3;
    }(DataRouterStateHook || {});
    blockerId = 0;
    alreadyWarned2 = {};
    START_TRANSITION = "startTransition", startTransitionImpl = React[START_TRANSITION];
    AwaitRenderStatus = /* @__PURE__ */ function(AwaitRenderStatus2) {
      return AwaitRenderStatus2[AwaitRenderStatus2.pending = 0] = "pending", AwaitRenderStatus2[AwaitRenderStatus2.success = 1] = "success", AwaitRenderStatus2[AwaitRenderStatus2.error = 2] = "error", AwaitRenderStatus2;
    }(AwaitRenderStatus || {}), neverSettledPromise = new Promise(() => {
    }), AwaitErrorBoundary = class extends React.Component {
      constructor(props) {
        super(props), this.state = {
          error: null
        };
      }
      static getDerivedStateFromError(error) {
        return {
          error
        };
      }
      componentDidCatch(error, errorInfo) {
        console.error("<Await> caught the following error during render", error, errorInfo);
      }
      render() {
        let {
          children,
          errorElement,
          resolve
        } = this.props, promise = null, status = AwaitRenderStatus.pending;
        if (!(resolve instanceof Promise))
          status = AwaitRenderStatus.success, promise = Promise.resolve(), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_data", {
            get: () => resolve
          });
        else if (this.state.error) {
          status = AwaitRenderStatus.error;
          let renderError = this.state.error;
          promise = Promise.reject().catch(() => {
          }), Object.defineProperty(promise, "_tracked", {
            get: () => !0
          }), Object.defineProperty(promise, "_error", {
            get: () => renderError
          });
        } else
          resolve._tracked ? (promise = resolve, status = promise._error !== void 0 ? AwaitRenderStatus.error : promise._data !== void 0 ? AwaitRenderStatus.success : AwaitRenderStatus.pending) : (status = AwaitRenderStatus.pending, Object.defineProperty(resolve, "_tracked", {
            get: () => !0
          }), promise = resolve.then((data) => Object.defineProperty(resolve, "_data", {
            get: () => data
          }), (error) => Object.defineProperty(resolve, "_error", {
            get: () => error
          })));
        if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError2)
          throw neverSettledPromise;
        if (status === AwaitRenderStatus.error && !errorElement)
          throw promise._error;
        if (status === AwaitRenderStatus.error)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children: errorElement
          });
        if (status === AwaitRenderStatus.success)
          return /* @__PURE__ */ React.createElement(AwaitContext.Provider, {
            value: promise,
            children
          });
        throw promise;
      }
    };
  }
});

// ../../node_modules/scheduler/cjs/scheduler.production.min.js
var require_scheduler_production_min = __commonJS({
  "../../node_modules/scheduler/cjs/scheduler.production.min.js"(exports) {
    "use strict";
    function f2(a4, b3) {
      var c3 = a4.length;
      a4.push(b3);
      a:
        for (; 0 < c3; ) {
          var d4 = c3 - 1 >>> 1, e3 = a4[d4];
          if (0 < g2(e3, b3))
            a4[d4] = b3, a4[c3] = e3, c3 = d4;
          else
            break a;
        }
    }
    function h4(a4) {
      return a4.length === 0 ? null : a4[0];
    }
    function k3(a4) {
      if (a4.length === 0)
        return null;
      var b3 = a4[0], c3 = a4.pop();
      if (c3 !== b3) {
        a4[0] = c3;
        a:
          for (var d4 = 0, e3 = a4.length, w2 = e3 >>> 1; d4 < w2; ) {
            var m4 = 2 * (d4 + 1) - 1, C = a4[m4], n2 = m4 + 1, x3 = a4[n2];
            if (0 > g2(C, c3))
              n2 < e3 && 0 > g2(x3, C) ? (a4[d4] = x3, a4[n2] = c3, d4 = n2) : (a4[d4] = C, a4[m4] = c3, d4 = m4);
            else if (n2 < e3 && 0 > g2(x3, c3))
              a4[d4] = x3, a4[n2] = c3, d4 = n2;
            else
              break a;
          }
      }
      return b3;
    }
    function g2(a4, b3) {
      var c3 = a4.sortIndex - b3.sortIndex;
      return c3 !== 0 ? c3 : a4.id - b3.id;
    }
    typeof performance == "object" && typeof performance.now == "function" ? (l2 = performance, exports.unstable_now = function() {
      return l2.now();
    }) : (p2 = Date, q2 = p2.now(), exports.unstable_now = function() {
      return p2.now() - q2;
    });
    var l2, p2, q2, r3 = [], t4 = [], u3 = 1, v2 = null, y4 = 3, z3 = !1, A = !1, B2 = !1, D2 = typeof setTimeout == "function" ? setTimeout : null, E2 = typeof clearTimeout == "function" ? clearTimeout : null, F = typeof setImmediate < "u" ? setImmediate : null;
    typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);
    function G2(a4) {
      for (var b3 = h4(t4); b3 !== null; ) {
        if (b3.callback === null)
          k3(t4);
        else if (b3.startTime <= a4)
          k3(t4), b3.sortIndex = b3.expirationTime, f2(r3, b3);
        else
          break;
        b3 = h4(t4);
      }
    }
    function H4(a4) {
      if (B2 = !1, G2(a4), !A)
        if (h4(r3) !== null)
          A = !0, I2(J);
        else {
          var b3 = h4(t4);
          b3 !== null && K2(H4, b3.startTime - a4);
        }
    }
    function J(a4, b3) {
      A = !1, B2 && (B2 = !1, E2(L3), L3 = -1), z3 = !0;
      var c3 = y4;
      try {
        for (G2(b3), v2 = h4(r3); v2 !== null && (!(v2.expirationTime > b3) || a4 && !M4()); ) {
          var d4 = v2.callback;
          if (typeof d4 == "function") {
            v2.callback = null, y4 = v2.priorityLevel;
            var e3 = d4(v2.expirationTime <= b3);
            b3 = exports.unstable_now(), typeof e3 == "function" ? v2.callback = e3 : v2 === h4(r3) && k3(r3), G2(b3);
          } else
            k3(r3);
          v2 = h4(r3);
        }
        if (v2 !== null)
          var w2 = !0;
        else {
          var m4 = h4(t4);
          m4 !== null && K2(H4, m4.startTime - b3), w2 = !1;
        }
        return w2;
      } finally {
        v2 = null, y4 = c3, z3 = !1;
      }
    }
    var N2 = !1, O2 = null, L3 = -1, P = 5, Q2 = -1;
    function M4() {
      return !(exports.unstable_now() - Q2 < P);
    }
    function R2() {
      if (O2 !== null) {
        var a4 = exports.unstable_now();
        Q2 = a4;
        var b3 = !0;
        try {
          b3 = O2(!0, a4);
        } finally {
          b3 ? S5() : (N2 = !1, O2 = null);
        }
      } else
        N2 = !1;
    }
    var S5;
    typeof F == "function" ? S5 = function() {
      F(R2);
    } : typeof MessageChannel < "u" ? (T3 = new MessageChannel(), U2 = T3.port2, T3.port1.onmessage = R2, S5 = function() {
      U2.postMessage(null);
    }) : S5 = function() {
      D2(R2, 0);
    };
    var T3, U2;
    function I2(a4) {
      O2 = a4, N2 || (N2 = !0, S5());
    }
    function K2(a4, b3) {
      L3 = D2(function() {
        a4(exports.unstable_now());
      }, b3);
    }
    exports.unstable_IdlePriority = 5;
    exports.unstable_ImmediatePriority = 1;
    exports.unstable_LowPriority = 4;
    exports.unstable_NormalPriority = 3;
    exports.unstable_Profiling = null;
    exports.unstable_UserBlockingPriority = 2;
    exports.unstable_cancelCallback = function(a4) {
      a4.callback = null;
    };
    exports.unstable_continueExecution = function() {
      A || z3 || (A = !0, I2(J));
    };
    exports.unstable_forceFrameRate = function(a4) {
      0 > a4 || 125 < a4 ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : P = 0 < a4 ? Math.floor(1e3 / a4) : 5;
    };
    exports.unstable_getCurrentPriorityLevel = function() {
      return y4;
    };
    exports.unstable_getFirstCallbackNode = function() {
      return h4(r3);
    };
    exports.unstable_next = function(a4) {
      switch (y4) {
        case 1:
        case 2:
        case 3:
          var b3 = 3;
          break;
        default:
          b3 = y4;
      }
      var c3 = y4;
      y4 = b3;
      try {
        return a4();
      } finally {
        y4 = c3;
      }
    };
    exports.unstable_pauseExecution = function() {
    };
    exports.unstable_requestPaint = function() {
    };
    exports.unstable_runWithPriority = function(a4, b3) {
      switch (a4) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          a4 = 3;
      }
      var c3 = y4;
      y4 = a4;
      try {
        return b3();
      } finally {
        y4 = c3;
      }
    };
    exports.unstable_scheduleCallback = function(a4, b3, c3) {
      var d4 = exports.unstable_now();
      switch (typeof c3 == "object" && c3 !== null ? (c3 = c3.delay, c3 = typeof c3 == "number" && 0 < c3 ? d4 + c3 : d4) : c3 = d4, a4) {
        case 1:
          var e3 = -1;
          break;
        case 2:
          e3 = 250;
          break;
        case 5:
          e3 = 1073741823;
          break;
        case 4:
          e3 = 1e4;
          break;
        default:
          e3 = 5e3;
      }
      return e3 = c3 + e3, a4 = { id: u3++, callback: b3, priorityLevel: a4, startTime: c3, expirationTime: e3, sortIndex: -1 }, c3 > d4 ? (a4.sortIndex = c3, f2(t4, a4), h4(r3) === null && a4 === h4(t4) && (B2 ? (E2(L3), L3 = -1) : B2 = !0, K2(H4, c3 - d4))) : (a4.sortIndex = e3, f2(r3, a4), A || z3 || (A = !0, I2(J))), a4;
    };
    exports.unstable_shouldYield = M4;
    exports.unstable_wrapCallback = function(a4) {
      var b3 = y4;
      return function() {
        var c3 = y4;
        y4 = b3;
        try {
          return a4.apply(this, arguments);
        } finally {
          y4 = c3;
        }
      };
    };
  }
});

// ../../node_modules/scheduler/index.js
var require_scheduler = __commonJS({
  "../../node_modules/scheduler/index.js"(exports, module) {
    "use strict";
    module.exports = require_scheduler_production_min();
  }
});

// ../../node_modules/react-dom/cjs/react-dom.production.min.js
var require_react_dom_production_min = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom.production.min.js"(exports) {
    "use strict";
    var aa = require_react(), ca = require_scheduler();
    function p2(a4) {
      for (var b3 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a4, c3 = 1; c3 < arguments.length; c3++)
        b3 += "&args[]=" + encodeURIComponent(arguments[c3]);
      return "Minified React error #" + a4 + "; visit " + b3 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var da = /* @__PURE__ */ new Set(), ea = {};
    function fa(a4, b3) {
      ha(a4, b3), ha(a4 + "Capture", b3);
    }
    function ha(a4, b3) {
      for (ea[a4] = b3, a4 = 0; a4 < b3.length; a4++)
        da.add(b3[a4]);
    }
    var ia = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"), ja = Object.prototype.hasOwnProperty, ka = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, la = {}, ma = {};
    function oa(a4) {
      return ja.call(ma, a4) ? !0 : ja.call(la, a4) ? !1 : ka.test(a4) ? ma[a4] = !0 : (la[a4] = !0, !1);
    }
    function pa(a4, b3, c3, d4) {
      if (c3 !== null && c3.type === 0)
        return !1;
      switch (typeof b3) {
        case "function":
        case "symbol":
          return !0;
        case "boolean":
          return d4 ? !1 : c3 !== null ? !c3.acceptsBooleans : (a4 = a4.toLowerCase().slice(0, 5), a4 !== "data-" && a4 !== "aria-");
        default:
          return !1;
      }
    }
    function qa(a4, b3, c3, d4) {
      if (b3 === null || typeof b3 > "u" || pa(a4, b3, c3, d4))
        return !0;
      if (d4)
        return !1;
      if (c3 !== null)
        switch (c3.type) {
          case 3:
            return !b3;
          case 4:
            return b3 === !1;
          case 5:
            return isNaN(b3);
          case 6:
            return isNaN(b3) || 1 > b3;
        }
      return !1;
    }
    function v2(a4, b3, c3, d4, e3, f2, g2) {
      this.acceptsBooleans = b3 === 2 || b3 === 3 || b3 === 4, this.attributeName = d4, this.attributeNamespace = e3, this.mustUseProperty = c3, this.propertyName = a4, this.type = b3, this.sanitizeURL = f2, this.removeEmptyString = g2;
    }
    var z3 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a4) {
      z3[a4] = new v2(a4, 0, !1, a4, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a4) {
      var b3 = a4[0];
      z3[b3] = new v2(b3, 1, !1, a4[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a4) {
      z3[a4] = new v2(a4, 2, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a4) {
      z3[a4] = new v2(a4, 2, !1, a4, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a4) {
      z3[a4] = new v2(a4, 3, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a4) {
      z3[a4] = new v2(a4, 3, !0, a4, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a4) {
      z3[a4] = new v2(a4, 4, !1, a4, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a4) {
      z3[a4] = new v2(a4, 6, !1, a4, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a4) {
      z3[a4] = new v2(a4, 5, !1, a4.toLowerCase(), null, !1, !1);
    });
    var ra = /[\-:]([a-z])/g;
    function sa(a4) {
      return a4[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a4) {
      var b3 = a4.replace(
        ra,
        sa
      );
      z3[b3] = new v2(b3, 1, !1, a4, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a4) {
      var b3 = a4.replace(ra, sa);
      z3[b3] = new v2(b3, 1, !1, a4, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a4) {
      var b3 = a4.replace(ra, sa);
      z3[b3] = new v2(b3, 1, !1, a4, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a4) {
      z3[a4] = new v2(a4, 1, !1, a4.toLowerCase(), null, !1, !1);
    });
    z3.xlinkHref = new v2("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a4) {
      z3[a4] = new v2(a4, 1, !1, a4.toLowerCase(), null, !0, !0);
    });
    function ta(a4, b3, c3, d4) {
      var e3 = z3.hasOwnProperty(b3) ? z3[b3] : null;
      (e3 !== null ? e3.type !== 0 : d4 || !(2 < b3.length) || b3[0] !== "o" && b3[0] !== "O" || b3[1] !== "n" && b3[1] !== "N") && (qa(b3, c3, e3, d4) && (c3 = null), d4 || e3 === null ? oa(b3) && (c3 === null ? a4.removeAttribute(b3) : a4.setAttribute(b3, "" + c3)) : e3.mustUseProperty ? a4[e3.propertyName] = c3 === null ? e3.type === 3 ? !1 : "" : c3 : (b3 = e3.attributeName, d4 = e3.attributeNamespace, c3 === null ? a4.removeAttribute(b3) : (e3 = e3.type, c3 = e3 === 3 || e3 === 4 && c3 === !0 ? "" : "" + c3, d4 ? a4.setAttributeNS(d4, b3, c3) : a4.setAttribute(b3, c3))));
    }
    var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, va = Symbol.for("react.element"), wa = Symbol.for("react.portal"), ya = Symbol.for("react.fragment"), za = Symbol.for("react.strict_mode"), Aa = Symbol.for("react.profiler"), Ba = Symbol.for("react.provider"), Ca = Symbol.for("react.context"), Da = Symbol.for("react.forward_ref"), Ea = Symbol.for("react.suspense"), Fa = Symbol.for("react.suspense_list"), Ga = Symbol.for("react.memo"), Ha = Symbol.for("react.lazy");
    Symbol.for("react.scope");
    Symbol.for("react.debug_trace_mode");
    var Ia = Symbol.for("react.offscreen");
    Symbol.for("react.legacy_hidden");
    Symbol.for("react.cache");
    Symbol.for("react.tracing_marker");
    var Ja = Symbol.iterator;
    function Ka(a4) {
      return a4 === null || typeof a4 != "object" ? null : (a4 = Ja && a4[Ja] || a4["@@iterator"], typeof a4 == "function" ? a4 : null);
    }
    var A = Object.assign, La;
    function Ma(a4) {
      if (La === void 0)
        try {
          throw Error();
        } catch (c3) {
          var b3 = c3.stack.trim().match(/\n( *(at )?)/);
          La = b3 && b3[1] || "";
        }
      return `
` + La + a4;
    }
    var Na = !1;
    function Oa(a4, b3) {
      if (!a4 || Na)
        return "";
      Na = !0;
      var c3 = Error.prepareStackTrace;
      Error.prepareStackTrace = void 0;
      try {
        if (b3)
          if (b3 = function() {
            throw Error();
          }, Object.defineProperty(b3.prototype, "props", { set: function() {
            throw Error();
          } }), typeof Reflect == "object" && Reflect.construct) {
            try {
              Reflect.construct(b3, []);
            } catch (l2) {
              var d4 = l2;
            }
            Reflect.construct(a4, [], b3);
          } else {
            try {
              b3.call();
            } catch (l2) {
              d4 = l2;
            }
            a4.call(b3.prototype);
          }
        else {
          try {
            throw Error();
          } catch (l2) {
            d4 = l2;
          }
          a4();
        }
      } catch (l2) {
        if (l2 && d4 && typeof l2.stack == "string") {
          for (var e3 = l2.stack.split(`
`), f2 = d4.stack.split(`
`), g2 = e3.length - 1, h4 = f2.length - 1; 1 <= g2 && 0 <= h4 && e3[g2] !== f2[h4]; )
            h4--;
          for (; 1 <= g2 && 0 <= h4; g2--, h4--)
            if (e3[g2] !== f2[h4]) {
              if (g2 !== 1 || h4 !== 1)
                do
                  if (g2--, h4--, 0 > h4 || e3[g2] !== f2[h4]) {
                    var k3 = `
` + e3[g2].replace(" at new ", " at ");
                    return a4.displayName && k3.includes("<anonymous>") && (k3 = k3.replace("<anonymous>", a4.displayName)), k3;
                  }
                while (1 <= g2 && 0 <= h4);
              break;
            }
        }
      } finally {
        Na = !1, Error.prepareStackTrace = c3;
      }
      return (a4 = a4 ? a4.displayName || a4.name : "") ? Ma(a4) : "";
    }
    function Pa(a4) {
      switch (a4.tag) {
        case 5:
          return Ma(a4.type);
        case 16:
          return Ma("Lazy");
        case 13:
          return Ma("Suspense");
        case 19:
          return Ma("SuspenseList");
        case 0:
        case 2:
        case 15:
          return a4 = Oa(a4.type, !1), a4;
        case 11:
          return a4 = Oa(a4.type.render, !1), a4;
        case 1:
          return a4 = Oa(a4.type, !0), a4;
        default:
          return "";
      }
    }
    function Qa(a4) {
      if (a4 == null)
        return null;
      if (typeof a4 == "function")
        return a4.displayName || a4.name || null;
      if (typeof a4 == "string")
        return a4;
      switch (a4) {
        case ya:
          return "Fragment";
        case wa:
          return "Portal";
        case Aa:
          return "Profiler";
        case za:
          return "StrictMode";
        case Ea:
          return "Suspense";
        case Fa:
          return "SuspenseList";
      }
      if (typeof a4 == "object")
        switch (a4.$$typeof) {
          case Ca:
            return (a4.displayName || "Context") + ".Consumer";
          case Ba:
            return (a4._context.displayName || "Context") + ".Provider";
          case Da:
            var b3 = a4.render;
            return a4 = a4.displayName, a4 || (a4 = b3.displayName || b3.name || "", a4 = a4 !== "" ? "ForwardRef(" + a4 + ")" : "ForwardRef"), a4;
          case Ga:
            return b3 = a4.displayName || null, b3 !== null ? b3 : Qa(a4.type) || "Memo";
          case Ha:
            b3 = a4._payload, a4 = a4._init;
            try {
              return Qa(a4(b3));
            } catch {
            }
        }
      return null;
    }
    function Ra(a4) {
      var b3 = a4.type;
      switch (a4.tag) {
        case 24:
          return "Cache";
        case 9:
          return (b3.displayName || "Context") + ".Consumer";
        case 10:
          return (b3._context.displayName || "Context") + ".Provider";
        case 18:
          return "DehydratedFragment";
        case 11:
          return a4 = b3.render, a4 = a4.displayName || a4.name || "", b3.displayName || (a4 !== "" ? "ForwardRef(" + a4 + ")" : "ForwardRef");
        case 7:
          return "Fragment";
        case 5:
          return b3;
        case 4:
          return "Portal";
        case 3:
          return "Root";
        case 6:
          return "Text";
        case 16:
          return Qa(b3);
        case 8:
          return b3 === za ? "StrictMode" : "Mode";
        case 22:
          return "Offscreen";
        case 12:
          return "Profiler";
        case 21:
          return "Scope";
        case 13:
          return "Suspense";
        case 19:
          return "SuspenseList";
        case 25:
          return "TracingMarker";
        case 1:
        case 0:
        case 17:
        case 2:
        case 14:
        case 15:
          if (typeof b3 == "function")
            return b3.displayName || b3.name || null;
          if (typeof b3 == "string")
            return b3;
      }
      return null;
    }
    function Sa(a4) {
      switch (typeof a4) {
        case "boolean":
        case "number":
        case "string":
        case "undefined":
          return a4;
        case "object":
          return a4;
        default:
          return "";
      }
    }
    function Ta(a4) {
      var b3 = a4.type;
      return (a4 = a4.nodeName) && a4.toLowerCase() === "input" && (b3 === "checkbox" || b3 === "radio");
    }
    function Ua(a4) {
      var b3 = Ta(a4) ? "checked" : "value", c3 = Object.getOwnPropertyDescriptor(a4.constructor.prototype, b3), d4 = "" + a4[b3];
      if (!a4.hasOwnProperty(b3) && typeof c3 < "u" && typeof c3.get == "function" && typeof c3.set == "function") {
        var e3 = c3.get, f2 = c3.set;
        return Object.defineProperty(a4, b3, { configurable: !0, get: function() {
          return e3.call(this);
        }, set: function(a5) {
          d4 = "" + a5, f2.call(this, a5);
        } }), Object.defineProperty(a4, b3, { enumerable: c3.enumerable }), { getValue: function() {
          return d4;
        }, setValue: function(a5) {
          d4 = "" + a5;
        }, stopTracking: function() {
          a4._valueTracker = null, delete a4[b3];
        } };
      }
    }
    function Va(a4) {
      a4._valueTracker || (a4._valueTracker = Ua(a4));
    }
    function Wa(a4) {
      if (!a4)
        return !1;
      var b3 = a4._valueTracker;
      if (!b3)
        return !0;
      var c3 = b3.getValue(), d4 = "";
      return a4 && (d4 = Ta(a4) ? a4.checked ? "true" : "false" : a4.value), a4 = d4, a4 !== c3 ? (b3.setValue(a4), !0) : !1;
    }
    function Xa(a4) {
      if (a4 = a4 || (typeof document < "u" ? document : void 0), typeof a4 > "u")
        return null;
      try {
        return a4.activeElement || a4.body;
      } catch {
        return a4.body;
      }
    }
    function Ya(a4, b3) {
      var c3 = b3.checked;
      return A({}, b3, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: c3 ?? a4._wrapperState.initialChecked });
    }
    function Za(a4, b3) {
      var c3 = b3.defaultValue == null ? "" : b3.defaultValue, d4 = b3.checked != null ? b3.checked : b3.defaultChecked;
      c3 = Sa(b3.value != null ? b3.value : c3), a4._wrapperState = { initialChecked: d4, initialValue: c3, controlled: b3.type === "checkbox" || b3.type === "radio" ? b3.checked != null : b3.value != null };
    }
    function ab(a4, b3) {
      b3 = b3.checked, b3 != null && ta(a4, "checked", b3, !1);
    }
    function bb(a4, b3) {
      ab(a4, b3);
      var c3 = Sa(b3.value), d4 = b3.type;
      if (c3 != null)
        d4 === "number" ? (c3 === 0 && a4.value === "" || a4.value != c3) && (a4.value = "" + c3) : a4.value !== "" + c3 && (a4.value = "" + c3);
      else if (d4 === "submit" || d4 === "reset") {
        a4.removeAttribute("value");
        return;
      }
      b3.hasOwnProperty("value") ? cb(a4, b3.type, c3) : b3.hasOwnProperty("defaultValue") && cb(a4, b3.type, Sa(b3.defaultValue)), b3.checked == null && b3.defaultChecked != null && (a4.defaultChecked = !!b3.defaultChecked);
    }
    function db(a4, b3, c3) {
      if (b3.hasOwnProperty("value") || b3.hasOwnProperty("defaultValue")) {
        var d4 = b3.type;
        if (!(d4 !== "submit" && d4 !== "reset" || b3.value !== void 0 && b3.value !== null))
          return;
        b3 = "" + a4._wrapperState.initialValue, c3 || b3 === a4.value || (a4.value = b3), a4.defaultValue = b3;
      }
      c3 = a4.name, c3 !== "" && (a4.name = ""), a4.defaultChecked = !!a4._wrapperState.initialChecked, c3 !== "" && (a4.name = c3);
    }
    function cb(a4, b3, c3) {
      (b3 !== "number" || Xa(a4.ownerDocument) !== a4) && (c3 == null ? a4.defaultValue = "" + a4._wrapperState.initialValue : a4.defaultValue !== "" + c3 && (a4.defaultValue = "" + c3));
    }
    var eb = Array.isArray;
    function fb(a4, b3, c3, d4) {
      if (a4 = a4.options, b3) {
        b3 = {};
        for (var e3 = 0; e3 < c3.length; e3++)
          b3["$" + c3[e3]] = !0;
        for (c3 = 0; c3 < a4.length; c3++)
          e3 = b3.hasOwnProperty("$" + a4[c3].value), a4[c3].selected !== e3 && (a4[c3].selected = e3), e3 && d4 && (a4[c3].defaultSelected = !0);
      } else {
        for (c3 = "" + Sa(c3), b3 = null, e3 = 0; e3 < a4.length; e3++) {
          if (a4[e3].value === c3) {
            a4[e3].selected = !0, d4 && (a4[e3].defaultSelected = !0);
            return;
          }
          b3 !== null || a4[e3].disabled || (b3 = a4[e3]);
        }
        b3 !== null && (b3.selected = !0);
      }
    }
    function gb(a4, b3) {
      if (b3.dangerouslySetInnerHTML != null)
        throw Error(p2(91));
      return A({}, b3, { value: void 0, defaultValue: void 0, children: "" + a4._wrapperState.initialValue });
    }
    function hb(a4, b3) {
      var c3 = b3.value;
      if (c3 == null) {
        if (c3 = b3.children, b3 = b3.defaultValue, c3 != null) {
          if (b3 != null)
            throw Error(p2(92));
          if (eb(c3)) {
            if (1 < c3.length)
              throw Error(p2(93));
            c3 = c3[0];
          }
          b3 = c3;
        }
        b3 == null && (b3 = ""), c3 = b3;
      }
      a4._wrapperState = { initialValue: Sa(c3) };
    }
    function ib(a4, b3) {
      var c3 = Sa(b3.value), d4 = Sa(b3.defaultValue);
      c3 != null && (c3 = "" + c3, c3 !== a4.value && (a4.value = c3), b3.defaultValue == null && a4.defaultValue !== c3 && (a4.defaultValue = c3)), d4 != null && (a4.defaultValue = "" + d4);
    }
    function jb(a4) {
      var b3 = a4.textContent;
      b3 === a4._wrapperState.initialValue && b3 !== "" && b3 !== null && (a4.value = b3);
    }
    function kb(a4) {
      switch (a4) {
        case "svg":
          return "http://www.w3.org/2000/svg";
        case "math":
          return "http://www.w3.org/1998/Math/MathML";
        default:
          return "http://www.w3.org/1999/xhtml";
      }
    }
    function lb(a4, b3) {
      return a4 == null || a4 === "http://www.w3.org/1999/xhtml" ? kb(b3) : a4 === "http://www.w3.org/2000/svg" && b3 === "foreignObject" ? "http://www.w3.org/1999/xhtml" : a4;
    }
    var mb, nb = function(a4) {
      return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(b3, c3, d4, e3) {
        MSApp.execUnsafeLocalFunction(function() {
          return a4(b3, c3, d4, e3);
        });
      } : a4;
    }(function(a4, b3) {
      if (a4.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in a4)
        a4.innerHTML = b3;
      else {
        for (mb = mb || document.createElement("div"), mb.innerHTML = "<svg>" + b3.valueOf().toString() + "</svg>", b3 = mb.firstChild; a4.firstChild; )
          a4.removeChild(a4.firstChild);
        for (; b3.firstChild; )
          a4.appendChild(b3.firstChild);
      }
    });
    function ob(a4, b3) {
      if (b3) {
        var c3 = a4.firstChild;
        if (c3 && c3 === a4.lastChild && c3.nodeType === 3) {
          c3.nodeValue = b3;
          return;
        }
      }
      a4.textContent = b3;
    }
    var pb = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, qb = ["Webkit", "ms", "Moz", "O"];
    Object.keys(pb).forEach(function(a4) {
      qb.forEach(function(b3) {
        b3 = b3 + a4.charAt(0).toUpperCase() + a4.substring(1), pb[b3] = pb[a4];
      });
    });
    function rb(a4, b3, c3) {
      return b3 == null || typeof b3 == "boolean" || b3 === "" ? "" : c3 || typeof b3 != "number" || b3 === 0 || pb.hasOwnProperty(a4) && pb[a4] ? ("" + b3).trim() : b3 + "px";
    }
    function sb(a4, b3) {
      a4 = a4.style;
      for (var c3 in b3)
        if (b3.hasOwnProperty(c3)) {
          var d4 = c3.indexOf("--") === 0, e3 = rb(c3, b3[c3], d4);
          c3 === "float" && (c3 = "cssFloat"), d4 ? a4.setProperty(c3, e3) : a4[c3] = e3;
        }
    }
    var tb = A({ menuitem: !0 }, { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 });
    function ub(a4, b3) {
      if (b3) {
        if (tb[a4] && (b3.children != null || b3.dangerouslySetInnerHTML != null))
          throw Error(p2(137, a4));
        if (b3.dangerouslySetInnerHTML != null) {
          if (b3.children != null)
            throw Error(p2(60));
          if (typeof b3.dangerouslySetInnerHTML != "object" || !("__html" in b3.dangerouslySetInnerHTML))
            throw Error(p2(61));
        }
        if (b3.style != null && typeof b3.style != "object")
          throw Error(p2(62));
      }
    }
    function vb(a4, b3) {
      if (a4.indexOf("-") === -1)
        return typeof b3.is == "string";
      switch (a4) {
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return !1;
        default:
          return !0;
      }
    }
    var wb = null;
    function xb(a4) {
      return a4 = a4.target || a4.srcElement || window, a4.correspondingUseElement && (a4 = a4.correspondingUseElement), a4.nodeType === 3 ? a4.parentNode : a4;
    }
    var yb = null, zb = null, Ab = null;
    function Bb(a4) {
      if (a4 = Cb(a4)) {
        if (typeof yb != "function")
          throw Error(p2(280));
        var b3 = a4.stateNode;
        b3 && (b3 = Db(b3), yb(a4.stateNode, a4.type, b3));
      }
    }
    function Eb(a4) {
      zb ? Ab ? Ab.push(a4) : Ab = [a4] : zb = a4;
    }
    function Fb() {
      if (zb) {
        var a4 = zb, b3 = Ab;
        if (Ab = zb = null, Bb(a4), b3)
          for (a4 = 0; a4 < b3.length; a4++)
            Bb(b3[a4]);
      }
    }
    function Gb(a4, b3) {
      return a4(b3);
    }
    function Hb() {
    }
    var Ib = !1;
    function Jb(a4, b3, c3) {
      if (Ib)
        return a4(b3, c3);
      Ib = !0;
      try {
        return Gb(a4, b3, c3);
      } finally {
        Ib = !1, (zb !== null || Ab !== null) && (Hb(), Fb());
      }
    }
    function Kb(a4, b3) {
      var c3 = a4.stateNode;
      if (c3 === null)
        return null;
      var d4 = Db(c3);
      if (d4 === null)
        return null;
      c3 = d4[b3];
      a:
        switch (b3) {
          case "onClick":
          case "onClickCapture":
          case "onDoubleClick":
          case "onDoubleClickCapture":
          case "onMouseDown":
          case "onMouseDownCapture":
          case "onMouseMove":
          case "onMouseMoveCapture":
          case "onMouseUp":
          case "onMouseUpCapture":
          case "onMouseEnter":
            (d4 = !d4.disabled) || (a4 = a4.type, d4 = !(a4 === "button" || a4 === "input" || a4 === "select" || a4 === "textarea")), a4 = !d4;
            break a;
          default:
            a4 = !1;
        }
      if (a4)
        return null;
      if (c3 && typeof c3 != "function")
        throw Error(p2(231, b3, typeof c3));
      return c3;
    }
    var Lb = !1;
    if (ia)
      try {
        Mb = {}, Object.defineProperty(Mb, "passive", { get: function() {
          Lb = !0;
        } }), window.addEventListener("test", Mb, Mb), window.removeEventListener("test", Mb, Mb);
      } catch {
        Lb = !1;
      }
    var Mb;
    function Nb(a4, b3, c3, d4, e3, f2, g2, h4, k3) {
      var l2 = Array.prototype.slice.call(arguments, 3);
      try {
        b3.apply(c3, l2);
      } catch (m4) {
        this.onError(m4);
      }
    }
    var Ob = !1, Pb = null, Qb = !1, Rb = null, Sb = { onError: function(a4) {
      Ob = !0, Pb = a4;
    } };
    function Tb(a4, b3, c3, d4, e3, f2, g2, h4, k3) {
      Ob = !1, Pb = null, Nb.apply(Sb, arguments);
    }
    function Ub(a4, b3, c3, d4, e3, f2, g2, h4, k3) {
      if (Tb.apply(this, arguments), Ob) {
        if (Ob) {
          var l2 = Pb;
          Ob = !1, Pb = null;
        } else
          throw Error(p2(198));
        Qb || (Qb = !0, Rb = l2);
      }
    }
    function Vb(a4) {
      var b3 = a4, c3 = a4;
      if (a4.alternate)
        for (; b3.return; )
          b3 = b3.return;
      else {
        a4 = b3;
        do
          b3 = a4, b3.flags & 4098 && (c3 = b3.return), a4 = b3.return;
        while (a4);
      }
      return b3.tag === 3 ? c3 : null;
    }
    function Wb(a4) {
      if (a4.tag === 13) {
        var b3 = a4.memoizedState;
        if (b3 === null && (a4 = a4.alternate, a4 !== null && (b3 = a4.memoizedState)), b3 !== null)
          return b3.dehydrated;
      }
      return null;
    }
    function Xb(a4) {
      if (Vb(a4) !== a4)
        throw Error(p2(188));
    }
    function Yb(a4) {
      var b3 = a4.alternate;
      if (!b3) {
        if (b3 = Vb(a4), b3 === null)
          throw Error(p2(188));
        return b3 !== a4 ? null : a4;
      }
      for (var c3 = a4, d4 = b3; ; ) {
        var e3 = c3.return;
        if (e3 === null)
          break;
        var f2 = e3.alternate;
        if (f2 === null) {
          if (d4 = e3.return, d4 !== null) {
            c3 = d4;
            continue;
          }
          break;
        }
        if (e3.child === f2.child) {
          for (f2 = e3.child; f2; ) {
            if (f2 === c3)
              return Xb(e3), a4;
            if (f2 === d4)
              return Xb(e3), b3;
            f2 = f2.sibling;
          }
          throw Error(p2(188));
        }
        if (c3.return !== d4.return)
          c3 = e3, d4 = f2;
        else {
          for (var g2 = !1, h4 = e3.child; h4; ) {
            if (h4 === c3) {
              g2 = !0, c3 = e3, d4 = f2;
              break;
            }
            if (h4 === d4) {
              g2 = !0, d4 = e3, c3 = f2;
              break;
            }
            h4 = h4.sibling;
          }
          if (!g2) {
            for (h4 = f2.child; h4; ) {
              if (h4 === c3) {
                g2 = !0, c3 = f2, d4 = e3;
                break;
              }
              if (h4 === d4) {
                g2 = !0, d4 = f2, c3 = e3;
                break;
              }
              h4 = h4.sibling;
            }
            if (!g2)
              throw Error(p2(189));
          }
        }
        if (c3.alternate !== d4)
          throw Error(p2(190));
      }
      if (c3.tag !== 3)
        throw Error(p2(188));
      return c3.stateNode.current === c3 ? a4 : b3;
    }
    function Zb(a4) {
      return a4 = Yb(a4), a4 !== null ? $b(a4) : null;
    }
    function $b(a4) {
      if (a4.tag === 5 || a4.tag === 6)
        return a4;
      for (a4 = a4.child; a4 !== null; ) {
        var b3 = $b(a4);
        if (b3 !== null)
          return b3;
        a4 = a4.sibling;
      }
      return null;
    }
    var ac = ca.unstable_scheduleCallback, bc = ca.unstable_cancelCallback, cc = ca.unstable_shouldYield, dc = ca.unstable_requestPaint, B2 = ca.unstable_now, ec = ca.unstable_getCurrentPriorityLevel, fc = ca.unstable_ImmediatePriority, gc = ca.unstable_UserBlockingPriority, hc = ca.unstable_NormalPriority, ic = ca.unstable_LowPriority, jc = ca.unstable_IdlePriority, kc = null, lc = null;
    function mc(a4) {
      if (lc && typeof lc.onCommitFiberRoot == "function")
        try {
          lc.onCommitFiberRoot(kc, a4, void 0, (a4.current.flags & 128) === 128);
        } catch {
        }
    }
    var oc = Math.clz32 ? Math.clz32 : nc, pc = Math.log, qc = Math.LN2;
    function nc(a4) {
      return a4 >>>= 0, a4 === 0 ? 32 : 31 - (pc(a4) / qc | 0) | 0;
    }
    var rc = 64, sc = 4194304;
    function tc(a4) {
      switch (a4 & -a4) {
        case 1:
          return 1;
        case 2:
          return 2;
        case 4:
          return 4;
        case 8:
          return 8;
        case 16:
          return 16;
        case 32:
          return 32;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return a4 & 4194240;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return a4 & 130023424;
        case 134217728:
          return 134217728;
        case 268435456:
          return 268435456;
        case 536870912:
          return 536870912;
        case 1073741824:
          return 1073741824;
        default:
          return a4;
      }
    }
    function uc(a4, b3) {
      var c3 = a4.pendingLanes;
      if (c3 === 0)
        return 0;
      var d4 = 0, e3 = a4.suspendedLanes, f2 = a4.pingedLanes, g2 = c3 & 268435455;
      if (g2 !== 0) {
        var h4 = g2 & ~e3;
        h4 !== 0 ? d4 = tc(h4) : (f2 &= g2, f2 !== 0 && (d4 = tc(f2)));
      } else
        g2 = c3 & ~e3, g2 !== 0 ? d4 = tc(g2) : f2 !== 0 && (d4 = tc(f2));
      if (d4 === 0)
        return 0;
      if (b3 !== 0 && b3 !== d4 && !(b3 & e3) && (e3 = d4 & -d4, f2 = b3 & -b3, e3 >= f2 || e3 === 16 && (f2 & 4194240) !== 0))
        return b3;
      if (d4 & 4 && (d4 |= c3 & 16), b3 = a4.entangledLanes, b3 !== 0)
        for (a4 = a4.entanglements, b3 &= d4; 0 < b3; )
          c3 = 31 - oc(b3), e3 = 1 << c3, d4 |= a4[c3], b3 &= ~e3;
      return d4;
    }
    function vc(a4, b3) {
      switch (a4) {
        case 1:
        case 2:
        case 4:
          return b3 + 250;
        case 8:
        case 16:
        case 32:
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
          return b3 + 5e3;
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          return -1;
        case 134217728:
        case 268435456:
        case 536870912:
        case 1073741824:
          return -1;
        default:
          return -1;
      }
    }
    function wc(a4, b3) {
      for (var c3 = a4.suspendedLanes, d4 = a4.pingedLanes, e3 = a4.expirationTimes, f2 = a4.pendingLanes; 0 < f2; ) {
        var g2 = 31 - oc(f2), h4 = 1 << g2, k3 = e3[g2];
        k3 === -1 ? (!(h4 & c3) || h4 & d4) && (e3[g2] = vc(h4, b3)) : k3 <= b3 && (a4.expiredLanes |= h4), f2 &= ~h4;
      }
    }
    function xc(a4) {
      return a4 = a4.pendingLanes & -1073741825, a4 !== 0 ? a4 : a4 & 1073741824 ? 1073741824 : 0;
    }
    function yc() {
      var a4 = rc;
      return rc <<= 1, !(rc & 4194240) && (rc = 64), a4;
    }
    function zc(a4) {
      for (var b3 = [], c3 = 0; 31 > c3; c3++)
        b3.push(a4);
      return b3;
    }
    function Ac(a4, b3, c3) {
      a4.pendingLanes |= b3, b3 !== 536870912 && (a4.suspendedLanes = 0, a4.pingedLanes = 0), a4 = a4.eventTimes, b3 = 31 - oc(b3), a4[b3] = c3;
    }
    function Bc(a4, b3) {
      var c3 = a4.pendingLanes & ~b3;
      a4.pendingLanes = b3, a4.suspendedLanes = 0, a4.pingedLanes = 0, a4.expiredLanes &= b3, a4.mutableReadLanes &= b3, a4.entangledLanes &= b3, b3 = a4.entanglements;
      var d4 = a4.eventTimes;
      for (a4 = a4.expirationTimes; 0 < c3; ) {
        var e3 = 31 - oc(c3), f2 = 1 << e3;
        b3[e3] = 0, d4[e3] = -1, a4[e3] = -1, c3 &= ~f2;
      }
    }
    function Cc(a4, b3) {
      var c3 = a4.entangledLanes |= b3;
      for (a4 = a4.entanglements; c3; ) {
        var d4 = 31 - oc(c3), e3 = 1 << d4;
        e3 & b3 | a4[d4] & b3 && (a4[d4] |= b3), c3 &= ~e3;
      }
    }
    var C = 0;
    function Dc(a4) {
      return a4 &= -a4, 1 < a4 ? 4 < a4 ? a4 & 268435455 ? 16 : 536870912 : 4 : 1;
    }
    var Ec, Fc, Gc, Hc, Ic, Jc = !1, Kc = [], Lc = null, Mc = null, Nc = null, Oc = /* @__PURE__ */ new Map(), Pc = /* @__PURE__ */ new Map(), Qc = [], Rc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");
    function Sc(a4, b3) {
      switch (a4) {
        case "focusin":
        case "focusout":
          Lc = null;
          break;
        case "dragenter":
        case "dragleave":
          Mc = null;
          break;
        case "mouseover":
        case "mouseout":
          Nc = null;
          break;
        case "pointerover":
        case "pointerout":
          Oc.delete(b3.pointerId);
          break;
        case "gotpointercapture":
        case "lostpointercapture":
          Pc.delete(b3.pointerId);
      }
    }
    function Tc(a4, b3, c3, d4, e3, f2) {
      return a4 === null || a4.nativeEvent !== f2 ? (a4 = { blockedOn: b3, domEventName: c3, eventSystemFlags: d4, nativeEvent: f2, targetContainers: [e3] }, b3 !== null && (b3 = Cb(b3), b3 !== null && Fc(b3)), a4) : (a4.eventSystemFlags |= d4, b3 = a4.targetContainers, e3 !== null && b3.indexOf(e3) === -1 && b3.push(e3), a4);
    }
    function Uc(a4, b3, c3, d4, e3) {
      switch (b3) {
        case "focusin":
          return Lc = Tc(Lc, a4, b3, c3, d4, e3), !0;
        case "dragenter":
          return Mc = Tc(Mc, a4, b3, c3, d4, e3), !0;
        case "mouseover":
          return Nc = Tc(Nc, a4, b3, c3, d4, e3), !0;
        case "pointerover":
          var f2 = e3.pointerId;
          return Oc.set(f2, Tc(Oc.get(f2) || null, a4, b3, c3, d4, e3)), !0;
        case "gotpointercapture":
          return f2 = e3.pointerId, Pc.set(f2, Tc(Pc.get(f2) || null, a4, b3, c3, d4, e3)), !0;
      }
      return !1;
    }
    function Vc(a4) {
      var b3 = Wc(a4.target);
      if (b3 !== null) {
        var c3 = Vb(b3);
        if (c3 !== null) {
          if (b3 = c3.tag, b3 === 13) {
            if (b3 = Wb(c3), b3 !== null) {
              a4.blockedOn = b3, Ic(a4.priority, function() {
                Gc(c3);
              });
              return;
            }
          } else if (b3 === 3 && c3.stateNode.current.memoizedState.isDehydrated) {
            a4.blockedOn = c3.tag === 3 ? c3.stateNode.containerInfo : null;
            return;
          }
        }
      }
      a4.blockedOn = null;
    }
    function Xc(a4) {
      if (a4.blockedOn !== null)
        return !1;
      for (var b3 = a4.targetContainers; 0 < b3.length; ) {
        var c3 = Yc(a4.domEventName, a4.eventSystemFlags, b3[0], a4.nativeEvent);
        if (c3 === null) {
          c3 = a4.nativeEvent;
          var d4 = new c3.constructor(c3.type, c3);
          wb = d4, c3.target.dispatchEvent(d4), wb = null;
        } else
          return b3 = Cb(c3), b3 !== null && Fc(b3), a4.blockedOn = c3, !1;
        b3.shift();
      }
      return !0;
    }
    function Zc(a4, b3, c3) {
      Xc(a4) && c3.delete(b3);
    }
    function $c() {
      Jc = !1, Lc !== null && Xc(Lc) && (Lc = null), Mc !== null && Xc(Mc) && (Mc = null), Nc !== null && Xc(Nc) && (Nc = null), Oc.forEach(Zc), Pc.forEach(Zc);
    }
    function ad(a4, b3) {
      a4.blockedOn === b3 && (a4.blockedOn = null, Jc || (Jc = !0, ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)));
    }
    function bd(a4) {
      function b3(b4) {
        return ad(b4, a4);
      }
      if (0 < Kc.length) {
        ad(Kc[0], a4);
        for (var c3 = 1; c3 < Kc.length; c3++) {
          var d4 = Kc[c3];
          d4.blockedOn === a4 && (d4.blockedOn = null);
        }
      }
      for (Lc !== null && ad(Lc, a4), Mc !== null && ad(Mc, a4), Nc !== null && ad(Nc, a4), Oc.forEach(b3), Pc.forEach(b3), c3 = 0; c3 < Qc.length; c3++)
        d4 = Qc[c3], d4.blockedOn === a4 && (d4.blockedOn = null);
      for (; 0 < Qc.length && (c3 = Qc[0], c3.blockedOn === null); )
        Vc(c3), c3.blockedOn === null && Qc.shift();
    }
    var cd = ua.ReactCurrentBatchConfig, dd = !0;
    function ed(a4, b3, c3, d4) {
      var e3 = C, f2 = cd.transition;
      cd.transition = null;
      try {
        C = 1, fd(a4, b3, c3, d4);
      } finally {
        C = e3, cd.transition = f2;
      }
    }
    function gd(a4, b3, c3, d4) {
      var e3 = C, f2 = cd.transition;
      cd.transition = null;
      try {
        C = 4, fd(a4, b3, c3, d4);
      } finally {
        C = e3, cd.transition = f2;
      }
    }
    function fd(a4, b3, c3, d4) {
      if (dd) {
        var e3 = Yc(a4, b3, c3, d4);
        if (e3 === null)
          hd(a4, b3, d4, id3, c3), Sc(a4, d4);
        else if (Uc(e3, a4, b3, c3, d4))
          d4.stopPropagation();
        else if (Sc(a4, d4), b3 & 4 && -1 < Rc.indexOf(a4)) {
          for (; e3 !== null; ) {
            var f2 = Cb(e3);
            if (f2 !== null && Ec(f2), f2 = Yc(a4, b3, c3, d4), f2 === null && hd(a4, b3, d4, id3, c3), f2 === e3)
              break;
            e3 = f2;
          }
          e3 !== null && d4.stopPropagation();
        } else
          hd(a4, b3, d4, null, c3);
      }
    }
    var id3 = null;
    function Yc(a4, b3, c3, d4) {
      if (id3 = null, a4 = xb(d4), a4 = Wc(a4), a4 !== null)
        if (b3 = Vb(a4), b3 === null)
          a4 = null;
        else if (c3 = b3.tag, c3 === 13) {
          if (a4 = Wb(b3), a4 !== null)
            return a4;
          a4 = null;
        } else if (c3 === 3) {
          if (b3.stateNode.current.memoizedState.isDehydrated)
            return b3.tag === 3 ? b3.stateNode.containerInfo : null;
          a4 = null;
        } else
          b3 !== a4 && (a4 = null);
      return id3 = a4, null;
    }
    function jd(a4) {
      switch (a4) {
        case "cancel":
        case "click":
        case "close":
        case "contextmenu":
        case "copy":
        case "cut":
        case "auxclick":
        case "dblclick":
        case "dragend":
        case "dragstart":
        case "drop":
        case "focusin":
        case "focusout":
        case "input":
        case "invalid":
        case "keydown":
        case "keypress":
        case "keyup":
        case "mousedown":
        case "mouseup":
        case "paste":
        case "pause":
        case "play":
        case "pointercancel":
        case "pointerdown":
        case "pointerup":
        case "ratechange":
        case "reset":
        case "resize":
        case "seeked":
        case "submit":
        case "touchcancel":
        case "touchend":
        case "touchstart":
        case "volumechange":
        case "change":
        case "selectionchange":
        case "textInput":
        case "compositionstart":
        case "compositionend":
        case "compositionupdate":
        case "beforeblur":
        case "afterblur":
        case "beforeinput":
        case "blur":
        case "fullscreenchange":
        case "focus":
        case "hashchange":
        case "popstate":
        case "select":
        case "selectstart":
          return 1;
        case "drag":
        case "dragenter":
        case "dragexit":
        case "dragleave":
        case "dragover":
        case "mousemove":
        case "mouseout":
        case "mouseover":
        case "pointermove":
        case "pointerout":
        case "pointerover":
        case "scroll":
        case "toggle":
        case "touchmove":
        case "wheel":
        case "mouseenter":
        case "mouseleave":
        case "pointerenter":
        case "pointerleave":
          return 4;
        case "message":
          switch (ec()) {
            case fc:
              return 1;
            case gc:
              return 4;
            case hc:
            case ic:
              return 16;
            case jc:
              return 536870912;
            default:
              return 16;
          }
        default:
          return 16;
      }
    }
    var kd = null, ld = null, md = null;
    function nd() {
      if (md)
        return md;
      var a4, b3 = ld, c3 = b3.length, d4, e3 = "value" in kd ? kd.value : kd.textContent, f2 = e3.length;
      for (a4 = 0; a4 < c3 && b3[a4] === e3[a4]; a4++)
        ;
      var g2 = c3 - a4;
      for (d4 = 1; d4 <= g2 && b3[c3 - d4] === e3[f2 - d4]; d4++)
        ;
      return md = e3.slice(a4, 1 < d4 ? 1 - d4 : void 0);
    }
    function od(a4) {
      var b3 = a4.keyCode;
      return "charCode" in a4 ? (a4 = a4.charCode, a4 === 0 && b3 === 13 && (a4 = 13)) : a4 = b3, a4 === 10 && (a4 = 13), 32 <= a4 || a4 === 13 ? a4 : 0;
    }
    function pd() {
      return !0;
    }
    function qd() {
      return !1;
    }
    function rd(a4) {
      function b3(b4, d4, e3, f2, g2) {
        this._reactName = b4, this._targetInst = e3, this.type = d4, this.nativeEvent = f2, this.target = g2, this.currentTarget = null;
        for (var c3 in a4)
          a4.hasOwnProperty(c3) && (b4 = a4[c3], this[c3] = b4 ? b4(f2) : f2[c3]);
        return this.isDefaultPrevented = (f2.defaultPrevented != null ? f2.defaultPrevented : f2.returnValue === !1) ? pd : qd, this.isPropagationStopped = qd, this;
      }
      return A(b3.prototype, { preventDefault: function() {
        this.defaultPrevented = !0;
        var a5 = this.nativeEvent;
        a5 && (a5.preventDefault ? a5.preventDefault() : typeof a5.returnValue != "unknown" && (a5.returnValue = !1), this.isDefaultPrevented = pd);
      }, stopPropagation: function() {
        var a5 = this.nativeEvent;
        a5 && (a5.stopPropagation ? a5.stopPropagation() : typeof a5.cancelBubble != "unknown" && (a5.cancelBubble = !0), this.isPropagationStopped = pd);
      }, persist: function() {
      }, isPersistent: pd }), b3;
    }
    var sd = { eventPhase: 0, bubbles: 0, cancelable: 0, timeStamp: function(a4) {
      return a4.timeStamp || Date.now();
    }, defaultPrevented: 0, isTrusted: 0 }, td = rd(sd), ud = A({}, sd, { view: 0, detail: 0 }), vd = rd(ud), wd, xd, yd, Ad = A({}, ud, { screenX: 0, screenY: 0, clientX: 0, clientY: 0, pageX: 0, pageY: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, getModifierState: zd, button: 0, buttons: 0, relatedTarget: function(a4) {
      return a4.relatedTarget === void 0 ? a4.fromElement === a4.srcElement ? a4.toElement : a4.fromElement : a4.relatedTarget;
    }, movementX: function(a4) {
      return "movementX" in a4 ? a4.movementX : (a4 !== yd && (yd && a4.type === "mousemove" ? (wd = a4.screenX - yd.screenX, xd = a4.screenY - yd.screenY) : xd = wd = 0, yd = a4), wd);
    }, movementY: function(a4) {
      return "movementY" in a4 ? a4.movementY : xd;
    } }), Bd = rd(Ad), Cd = A({}, Ad, { dataTransfer: 0 }), Dd = rd(Cd), Ed = A({}, ud, { relatedTarget: 0 }), Fd = rd(Ed), Gd = A({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }), Hd = rd(Gd), Id = A({}, sd, { clipboardData: function(a4) {
      return "clipboardData" in a4 ? a4.clipboardData : window.clipboardData;
    } }), Jd = rd(Id), Kd = A({}, sd, { data: 0 }), Ld = rd(Kd), Md = {
      Esc: "Escape",
      Spacebar: " ",
      Left: "ArrowLeft",
      Up: "ArrowUp",
      Right: "ArrowRight",
      Down: "ArrowDown",
      Del: "Delete",
      Win: "OS",
      Menu: "ContextMenu",
      Apps: "ContextMenu",
      Scroll: "ScrollLock",
      MozPrintableKey: "Unidentified"
    }, Nd = {
      8: "Backspace",
      9: "Tab",
      12: "Clear",
      13: "Enter",
      16: "Shift",
      17: "Control",
      18: "Alt",
      19: "Pause",
      20: "CapsLock",
      27: "Escape",
      32: " ",
      33: "PageUp",
      34: "PageDown",
      35: "End",
      36: "Home",
      37: "ArrowLeft",
      38: "ArrowUp",
      39: "ArrowRight",
      40: "ArrowDown",
      45: "Insert",
      46: "Delete",
      112: "F1",
      113: "F2",
      114: "F3",
      115: "F4",
      116: "F5",
      117: "F6",
      118: "F7",
      119: "F8",
      120: "F9",
      121: "F10",
      122: "F11",
      123: "F12",
      144: "NumLock",
      145: "ScrollLock",
      224: "Meta"
    }, Od = { Alt: "altKey", Control: "ctrlKey", Meta: "metaKey", Shift: "shiftKey" };
    function Pd(a4) {
      var b3 = this.nativeEvent;
      return b3.getModifierState ? b3.getModifierState(a4) : (a4 = Od[a4]) ? !!b3[a4] : !1;
    }
    function zd() {
      return Pd;
    }
    var Qd = A({}, ud, { key: function(a4) {
      if (a4.key) {
        var b3 = Md[a4.key] || a4.key;
        if (b3 !== "Unidentified")
          return b3;
      }
      return a4.type === "keypress" ? (a4 = od(a4), a4 === 13 ? "Enter" : String.fromCharCode(a4)) : a4.type === "keydown" || a4.type === "keyup" ? Nd[a4.keyCode] || "Unidentified" : "";
    }, code: 0, location: 0, ctrlKey: 0, shiftKey: 0, altKey: 0, metaKey: 0, repeat: 0, locale: 0, getModifierState: zd, charCode: function(a4) {
      return a4.type === "keypress" ? od(a4) : 0;
    }, keyCode: function(a4) {
      return a4.type === "keydown" || a4.type === "keyup" ? a4.keyCode : 0;
    }, which: function(a4) {
      return a4.type === "keypress" ? od(a4) : a4.type === "keydown" || a4.type === "keyup" ? a4.keyCode : 0;
    } }), Rd = rd(Qd), Sd = A({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }), Td = rd(Sd), Ud = A({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }), Vd = rd(Ud), Wd = A({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }), Xd = rd(Wd), Yd = A({}, Ad, {
      deltaX: function(a4) {
        return "deltaX" in a4 ? a4.deltaX : "wheelDeltaX" in a4 ? -a4.wheelDeltaX : 0;
      },
      deltaY: function(a4) {
        return "deltaY" in a4 ? a4.deltaY : "wheelDeltaY" in a4 ? -a4.wheelDeltaY : "wheelDelta" in a4 ? -a4.wheelDelta : 0;
      },
      deltaZ: 0,
      deltaMode: 0
    }), Zd = rd(Yd), $d = [9, 13, 27, 32], ae2 = ia && "CompositionEvent" in window, be2 = null;
    ia && "documentMode" in document && (be2 = document.documentMode);
    var ce = ia && "TextEvent" in window && !be2, de2 = ia && (!ae2 || be2 && 8 < be2 && 11 >= be2), ee2 = String.fromCharCode(32), fe2 = !1;
    function ge2(a4, b3) {
      switch (a4) {
        case "keyup":
          return $d.indexOf(b3.keyCode) !== -1;
        case "keydown":
          return b3.keyCode !== 229;
        case "keypress":
        case "mousedown":
        case "focusout":
          return !0;
        default:
          return !1;
      }
    }
    function he2(a4) {
      return a4 = a4.detail, typeof a4 == "object" && "data" in a4 ? a4.data : null;
    }
    var ie = !1;
    function je(a4, b3) {
      switch (a4) {
        case "compositionend":
          return he2(b3);
        case "keypress":
          return b3.which !== 32 ? null : (fe2 = !0, ee2);
        case "textInput":
          return a4 = b3.data, a4 === ee2 && fe2 ? null : a4;
        default:
          return null;
      }
    }
    function ke(a4, b3) {
      if (ie)
        return a4 === "compositionend" || !ae2 && ge2(a4, b3) ? (a4 = nd(), md = ld = kd = null, ie = !1, a4) : null;
      switch (a4) {
        case "paste":
          return null;
        case "keypress":
          if (!(b3.ctrlKey || b3.altKey || b3.metaKey) || b3.ctrlKey && b3.altKey) {
            if (b3.char && 1 < b3.char.length)
              return b3.char;
            if (b3.which)
              return String.fromCharCode(b3.which);
          }
          return null;
        case "compositionend":
          return de2 && b3.locale !== "ko" ? null : b3.data;
        default:
          return null;
      }
    }
    var le2 = { color: !0, date: !0, datetime: !0, "datetime-local": !0, email: !0, month: !0, number: !0, password: !0, range: !0, search: !0, tel: !0, text: !0, time: !0, url: !0, week: !0 };
    function me3(a4) {
      var b3 = a4 && a4.nodeName && a4.nodeName.toLowerCase();
      return b3 === "input" ? !!le2[a4.type] : b3 === "textarea";
    }
    function ne2(a4, b3, c3, d4) {
      Eb(d4), b3 = oe2(b3, "onChange"), 0 < b3.length && (c3 = new td("onChange", "change", null, c3, d4), a4.push({ event: c3, listeners: b3 }));
    }
    var pe2 = null, qe = null;
    function re2(a4) {
      se2(a4, 0);
    }
    function te2(a4) {
      var b3 = ue2(a4);
      if (Wa(b3))
        return a4;
    }
    function ve2(a4, b3) {
      if (a4 === "change")
        return b3;
    }
    var we = !1;
    ia && (ia ? (ye2 = "oninput" in document, ye2 || (ze = document.createElement("div"), ze.setAttribute("oninput", "return;"), ye2 = typeof ze.oninput == "function"), xe2 = ye2) : xe2 = !1, we = xe2 && (!document.documentMode || 9 < document.documentMode));
    var xe2, ye2, ze;
    function Ae() {
      pe2 && (pe2.detachEvent("onpropertychange", Be), qe = pe2 = null);
    }
    function Be(a4) {
      if (a4.propertyName === "value" && te2(qe)) {
        var b3 = [];
        ne2(b3, qe, a4, xb(a4)), Jb(re2, b3);
      }
    }
    function Ce2(a4, b3, c3) {
      a4 === "focusin" ? (Ae(), pe2 = b3, qe = c3, pe2.attachEvent("onpropertychange", Be)) : a4 === "focusout" && Ae();
    }
    function De(a4) {
      if (a4 === "selectionchange" || a4 === "keyup" || a4 === "keydown")
        return te2(qe);
    }
    function Ee2(a4, b3) {
      if (a4 === "click")
        return te2(b3);
    }
    function Fe(a4, b3) {
      if (a4 === "input" || a4 === "change")
        return te2(b3);
    }
    function Ge(a4, b3) {
      return a4 === b3 && (a4 !== 0 || 1 / a4 === 1 / b3) || a4 !== a4 && b3 !== b3;
    }
    var He = typeof Object.is == "function" ? Object.is : Ge;
    function Ie(a4, b3) {
      if (He(a4, b3))
        return !0;
      if (typeof a4 != "object" || a4 === null || typeof b3 != "object" || b3 === null)
        return !1;
      var c3 = Object.keys(a4), d4 = Object.keys(b3);
      if (c3.length !== d4.length)
        return !1;
      for (d4 = 0; d4 < c3.length; d4++) {
        var e3 = c3[d4];
        if (!ja.call(b3, e3) || !He(a4[e3], b3[e3]))
          return !1;
      }
      return !0;
    }
    function Je(a4) {
      for (; a4 && a4.firstChild; )
        a4 = a4.firstChild;
      return a4;
    }
    function Ke(a4, b3) {
      var c3 = Je(a4);
      a4 = 0;
      for (var d4; c3; ) {
        if (c3.nodeType === 3) {
          if (d4 = a4 + c3.textContent.length, a4 <= b3 && d4 >= b3)
            return { node: c3, offset: b3 - a4 };
          a4 = d4;
        }
        a: {
          for (; c3; ) {
            if (c3.nextSibling) {
              c3 = c3.nextSibling;
              break a;
            }
            c3 = c3.parentNode;
          }
          c3 = void 0;
        }
        c3 = Je(c3);
      }
    }
    function Le2(a4, b3) {
      return a4 && b3 ? a4 === b3 ? !0 : a4 && a4.nodeType === 3 ? !1 : b3 && b3.nodeType === 3 ? Le2(a4, b3.parentNode) : "contains" in a4 ? a4.contains(b3) : a4.compareDocumentPosition ? !!(a4.compareDocumentPosition(b3) & 16) : !1 : !1;
    }
    function Me() {
      for (var a4 = window, b3 = Xa(); b3 instanceof a4.HTMLIFrameElement; ) {
        try {
          var c3 = typeof b3.contentWindow.location.href == "string";
        } catch {
          c3 = !1;
        }
        if (c3)
          a4 = b3.contentWindow;
        else
          break;
        b3 = Xa(a4.document);
      }
      return b3;
    }
    function Ne(a4) {
      var b3 = a4 && a4.nodeName && a4.nodeName.toLowerCase();
      return b3 && (b3 === "input" && (a4.type === "text" || a4.type === "search" || a4.type === "tel" || a4.type === "url" || a4.type === "password") || b3 === "textarea" || a4.contentEditable === "true");
    }
    function Oe(a4) {
      var b3 = Me(), c3 = a4.focusedElem, d4 = a4.selectionRange;
      if (b3 !== c3 && c3 && c3.ownerDocument && Le2(c3.ownerDocument.documentElement, c3)) {
        if (d4 !== null && Ne(c3)) {
          if (b3 = d4.start, a4 = d4.end, a4 === void 0 && (a4 = b3), "selectionStart" in c3)
            c3.selectionStart = b3, c3.selectionEnd = Math.min(a4, c3.value.length);
          else if (a4 = (b3 = c3.ownerDocument || document) && b3.defaultView || window, a4.getSelection) {
            a4 = a4.getSelection();
            var e3 = c3.textContent.length, f2 = Math.min(d4.start, e3);
            d4 = d4.end === void 0 ? f2 : Math.min(d4.end, e3), !a4.extend && f2 > d4 && (e3 = d4, d4 = f2, f2 = e3), e3 = Ke(c3, f2);
            var g2 = Ke(
              c3,
              d4
            );
            e3 && g2 && (a4.rangeCount !== 1 || a4.anchorNode !== e3.node || a4.anchorOffset !== e3.offset || a4.focusNode !== g2.node || a4.focusOffset !== g2.offset) && (b3 = b3.createRange(), b3.setStart(e3.node, e3.offset), a4.removeAllRanges(), f2 > d4 ? (a4.addRange(b3), a4.extend(g2.node, g2.offset)) : (b3.setEnd(g2.node, g2.offset), a4.addRange(b3)));
          }
        }
        for (b3 = [], a4 = c3; a4 = a4.parentNode; )
          a4.nodeType === 1 && b3.push({ element: a4, left: a4.scrollLeft, top: a4.scrollTop });
        for (typeof c3.focus == "function" && c3.focus(), c3 = 0; c3 < b3.length; c3++)
          a4 = b3[c3], a4.element.scrollLeft = a4.left, a4.element.scrollTop = a4.top;
      }
    }
    var Pe = ia && "documentMode" in document && 11 >= document.documentMode, Qe = null, Re2 = null, Se2 = null, Te = !1;
    function Ue(a4, b3, c3) {
      var d4 = c3.window === c3 ? c3.document : c3.nodeType === 9 ? c3 : c3.ownerDocument;
      Te || Qe == null || Qe !== Xa(d4) || (d4 = Qe, "selectionStart" in d4 && Ne(d4) ? d4 = { start: d4.selectionStart, end: d4.selectionEnd } : (d4 = (d4.ownerDocument && d4.ownerDocument.defaultView || window).getSelection(), d4 = { anchorNode: d4.anchorNode, anchorOffset: d4.anchorOffset, focusNode: d4.focusNode, focusOffset: d4.focusOffset }), Se2 && Ie(Se2, d4) || (Se2 = d4, d4 = oe2(Re2, "onSelect"), 0 < d4.length && (b3 = new td("onSelect", "select", null, b3, c3), a4.push({ event: b3, listeners: d4 }), b3.target = Qe)));
    }
    function Ve(a4, b3) {
      var c3 = {};
      return c3[a4.toLowerCase()] = b3.toLowerCase(), c3["Webkit" + a4] = "webkit" + b3, c3["Moz" + a4] = "moz" + b3, c3;
    }
    var We = { animationend: Ve("Animation", "AnimationEnd"), animationiteration: Ve("Animation", "AnimationIteration"), animationstart: Ve("Animation", "AnimationStart"), transitionend: Ve("Transition", "TransitionEnd") }, Xe = {}, Ye = {};
    ia && (Ye = document.createElement("div").style, "AnimationEvent" in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation), "TransitionEvent" in window || delete We.transitionend.transition);
    function Ze(a4) {
      if (Xe[a4])
        return Xe[a4];
      if (!We[a4])
        return a4;
      var b3 = We[a4], c3;
      for (c3 in b3)
        if (b3.hasOwnProperty(c3) && c3 in Ye)
          return Xe[a4] = b3[c3];
      return a4;
    }
    var $e = Ze("animationend"), af = Ze("animationiteration"), bf = Ze("animationstart"), cf = Ze("transitionend"), df = /* @__PURE__ */ new Map(), ef = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");
    function ff(a4, b3) {
      df.set(a4, b3), fa(b3, [a4]);
    }
    for (gf = 0; gf < ef.length; gf++)
      hf = ef[gf], jf = hf.toLowerCase(), kf = hf[0].toUpperCase() + hf.slice(1), ff(jf, "on" + kf);
    var hf, jf, kf, gf;
    ff($e, "onAnimationEnd");
    ff(af, "onAnimationIteration");
    ff(bf, "onAnimationStart");
    ff("dblclick", "onDoubleClick");
    ff("focusin", "onFocus");
    ff("focusout", "onBlur");
    ff(cf, "onTransitionEnd");
    ha("onMouseEnter", ["mouseout", "mouseover"]);
    ha("onMouseLeave", ["mouseout", "mouseover"]);
    ha("onPointerEnter", ["pointerout", "pointerover"]);
    ha("onPointerLeave", ["pointerout", "pointerover"]);
    fa("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
    fa("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
    fa("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
    fa("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
    fa("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
    var lf = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "), mf = new Set("cancel close invalid load scroll toggle".split(" ").concat(lf));
    function nf(a4, b3, c3) {
      var d4 = a4.type || "unknown-event";
      a4.currentTarget = c3, Ub(d4, b3, void 0, a4), a4.currentTarget = null;
    }
    function se2(a4, b3) {
      b3 = (b3 & 4) !== 0;
      for (var c3 = 0; c3 < a4.length; c3++) {
        var d4 = a4[c3], e3 = d4.event;
        d4 = d4.listeners;
        a: {
          var f2 = void 0;
          if (b3)
            for (var g2 = d4.length - 1; 0 <= g2; g2--) {
              var h4 = d4[g2], k3 = h4.instance, l2 = h4.currentTarget;
              if (h4 = h4.listener, k3 !== f2 && e3.isPropagationStopped())
                break a;
              nf(e3, h4, l2), f2 = k3;
            }
          else
            for (g2 = 0; g2 < d4.length; g2++) {
              if (h4 = d4[g2], k3 = h4.instance, l2 = h4.currentTarget, h4 = h4.listener, k3 !== f2 && e3.isPropagationStopped())
                break a;
              nf(e3, h4, l2), f2 = k3;
            }
        }
      }
      if (Qb)
        throw a4 = Rb, Qb = !1, Rb = null, a4;
    }
    function D2(a4, b3) {
      var c3 = b3[of];
      c3 === void 0 && (c3 = b3[of] = /* @__PURE__ */ new Set());
      var d4 = a4 + "__bubble";
      c3.has(d4) || (pf(b3, a4, 2, !1), c3.add(d4));
    }
    function qf(a4, b3, c3) {
      var d4 = 0;
      b3 && (d4 |= 4), pf(c3, a4, d4, b3);
    }
    var rf = "_reactListening" + Math.random().toString(36).slice(2);
    function sf(a4) {
      if (!a4[rf]) {
        a4[rf] = !0, da.forEach(function(b4) {
          b4 !== "selectionchange" && (mf.has(b4) || qf(b4, !1, a4), qf(b4, !0, a4));
        });
        var b3 = a4.nodeType === 9 ? a4 : a4.ownerDocument;
        b3 === null || b3[rf] || (b3[rf] = !0, qf("selectionchange", !1, b3));
      }
    }
    function pf(a4, b3, c3, d4) {
      switch (jd(b3)) {
        case 1:
          var e3 = ed;
          break;
        case 4:
          e3 = gd;
          break;
        default:
          e3 = fd;
      }
      c3 = e3.bind(null, b3, c3, a4), e3 = void 0, !Lb || b3 !== "touchstart" && b3 !== "touchmove" && b3 !== "wheel" || (e3 = !0), d4 ? e3 !== void 0 ? a4.addEventListener(b3, c3, { capture: !0, passive: e3 }) : a4.addEventListener(b3, c3, !0) : e3 !== void 0 ? a4.addEventListener(b3, c3, { passive: e3 }) : a4.addEventListener(b3, c3, !1);
    }
    function hd(a4, b3, c3, d4, e3) {
      var f2 = d4;
      if (!(b3 & 1) && !(b3 & 2) && d4 !== null)
        a:
          for (; ; ) {
            if (d4 === null)
              return;
            var g2 = d4.tag;
            if (g2 === 3 || g2 === 4) {
              var h4 = d4.stateNode.containerInfo;
              if (h4 === e3 || h4.nodeType === 8 && h4.parentNode === e3)
                break;
              if (g2 === 4)
                for (g2 = d4.return; g2 !== null; ) {
                  var k3 = g2.tag;
                  if ((k3 === 3 || k3 === 4) && (k3 = g2.stateNode.containerInfo, k3 === e3 || k3.nodeType === 8 && k3.parentNode === e3))
                    return;
                  g2 = g2.return;
                }
              for (; h4 !== null; ) {
                if (g2 = Wc(h4), g2 === null)
                  return;
                if (k3 = g2.tag, k3 === 5 || k3 === 6) {
                  d4 = f2 = g2;
                  continue a;
                }
                h4 = h4.parentNode;
              }
            }
            d4 = d4.return;
          }
      Jb(function() {
        var d5 = f2, e4 = xb(c3), g3 = [];
        a: {
          var h5 = df.get(a4);
          if (h5 !== void 0) {
            var k4 = td, n2 = a4;
            switch (a4) {
              case "keypress":
                if (od(c3) === 0)
                  break a;
              case "keydown":
              case "keyup":
                k4 = Rd;
                break;
              case "focusin":
                n2 = "focus", k4 = Fd;
                break;
              case "focusout":
                n2 = "blur", k4 = Fd;
                break;
              case "beforeblur":
              case "afterblur":
                k4 = Fd;
                break;
              case "click":
                if (c3.button === 2)
                  break a;
              case "auxclick":
              case "dblclick":
              case "mousedown":
              case "mousemove":
              case "mouseup":
              case "mouseout":
              case "mouseover":
              case "contextmenu":
                k4 = Bd;
                break;
              case "drag":
              case "dragend":
              case "dragenter":
              case "dragexit":
              case "dragleave":
              case "dragover":
              case "dragstart":
              case "drop":
                k4 = Dd;
                break;
              case "touchcancel":
              case "touchend":
              case "touchmove":
              case "touchstart":
                k4 = Vd;
                break;
              case $e:
              case af:
              case bf:
                k4 = Hd;
                break;
              case cf:
                k4 = Xd;
                break;
              case "scroll":
                k4 = vd;
                break;
              case "wheel":
                k4 = Zd;
                break;
              case "copy":
              case "cut":
              case "paste":
                k4 = Jd;
                break;
              case "gotpointercapture":
              case "lostpointercapture":
              case "pointercancel":
              case "pointerdown":
              case "pointermove":
              case "pointerout":
              case "pointerover":
              case "pointerup":
                k4 = Td;
            }
            var t4 = (b3 & 4) !== 0, J = !t4 && a4 === "scroll", x3 = t4 ? h5 !== null ? h5 + "Capture" : null : h5;
            t4 = [];
            for (var w2 = d5, u3; w2 !== null; ) {
              u3 = w2;
              var F = u3.stateNode;
              if (u3.tag === 5 && F !== null && (u3 = F, x3 !== null && (F = Kb(w2, x3), F != null && t4.push(tf(w2, F, u3)))), J)
                break;
              w2 = w2.return;
            }
            0 < t4.length && (h5 = new k4(h5, n2, null, c3, e4), g3.push({ event: h5, listeners: t4 }));
          }
        }
        if (!(b3 & 7)) {
          a: {
            if (h5 = a4 === "mouseover" || a4 === "pointerover", k4 = a4 === "mouseout" || a4 === "pointerout", h5 && c3 !== wb && (n2 = c3.relatedTarget || c3.fromElement) && (Wc(n2) || n2[uf]))
              break a;
            if ((k4 || h5) && (h5 = e4.window === e4 ? e4 : (h5 = e4.ownerDocument) ? h5.defaultView || h5.parentWindow : window, k4 ? (n2 = c3.relatedTarget || c3.toElement, k4 = d5, n2 = n2 ? Wc(n2) : null, n2 !== null && (J = Vb(n2), n2 !== J || n2.tag !== 5 && n2.tag !== 6) && (n2 = null)) : (k4 = null, n2 = d5), k4 !== n2)) {
              if (t4 = Bd, F = "onMouseLeave", x3 = "onMouseEnter", w2 = "mouse", (a4 === "pointerout" || a4 === "pointerover") && (t4 = Td, F = "onPointerLeave", x3 = "onPointerEnter", w2 = "pointer"), J = k4 == null ? h5 : ue2(k4), u3 = n2 == null ? h5 : ue2(n2), h5 = new t4(F, w2 + "leave", k4, c3, e4), h5.target = J, h5.relatedTarget = u3, F = null, Wc(e4) === d5 && (t4 = new t4(x3, w2 + "enter", n2, c3, e4), t4.target = u3, t4.relatedTarget = J, F = t4), J = F, k4 && n2)
                b: {
                  for (t4 = k4, x3 = n2, w2 = 0, u3 = t4; u3; u3 = vf(u3))
                    w2++;
                  for (u3 = 0, F = x3; F; F = vf(F))
                    u3++;
                  for (; 0 < w2 - u3; )
                    t4 = vf(t4), w2--;
                  for (; 0 < u3 - w2; )
                    x3 = vf(x3), u3--;
                  for (; w2--; ) {
                    if (t4 === x3 || x3 !== null && t4 === x3.alternate)
                      break b;
                    t4 = vf(t4), x3 = vf(x3);
                  }
                  t4 = null;
                }
              else
                t4 = null;
              k4 !== null && wf(g3, h5, k4, t4, !1), n2 !== null && J !== null && wf(g3, J, n2, t4, !0);
            }
          }
          a: {
            if (h5 = d5 ? ue2(d5) : window, k4 = h5.nodeName && h5.nodeName.toLowerCase(), k4 === "select" || k4 === "input" && h5.type === "file")
              var na = ve2;
            else if (me3(h5))
              if (we)
                na = Fe;
              else {
                na = De;
                var xa = Ce2;
              }
            else
              (k4 = h5.nodeName) && k4.toLowerCase() === "input" && (h5.type === "checkbox" || h5.type === "radio") && (na = Ee2);
            if (na && (na = na(a4, d5))) {
              ne2(g3, na, c3, e4);
              break a;
            }
            xa && xa(a4, h5, d5), a4 === "focusout" && (xa = h5._wrapperState) && xa.controlled && h5.type === "number" && cb(h5, "number", h5.value);
          }
          switch (xa = d5 ? ue2(d5) : window, a4) {
            case "focusin":
              (me3(xa) || xa.contentEditable === "true") && (Qe = xa, Re2 = d5, Se2 = null);
              break;
            case "focusout":
              Se2 = Re2 = Qe = null;
              break;
            case "mousedown":
              Te = !0;
              break;
            case "contextmenu":
            case "mouseup":
            case "dragend":
              Te = !1, Ue(g3, c3, e4);
              break;
            case "selectionchange":
              if (Pe)
                break;
            case "keydown":
            case "keyup":
              Ue(g3, c3, e4);
          }
          var $a;
          if (ae2)
            b: {
              switch (a4) {
                case "compositionstart":
                  var ba = "onCompositionStart";
                  break b;
                case "compositionend":
                  ba = "onCompositionEnd";
                  break b;
                case "compositionupdate":
                  ba = "onCompositionUpdate";
                  break b;
              }
              ba = void 0;
            }
          else
            ie ? ge2(a4, c3) && (ba = "onCompositionEnd") : a4 === "keydown" && c3.keyCode === 229 && (ba = "onCompositionStart");
          ba && (de2 && c3.locale !== "ko" && (ie || ba !== "onCompositionStart" ? ba === "onCompositionEnd" && ie && ($a = nd()) : (kd = e4, ld = "value" in kd ? kd.value : kd.textContent, ie = !0)), xa = oe2(d5, ba), 0 < xa.length && (ba = new Ld(ba, a4, null, c3, e4), g3.push({ event: ba, listeners: xa }), $a ? ba.data = $a : ($a = he2(c3), $a !== null && (ba.data = $a)))), ($a = ce ? je(a4, c3) : ke(a4, c3)) && (d5 = oe2(d5, "onBeforeInput"), 0 < d5.length && (e4 = new Ld("onBeforeInput", "beforeinput", null, c3, e4), g3.push({ event: e4, listeners: d5 }), e4.data = $a));
        }
        se2(g3, b3);
      });
    }
    function tf(a4, b3, c3) {
      return { instance: a4, listener: b3, currentTarget: c3 };
    }
    function oe2(a4, b3) {
      for (var c3 = b3 + "Capture", d4 = []; a4 !== null; ) {
        var e3 = a4, f2 = e3.stateNode;
        e3.tag === 5 && f2 !== null && (e3 = f2, f2 = Kb(a4, c3), f2 != null && d4.unshift(tf(a4, f2, e3)), f2 = Kb(a4, b3), f2 != null && d4.push(tf(a4, f2, e3))), a4 = a4.return;
      }
      return d4;
    }
    function vf(a4) {
      if (a4 === null)
        return null;
      do
        a4 = a4.return;
      while (a4 && a4.tag !== 5);
      return a4 || null;
    }
    function wf(a4, b3, c3, d4, e3) {
      for (var f2 = b3._reactName, g2 = []; c3 !== null && c3 !== d4; ) {
        var h4 = c3, k3 = h4.alternate, l2 = h4.stateNode;
        if (k3 !== null && k3 === d4)
          break;
        h4.tag === 5 && l2 !== null && (h4 = l2, e3 ? (k3 = Kb(c3, f2), k3 != null && g2.unshift(tf(c3, k3, h4))) : e3 || (k3 = Kb(c3, f2), k3 != null && g2.push(tf(c3, k3, h4)))), c3 = c3.return;
      }
      g2.length !== 0 && a4.push({ event: b3, listeners: g2 });
    }
    var xf = /\r\n?/g, yf = /\u0000|\uFFFD/g;
    function zf(a4) {
      return (typeof a4 == "string" ? a4 : "" + a4).replace(xf, `
`).replace(yf, "");
    }
    function Af(a4, b3, c3) {
      if (b3 = zf(b3), zf(a4) !== b3 && c3)
        throw Error(p2(425));
    }
    function Bf() {
    }
    var Cf = null, Df = null;
    function Ef(a4, b3) {
      return a4 === "textarea" || a4 === "noscript" || typeof b3.children == "string" || typeof b3.children == "number" || typeof b3.dangerouslySetInnerHTML == "object" && b3.dangerouslySetInnerHTML !== null && b3.dangerouslySetInnerHTML.__html != null;
    }
    var Ff = typeof setTimeout == "function" ? setTimeout : void 0, Gf = typeof clearTimeout == "function" ? clearTimeout : void 0, Hf = typeof Promise == "function" ? Promise : void 0, Jf = typeof queueMicrotask == "function" ? queueMicrotask : typeof Hf < "u" ? function(a4) {
      return Hf.resolve(null).then(a4).catch(If);
    } : Ff;
    function If(a4) {
      setTimeout(function() {
        throw a4;
      });
    }
    function Kf(a4, b3) {
      var c3 = b3, d4 = 0;
      do {
        var e3 = c3.nextSibling;
        if (a4.removeChild(c3), e3 && e3.nodeType === 8)
          if (c3 = e3.data, c3 === "/$") {
            if (d4 === 0) {
              a4.removeChild(e3), bd(b3);
              return;
            }
            d4--;
          } else
            c3 !== "$" && c3 !== "$?" && c3 !== "$!" || d4++;
        c3 = e3;
      } while (c3);
      bd(b3);
    }
    function Lf(a4) {
      for (; a4 != null; a4 = a4.nextSibling) {
        var b3 = a4.nodeType;
        if (b3 === 1 || b3 === 3)
          break;
        if (b3 === 8) {
          if (b3 = a4.data, b3 === "$" || b3 === "$!" || b3 === "$?")
            break;
          if (b3 === "/$")
            return null;
        }
      }
      return a4;
    }
    function Mf(a4) {
      a4 = a4.previousSibling;
      for (var b3 = 0; a4; ) {
        if (a4.nodeType === 8) {
          var c3 = a4.data;
          if (c3 === "$" || c3 === "$!" || c3 === "$?") {
            if (b3 === 0)
              return a4;
            b3--;
          } else
            c3 === "/$" && b3++;
        }
        a4 = a4.previousSibling;
      }
      return null;
    }
    var Nf = Math.random().toString(36).slice(2), Of = "__reactFiber$" + Nf, Pf = "__reactProps$" + Nf, uf = "__reactContainer$" + Nf, of = "__reactEvents$" + Nf, Qf = "__reactListeners$" + Nf, Rf = "__reactHandles$" + Nf;
    function Wc(a4) {
      var b3 = a4[Of];
      if (b3)
        return b3;
      for (var c3 = a4.parentNode; c3; ) {
        if (b3 = c3[uf] || c3[Of]) {
          if (c3 = b3.alternate, b3.child !== null || c3 !== null && c3.child !== null)
            for (a4 = Mf(a4); a4 !== null; ) {
              if (c3 = a4[Of])
                return c3;
              a4 = Mf(a4);
            }
          return b3;
        }
        a4 = c3, c3 = a4.parentNode;
      }
      return null;
    }
    function Cb(a4) {
      return a4 = a4[Of] || a4[uf], !a4 || a4.tag !== 5 && a4.tag !== 6 && a4.tag !== 13 && a4.tag !== 3 ? null : a4;
    }
    function ue2(a4) {
      if (a4.tag === 5 || a4.tag === 6)
        return a4.stateNode;
      throw Error(p2(33));
    }
    function Db(a4) {
      return a4[Pf] || null;
    }
    var Sf = [], Tf = -1;
    function Uf(a4) {
      return { current: a4 };
    }
    function E2(a4) {
      0 > Tf || (a4.current = Sf[Tf], Sf[Tf] = null, Tf--);
    }
    function G2(a4, b3) {
      Tf++, Sf[Tf] = a4.current, a4.current = b3;
    }
    var Vf = {}, H4 = Uf(Vf), Wf = Uf(!1), Xf = Vf;
    function Yf(a4, b3) {
      var c3 = a4.type.contextTypes;
      if (!c3)
        return Vf;
      var d4 = a4.stateNode;
      if (d4 && d4.__reactInternalMemoizedUnmaskedChildContext === b3)
        return d4.__reactInternalMemoizedMaskedChildContext;
      var e3 = {}, f2;
      for (f2 in c3)
        e3[f2] = b3[f2];
      return d4 && (a4 = a4.stateNode, a4.__reactInternalMemoizedUnmaskedChildContext = b3, a4.__reactInternalMemoizedMaskedChildContext = e3), e3;
    }
    function Zf(a4) {
      return a4 = a4.childContextTypes, a4 != null;
    }
    function $f() {
      E2(Wf), E2(H4);
    }
    function ag(a4, b3, c3) {
      if (H4.current !== Vf)
        throw Error(p2(168));
      G2(H4, b3), G2(Wf, c3);
    }
    function bg(a4, b3, c3) {
      var d4 = a4.stateNode;
      if (b3 = b3.childContextTypes, typeof d4.getChildContext != "function")
        return c3;
      d4 = d4.getChildContext();
      for (var e3 in d4)
        if (!(e3 in b3))
          throw Error(p2(108, Ra(a4) || "Unknown", e3));
      return A({}, c3, d4);
    }
    function cg(a4) {
      return a4 = (a4 = a4.stateNode) && a4.__reactInternalMemoizedMergedChildContext || Vf, Xf = H4.current, G2(H4, a4), G2(Wf, Wf.current), !0;
    }
    function dg(a4, b3, c3) {
      var d4 = a4.stateNode;
      if (!d4)
        throw Error(p2(169));
      c3 ? (a4 = bg(a4, b3, Xf), d4.__reactInternalMemoizedMergedChildContext = a4, E2(Wf), E2(H4), G2(H4, a4)) : E2(Wf), G2(Wf, c3);
    }
    var eg = null, fg = !1, gg = !1;
    function hg(a4) {
      eg === null ? eg = [a4] : eg.push(a4);
    }
    function ig(a4) {
      fg = !0, hg(a4);
    }
    function jg() {
      if (!gg && eg !== null) {
        gg = !0;
        var a4 = 0, b3 = C;
        try {
          var c3 = eg;
          for (C = 1; a4 < c3.length; a4++) {
            var d4 = c3[a4];
            do
              d4 = d4(!0);
            while (d4 !== null);
          }
          eg = null, fg = !1;
        } catch (e3) {
          throw eg !== null && (eg = eg.slice(a4 + 1)), ac(fc, jg), e3;
        } finally {
          C = b3, gg = !1;
        }
      }
      return null;
    }
    var kg = [], lg = 0, mg = null, ng = 0, og = [], pg = 0, qg = null, rg = 1, sg = "";
    function tg(a4, b3) {
      kg[lg++] = ng, kg[lg++] = mg, mg = a4, ng = b3;
    }
    function ug(a4, b3, c3) {
      og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, qg = a4;
      var d4 = rg;
      a4 = sg;
      var e3 = 32 - oc(d4) - 1;
      d4 &= ~(1 << e3), c3 += 1;
      var f2 = 32 - oc(b3) + e3;
      if (30 < f2) {
        var g2 = e3 - e3 % 5;
        f2 = (d4 & (1 << g2) - 1).toString(32), d4 >>= g2, e3 -= g2, rg = 1 << 32 - oc(b3) + e3 | c3 << e3 | d4, sg = f2 + a4;
      } else
        rg = 1 << f2 | c3 << e3 | d4, sg = a4;
    }
    function vg(a4) {
      a4.return !== null && (tg(a4, 1), ug(a4, 1, 0));
    }
    function wg(a4) {
      for (; a4 === mg; )
        mg = kg[--lg], kg[lg] = null, ng = kg[--lg], kg[lg] = null;
      for (; a4 === qg; )
        qg = og[--pg], og[pg] = null, sg = og[--pg], og[pg] = null, rg = og[--pg], og[pg] = null;
    }
    var xg = null, yg = null, I2 = !1, zg = null;
    function Ag(a4, b3) {
      var c3 = Bg(5, null, null, 0);
      c3.elementType = "DELETED", c3.stateNode = b3, c3.return = a4, b3 = a4.deletions, b3 === null ? (a4.deletions = [c3], a4.flags |= 16) : b3.push(c3);
    }
    function Cg(a4, b3) {
      switch (a4.tag) {
        case 5:
          var c3 = a4.type;
          return b3 = b3.nodeType !== 1 || c3.toLowerCase() !== b3.nodeName.toLowerCase() ? null : b3, b3 !== null ? (a4.stateNode = b3, xg = a4, yg = Lf(b3.firstChild), !0) : !1;
        case 6:
          return b3 = a4.pendingProps === "" || b3.nodeType !== 3 ? null : b3, b3 !== null ? (a4.stateNode = b3, xg = a4, yg = null, !0) : !1;
        case 13:
          return b3 = b3.nodeType !== 8 ? null : b3, b3 !== null ? (c3 = qg !== null ? { id: rg, overflow: sg } : null, a4.memoizedState = { dehydrated: b3, treeContext: c3, retryLane: 1073741824 }, c3 = Bg(18, null, null, 0), c3.stateNode = b3, c3.return = a4, a4.child = c3, xg = a4, yg = null, !0) : !1;
        default:
          return !1;
      }
    }
    function Dg(a4) {
      return (a4.mode & 1) !== 0 && (a4.flags & 128) === 0;
    }
    function Eg(a4) {
      if (I2) {
        var b3 = yg;
        if (b3) {
          var c3 = b3;
          if (!Cg(a4, b3)) {
            if (Dg(a4))
              throw Error(p2(418));
            b3 = Lf(c3.nextSibling);
            var d4 = xg;
            b3 && Cg(a4, b3) ? Ag(d4, c3) : (a4.flags = a4.flags & -4097 | 2, I2 = !1, xg = a4);
          }
        } else {
          if (Dg(a4))
            throw Error(p2(418));
          a4.flags = a4.flags & -4097 | 2, I2 = !1, xg = a4;
        }
      }
    }
    function Fg(a4) {
      for (a4 = a4.return; a4 !== null && a4.tag !== 5 && a4.tag !== 3 && a4.tag !== 13; )
        a4 = a4.return;
      xg = a4;
    }
    function Gg(a4) {
      if (a4 !== xg)
        return !1;
      if (!I2)
        return Fg(a4), I2 = !0, !1;
      var b3;
      if ((b3 = a4.tag !== 3) && !(b3 = a4.tag !== 5) && (b3 = a4.type, b3 = b3 !== "head" && b3 !== "body" && !Ef(a4.type, a4.memoizedProps)), b3 && (b3 = yg)) {
        if (Dg(a4))
          throw Hg(), Error(p2(418));
        for (; b3; )
          Ag(a4, b3), b3 = Lf(b3.nextSibling);
      }
      if (Fg(a4), a4.tag === 13) {
        if (a4 = a4.memoizedState, a4 = a4 !== null ? a4.dehydrated : null, !a4)
          throw Error(p2(317));
        a: {
          for (a4 = a4.nextSibling, b3 = 0; a4; ) {
            if (a4.nodeType === 8) {
              var c3 = a4.data;
              if (c3 === "/$") {
                if (b3 === 0) {
                  yg = Lf(a4.nextSibling);
                  break a;
                }
                b3--;
              } else
                c3 !== "$" && c3 !== "$!" && c3 !== "$?" || b3++;
            }
            a4 = a4.nextSibling;
          }
          yg = null;
        }
      } else
        yg = xg ? Lf(a4.stateNode.nextSibling) : null;
      return !0;
    }
    function Hg() {
      for (var a4 = yg; a4; )
        a4 = Lf(a4.nextSibling);
    }
    function Ig() {
      yg = xg = null, I2 = !1;
    }
    function Jg(a4) {
      zg === null ? zg = [a4] : zg.push(a4);
    }
    var Kg = ua.ReactCurrentBatchConfig;
    function Lg(a4, b3) {
      if (a4 && a4.defaultProps) {
        b3 = A({}, b3), a4 = a4.defaultProps;
        for (var c3 in a4)
          b3[c3] === void 0 && (b3[c3] = a4[c3]);
        return b3;
      }
      return b3;
    }
    var Mg = Uf(null), Ng = null, Og = null, Pg = null;
    function Qg() {
      Pg = Og = Ng = null;
    }
    function Rg(a4) {
      var b3 = Mg.current;
      E2(Mg), a4._currentValue = b3;
    }
    function Sg(a4, b3, c3) {
      for (; a4 !== null; ) {
        var d4 = a4.alternate;
        if ((a4.childLanes & b3) !== b3 ? (a4.childLanes |= b3, d4 !== null && (d4.childLanes |= b3)) : d4 !== null && (d4.childLanes & b3) !== b3 && (d4.childLanes |= b3), a4 === c3)
          break;
        a4 = a4.return;
      }
    }
    function Tg(a4, b3) {
      Ng = a4, Pg = Og = null, a4 = a4.dependencies, a4 !== null && a4.firstContext !== null && (a4.lanes & b3 && (Ug = !0), a4.firstContext = null);
    }
    function Vg(a4) {
      var b3 = a4._currentValue;
      if (Pg !== a4)
        if (a4 = { context: a4, memoizedValue: b3, next: null }, Og === null) {
          if (Ng === null)
            throw Error(p2(308));
          Og = a4, Ng.dependencies = { lanes: 0, firstContext: a4 };
        } else
          Og = Og.next = a4;
      return b3;
    }
    var Wg = null;
    function Xg(a4) {
      Wg === null ? Wg = [a4] : Wg.push(a4);
    }
    function Yg(a4, b3, c3, d4) {
      var e3 = b3.interleaved;
      return e3 === null ? (c3.next = c3, Xg(b3)) : (c3.next = e3.next, e3.next = c3), b3.interleaved = c3, Zg(a4, d4);
    }
    function Zg(a4, b3) {
      a4.lanes |= b3;
      var c3 = a4.alternate;
      for (c3 !== null && (c3.lanes |= b3), c3 = a4, a4 = a4.return; a4 !== null; )
        a4.childLanes |= b3, c3 = a4.alternate, c3 !== null && (c3.childLanes |= b3), c3 = a4, a4 = a4.return;
      return c3.tag === 3 ? c3.stateNode : null;
    }
    var $g = !1;
    function ah(a4) {
      a4.updateQueue = { baseState: a4.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null };
    }
    function bh(a4, b3) {
      a4 = a4.updateQueue, b3.updateQueue === a4 && (b3.updateQueue = { baseState: a4.baseState, firstBaseUpdate: a4.firstBaseUpdate, lastBaseUpdate: a4.lastBaseUpdate, shared: a4.shared, effects: a4.effects });
    }
    function ch(a4, b3) {
      return { eventTime: a4, lane: b3, tag: 0, payload: null, callback: null, next: null };
    }
    function dh(a4, b3, c3) {
      var d4 = a4.updateQueue;
      if (d4 === null)
        return null;
      if (d4 = d4.shared, K2 & 2) {
        var e3 = d4.pending;
        return e3 === null ? b3.next = b3 : (b3.next = e3.next, e3.next = b3), d4.pending = b3, Zg(a4, c3);
      }
      return e3 = d4.interleaved, e3 === null ? (b3.next = b3, Xg(d4)) : (b3.next = e3.next, e3.next = b3), d4.interleaved = b3, Zg(a4, c3);
    }
    function eh(a4, b3, c3) {
      if (b3 = b3.updateQueue, b3 !== null && (b3 = b3.shared, (c3 & 4194240) !== 0)) {
        var d4 = b3.lanes;
        d4 &= a4.pendingLanes, c3 |= d4, b3.lanes = c3, Cc(a4, c3);
      }
    }
    function fh(a4, b3) {
      var c3 = a4.updateQueue, d4 = a4.alternate;
      if (d4 !== null && (d4 = d4.updateQueue, c3 === d4)) {
        var e3 = null, f2 = null;
        if (c3 = c3.firstBaseUpdate, c3 !== null) {
          do {
            var g2 = { eventTime: c3.eventTime, lane: c3.lane, tag: c3.tag, payload: c3.payload, callback: c3.callback, next: null };
            f2 === null ? e3 = f2 = g2 : f2 = f2.next = g2, c3 = c3.next;
          } while (c3 !== null);
          f2 === null ? e3 = f2 = b3 : f2 = f2.next = b3;
        } else
          e3 = f2 = b3;
        c3 = { baseState: d4.baseState, firstBaseUpdate: e3, lastBaseUpdate: f2, shared: d4.shared, effects: d4.effects }, a4.updateQueue = c3;
        return;
      }
      a4 = c3.lastBaseUpdate, a4 === null ? c3.firstBaseUpdate = b3 : a4.next = b3, c3.lastBaseUpdate = b3;
    }
    function gh(a4, b3, c3, d4) {
      var e3 = a4.updateQueue;
      $g = !1;
      var f2 = e3.firstBaseUpdate, g2 = e3.lastBaseUpdate, h4 = e3.shared.pending;
      if (h4 !== null) {
        e3.shared.pending = null;
        var k3 = h4, l2 = k3.next;
        k3.next = null, g2 === null ? f2 = l2 : g2.next = l2, g2 = k3;
        var m4 = a4.alternate;
        m4 !== null && (m4 = m4.updateQueue, h4 = m4.lastBaseUpdate, h4 !== g2 && (h4 === null ? m4.firstBaseUpdate = l2 : h4.next = l2, m4.lastBaseUpdate = k3));
      }
      if (f2 !== null) {
        var q2 = e3.baseState;
        g2 = 0, m4 = l2 = k3 = null, h4 = f2;
        do {
          var r3 = h4.lane, y4 = h4.eventTime;
          if ((d4 & r3) === r3) {
            m4 !== null && (m4 = m4.next = {
              eventTime: y4,
              lane: 0,
              tag: h4.tag,
              payload: h4.payload,
              callback: h4.callback,
              next: null
            });
            a: {
              var n2 = a4, t4 = h4;
              switch (r3 = b3, y4 = c3, t4.tag) {
                case 1:
                  if (n2 = t4.payload, typeof n2 == "function") {
                    q2 = n2.call(y4, q2, r3);
                    break a;
                  }
                  q2 = n2;
                  break a;
                case 3:
                  n2.flags = n2.flags & -65537 | 128;
                case 0:
                  if (n2 = t4.payload, r3 = typeof n2 == "function" ? n2.call(y4, q2, r3) : n2, r3 == null)
                    break a;
                  q2 = A({}, q2, r3);
                  break a;
                case 2:
                  $g = !0;
              }
            }
            h4.callback !== null && h4.lane !== 0 && (a4.flags |= 64, r3 = e3.effects, r3 === null ? e3.effects = [h4] : r3.push(h4));
          } else
            y4 = { eventTime: y4, lane: r3, tag: h4.tag, payload: h4.payload, callback: h4.callback, next: null }, m4 === null ? (l2 = m4 = y4, k3 = q2) : m4 = m4.next = y4, g2 |= r3;
          if (h4 = h4.next, h4 === null) {
            if (h4 = e3.shared.pending, h4 === null)
              break;
            r3 = h4, h4 = r3.next, r3.next = null, e3.lastBaseUpdate = r3, e3.shared.pending = null;
          }
        } while (1);
        if (m4 === null && (k3 = q2), e3.baseState = k3, e3.firstBaseUpdate = l2, e3.lastBaseUpdate = m4, b3 = e3.shared.interleaved, b3 !== null) {
          e3 = b3;
          do
            g2 |= e3.lane, e3 = e3.next;
          while (e3 !== b3);
        } else
          f2 === null && (e3.shared.lanes = 0);
        hh |= g2, a4.lanes = g2, a4.memoizedState = q2;
      }
    }
    function ih(a4, b3, c3) {
      if (a4 = b3.effects, b3.effects = null, a4 !== null)
        for (b3 = 0; b3 < a4.length; b3++) {
          var d4 = a4[b3], e3 = d4.callback;
          if (e3 !== null) {
            if (d4.callback = null, d4 = c3, typeof e3 != "function")
              throw Error(p2(191, e3));
            e3.call(d4);
          }
        }
    }
    var jh = new aa.Component().refs;
    function kh(a4, b3, c3, d4) {
      b3 = a4.memoizedState, c3 = c3(d4, b3), c3 = c3 == null ? b3 : A({}, b3, c3), a4.memoizedState = c3, a4.lanes === 0 && (a4.updateQueue.baseState = c3);
    }
    var nh = { isMounted: function(a4) {
      return (a4 = a4._reactInternals) ? Vb(a4) === a4 : !1;
    }, enqueueSetState: function(a4, b3, c3) {
      a4 = a4._reactInternals;
      var d4 = L3(), e3 = lh(a4), f2 = ch(d4, e3);
      f2.payload = b3, c3 != null && (f2.callback = c3), b3 = dh(a4, f2, e3), b3 !== null && (mh(b3, a4, e3, d4), eh(b3, a4, e3));
    }, enqueueReplaceState: function(a4, b3, c3) {
      a4 = a4._reactInternals;
      var d4 = L3(), e3 = lh(a4), f2 = ch(d4, e3);
      f2.tag = 1, f2.payload = b3, c3 != null && (f2.callback = c3), b3 = dh(a4, f2, e3), b3 !== null && (mh(b3, a4, e3, d4), eh(b3, a4, e3));
    }, enqueueForceUpdate: function(a4, b3) {
      a4 = a4._reactInternals;
      var c3 = L3(), d4 = lh(a4), e3 = ch(c3, d4);
      e3.tag = 2, b3 != null && (e3.callback = b3), b3 = dh(a4, e3, d4), b3 !== null && (mh(b3, a4, d4, c3), eh(b3, a4, d4));
    } };
    function oh(a4, b3, c3, d4, e3, f2, g2) {
      return a4 = a4.stateNode, typeof a4.shouldComponentUpdate == "function" ? a4.shouldComponentUpdate(d4, f2, g2) : b3.prototype && b3.prototype.isPureReactComponent ? !Ie(c3, d4) || !Ie(e3, f2) : !0;
    }
    function ph(a4, b3, c3) {
      var d4 = !1, e3 = Vf, f2 = b3.contextType;
      return typeof f2 == "object" && f2 !== null ? f2 = Vg(f2) : (e3 = Zf(b3) ? Xf : H4.current, d4 = b3.contextTypes, f2 = (d4 = d4 != null) ? Yf(a4, e3) : Vf), b3 = new b3(c3, f2), a4.memoizedState = b3.state !== null && b3.state !== void 0 ? b3.state : null, b3.updater = nh, a4.stateNode = b3, b3._reactInternals = a4, d4 && (a4 = a4.stateNode, a4.__reactInternalMemoizedUnmaskedChildContext = e3, a4.__reactInternalMemoizedMaskedChildContext = f2), b3;
    }
    function qh(a4, b3, c3, d4) {
      a4 = b3.state, typeof b3.componentWillReceiveProps == "function" && b3.componentWillReceiveProps(c3, d4), typeof b3.UNSAFE_componentWillReceiveProps == "function" && b3.UNSAFE_componentWillReceiveProps(c3, d4), b3.state !== a4 && nh.enqueueReplaceState(b3, b3.state, null);
    }
    function rh(a4, b3, c3, d4) {
      var e3 = a4.stateNode;
      e3.props = c3, e3.state = a4.memoizedState, e3.refs = jh, ah(a4);
      var f2 = b3.contextType;
      typeof f2 == "object" && f2 !== null ? e3.context = Vg(f2) : (f2 = Zf(b3) ? Xf : H4.current, e3.context = Yf(a4, f2)), e3.state = a4.memoizedState, f2 = b3.getDerivedStateFromProps, typeof f2 == "function" && (kh(a4, b3, f2, c3), e3.state = a4.memoizedState), typeof b3.getDerivedStateFromProps == "function" || typeof e3.getSnapshotBeforeUpdate == "function" || typeof e3.UNSAFE_componentWillMount != "function" && typeof e3.componentWillMount != "function" || (b3 = e3.state, typeof e3.componentWillMount == "function" && e3.componentWillMount(), typeof e3.UNSAFE_componentWillMount == "function" && e3.UNSAFE_componentWillMount(), b3 !== e3.state && nh.enqueueReplaceState(e3, e3.state, null), gh(a4, c3, e3, d4), e3.state = a4.memoizedState), typeof e3.componentDidMount == "function" && (a4.flags |= 4194308);
    }
    function sh(a4, b3, c3) {
      if (a4 = c3.ref, a4 !== null && typeof a4 != "function" && typeof a4 != "object") {
        if (c3._owner) {
          if (c3 = c3._owner, c3) {
            if (c3.tag !== 1)
              throw Error(p2(309));
            var d4 = c3.stateNode;
          }
          if (!d4)
            throw Error(p2(147, a4));
          var e3 = d4, f2 = "" + a4;
          return b3 !== null && b3.ref !== null && typeof b3.ref == "function" && b3.ref._stringRef === f2 ? b3.ref : (b3 = function(a5) {
            var b4 = e3.refs;
            b4 === jh && (b4 = e3.refs = {}), a5 === null ? delete b4[f2] : b4[f2] = a5;
          }, b3._stringRef = f2, b3);
        }
        if (typeof a4 != "string")
          throw Error(p2(284));
        if (!c3._owner)
          throw Error(p2(290, a4));
      }
      return a4;
    }
    function th(a4, b3) {
      throw a4 = Object.prototype.toString.call(b3), Error(p2(31, a4 === "[object Object]" ? "object with keys {" + Object.keys(b3).join(", ") + "}" : a4));
    }
    function uh(a4) {
      var b3 = a4._init;
      return b3(a4._payload);
    }
    function vh2(a4) {
      function b3(b4, c4) {
        if (a4) {
          var d5 = b4.deletions;
          d5 === null ? (b4.deletions = [c4], b4.flags |= 16) : d5.push(c4);
        }
      }
      function c3(c4, d5) {
        if (!a4)
          return null;
        for (; d5 !== null; )
          b3(c4, d5), d5 = d5.sibling;
        return null;
      }
      function d4(a5, b4) {
        for (a5 = /* @__PURE__ */ new Map(); b4 !== null; )
          b4.key !== null ? a5.set(b4.key, b4) : a5.set(b4.index, b4), b4 = b4.sibling;
        return a5;
      }
      function e3(a5, b4) {
        return a5 = wh(a5, b4), a5.index = 0, a5.sibling = null, a5;
      }
      function f2(b4, c4, d5) {
        return b4.index = d5, a4 ? (d5 = b4.alternate, d5 !== null ? (d5 = d5.index, d5 < c4 ? (b4.flags |= 2, c4) : d5) : (b4.flags |= 2, c4)) : (b4.flags |= 1048576, c4);
      }
      function g2(b4) {
        return a4 && b4.alternate === null && (b4.flags |= 2), b4;
      }
      function h4(a5, b4, c4, d5) {
        return b4 === null || b4.tag !== 6 ? (b4 = xh(c4, a5.mode, d5), b4.return = a5, b4) : (b4 = e3(b4, c4), b4.return = a5, b4);
      }
      function k3(a5, b4, c4, d5) {
        var f3 = c4.type;
        return f3 === ya ? m4(a5, b4, c4.props.children, d5, c4.key) : b4 !== null && (b4.elementType === f3 || typeof f3 == "object" && f3 !== null && f3.$$typeof === Ha && uh(f3) === b4.type) ? (d5 = e3(b4, c4.props), d5.ref = sh(a5, b4, c4), d5.return = a5, d5) : (d5 = yh(c4.type, c4.key, c4.props, null, a5.mode, d5), d5.ref = sh(a5, b4, c4), d5.return = a5, d5);
      }
      function l2(a5, b4, c4, d5) {
        return b4 === null || b4.tag !== 4 || b4.stateNode.containerInfo !== c4.containerInfo || b4.stateNode.implementation !== c4.implementation ? (b4 = zh(c4, a5.mode, d5), b4.return = a5, b4) : (b4 = e3(b4, c4.children || []), b4.return = a5, b4);
      }
      function m4(a5, b4, c4, d5, f3) {
        return b4 === null || b4.tag !== 7 ? (b4 = Ah(c4, a5.mode, d5, f3), b4.return = a5, b4) : (b4 = e3(b4, c4), b4.return = a5, b4);
      }
      function q2(a5, b4, c4) {
        if (typeof b4 == "string" && b4 !== "" || typeof b4 == "number")
          return b4 = xh("" + b4, a5.mode, c4), b4.return = a5, b4;
        if (typeof b4 == "object" && b4 !== null) {
          switch (b4.$$typeof) {
            case va:
              return c4 = yh(b4.type, b4.key, b4.props, null, a5.mode, c4), c4.ref = sh(a5, null, b4), c4.return = a5, c4;
            case wa:
              return b4 = zh(b4, a5.mode, c4), b4.return = a5, b4;
            case Ha:
              var d5 = b4._init;
              return q2(a5, d5(b4._payload), c4);
          }
          if (eb(b4) || Ka(b4))
            return b4 = Ah(b4, a5.mode, c4, null), b4.return = a5, b4;
          th(a5, b4);
        }
        return null;
      }
      function r3(a5, b4, c4, d5) {
        var e4 = b4 !== null ? b4.key : null;
        if (typeof c4 == "string" && c4 !== "" || typeof c4 == "number")
          return e4 !== null ? null : h4(a5, b4, "" + c4, d5);
        if (typeof c4 == "object" && c4 !== null) {
          switch (c4.$$typeof) {
            case va:
              return c4.key === e4 ? k3(a5, b4, c4, d5) : null;
            case wa:
              return c4.key === e4 ? l2(a5, b4, c4, d5) : null;
            case Ha:
              return e4 = c4._init, r3(
                a5,
                b4,
                e4(c4._payload),
                d5
              );
          }
          if (eb(c4) || Ka(c4))
            return e4 !== null ? null : m4(a5, b4, c4, d5, null);
          th(a5, c4);
        }
        return null;
      }
      function y4(a5, b4, c4, d5, e4) {
        if (typeof d5 == "string" && d5 !== "" || typeof d5 == "number")
          return a5 = a5.get(c4) || null, h4(b4, a5, "" + d5, e4);
        if (typeof d5 == "object" && d5 !== null) {
          switch (d5.$$typeof) {
            case va:
              return a5 = a5.get(d5.key === null ? c4 : d5.key) || null, k3(b4, a5, d5, e4);
            case wa:
              return a5 = a5.get(d5.key === null ? c4 : d5.key) || null, l2(b4, a5, d5, e4);
            case Ha:
              var f3 = d5._init;
              return y4(a5, b4, c4, f3(d5._payload), e4);
          }
          if (eb(d5) || Ka(d5))
            return a5 = a5.get(c4) || null, m4(b4, a5, d5, e4, null);
          th(b4, d5);
        }
        return null;
      }
      function n2(e4, g3, h5, k4) {
        for (var l3 = null, m5 = null, u3 = g3, w2 = g3 = 0, x3 = null; u3 !== null && w2 < h5.length; w2++) {
          u3.index > w2 ? (x3 = u3, u3 = null) : x3 = u3.sibling;
          var n3 = r3(e4, u3, h5[w2], k4);
          if (n3 === null) {
            u3 === null && (u3 = x3);
            break;
          }
          a4 && u3 && n3.alternate === null && b3(e4, u3), g3 = f2(n3, g3, w2), m5 === null ? l3 = n3 : m5.sibling = n3, m5 = n3, u3 = x3;
        }
        if (w2 === h5.length)
          return c3(e4, u3), I2 && tg(e4, w2), l3;
        if (u3 === null) {
          for (; w2 < h5.length; w2++)
            u3 = q2(e4, h5[w2], k4), u3 !== null && (g3 = f2(u3, g3, w2), m5 === null ? l3 = u3 : m5.sibling = u3, m5 = u3);
          return I2 && tg(e4, w2), l3;
        }
        for (u3 = d4(e4, u3); w2 < h5.length; w2++)
          x3 = y4(u3, e4, w2, h5[w2], k4), x3 !== null && (a4 && x3.alternate !== null && u3.delete(x3.key === null ? w2 : x3.key), g3 = f2(x3, g3, w2), m5 === null ? l3 = x3 : m5.sibling = x3, m5 = x3);
        return a4 && u3.forEach(function(a5) {
          return b3(e4, a5);
        }), I2 && tg(e4, w2), l3;
      }
      function t4(e4, g3, h5, k4) {
        var l3 = Ka(h5);
        if (typeof l3 != "function")
          throw Error(p2(150));
        if (h5 = l3.call(h5), h5 == null)
          throw Error(p2(151));
        for (var u3 = l3 = null, m5 = g3, w2 = g3 = 0, x3 = null, n3 = h5.next(); m5 !== null && !n3.done; w2++, n3 = h5.next()) {
          m5.index > w2 ? (x3 = m5, m5 = null) : x3 = m5.sibling;
          var t5 = r3(e4, m5, n3.value, k4);
          if (t5 === null) {
            m5 === null && (m5 = x3);
            break;
          }
          a4 && m5 && t5.alternate === null && b3(e4, m5), g3 = f2(t5, g3, w2), u3 === null ? l3 = t5 : u3.sibling = t5, u3 = t5, m5 = x3;
        }
        if (n3.done)
          return c3(
            e4,
            m5
          ), I2 && tg(e4, w2), l3;
        if (m5 === null) {
          for (; !n3.done; w2++, n3 = h5.next())
            n3 = q2(e4, n3.value, k4), n3 !== null && (g3 = f2(n3, g3, w2), u3 === null ? l3 = n3 : u3.sibling = n3, u3 = n3);
          return I2 && tg(e4, w2), l3;
        }
        for (m5 = d4(e4, m5); !n3.done; w2++, n3 = h5.next())
          n3 = y4(m5, e4, w2, n3.value, k4), n3 !== null && (a4 && n3.alternate !== null && m5.delete(n3.key === null ? w2 : n3.key), g3 = f2(n3, g3, w2), u3 === null ? l3 = n3 : u3.sibling = n3, u3 = n3);
        return a4 && m5.forEach(function(a5) {
          return b3(e4, a5);
        }), I2 && tg(e4, w2), l3;
      }
      function J(a5, d5, f3, h5) {
        if (typeof f3 == "object" && f3 !== null && f3.type === ya && f3.key === null && (f3 = f3.props.children), typeof f3 == "object" && f3 !== null) {
          switch (f3.$$typeof) {
            case va:
              a: {
                for (var k4 = f3.key, l3 = d5; l3 !== null; ) {
                  if (l3.key === k4) {
                    if (k4 = f3.type, k4 === ya) {
                      if (l3.tag === 7) {
                        c3(a5, l3.sibling), d5 = e3(l3, f3.props.children), d5.return = a5, a5 = d5;
                        break a;
                      }
                    } else if (l3.elementType === k4 || typeof k4 == "object" && k4 !== null && k4.$$typeof === Ha && uh(k4) === l3.type) {
                      c3(a5, l3.sibling), d5 = e3(l3, f3.props), d5.ref = sh(a5, l3, f3), d5.return = a5, a5 = d5;
                      break a;
                    }
                    c3(a5, l3);
                    break;
                  } else
                    b3(a5, l3);
                  l3 = l3.sibling;
                }
                f3.type === ya ? (d5 = Ah(f3.props.children, a5.mode, h5, f3.key), d5.return = a5, a5 = d5) : (h5 = yh(f3.type, f3.key, f3.props, null, a5.mode, h5), h5.ref = sh(a5, d5, f3), h5.return = a5, a5 = h5);
              }
              return g2(a5);
            case wa:
              a: {
                for (l3 = f3.key; d5 !== null; ) {
                  if (d5.key === l3)
                    if (d5.tag === 4 && d5.stateNode.containerInfo === f3.containerInfo && d5.stateNode.implementation === f3.implementation) {
                      c3(a5, d5.sibling), d5 = e3(d5, f3.children || []), d5.return = a5, a5 = d5;
                      break a;
                    } else {
                      c3(a5, d5);
                      break;
                    }
                  else
                    b3(a5, d5);
                  d5 = d5.sibling;
                }
                d5 = zh(f3, a5.mode, h5), d5.return = a5, a5 = d5;
              }
              return g2(a5);
            case Ha:
              return l3 = f3._init, J(a5, d5, l3(f3._payload), h5);
          }
          if (eb(f3))
            return n2(a5, d5, f3, h5);
          if (Ka(f3))
            return t4(a5, d5, f3, h5);
          th(a5, f3);
        }
        return typeof f3 == "string" && f3 !== "" || typeof f3 == "number" ? (f3 = "" + f3, d5 !== null && d5.tag === 6 ? (c3(a5, d5.sibling), d5 = e3(d5, f3), d5.return = a5, a5 = d5) : (c3(a5, d5), d5 = xh(f3, a5.mode, h5), d5.return = a5, a5 = d5), g2(a5)) : c3(a5, d5);
      }
      return J;
    }
    var Bh = vh2(!0), Ch = vh2(!1), Dh = {}, Eh = Uf(Dh), Fh = Uf(Dh), Gh = Uf(Dh);
    function Hh(a4) {
      if (a4 === Dh)
        throw Error(p2(174));
      return a4;
    }
    function Ih(a4, b3) {
      switch (G2(Gh, b3), G2(Fh, a4), G2(Eh, Dh), a4 = b3.nodeType, a4) {
        case 9:
        case 11:
          b3 = (b3 = b3.documentElement) ? b3.namespaceURI : lb(null, "");
          break;
        default:
          a4 = a4 === 8 ? b3.parentNode : b3, b3 = a4.namespaceURI || null, a4 = a4.tagName, b3 = lb(b3, a4);
      }
      E2(Eh), G2(Eh, b3);
    }
    function Jh() {
      E2(Eh), E2(Fh), E2(Gh);
    }
    function Kh(a4) {
      Hh(Gh.current);
      var b3 = Hh(Eh.current), c3 = lb(b3, a4.type);
      b3 !== c3 && (G2(Fh, a4), G2(Eh, c3));
    }
    function Lh(a4) {
      Fh.current === a4 && (E2(Eh), E2(Fh));
    }
    var M4 = Uf(0);
    function Mh(a4) {
      for (var b3 = a4; b3 !== null; ) {
        if (b3.tag === 13) {
          var c3 = b3.memoizedState;
          if (c3 !== null && (c3 = c3.dehydrated, c3 === null || c3.data === "$?" || c3.data === "$!"))
            return b3;
        } else if (b3.tag === 19 && b3.memoizedProps.revealOrder !== void 0) {
          if (b3.flags & 128)
            return b3;
        } else if (b3.child !== null) {
          b3.child.return = b3, b3 = b3.child;
          continue;
        }
        if (b3 === a4)
          break;
        for (; b3.sibling === null; ) {
          if (b3.return === null || b3.return === a4)
            return null;
          b3 = b3.return;
        }
        b3.sibling.return = b3.return, b3 = b3.sibling;
      }
      return null;
    }
    var Nh = [];
    function Oh() {
      for (var a4 = 0; a4 < Nh.length; a4++)
        Nh[a4]._workInProgressVersionPrimary = null;
      Nh.length = 0;
    }
    var Ph = ua.ReactCurrentDispatcher, Qh = ua.ReactCurrentBatchConfig, Rh = 0, N2 = null, O2 = null, P = null, Sh = !1, Th = !1, Uh = 0, Vh = 0;
    function Q2() {
      throw Error(p2(321));
    }
    function Wh(a4, b3) {
      if (b3 === null)
        return !1;
      for (var c3 = 0; c3 < b3.length && c3 < a4.length; c3++)
        if (!He(a4[c3], b3[c3]))
          return !1;
      return !0;
    }
    function Xh(a4, b3, c3, d4, e3, f2) {
      if (Rh = f2, N2 = b3, b3.memoizedState = null, b3.updateQueue = null, b3.lanes = 0, Ph.current = a4 === null || a4.memoizedState === null ? Yh : Zh, a4 = c3(d4, e3), Th) {
        f2 = 0;
        do {
          if (Th = !1, Uh = 0, 25 <= f2)
            throw Error(p2(301));
          f2 += 1, P = O2 = null, b3.updateQueue = null, Ph.current = $h, a4 = c3(d4, e3);
        } while (Th);
      }
      if (Ph.current = ai, b3 = O2 !== null && O2.next !== null, Rh = 0, P = O2 = N2 = null, Sh = !1, b3)
        throw Error(p2(300));
      return a4;
    }
    function bi() {
      var a4 = Uh !== 0;
      return Uh = 0, a4;
    }
    function ci() {
      var a4 = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null };
      return P === null ? N2.memoizedState = P = a4 : P = P.next = a4, P;
    }
    function di() {
      if (O2 === null) {
        var a4 = N2.alternate;
        a4 = a4 !== null ? a4.memoizedState : null;
      } else
        a4 = O2.next;
      var b3 = P === null ? N2.memoizedState : P.next;
      if (b3 !== null)
        P = b3, O2 = a4;
      else {
        if (a4 === null)
          throw Error(p2(310));
        O2 = a4, a4 = { memoizedState: O2.memoizedState, baseState: O2.baseState, baseQueue: O2.baseQueue, queue: O2.queue, next: null }, P === null ? N2.memoizedState = P = a4 : P = P.next = a4;
      }
      return P;
    }
    function ei(a4, b3) {
      return typeof b3 == "function" ? b3(a4) : b3;
    }
    function fi(a4) {
      var b3 = di(), c3 = b3.queue;
      if (c3 === null)
        throw Error(p2(311));
      c3.lastRenderedReducer = a4;
      var d4 = O2, e3 = d4.baseQueue, f2 = c3.pending;
      if (f2 !== null) {
        if (e3 !== null) {
          var g2 = e3.next;
          e3.next = f2.next, f2.next = g2;
        }
        d4.baseQueue = e3 = f2, c3.pending = null;
      }
      if (e3 !== null) {
        f2 = e3.next, d4 = d4.baseState;
        var h4 = g2 = null, k3 = null, l2 = f2;
        do {
          var m4 = l2.lane;
          if ((Rh & m4) === m4)
            k3 !== null && (k3 = k3.next = { lane: 0, action: l2.action, hasEagerState: l2.hasEagerState, eagerState: l2.eagerState, next: null }), d4 = l2.hasEagerState ? l2.eagerState : a4(d4, l2.action);
          else {
            var q2 = {
              lane: m4,
              action: l2.action,
              hasEagerState: l2.hasEagerState,
              eagerState: l2.eagerState,
              next: null
            };
            k3 === null ? (h4 = k3 = q2, g2 = d4) : k3 = k3.next = q2, N2.lanes |= m4, hh |= m4;
          }
          l2 = l2.next;
        } while (l2 !== null && l2 !== f2);
        k3 === null ? g2 = d4 : k3.next = h4, He(d4, b3.memoizedState) || (Ug = !0), b3.memoizedState = d4, b3.baseState = g2, b3.baseQueue = k3, c3.lastRenderedState = d4;
      }
      if (a4 = c3.interleaved, a4 !== null) {
        e3 = a4;
        do
          f2 = e3.lane, N2.lanes |= f2, hh |= f2, e3 = e3.next;
        while (e3 !== a4);
      } else
        e3 === null && (c3.lanes = 0);
      return [b3.memoizedState, c3.dispatch];
    }
    function gi(a4) {
      var b3 = di(), c3 = b3.queue;
      if (c3 === null)
        throw Error(p2(311));
      c3.lastRenderedReducer = a4;
      var d4 = c3.dispatch, e3 = c3.pending, f2 = b3.memoizedState;
      if (e3 !== null) {
        c3.pending = null;
        var g2 = e3 = e3.next;
        do
          f2 = a4(f2, g2.action), g2 = g2.next;
        while (g2 !== e3);
        He(f2, b3.memoizedState) || (Ug = !0), b3.memoizedState = f2, b3.baseQueue === null && (b3.baseState = f2), c3.lastRenderedState = f2;
      }
      return [f2, d4];
    }
    function hi() {
    }
    function ii(a4, b3) {
      var c3 = N2, d4 = di(), e3 = b3(), f2 = !He(d4.memoizedState, e3);
      if (f2 && (d4.memoizedState = e3, Ug = !0), d4 = d4.queue, ji(ki.bind(null, c3, d4, a4), [a4]), d4.getSnapshot !== b3 || f2 || P !== null && P.memoizedState.tag & 1) {
        if (c3.flags |= 2048, li(9, mi.bind(null, c3, d4, e3, b3), void 0, null), R2 === null)
          throw Error(p2(349));
        Rh & 30 || ni(c3, b3, e3);
      }
      return e3;
    }
    function ni(a4, b3, c3) {
      a4.flags |= 16384, a4 = { getSnapshot: b3, value: c3 }, b3 = N2.updateQueue, b3 === null ? (b3 = { lastEffect: null, stores: null }, N2.updateQueue = b3, b3.stores = [a4]) : (c3 = b3.stores, c3 === null ? b3.stores = [a4] : c3.push(a4));
    }
    function mi(a4, b3, c3, d4) {
      b3.value = c3, b3.getSnapshot = d4, oi(b3) && pi(a4);
    }
    function ki(a4, b3, c3) {
      return c3(function() {
        oi(b3) && pi(a4);
      });
    }
    function oi(a4) {
      var b3 = a4.getSnapshot;
      a4 = a4.value;
      try {
        var c3 = b3();
        return !He(a4, c3);
      } catch {
        return !0;
      }
    }
    function pi(a4) {
      var b3 = Zg(a4, 1);
      b3 !== null && mh(b3, a4, 1, -1);
    }
    function qi(a4) {
      var b3 = ci();
      return typeof a4 == "function" && (a4 = a4()), b3.memoizedState = b3.baseState = a4, a4 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a4 }, b3.queue = a4, a4 = a4.dispatch = ri.bind(null, N2, a4), [b3.memoizedState, a4];
    }
    function li(a4, b3, c3, d4) {
      return a4 = { tag: a4, create: b3, destroy: c3, deps: d4, next: null }, b3 = N2.updateQueue, b3 === null ? (b3 = { lastEffect: null, stores: null }, N2.updateQueue = b3, b3.lastEffect = a4.next = a4) : (c3 = b3.lastEffect, c3 === null ? b3.lastEffect = a4.next = a4 : (d4 = c3.next, c3.next = a4, a4.next = d4, b3.lastEffect = a4)), a4;
    }
    function si() {
      return di().memoizedState;
    }
    function ti(a4, b3, c3, d4) {
      var e3 = ci();
      N2.flags |= a4, e3.memoizedState = li(1 | b3, c3, void 0, d4 === void 0 ? null : d4);
    }
    function ui(a4, b3, c3, d4) {
      var e3 = di();
      d4 = d4 === void 0 ? null : d4;
      var f2 = void 0;
      if (O2 !== null) {
        var g2 = O2.memoizedState;
        if (f2 = g2.destroy, d4 !== null && Wh(d4, g2.deps)) {
          e3.memoizedState = li(b3, c3, f2, d4);
          return;
        }
      }
      N2.flags |= a4, e3.memoizedState = li(1 | b3, c3, f2, d4);
    }
    function vi(a4, b3) {
      return ti(8390656, 8, a4, b3);
    }
    function ji(a4, b3) {
      return ui(2048, 8, a4, b3);
    }
    function wi(a4, b3) {
      return ui(4, 2, a4, b3);
    }
    function xi(a4, b3) {
      return ui(4, 4, a4, b3);
    }
    function yi(a4, b3) {
      if (typeof b3 == "function")
        return a4 = a4(), b3(a4), function() {
          b3(null);
        };
      if (b3 != null)
        return a4 = a4(), b3.current = a4, function() {
          b3.current = null;
        };
    }
    function zi(a4, b3, c3) {
      return c3 = c3 != null ? c3.concat([a4]) : null, ui(4, 4, yi.bind(null, b3, a4), c3);
    }
    function Ai() {
    }
    function Bi(a4, b3) {
      var c3 = di();
      b3 = b3 === void 0 ? null : b3;
      var d4 = c3.memoizedState;
      return d4 !== null && b3 !== null && Wh(b3, d4[1]) ? d4[0] : (c3.memoizedState = [a4, b3], a4);
    }
    function Ci(a4, b3) {
      var c3 = di();
      b3 = b3 === void 0 ? null : b3;
      var d4 = c3.memoizedState;
      return d4 !== null && b3 !== null && Wh(b3, d4[1]) ? d4[0] : (a4 = a4(), c3.memoizedState = [a4, b3], a4);
    }
    function Di(a4, b3, c3) {
      return Rh & 21 ? (He(c3, b3) || (c3 = yc(), N2.lanes |= c3, hh |= c3, a4.baseState = !0), b3) : (a4.baseState && (a4.baseState = !1, Ug = !0), a4.memoizedState = c3);
    }
    function Ei(a4, b3) {
      var c3 = C;
      C = c3 !== 0 && 4 > c3 ? c3 : 4, a4(!0);
      var d4 = Qh.transition;
      Qh.transition = {};
      try {
        a4(!1), b3();
      } finally {
        C = c3, Qh.transition = d4;
      }
    }
    function Fi() {
      return di().memoizedState;
    }
    function Gi(a4, b3, c3) {
      var d4 = lh(a4);
      if (c3 = { lane: d4, action: c3, hasEagerState: !1, eagerState: null, next: null }, Hi(a4))
        Ii(b3, c3);
      else if (c3 = Yg(a4, b3, c3, d4), c3 !== null) {
        var e3 = L3();
        mh(c3, a4, d4, e3), Ji(c3, b3, d4);
      }
    }
    function ri(a4, b3, c3) {
      var d4 = lh(a4), e3 = { lane: d4, action: c3, hasEagerState: !1, eagerState: null, next: null };
      if (Hi(a4))
        Ii(b3, e3);
      else {
        var f2 = a4.alternate;
        if (a4.lanes === 0 && (f2 === null || f2.lanes === 0) && (f2 = b3.lastRenderedReducer, f2 !== null))
          try {
            var g2 = b3.lastRenderedState, h4 = f2(g2, c3);
            if (e3.hasEagerState = !0, e3.eagerState = h4, He(h4, g2)) {
              var k3 = b3.interleaved;
              k3 === null ? (e3.next = e3, Xg(b3)) : (e3.next = k3.next, k3.next = e3), b3.interleaved = e3;
              return;
            }
          } catch {
          } finally {
          }
        c3 = Yg(a4, b3, e3, d4), c3 !== null && (e3 = L3(), mh(c3, a4, d4, e3), Ji(c3, b3, d4));
      }
    }
    function Hi(a4) {
      var b3 = a4.alternate;
      return a4 === N2 || b3 !== null && b3 === N2;
    }
    function Ii(a4, b3) {
      Th = Sh = !0;
      var c3 = a4.pending;
      c3 === null ? b3.next = b3 : (b3.next = c3.next, c3.next = b3), a4.pending = b3;
    }
    function Ji(a4, b3, c3) {
      if (c3 & 4194240) {
        var d4 = b3.lanes;
        d4 &= a4.pendingLanes, c3 |= d4, b3.lanes = c3, Cc(a4, c3);
      }
    }
    var ai = { readContext: Vg, useCallback: Q2, useContext: Q2, useEffect: Q2, useImperativeHandle: Q2, useInsertionEffect: Q2, useLayoutEffect: Q2, useMemo: Q2, useReducer: Q2, useRef: Q2, useState: Q2, useDebugValue: Q2, useDeferredValue: Q2, useTransition: Q2, useMutableSource: Q2, useSyncExternalStore: Q2, useId: Q2, unstable_isNewReconciler: !1 }, Yh = { readContext: Vg, useCallback: function(a4, b3) {
      return ci().memoizedState = [a4, b3 === void 0 ? null : b3], a4;
    }, useContext: Vg, useEffect: vi, useImperativeHandle: function(a4, b3, c3) {
      return c3 = c3 != null ? c3.concat([a4]) : null, ti(
        4194308,
        4,
        yi.bind(null, b3, a4),
        c3
      );
    }, useLayoutEffect: function(a4, b3) {
      return ti(4194308, 4, a4, b3);
    }, useInsertionEffect: function(a4, b3) {
      return ti(4, 2, a4, b3);
    }, useMemo: function(a4, b3) {
      var c3 = ci();
      return b3 = b3 === void 0 ? null : b3, a4 = a4(), c3.memoizedState = [a4, b3], a4;
    }, useReducer: function(a4, b3, c3) {
      var d4 = ci();
      return b3 = c3 !== void 0 ? c3(b3) : b3, d4.memoizedState = d4.baseState = b3, a4 = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a4, lastRenderedState: b3 }, d4.queue = a4, a4 = a4.dispatch = Gi.bind(null, N2, a4), [d4.memoizedState, a4];
    }, useRef: function(a4) {
      var b3 = ci();
      return a4 = { current: a4 }, b3.memoizedState = a4;
    }, useState: qi, useDebugValue: Ai, useDeferredValue: function(a4) {
      return ci().memoizedState = a4;
    }, useTransition: function() {
      var a4 = qi(!1), b3 = a4[0];
      return a4 = Ei.bind(null, a4[1]), ci().memoizedState = a4, [b3, a4];
    }, useMutableSource: function() {
    }, useSyncExternalStore: function(a4, b3, c3) {
      var d4 = N2, e3 = ci();
      if (I2) {
        if (c3 === void 0)
          throw Error(p2(407));
        c3 = c3();
      } else {
        if (c3 = b3(), R2 === null)
          throw Error(p2(349));
        Rh & 30 || ni(d4, b3, c3);
      }
      e3.memoizedState = c3;
      var f2 = { value: c3, getSnapshot: b3 };
      return e3.queue = f2, vi(ki.bind(
        null,
        d4,
        f2,
        a4
      ), [a4]), d4.flags |= 2048, li(9, mi.bind(null, d4, f2, c3, b3), void 0, null), c3;
    }, useId: function() {
      var a4 = ci(), b3 = R2.identifierPrefix;
      if (I2) {
        var c3 = sg, d4 = rg;
        c3 = (d4 & ~(1 << 32 - oc(d4) - 1)).toString(32) + c3, b3 = ":" + b3 + "R" + c3, c3 = Uh++, 0 < c3 && (b3 += "H" + c3.toString(32)), b3 += ":";
      } else
        c3 = Vh++, b3 = ":" + b3 + "r" + c3.toString(32) + ":";
      return a4.memoizedState = b3;
    }, unstable_isNewReconciler: !1 }, Zh = {
      readContext: Vg,
      useCallback: Bi,
      useContext: Vg,
      useEffect: ji,
      useImperativeHandle: zi,
      useInsertionEffect: wi,
      useLayoutEffect: xi,
      useMemo: Ci,
      useReducer: fi,
      useRef: si,
      useState: function() {
        return fi(ei);
      },
      useDebugValue: Ai,
      useDeferredValue: function(a4) {
        var b3 = di();
        return Di(b3, O2.memoizedState, a4);
      },
      useTransition: function() {
        var a4 = fi(ei)[0], b3 = di().memoizedState;
        return [a4, b3];
      },
      useMutableSource: hi,
      useSyncExternalStore: ii,
      useId: Fi,
      unstable_isNewReconciler: !1
    }, $h = { readContext: Vg, useCallback: Bi, useContext: Vg, useEffect: ji, useImperativeHandle: zi, useInsertionEffect: wi, useLayoutEffect: xi, useMemo: Ci, useReducer: gi, useRef: si, useState: function() {
      return gi(ei);
    }, useDebugValue: Ai, useDeferredValue: function(a4) {
      var b3 = di();
      return O2 === null ? b3.memoizedState = a4 : Di(b3, O2.memoizedState, a4);
    }, useTransition: function() {
      var a4 = gi(ei)[0], b3 = di().memoizedState;
      return [a4, b3];
    }, useMutableSource: hi, useSyncExternalStore: ii, useId: Fi, unstable_isNewReconciler: !1 };
    function Ki(a4, b3) {
      try {
        var c3 = "", d4 = b3;
        do
          c3 += Pa(d4), d4 = d4.return;
        while (d4);
        var e3 = c3;
      } catch (f2) {
        e3 = `
Error generating stack: ` + f2.message + `
` + f2.stack;
      }
      return { value: a4, source: b3, stack: e3, digest: null };
    }
    function Li(a4, b3, c3) {
      return { value: a4, source: null, stack: c3 ?? null, digest: b3 ?? null };
    }
    function Mi(a4, b3) {
      try {
        console.error(b3.value);
      } catch (c3) {
        setTimeout(function() {
          throw c3;
        });
      }
    }
    var Ni = typeof WeakMap == "function" ? WeakMap : Map;
    function Oi(a4, b3, c3) {
      c3 = ch(-1, c3), c3.tag = 3, c3.payload = { element: null };
      var d4 = b3.value;
      return c3.callback = function() {
        Pi || (Pi = !0, Qi = d4), Mi(a4, b3);
      }, c3;
    }
    function Ri(a4, b3, c3) {
      c3 = ch(-1, c3), c3.tag = 3;
      var d4 = a4.type.getDerivedStateFromError;
      if (typeof d4 == "function") {
        var e3 = b3.value;
        c3.payload = function() {
          return d4(e3);
        }, c3.callback = function() {
          Mi(a4, b3);
        };
      }
      var f2 = a4.stateNode;
      return f2 !== null && typeof f2.componentDidCatch == "function" && (c3.callback = function() {
        Mi(a4, b3), typeof d4 != "function" && (Si === null ? Si = /* @__PURE__ */ new Set([this]) : Si.add(this));
        var c4 = b3.stack;
        this.componentDidCatch(b3.value, { componentStack: c4 !== null ? c4 : "" });
      }), c3;
    }
    function Ti(a4, b3, c3) {
      var d4 = a4.pingCache;
      if (d4 === null) {
        d4 = a4.pingCache = new Ni();
        var e3 = /* @__PURE__ */ new Set();
        d4.set(b3, e3);
      } else
        e3 = d4.get(b3), e3 === void 0 && (e3 = /* @__PURE__ */ new Set(), d4.set(b3, e3));
      e3.has(c3) || (e3.add(c3), a4 = Ui.bind(null, a4, b3, c3), b3.then(a4, a4));
    }
    function Vi(a4) {
      do {
        var b3;
        if ((b3 = a4.tag === 13) && (b3 = a4.memoizedState, b3 = b3 !== null ? b3.dehydrated !== null : !0), b3)
          return a4;
        a4 = a4.return;
      } while (a4 !== null);
      return null;
    }
    function Wi(a4, b3, c3, d4, e3) {
      return a4.mode & 1 ? (a4.flags |= 65536, a4.lanes = e3, a4) : (a4 === b3 ? a4.flags |= 65536 : (a4.flags |= 128, c3.flags |= 131072, c3.flags &= -52805, c3.tag === 1 && (c3.alternate === null ? c3.tag = 17 : (b3 = ch(-1, 1), b3.tag = 2, dh(c3, b3, 1))), c3.lanes |= 1), a4);
    }
    var Xi = ua.ReactCurrentOwner, Ug = !1;
    function Yi(a4, b3, c3, d4) {
      b3.child = a4 === null ? Ch(b3, null, c3, d4) : Bh(b3, a4.child, c3, d4);
    }
    function Zi(a4, b3, c3, d4, e3) {
      c3 = c3.render;
      var f2 = b3.ref;
      return Tg(b3, e3), d4 = Xh(a4, b3, c3, d4, f2, e3), c3 = bi(), a4 !== null && !Ug ? (b3.updateQueue = a4.updateQueue, b3.flags &= -2053, a4.lanes &= ~e3, $i(a4, b3, e3)) : (I2 && c3 && vg(b3), b3.flags |= 1, Yi(a4, b3, d4, e3), b3.child);
    }
    function aj(a4, b3, c3, d4, e3) {
      if (a4 === null) {
        var f2 = c3.type;
        return typeof f2 == "function" && !bj(f2) && f2.defaultProps === void 0 && c3.compare === null && c3.defaultProps === void 0 ? (b3.tag = 15, b3.type = f2, cj(a4, b3, f2, d4, e3)) : (a4 = yh(c3.type, null, d4, b3, b3.mode, e3), a4.ref = b3.ref, a4.return = b3, b3.child = a4);
      }
      if (f2 = a4.child, !(a4.lanes & e3)) {
        var g2 = f2.memoizedProps;
        if (c3 = c3.compare, c3 = c3 !== null ? c3 : Ie, c3(g2, d4) && a4.ref === b3.ref)
          return $i(a4, b3, e3);
      }
      return b3.flags |= 1, a4 = wh(f2, d4), a4.ref = b3.ref, a4.return = b3, b3.child = a4;
    }
    function cj(a4, b3, c3, d4, e3) {
      if (a4 !== null) {
        var f2 = a4.memoizedProps;
        if (Ie(f2, d4) && a4.ref === b3.ref)
          if (Ug = !1, b3.pendingProps = d4 = f2, (a4.lanes & e3) !== 0)
            a4.flags & 131072 && (Ug = !0);
          else
            return b3.lanes = a4.lanes, $i(a4, b3, e3);
      }
      return dj(a4, b3, c3, d4, e3);
    }
    function ej(a4, b3, c3) {
      var d4 = b3.pendingProps, e3 = d4.children, f2 = a4 !== null ? a4.memoizedState : null;
      if (d4.mode === "hidden")
        if (!(b3.mode & 1))
          b3.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, G2(fj, gj), gj |= c3;
        else {
          if (!(c3 & 1073741824))
            return a4 = f2 !== null ? f2.baseLanes | c3 : c3, b3.lanes = b3.childLanes = 1073741824, b3.memoizedState = { baseLanes: a4, cachePool: null, transitions: null }, b3.updateQueue = null, G2(fj, gj), gj |= a4, null;
          b3.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }, d4 = f2 !== null ? f2.baseLanes : c3, G2(fj, gj), gj |= d4;
        }
      else
        f2 !== null ? (d4 = f2.baseLanes | c3, b3.memoizedState = null) : d4 = c3, G2(fj, gj), gj |= d4;
      return Yi(a4, b3, e3, c3), b3.child;
    }
    function hj(a4, b3) {
      var c3 = b3.ref;
      (a4 === null && c3 !== null || a4 !== null && a4.ref !== c3) && (b3.flags |= 512, b3.flags |= 2097152);
    }
    function dj(a4, b3, c3, d4, e3) {
      var f2 = Zf(c3) ? Xf : H4.current;
      return f2 = Yf(b3, f2), Tg(b3, e3), c3 = Xh(a4, b3, c3, d4, f2, e3), d4 = bi(), a4 !== null && !Ug ? (b3.updateQueue = a4.updateQueue, b3.flags &= -2053, a4.lanes &= ~e3, $i(a4, b3, e3)) : (I2 && d4 && vg(b3), b3.flags |= 1, Yi(a4, b3, c3, e3), b3.child);
    }
    function ij(a4, b3, c3, d4, e3) {
      if (Zf(c3)) {
        var f2 = !0;
        cg(b3);
      } else
        f2 = !1;
      if (Tg(b3, e3), b3.stateNode === null)
        jj(a4, b3), ph(b3, c3, d4), rh(b3, c3, d4, e3), d4 = !0;
      else if (a4 === null) {
        var g2 = b3.stateNode, h4 = b3.memoizedProps;
        g2.props = h4;
        var k3 = g2.context, l2 = c3.contextType;
        typeof l2 == "object" && l2 !== null ? l2 = Vg(l2) : (l2 = Zf(c3) ? Xf : H4.current, l2 = Yf(b3, l2));
        var m4 = c3.getDerivedStateFromProps, q2 = typeof m4 == "function" || typeof g2.getSnapshotBeforeUpdate == "function";
        q2 || typeof g2.UNSAFE_componentWillReceiveProps != "function" && typeof g2.componentWillReceiveProps != "function" || (h4 !== d4 || k3 !== l2) && qh(b3, g2, d4, l2), $g = !1;
        var r3 = b3.memoizedState;
        g2.state = r3, gh(b3, d4, g2, e3), k3 = b3.memoizedState, h4 !== d4 || r3 !== k3 || Wf.current || $g ? (typeof m4 == "function" && (kh(b3, c3, m4, d4), k3 = b3.memoizedState), (h4 = $g || oh(b3, c3, h4, d4, r3, k3, l2)) ? (q2 || typeof g2.UNSAFE_componentWillMount != "function" && typeof g2.componentWillMount != "function" || (typeof g2.componentWillMount == "function" && g2.componentWillMount(), typeof g2.UNSAFE_componentWillMount == "function" && g2.UNSAFE_componentWillMount()), typeof g2.componentDidMount == "function" && (b3.flags |= 4194308)) : (typeof g2.componentDidMount == "function" && (b3.flags |= 4194308), b3.memoizedProps = d4, b3.memoizedState = k3), g2.props = d4, g2.state = k3, g2.context = l2, d4 = h4) : (typeof g2.componentDidMount == "function" && (b3.flags |= 4194308), d4 = !1);
      } else {
        g2 = b3.stateNode, bh(a4, b3), h4 = b3.memoizedProps, l2 = b3.type === b3.elementType ? h4 : Lg(b3.type, h4), g2.props = l2, q2 = b3.pendingProps, r3 = g2.context, k3 = c3.contextType, typeof k3 == "object" && k3 !== null ? k3 = Vg(k3) : (k3 = Zf(c3) ? Xf : H4.current, k3 = Yf(b3, k3));
        var y4 = c3.getDerivedStateFromProps;
        (m4 = typeof y4 == "function" || typeof g2.getSnapshotBeforeUpdate == "function") || typeof g2.UNSAFE_componentWillReceiveProps != "function" && typeof g2.componentWillReceiveProps != "function" || (h4 !== q2 || r3 !== k3) && qh(b3, g2, d4, k3), $g = !1, r3 = b3.memoizedState, g2.state = r3, gh(b3, d4, g2, e3);
        var n2 = b3.memoizedState;
        h4 !== q2 || r3 !== n2 || Wf.current || $g ? (typeof y4 == "function" && (kh(b3, c3, y4, d4), n2 = b3.memoizedState), (l2 = $g || oh(b3, c3, l2, d4, r3, n2, k3) || !1) ? (m4 || typeof g2.UNSAFE_componentWillUpdate != "function" && typeof g2.componentWillUpdate != "function" || (typeof g2.componentWillUpdate == "function" && g2.componentWillUpdate(d4, n2, k3), typeof g2.UNSAFE_componentWillUpdate == "function" && g2.UNSAFE_componentWillUpdate(d4, n2, k3)), typeof g2.componentDidUpdate == "function" && (b3.flags |= 4), typeof g2.getSnapshotBeforeUpdate == "function" && (b3.flags |= 1024)) : (typeof g2.componentDidUpdate != "function" || h4 === a4.memoizedProps && r3 === a4.memoizedState || (b3.flags |= 4), typeof g2.getSnapshotBeforeUpdate != "function" || h4 === a4.memoizedProps && r3 === a4.memoizedState || (b3.flags |= 1024), b3.memoizedProps = d4, b3.memoizedState = n2), g2.props = d4, g2.state = n2, g2.context = k3, d4 = l2) : (typeof g2.componentDidUpdate != "function" || h4 === a4.memoizedProps && r3 === a4.memoizedState || (b3.flags |= 4), typeof g2.getSnapshotBeforeUpdate != "function" || h4 === a4.memoizedProps && r3 === a4.memoizedState || (b3.flags |= 1024), d4 = !1);
      }
      return kj(a4, b3, c3, d4, f2, e3);
    }
    function kj(a4, b3, c3, d4, e3, f2) {
      hj(a4, b3);
      var g2 = (b3.flags & 128) !== 0;
      if (!d4 && !g2)
        return e3 && dg(b3, c3, !1), $i(a4, b3, f2);
      d4 = b3.stateNode, Xi.current = b3;
      var h4 = g2 && typeof c3.getDerivedStateFromError != "function" ? null : d4.render();
      return b3.flags |= 1, a4 !== null && g2 ? (b3.child = Bh(b3, a4.child, null, f2), b3.child = Bh(b3, null, h4, f2)) : Yi(a4, b3, h4, f2), b3.memoizedState = d4.state, e3 && dg(b3, c3, !0), b3.child;
    }
    function lj(a4) {
      var b3 = a4.stateNode;
      b3.pendingContext ? ag(a4, b3.pendingContext, b3.pendingContext !== b3.context) : b3.context && ag(a4, b3.context, !1), Ih(a4, b3.containerInfo);
    }
    function mj(a4, b3, c3, d4, e3) {
      return Ig(), Jg(e3), b3.flags |= 256, Yi(a4, b3, c3, d4), b3.child;
    }
    var nj = { dehydrated: null, treeContext: null, retryLane: 0 };
    function oj(a4) {
      return { baseLanes: a4, cachePool: null, transitions: null };
    }
    function pj(a4, b3, c3) {
      var d4 = b3.pendingProps, e3 = M4.current, f2 = !1, g2 = (b3.flags & 128) !== 0, h4;
      if ((h4 = g2) || (h4 = a4 !== null && a4.memoizedState === null ? !1 : (e3 & 2) !== 0), h4 ? (f2 = !0, b3.flags &= -129) : (a4 === null || a4.memoizedState !== null) && (e3 |= 1), G2(M4, e3 & 1), a4 === null)
        return Eg(b3), a4 = b3.memoizedState, a4 !== null && (a4 = a4.dehydrated, a4 !== null) ? (b3.mode & 1 ? a4.data === "$!" ? b3.lanes = 8 : b3.lanes = 1073741824 : b3.lanes = 1, null) : (g2 = d4.children, a4 = d4.fallback, f2 ? (d4 = b3.mode, f2 = b3.child, g2 = { mode: "hidden", children: g2 }, !(d4 & 1) && f2 !== null ? (f2.childLanes = 0, f2.pendingProps = g2) : f2 = qj(g2, d4, 0, null), a4 = Ah(a4, d4, c3, null), f2.return = b3, a4.return = b3, f2.sibling = a4, b3.child = f2, b3.child.memoizedState = oj(c3), b3.memoizedState = nj, a4) : rj(b3, g2));
      if (e3 = a4.memoizedState, e3 !== null && (h4 = e3.dehydrated, h4 !== null))
        return sj(a4, b3, g2, d4, h4, e3, c3);
      if (f2) {
        f2 = d4.fallback, g2 = b3.mode, e3 = a4.child, h4 = e3.sibling;
        var k3 = { mode: "hidden", children: d4.children };
        return !(g2 & 1) && b3.child !== e3 ? (d4 = b3.child, d4.childLanes = 0, d4.pendingProps = k3, b3.deletions = null) : (d4 = wh(e3, k3), d4.subtreeFlags = e3.subtreeFlags & 14680064), h4 !== null ? f2 = wh(h4, f2) : (f2 = Ah(f2, g2, c3, null), f2.flags |= 2), f2.return = b3, d4.return = b3, d4.sibling = f2, b3.child = d4, d4 = f2, f2 = b3.child, g2 = a4.child.memoizedState, g2 = g2 === null ? oj(c3) : { baseLanes: g2.baseLanes | c3, cachePool: null, transitions: g2.transitions }, f2.memoizedState = g2, f2.childLanes = a4.childLanes & ~c3, b3.memoizedState = nj, d4;
      }
      return f2 = a4.child, a4 = f2.sibling, d4 = wh(f2, { mode: "visible", children: d4.children }), !(b3.mode & 1) && (d4.lanes = c3), d4.return = b3, d4.sibling = null, a4 !== null && (c3 = b3.deletions, c3 === null ? (b3.deletions = [a4], b3.flags |= 16) : c3.push(a4)), b3.child = d4, b3.memoizedState = null, d4;
    }
    function rj(a4, b3) {
      return b3 = qj({ mode: "visible", children: b3 }, a4.mode, 0, null), b3.return = a4, a4.child = b3;
    }
    function tj(a4, b3, c3, d4) {
      return d4 !== null && Jg(d4), Bh(b3, a4.child, null, c3), a4 = rj(b3, b3.pendingProps.children), a4.flags |= 2, b3.memoizedState = null, a4;
    }
    function sj(a4, b3, c3, d4, e3, f2, g2) {
      if (c3)
        return b3.flags & 256 ? (b3.flags &= -257, d4 = Li(Error(p2(422))), tj(a4, b3, g2, d4)) : b3.memoizedState !== null ? (b3.child = a4.child, b3.flags |= 128, null) : (f2 = d4.fallback, e3 = b3.mode, d4 = qj({ mode: "visible", children: d4.children }, e3, 0, null), f2 = Ah(f2, e3, g2, null), f2.flags |= 2, d4.return = b3, f2.return = b3, d4.sibling = f2, b3.child = d4, b3.mode & 1 && Bh(b3, a4.child, null, g2), b3.child.memoizedState = oj(g2), b3.memoizedState = nj, f2);
      if (!(b3.mode & 1))
        return tj(a4, b3, g2, null);
      if (e3.data === "$!") {
        if (d4 = e3.nextSibling && e3.nextSibling.dataset, d4)
          var h4 = d4.dgst;
        return d4 = h4, f2 = Error(p2(419)), d4 = Li(f2, d4, void 0), tj(a4, b3, g2, d4);
      }
      if (h4 = (g2 & a4.childLanes) !== 0, Ug || h4) {
        if (d4 = R2, d4 !== null) {
          switch (g2 & -g2) {
            case 4:
              e3 = 2;
              break;
            case 16:
              e3 = 8;
              break;
            case 64:
            case 128:
            case 256:
            case 512:
            case 1024:
            case 2048:
            case 4096:
            case 8192:
            case 16384:
            case 32768:
            case 65536:
            case 131072:
            case 262144:
            case 524288:
            case 1048576:
            case 2097152:
            case 4194304:
            case 8388608:
            case 16777216:
            case 33554432:
            case 67108864:
              e3 = 32;
              break;
            case 536870912:
              e3 = 268435456;
              break;
            default:
              e3 = 0;
          }
          e3 = e3 & (d4.suspendedLanes | g2) ? 0 : e3, e3 !== 0 && e3 !== f2.retryLane && (f2.retryLane = e3, Zg(a4, e3), mh(d4, a4, e3, -1));
        }
        return uj(), d4 = Li(Error(p2(421))), tj(a4, b3, g2, d4);
      }
      return e3.data === "$?" ? (b3.flags |= 128, b3.child = a4.child, b3 = vj.bind(null, a4), e3._reactRetry = b3, null) : (a4 = f2.treeContext, yg = Lf(e3.nextSibling), xg = b3, I2 = !0, zg = null, a4 !== null && (og[pg++] = rg, og[pg++] = sg, og[pg++] = qg, rg = a4.id, sg = a4.overflow, qg = b3), b3 = rj(b3, d4.children), b3.flags |= 4096, b3);
    }
    function wj(a4, b3, c3) {
      a4.lanes |= b3;
      var d4 = a4.alternate;
      d4 !== null && (d4.lanes |= b3), Sg(a4.return, b3, c3);
    }
    function xj(a4, b3, c3, d4, e3) {
      var f2 = a4.memoizedState;
      f2 === null ? a4.memoizedState = { isBackwards: b3, rendering: null, renderingStartTime: 0, last: d4, tail: c3, tailMode: e3 } : (f2.isBackwards = b3, f2.rendering = null, f2.renderingStartTime = 0, f2.last = d4, f2.tail = c3, f2.tailMode = e3);
    }
    function yj(a4, b3, c3) {
      var d4 = b3.pendingProps, e3 = d4.revealOrder, f2 = d4.tail;
      if (Yi(a4, b3, d4.children, c3), d4 = M4.current, d4 & 2)
        d4 = d4 & 1 | 2, b3.flags |= 128;
      else {
        if (a4 !== null && a4.flags & 128)
          a:
            for (a4 = b3.child; a4 !== null; ) {
              if (a4.tag === 13)
                a4.memoizedState !== null && wj(a4, c3, b3);
              else if (a4.tag === 19)
                wj(a4, c3, b3);
              else if (a4.child !== null) {
                a4.child.return = a4, a4 = a4.child;
                continue;
              }
              if (a4 === b3)
                break a;
              for (; a4.sibling === null; ) {
                if (a4.return === null || a4.return === b3)
                  break a;
                a4 = a4.return;
              }
              a4.sibling.return = a4.return, a4 = a4.sibling;
            }
        d4 &= 1;
      }
      if (G2(M4, d4), !(b3.mode & 1))
        b3.memoizedState = null;
      else
        switch (e3) {
          case "forwards":
            for (c3 = b3.child, e3 = null; c3 !== null; )
              a4 = c3.alternate, a4 !== null && Mh(a4) === null && (e3 = c3), c3 = c3.sibling;
            c3 = e3, c3 === null ? (e3 = b3.child, b3.child = null) : (e3 = c3.sibling, c3.sibling = null), xj(b3, !1, e3, c3, f2);
            break;
          case "backwards":
            for (c3 = null, e3 = b3.child, b3.child = null; e3 !== null; ) {
              if (a4 = e3.alternate, a4 !== null && Mh(a4) === null) {
                b3.child = e3;
                break;
              }
              a4 = e3.sibling, e3.sibling = c3, c3 = e3, e3 = a4;
            }
            xj(b3, !0, c3, null, f2);
            break;
          case "together":
            xj(b3, !1, null, null, void 0);
            break;
          default:
            b3.memoizedState = null;
        }
      return b3.child;
    }
    function jj(a4, b3) {
      !(b3.mode & 1) && a4 !== null && (a4.alternate = null, b3.alternate = null, b3.flags |= 2);
    }
    function $i(a4, b3, c3) {
      if (a4 !== null && (b3.dependencies = a4.dependencies), hh |= b3.lanes, !(c3 & b3.childLanes))
        return null;
      if (a4 !== null && b3.child !== a4.child)
        throw Error(p2(153));
      if (b3.child !== null) {
        for (a4 = b3.child, c3 = wh(a4, a4.pendingProps), b3.child = c3, c3.return = b3; a4.sibling !== null; )
          a4 = a4.sibling, c3 = c3.sibling = wh(a4, a4.pendingProps), c3.return = b3;
        c3.sibling = null;
      }
      return b3.child;
    }
    function zj(a4, b3, c3) {
      switch (b3.tag) {
        case 3:
          lj(b3), Ig();
          break;
        case 5:
          Kh(b3);
          break;
        case 1:
          Zf(b3.type) && cg(b3);
          break;
        case 4:
          Ih(b3, b3.stateNode.containerInfo);
          break;
        case 10:
          var d4 = b3.type._context, e3 = b3.memoizedProps.value;
          G2(Mg, d4._currentValue), d4._currentValue = e3;
          break;
        case 13:
          if (d4 = b3.memoizedState, d4 !== null)
            return d4.dehydrated !== null ? (G2(M4, M4.current & 1), b3.flags |= 128, null) : c3 & b3.child.childLanes ? pj(a4, b3, c3) : (G2(M4, M4.current & 1), a4 = $i(a4, b3, c3), a4 !== null ? a4.sibling : null);
          G2(M4, M4.current & 1);
          break;
        case 19:
          if (d4 = (c3 & b3.childLanes) !== 0, a4.flags & 128) {
            if (d4)
              return yj(a4, b3, c3);
            b3.flags |= 128;
          }
          if (e3 = b3.memoizedState, e3 !== null && (e3.rendering = null, e3.tail = null, e3.lastEffect = null), G2(M4, M4.current), d4)
            break;
          return null;
        case 22:
        case 23:
          return b3.lanes = 0, ej(a4, b3, c3);
      }
      return $i(a4, b3, c3);
    }
    var Aj, Bj, Cj, Dj;
    Aj = function(a4, b3) {
      for (var c3 = b3.child; c3 !== null; ) {
        if (c3.tag === 5 || c3.tag === 6)
          a4.appendChild(c3.stateNode);
        else if (c3.tag !== 4 && c3.child !== null) {
          c3.child.return = c3, c3 = c3.child;
          continue;
        }
        if (c3 === b3)
          break;
        for (; c3.sibling === null; ) {
          if (c3.return === null || c3.return === b3)
            return;
          c3 = c3.return;
        }
        c3.sibling.return = c3.return, c3 = c3.sibling;
      }
    };
    Bj = function() {
    };
    Cj = function(a4, b3, c3, d4) {
      var e3 = a4.memoizedProps;
      if (e3 !== d4) {
        a4 = b3.stateNode, Hh(Eh.current);
        var f2 = null;
        switch (c3) {
          case "input":
            e3 = Ya(a4, e3), d4 = Ya(a4, d4), f2 = [];
            break;
          case "select":
            e3 = A({}, e3, { value: void 0 }), d4 = A({}, d4, { value: void 0 }), f2 = [];
            break;
          case "textarea":
            e3 = gb(a4, e3), d4 = gb(a4, d4), f2 = [];
            break;
          default:
            typeof e3.onClick != "function" && typeof d4.onClick == "function" && (a4.onclick = Bf);
        }
        ub(c3, d4);
        var g2;
        c3 = null;
        for (l2 in e3)
          if (!d4.hasOwnProperty(l2) && e3.hasOwnProperty(l2) && e3[l2] != null)
            if (l2 === "style") {
              var h4 = e3[l2];
              for (g2 in h4)
                h4.hasOwnProperty(g2) && (c3 || (c3 = {}), c3[g2] = "");
            } else
              l2 !== "dangerouslySetInnerHTML" && l2 !== "children" && l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && l2 !== "autoFocus" && (ea.hasOwnProperty(l2) ? f2 || (f2 = []) : (f2 = f2 || []).push(l2, null));
        for (l2 in d4) {
          var k3 = d4[l2];
          if (h4 = e3?.[l2], d4.hasOwnProperty(l2) && k3 !== h4 && (k3 != null || h4 != null))
            if (l2 === "style")
              if (h4) {
                for (g2 in h4)
                  !h4.hasOwnProperty(g2) || k3 && k3.hasOwnProperty(g2) || (c3 || (c3 = {}), c3[g2] = "");
                for (g2 in k3)
                  k3.hasOwnProperty(g2) && h4[g2] !== k3[g2] && (c3 || (c3 = {}), c3[g2] = k3[g2]);
              } else
                c3 || (f2 || (f2 = []), f2.push(
                  l2,
                  c3
                )), c3 = k3;
            else
              l2 === "dangerouslySetInnerHTML" ? (k3 = k3 ? k3.__html : void 0, h4 = h4 ? h4.__html : void 0, k3 != null && h4 !== k3 && (f2 = f2 || []).push(l2, k3)) : l2 === "children" ? typeof k3 != "string" && typeof k3 != "number" || (f2 = f2 || []).push(l2, "" + k3) : l2 !== "suppressContentEditableWarning" && l2 !== "suppressHydrationWarning" && (ea.hasOwnProperty(l2) ? (k3 != null && l2 === "onScroll" && D2("scroll", a4), f2 || h4 === k3 || (f2 = [])) : (f2 = f2 || []).push(l2, k3));
        }
        c3 && (f2 = f2 || []).push("style", c3);
        var l2 = f2;
        (b3.updateQueue = l2) && (b3.flags |= 4);
      }
    };
    Dj = function(a4, b3, c3, d4) {
      c3 !== d4 && (b3.flags |= 4);
    };
    function Ej(a4, b3) {
      if (!I2)
        switch (a4.tailMode) {
          case "hidden":
            b3 = a4.tail;
            for (var c3 = null; b3 !== null; )
              b3.alternate !== null && (c3 = b3), b3 = b3.sibling;
            c3 === null ? a4.tail = null : c3.sibling = null;
            break;
          case "collapsed":
            c3 = a4.tail;
            for (var d4 = null; c3 !== null; )
              c3.alternate !== null && (d4 = c3), c3 = c3.sibling;
            d4 === null ? b3 || a4.tail === null ? a4.tail = null : a4.tail.sibling = null : d4.sibling = null;
        }
    }
    function S5(a4) {
      var b3 = a4.alternate !== null && a4.alternate.child === a4.child, c3 = 0, d4 = 0;
      if (b3)
        for (var e3 = a4.child; e3 !== null; )
          c3 |= e3.lanes | e3.childLanes, d4 |= e3.subtreeFlags & 14680064, d4 |= e3.flags & 14680064, e3.return = a4, e3 = e3.sibling;
      else
        for (e3 = a4.child; e3 !== null; )
          c3 |= e3.lanes | e3.childLanes, d4 |= e3.subtreeFlags, d4 |= e3.flags, e3.return = a4, e3 = e3.sibling;
      return a4.subtreeFlags |= d4, a4.childLanes = c3, b3;
    }
    function Fj(a4, b3, c3) {
      var d4 = b3.pendingProps;
      switch (wg(b3), b3.tag) {
        case 2:
        case 16:
        case 15:
        case 0:
        case 11:
        case 7:
        case 8:
        case 12:
        case 9:
        case 14:
          return S5(b3), null;
        case 1:
          return Zf(b3.type) && $f(), S5(b3), null;
        case 3:
          return d4 = b3.stateNode, Jh(), E2(Wf), E2(H4), Oh(), d4.pendingContext && (d4.context = d4.pendingContext, d4.pendingContext = null), (a4 === null || a4.child === null) && (Gg(b3) ? b3.flags |= 4 : a4 === null || a4.memoizedState.isDehydrated && !(b3.flags & 256) || (b3.flags |= 1024, zg !== null && (Gj(zg), zg = null))), Bj(a4, b3), S5(b3), null;
        case 5:
          Lh(b3);
          var e3 = Hh(Gh.current);
          if (c3 = b3.type, a4 !== null && b3.stateNode != null)
            Cj(a4, b3, c3, d4, e3), a4.ref !== b3.ref && (b3.flags |= 512, b3.flags |= 2097152);
          else {
            if (!d4) {
              if (b3.stateNode === null)
                throw Error(p2(166));
              return S5(b3), null;
            }
            if (a4 = Hh(Eh.current), Gg(b3)) {
              d4 = b3.stateNode, c3 = b3.type;
              var f2 = b3.memoizedProps;
              switch (d4[Of] = b3, d4[Pf] = f2, a4 = (b3.mode & 1) !== 0, c3) {
                case "dialog":
                  D2("cancel", d4), D2("close", d4);
                  break;
                case "iframe":
                case "object":
                case "embed":
                  D2("load", d4);
                  break;
                case "video":
                case "audio":
                  for (e3 = 0; e3 < lf.length; e3++)
                    D2(lf[e3], d4);
                  break;
                case "source":
                  D2("error", d4);
                  break;
                case "img":
                case "image":
                case "link":
                  D2(
                    "error",
                    d4
                  ), D2("load", d4);
                  break;
                case "details":
                  D2("toggle", d4);
                  break;
                case "input":
                  Za(d4, f2), D2("invalid", d4);
                  break;
                case "select":
                  d4._wrapperState = { wasMultiple: !!f2.multiple }, D2("invalid", d4);
                  break;
                case "textarea":
                  hb(d4, f2), D2("invalid", d4);
              }
              ub(c3, f2), e3 = null;
              for (var g2 in f2)
                if (f2.hasOwnProperty(g2)) {
                  var h4 = f2[g2];
                  g2 === "children" ? typeof h4 == "string" ? d4.textContent !== h4 && (f2.suppressHydrationWarning !== !0 && Af(d4.textContent, h4, a4), e3 = ["children", h4]) : typeof h4 == "number" && d4.textContent !== "" + h4 && (f2.suppressHydrationWarning !== !0 && Af(
                    d4.textContent,
                    h4,
                    a4
                  ), e3 = ["children", "" + h4]) : ea.hasOwnProperty(g2) && h4 != null && g2 === "onScroll" && D2("scroll", d4);
                }
              switch (c3) {
                case "input":
                  Va(d4), db(d4, f2, !0);
                  break;
                case "textarea":
                  Va(d4), jb(d4);
                  break;
                case "select":
                case "option":
                  break;
                default:
                  typeof f2.onClick == "function" && (d4.onclick = Bf);
              }
              d4 = e3, b3.updateQueue = d4, d4 !== null && (b3.flags |= 4);
            } else {
              g2 = e3.nodeType === 9 ? e3 : e3.ownerDocument, a4 === "http://www.w3.org/1999/xhtml" && (a4 = kb(c3)), a4 === "http://www.w3.org/1999/xhtml" ? c3 === "script" ? (a4 = g2.createElement("div"), a4.innerHTML = "<script></script>", a4 = a4.removeChild(a4.firstChild)) : typeof d4.is == "string" ? a4 = g2.createElement(c3, { is: d4.is }) : (a4 = g2.createElement(c3), c3 === "select" && (g2 = a4, d4.multiple ? g2.multiple = !0 : d4.size && (g2.size = d4.size))) : a4 = g2.createElementNS(a4, c3), a4[Of] = b3, a4[Pf] = d4, Aj(a4, b3, !1, !1), b3.stateNode = a4;
              a: {
                switch (g2 = vb(c3, d4), c3) {
                  case "dialog":
                    D2("cancel", a4), D2("close", a4), e3 = d4;
                    break;
                  case "iframe":
                  case "object":
                  case "embed":
                    D2("load", a4), e3 = d4;
                    break;
                  case "video":
                  case "audio":
                    for (e3 = 0; e3 < lf.length; e3++)
                      D2(lf[e3], a4);
                    e3 = d4;
                    break;
                  case "source":
                    D2("error", a4), e3 = d4;
                    break;
                  case "img":
                  case "image":
                  case "link":
                    D2(
                      "error",
                      a4
                    ), D2("load", a4), e3 = d4;
                    break;
                  case "details":
                    D2("toggle", a4), e3 = d4;
                    break;
                  case "input":
                    Za(a4, d4), e3 = Ya(a4, d4), D2("invalid", a4);
                    break;
                  case "option":
                    e3 = d4;
                    break;
                  case "select":
                    a4._wrapperState = { wasMultiple: !!d4.multiple }, e3 = A({}, d4, { value: void 0 }), D2("invalid", a4);
                    break;
                  case "textarea":
                    hb(a4, d4), e3 = gb(a4, d4), D2("invalid", a4);
                    break;
                  default:
                    e3 = d4;
                }
                ub(c3, e3), h4 = e3;
                for (f2 in h4)
                  if (h4.hasOwnProperty(f2)) {
                    var k3 = h4[f2];
                    f2 === "style" ? sb(a4, k3) : f2 === "dangerouslySetInnerHTML" ? (k3 = k3 ? k3.__html : void 0, k3 != null && nb(a4, k3)) : f2 === "children" ? typeof k3 == "string" ? (c3 !== "textarea" || k3 !== "") && ob(a4, k3) : typeof k3 == "number" && ob(a4, "" + k3) : f2 !== "suppressContentEditableWarning" && f2 !== "suppressHydrationWarning" && f2 !== "autoFocus" && (ea.hasOwnProperty(f2) ? k3 != null && f2 === "onScroll" && D2("scroll", a4) : k3 != null && ta(a4, f2, k3, g2));
                  }
                switch (c3) {
                  case "input":
                    Va(a4), db(a4, d4, !1);
                    break;
                  case "textarea":
                    Va(a4), jb(a4);
                    break;
                  case "option":
                    d4.value != null && a4.setAttribute("value", "" + Sa(d4.value));
                    break;
                  case "select":
                    a4.multiple = !!d4.multiple, f2 = d4.value, f2 != null ? fb(a4, !!d4.multiple, f2, !1) : d4.defaultValue != null && fb(
                      a4,
                      !!d4.multiple,
                      d4.defaultValue,
                      !0
                    );
                    break;
                  default:
                    typeof e3.onClick == "function" && (a4.onclick = Bf);
                }
                switch (c3) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    d4 = !!d4.autoFocus;
                    break a;
                  case "img":
                    d4 = !0;
                    break a;
                  default:
                    d4 = !1;
                }
              }
              d4 && (b3.flags |= 4);
            }
            b3.ref !== null && (b3.flags |= 512, b3.flags |= 2097152);
          }
          return S5(b3), null;
        case 6:
          if (a4 && b3.stateNode != null)
            Dj(a4, b3, a4.memoizedProps, d4);
          else {
            if (typeof d4 != "string" && b3.stateNode === null)
              throw Error(p2(166));
            if (c3 = Hh(Gh.current), Hh(Eh.current), Gg(b3)) {
              if (d4 = b3.stateNode, c3 = b3.memoizedProps, d4[Of] = b3, (f2 = d4.nodeValue !== c3) && (a4 = xg, a4 !== null))
                switch (a4.tag) {
                  case 3:
                    Af(d4.nodeValue, c3, (a4.mode & 1) !== 0);
                    break;
                  case 5:
                    a4.memoizedProps.suppressHydrationWarning !== !0 && Af(d4.nodeValue, c3, (a4.mode & 1) !== 0);
                }
              f2 && (b3.flags |= 4);
            } else
              d4 = (c3.nodeType === 9 ? c3 : c3.ownerDocument).createTextNode(d4), d4[Of] = b3, b3.stateNode = d4;
          }
          return S5(b3), null;
        case 13:
          if (E2(M4), d4 = b3.memoizedState, a4 === null || a4.memoizedState !== null && a4.memoizedState.dehydrated !== null) {
            if (I2 && yg !== null && b3.mode & 1 && !(b3.flags & 128))
              Hg(), Ig(), b3.flags |= 98560, f2 = !1;
            else if (f2 = Gg(b3), d4 !== null && d4.dehydrated !== null) {
              if (a4 === null) {
                if (!f2)
                  throw Error(p2(318));
                if (f2 = b3.memoizedState, f2 = f2 !== null ? f2.dehydrated : null, !f2)
                  throw Error(p2(317));
                f2[Of] = b3;
              } else
                Ig(), !(b3.flags & 128) && (b3.memoizedState = null), b3.flags |= 4;
              S5(b3), f2 = !1;
            } else
              zg !== null && (Gj(zg), zg = null), f2 = !0;
            if (!f2)
              return b3.flags & 65536 ? b3 : null;
          }
          return b3.flags & 128 ? (b3.lanes = c3, b3) : (d4 = d4 !== null, d4 !== (a4 !== null && a4.memoizedState !== null) && d4 && (b3.child.flags |= 8192, b3.mode & 1 && (a4 === null || M4.current & 1 ? T3 === 0 && (T3 = 3) : uj())), b3.updateQueue !== null && (b3.flags |= 4), S5(b3), null);
        case 4:
          return Jh(), Bj(a4, b3), a4 === null && sf(b3.stateNode.containerInfo), S5(b3), null;
        case 10:
          return Rg(b3.type._context), S5(b3), null;
        case 17:
          return Zf(b3.type) && $f(), S5(b3), null;
        case 19:
          if (E2(M4), f2 = b3.memoizedState, f2 === null)
            return S5(b3), null;
          if (d4 = (b3.flags & 128) !== 0, g2 = f2.rendering, g2 === null)
            if (d4)
              Ej(f2, !1);
            else {
              if (T3 !== 0 || a4 !== null && a4.flags & 128)
                for (a4 = b3.child; a4 !== null; ) {
                  if (g2 = Mh(a4), g2 !== null) {
                    for (b3.flags |= 128, Ej(f2, !1), d4 = g2.updateQueue, d4 !== null && (b3.updateQueue = d4, b3.flags |= 4), b3.subtreeFlags = 0, d4 = c3, c3 = b3.child; c3 !== null; )
                      f2 = c3, a4 = d4, f2.flags &= 14680066, g2 = f2.alternate, g2 === null ? (f2.childLanes = 0, f2.lanes = a4, f2.child = null, f2.subtreeFlags = 0, f2.memoizedProps = null, f2.memoizedState = null, f2.updateQueue = null, f2.dependencies = null, f2.stateNode = null) : (f2.childLanes = g2.childLanes, f2.lanes = g2.lanes, f2.child = g2.child, f2.subtreeFlags = 0, f2.deletions = null, f2.memoizedProps = g2.memoizedProps, f2.memoizedState = g2.memoizedState, f2.updateQueue = g2.updateQueue, f2.type = g2.type, a4 = g2.dependencies, f2.dependencies = a4 === null ? null : { lanes: a4.lanes, firstContext: a4.firstContext }), c3 = c3.sibling;
                    return G2(M4, M4.current & 1 | 2), b3.child;
                  }
                  a4 = a4.sibling;
                }
              f2.tail !== null && B2() > Hj && (b3.flags |= 128, d4 = !0, Ej(f2, !1), b3.lanes = 4194304);
            }
          else {
            if (!d4)
              if (a4 = Mh(g2), a4 !== null) {
                if (b3.flags |= 128, d4 = !0, c3 = a4.updateQueue, c3 !== null && (b3.updateQueue = c3, b3.flags |= 4), Ej(f2, !0), f2.tail === null && f2.tailMode === "hidden" && !g2.alternate && !I2)
                  return S5(b3), null;
              } else
                2 * B2() - f2.renderingStartTime > Hj && c3 !== 1073741824 && (b3.flags |= 128, d4 = !0, Ej(f2, !1), b3.lanes = 4194304);
            f2.isBackwards ? (g2.sibling = b3.child, b3.child = g2) : (c3 = f2.last, c3 !== null ? c3.sibling = g2 : b3.child = g2, f2.last = g2);
          }
          return f2.tail !== null ? (b3 = f2.tail, f2.rendering = b3, f2.tail = b3.sibling, f2.renderingStartTime = B2(), b3.sibling = null, c3 = M4.current, G2(M4, d4 ? c3 & 1 | 2 : c3 & 1), b3) : (S5(b3), null);
        case 22:
        case 23:
          return Ij(), d4 = b3.memoizedState !== null, a4 !== null && a4.memoizedState !== null !== d4 && (b3.flags |= 8192), d4 && b3.mode & 1 ? gj & 1073741824 && (S5(b3), b3.subtreeFlags & 6 && (b3.flags |= 8192)) : S5(b3), null;
        case 24:
          return null;
        case 25:
          return null;
      }
      throw Error(p2(156, b3.tag));
    }
    function Jj(a4, b3) {
      switch (wg(b3), b3.tag) {
        case 1:
          return Zf(b3.type) && $f(), a4 = b3.flags, a4 & 65536 ? (b3.flags = a4 & -65537 | 128, b3) : null;
        case 3:
          return Jh(), E2(Wf), E2(H4), Oh(), a4 = b3.flags, a4 & 65536 && !(a4 & 128) ? (b3.flags = a4 & -65537 | 128, b3) : null;
        case 5:
          return Lh(b3), null;
        case 13:
          if (E2(M4), a4 = b3.memoizedState, a4 !== null && a4.dehydrated !== null) {
            if (b3.alternate === null)
              throw Error(p2(340));
            Ig();
          }
          return a4 = b3.flags, a4 & 65536 ? (b3.flags = a4 & -65537 | 128, b3) : null;
        case 19:
          return E2(M4), null;
        case 4:
          return Jh(), null;
        case 10:
          return Rg(b3.type._context), null;
        case 22:
        case 23:
          return Ij(), null;
        case 24:
          return null;
        default:
          return null;
      }
    }
    var Kj = !1, U2 = !1, Lj = typeof WeakSet == "function" ? WeakSet : Set, V = null;
    function Mj(a4, b3) {
      var c3 = a4.ref;
      if (c3 !== null)
        if (typeof c3 == "function")
          try {
            c3(null);
          } catch (d4) {
            W(a4, b3, d4);
          }
        else
          c3.current = null;
    }
    function Nj(a4, b3, c3) {
      try {
        c3();
      } catch (d4) {
        W(a4, b3, d4);
      }
    }
    var Oj = !1;
    function Pj(a4, b3) {
      if (Cf = dd, a4 = Me(), Ne(a4)) {
        if ("selectionStart" in a4)
          var c3 = { start: a4.selectionStart, end: a4.selectionEnd };
        else
          a: {
            c3 = (c3 = a4.ownerDocument) && c3.defaultView || window;
            var d4 = c3.getSelection && c3.getSelection();
            if (d4 && d4.rangeCount !== 0) {
              c3 = d4.anchorNode;
              var e3 = d4.anchorOffset, f2 = d4.focusNode;
              d4 = d4.focusOffset;
              try {
                c3.nodeType, f2.nodeType;
              } catch {
                c3 = null;
                break a;
              }
              var g2 = 0, h4 = -1, k3 = -1, l2 = 0, m4 = 0, q2 = a4, r3 = null;
              b:
                for (; ; ) {
                  for (var y4; q2 !== c3 || e3 !== 0 && q2.nodeType !== 3 || (h4 = g2 + e3), q2 !== f2 || d4 !== 0 && q2.nodeType !== 3 || (k3 = g2 + d4), q2.nodeType === 3 && (g2 += q2.nodeValue.length), (y4 = q2.firstChild) !== null; )
                    r3 = q2, q2 = y4;
                  for (; ; ) {
                    if (q2 === a4)
                      break b;
                    if (r3 === c3 && ++l2 === e3 && (h4 = g2), r3 === f2 && ++m4 === d4 && (k3 = g2), (y4 = q2.nextSibling) !== null)
                      break;
                    q2 = r3, r3 = q2.parentNode;
                  }
                  q2 = y4;
                }
              c3 = h4 === -1 || k3 === -1 ? null : { start: h4, end: k3 };
            } else
              c3 = null;
          }
        c3 = c3 || { start: 0, end: 0 };
      } else
        c3 = null;
      for (Df = { focusedElem: a4, selectionRange: c3 }, dd = !1, V = b3; V !== null; )
        if (b3 = V, a4 = b3.child, (b3.subtreeFlags & 1028) !== 0 && a4 !== null)
          a4.return = b3, V = a4;
        else
          for (; V !== null; ) {
            b3 = V;
            try {
              var n2 = b3.alternate;
              if (b3.flags & 1024)
                switch (b3.tag) {
                  case 0:
                  case 11:
                  case 15:
                    break;
                  case 1:
                    if (n2 !== null) {
                      var t4 = n2.memoizedProps, J = n2.memoizedState, x3 = b3.stateNode, w2 = x3.getSnapshotBeforeUpdate(b3.elementType === b3.type ? t4 : Lg(b3.type, t4), J);
                      x3.__reactInternalSnapshotBeforeUpdate = w2;
                    }
                    break;
                  case 3:
                    var u3 = b3.stateNode.containerInfo;
                    u3.nodeType === 1 ? u3.textContent = "" : u3.nodeType === 9 && u3.documentElement && u3.removeChild(u3.documentElement);
                    break;
                  case 5:
                  case 6:
                  case 4:
                  case 17:
                    break;
                  default:
                    throw Error(p2(163));
                }
            } catch (F) {
              W(b3, b3.return, F);
            }
            if (a4 = b3.sibling, a4 !== null) {
              a4.return = b3.return, V = a4;
              break;
            }
            V = b3.return;
          }
      return n2 = Oj, Oj = !1, n2;
    }
    function Qj(a4, b3, c3) {
      var d4 = b3.updateQueue;
      if (d4 = d4 !== null ? d4.lastEffect : null, d4 !== null) {
        var e3 = d4 = d4.next;
        do {
          if ((e3.tag & a4) === a4) {
            var f2 = e3.destroy;
            e3.destroy = void 0, f2 !== void 0 && Nj(b3, c3, f2);
          }
          e3 = e3.next;
        } while (e3 !== d4);
      }
    }
    function Rj(a4, b3) {
      if (b3 = b3.updateQueue, b3 = b3 !== null ? b3.lastEffect : null, b3 !== null) {
        var c3 = b3 = b3.next;
        do {
          if ((c3.tag & a4) === a4) {
            var d4 = c3.create;
            c3.destroy = d4();
          }
          c3 = c3.next;
        } while (c3 !== b3);
      }
    }
    function Sj(a4) {
      var b3 = a4.ref;
      if (b3 !== null) {
        var c3 = a4.stateNode;
        switch (a4.tag) {
          case 5:
            a4 = c3;
            break;
          default:
            a4 = c3;
        }
        typeof b3 == "function" ? b3(a4) : b3.current = a4;
      }
    }
    function Tj(a4) {
      var b3 = a4.alternate;
      b3 !== null && (a4.alternate = null, Tj(b3)), a4.child = null, a4.deletions = null, a4.sibling = null, a4.tag === 5 && (b3 = a4.stateNode, b3 !== null && (delete b3[Of], delete b3[Pf], delete b3[of], delete b3[Qf], delete b3[Rf])), a4.stateNode = null, a4.return = null, a4.dependencies = null, a4.memoizedProps = null, a4.memoizedState = null, a4.pendingProps = null, a4.stateNode = null, a4.updateQueue = null;
    }
    function Uj(a4) {
      return a4.tag === 5 || a4.tag === 3 || a4.tag === 4;
    }
    function Vj(a4) {
      a:
        for (; ; ) {
          for (; a4.sibling === null; ) {
            if (a4.return === null || Uj(a4.return))
              return null;
            a4 = a4.return;
          }
          for (a4.sibling.return = a4.return, a4 = a4.sibling; a4.tag !== 5 && a4.tag !== 6 && a4.tag !== 18; ) {
            if (a4.flags & 2 || a4.child === null || a4.tag === 4)
              continue a;
            a4.child.return = a4, a4 = a4.child;
          }
          if (!(a4.flags & 2))
            return a4.stateNode;
        }
    }
    function Wj(a4, b3, c3) {
      var d4 = a4.tag;
      if (d4 === 5 || d4 === 6)
        a4 = a4.stateNode, b3 ? c3.nodeType === 8 ? c3.parentNode.insertBefore(a4, b3) : c3.insertBefore(a4, b3) : (c3.nodeType === 8 ? (b3 = c3.parentNode, b3.insertBefore(a4, c3)) : (b3 = c3, b3.appendChild(a4)), c3 = c3._reactRootContainer, c3 != null || b3.onclick !== null || (b3.onclick = Bf));
      else if (d4 !== 4 && (a4 = a4.child, a4 !== null))
        for (Wj(a4, b3, c3), a4 = a4.sibling; a4 !== null; )
          Wj(a4, b3, c3), a4 = a4.sibling;
    }
    function Xj(a4, b3, c3) {
      var d4 = a4.tag;
      if (d4 === 5 || d4 === 6)
        a4 = a4.stateNode, b3 ? c3.insertBefore(a4, b3) : c3.appendChild(a4);
      else if (d4 !== 4 && (a4 = a4.child, a4 !== null))
        for (Xj(a4, b3, c3), a4 = a4.sibling; a4 !== null; )
          Xj(a4, b3, c3), a4 = a4.sibling;
    }
    var X2 = null, Yj = !1;
    function Zj(a4, b3, c3) {
      for (c3 = c3.child; c3 !== null; )
        ak(a4, b3, c3), c3 = c3.sibling;
    }
    function ak(a4, b3, c3) {
      if (lc && typeof lc.onCommitFiberUnmount == "function")
        try {
          lc.onCommitFiberUnmount(kc, c3);
        } catch {
        }
      switch (c3.tag) {
        case 5:
          U2 || Mj(c3, b3);
        case 6:
          var d4 = X2, e3 = Yj;
          X2 = null, Zj(a4, b3, c3), X2 = d4, Yj = e3, X2 !== null && (Yj ? (a4 = X2, c3 = c3.stateNode, a4.nodeType === 8 ? a4.parentNode.removeChild(c3) : a4.removeChild(c3)) : X2.removeChild(c3.stateNode));
          break;
        case 18:
          X2 !== null && (Yj ? (a4 = X2, c3 = c3.stateNode, a4.nodeType === 8 ? Kf(a4.parentNode, c3) : a4.nodeType === 1 && Kf(a4, c3), bd(a4)) : Kf(X2, c3.stateNode));
          break;
        case 4:
          d4 = X2, e3 = Yj, X2 = c3.stateNode.containerInfo, Yj = !0, Zj(a4, b3, c3), X2 = d4, Yj = e3;
          break;
        case 0:
        case 11:
        case 14:
        case 15:
          if (!U2 && (d4 = c3.updateQueue, d4 !== null && (d4 = d4.lastEffect, d4 !== null))) {
            e3 = d4 = d4.next;
            do {
              var f2 = e3, g2 = f2.destroy;
              f2 = f2.tag, g2 !== void 0 && (f2 & 2 || f2 & 4) && Nj(c3, b3, g2), e3 = e3.next;
            } while (e3 !== d4);
          }
          Zj(a4, b3, c3);
          break;
        case 1:
          if (!U2 && (Mj(c3, b3), d4 = c3.stateNode, typeof d4.componentWillUnmount == "function"))
            try {
              d4.props = c3.memoizedProps, d4.state = c3.memoizedState, d4.componentWillUnmount();
            } catch (h4) {
              W(c3, b3, h4);
            }
          Zj(a4, b3, c3);
          break;
        case 21:
          Zj(a4, b3, c3);
          break;
        case 22:
          c3.mode & 1 ? (U2 = (d4 = U2) || c3.memoizedState !== null, Zj(a4, b3, c3), U2 = d4) : Zj(a4, b3, c3);
          break;
        default:
          Zj(a4, b3, c3);
      }
    }
    function bk(a4) {
      var b3 = a4.updateQueue;
      if (b3 !== null) {
        a4.updateQueue = null;
        var c3 = a4.stateNode;
        c3 === null && (c3 = a4.stateNode = new Lj()), b3.forEach(function(b4) {
          var d4 = ck.bind(null, a4, b4);
          c3.has(b4) || (c3.add(b4), b4.then(d4, d4));
        });
      }
    }
    function dk(a4, b3) {
      var c3 = b3.deletions;
      if (c3 !== null)
        for (var d4 = 0; d4 < c3.length; d4++) {
          var e3 = c3[d4];
          try {
            var f2 = a4, g2 = b3, h4 = g2;
            a:
              for (; h4 !== null; ) {
                switch (h4.tag) {
                  case 5:
                    X2 = h4.stateNode, Yj = !1;
                    break a;
                  case 3:
                    X2 = h4.stateNode.containerInfo, Yj = !0;
                    break a;
                  case 4:
                    X2 = h4.stateNode.containerInfo, Yj = !0;
                    break a;
                }
                h4 = h4.return;
              }
            if (X2 === null)
              throw Error(p2(160));
            ak(f2, g2, e3), X2 = null, Yj = !1;
            var k3 = e3.alternate;
            k3 !== null && (k3.return = null), e3.return = null;
          } catch (l2) {
            W(e3, b3, l2);
          }
        }
      if (b3.subtreeFlags & 12854)
        for (b3 = b3.child; b3 !== null; )
          ek(b3, a4), b3 = b3.sibling;
    }
    function ek(a4, b3) {
      var c3 = a4.alternate, d4 = a4.flags;
      switch (a4.tag) {
        case 0:
        case 11:
        case 14:
        case 15:
          if (dk(b3, a4), fk(a4), d4 & 4) {
            try {
              Qj(3, a4, a4.return), Rj(3, a4);
            } catch (t4) {
              W(a4, a4.return, t4);
            }
            try {
              Qj(5, a4, a4.return);
            } catch (t4) {
              W(a4, a4.return, t4);
            }
          }
          break;
        case 1:
          dk(b3, a4), fk(a4), d4 & 512 && c3 !== null && Mj(c3, c3.return);
          break;
        case 5:
          if (dk(b3, a4), fk(a4), d4 & 512 && c3 !== null && Mj(c3, c3.return), a4.flags & 32) {
            var e3 = a4.stateNode;
            try {
              ob(e3, "");
            } catch (t4) {
              W(a4, a4.return, t4);
            }
          }
          if (d4 & 4 && (e3 = a4.stateNode, e3 != null)) {
            var f2 = a4.memoizedProps, g2 = c3 !== null ? c3.memoizedProps : f2, h4 = a4.type, k3 = a4.updateQueue;
            if (a4.updateQueue = null, k3 !== null)
              try {
                h4 === "input" && f2.type === "radio" && f2.name != null && ab(e3, f2), vb(h4, g2);
                var l2 = vb(h4, f2);
                for (g2 = 0; g2 < k3.length; g2 += 2) {
                  var m4 = k3[g2], q2 = k3[g2 + 1];
                  m4 === "style" ? sb(e3, q2) : m4 === "dangerouslySetInnerHTML" ? nb(e3, q2) : m4 === "children" ? ob(e3, q2) : ta(e3, m4, q2, l2);
                }
                switch (h4) {
                  case "input":
                    bb(e3, f2);
                    break;
                  case "textarea":
                    ib(e3, f2);
                    break;
                  case "select":
                    var r3 = e3._wrapperState.wasMultiple;
                    e3._wrapperState.wasMultiple = !!f2.multiple;
                    var y4 = f2.value;
                    y4 != null ? fb(e3, !!f2.multiple, y4, !1) : r3 !== !!f2.multiple && (f2.defaultValue != null ? fb(
                      e3,
                      !!f2.multiple,
                      f2.defaultValue,
                      !0
                    ) : fb(e3, !!f2.multiple, f2.multiple ? [] : "", !1));
                }
                e3[Pf] = f2;
              } catch (t4) {
                W(a4, a4.return, t4);
              }
          }
          break;
        case 6:
          if (dk(b3, a4), fk(a4), d4 & 4) {
            if (a4.stateNode === null)
              throw Error(p2(162));
            e3 = a4.stateNode, f2 = a4.memoizedProps;
            try {
              e3.nodeValue = f2;
            } catch (t4) {
              W(a4, a4.return, t4);
            }
          }
          break;
        case 3:
          if (dk(b3, a4), fk(a4), d4 & 4 && c3 !== null && c3.memoizedState.isDehydrated)
            try {
              bd(b3.containerInfo);
            } catch (t4) {
              W(a4, a4.return, t4);
            }
          break;
        case 4:
          dk(b3, a4), fk(a4);
          break;
        case 13:
          dk(b3, a4), fk(a4), e3 = a4.child, e3.flags & 8192 && (f2 = e3.memoizedState !== null, e3.stateNode.isHidden = f2, !f2 || e3.alternate !== null && e3.alternate.memoizedState !== null || (gk = B2())), d4 & 4 && bk(a4);
          break;
        case 22:
          if (m4 = c3 !== null && c3.memoizedState !== null, a4.mode & 1 ? (U2 = (l2 = U2) || m4, dk(b3, a4), U2 = l2) : dk(b3, a4), fk(a4), d4 & 8192) {
            if (l2 = a4.memoizedState !== null, (a4.stateNode.isHidden = l2) && !m4 && a4.mode & 1)
              for (V = a4, m4 = a4.child; m4 !== null; ) {
                for (q2 = V = m4; V !== null; ) {
                  switch (r3 = V, y4 = r3.child, r3.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                      Qj(4, r3, r3.return);
                      break;
                    case 1:
                      Mj(r3, r3.return);
                      var n2 = r3.stateNode;
                      if (typeof n2.componentWillUnmount == "function") {
                        d4 = r3, c3 = r3.return;
                        try {
                          b3 = d4, n2.props = b3.memoizedProps, n2.state = b3.memoizedState, n2.componentWillUnmount();
                        } catch (t4) {
                          W(d4, c3, t4);
                        }
                      }
                      break;
                    case 5:
                      Mj(r3, r3.return);
                      break;
                    case 22:
                      if (r3.memoizedState !== null) {
                        hk(q2);
                        continue;
                      }
                  }
                  y4 !== null ? (y4.return = r3, V = y4) : hk(q2);
                }
                m4 = m4.sibling;
              }
            a:
              for (m4 = null, q2 = a4; ; ) {
                if (q2.tag === 5) {
                  if (m4 === null) {
                    m4 = q2;
                    try {
                      e3 = q2.stateNode, l2 ? (f2 = e3.style, typeof f2.setProperty == "function" ? f2.setProperty("display", "none", "important") : f2.display = "none") : (h4 = q2.stateNode, k3 = q2.memoizedProps.style, g2 = k3 != null && k3.hasOwnProperty("display") ? k3.display : null, h4.style.display = rb("display", g2));
                    } catch (t4) {
                      W(a4, a4.return, t4);
                    }
                  }
                } else if (q2.tag === 6) {
                  if (m4 === null)
                    try {
                      q2.stateNode.nodeValue = l2 ? "" : q2.memoizedProps;
                    } catch (t4) {
                      W(a4, a4.return, t4);
                    }
                } else if ((q2.tag !== 22 && q2.tag !== 23 || q2.memoizedState === null || q2 === a4) && q2.child !== null) {
                  q2.child.return = q2, q2 = q2.child;
                  continue;
                }
                if (q2 === a4)
                  break a;
                for (; q2.sibling === null; ) {
                  if (q2.return === null || q2.return === a4)
                    break a;
                  m4 === q2 && (m4 = null), q2 = q2.return;
                }
                m4 === q2 && (m4 = null), q2.sibling.return = q2.return, q2 = q2.sibling;
              }
          }
          break;
        case 19:
          dk(b3, a4), fk(a4), d4 & 4 && bk(a4);
          break;
        case 21:
          break;
        default:
          dk(
            b3,
            a4
          ), fk(a4);
      }
    }
    function fk(a4) {
      var b3 = a4.flags;
      if (b3 & 2) {
        try {
          a: {
            for (var c3 = a4.return; c3 !== null; ) {
              if (Uj(c3)) {
                var d4 = c3;
                break a;
              }
              c3 = c3.return;
            }
            throw Error(p2(160));
          }
          switch (d4.tag) {
            case 5:
              var e3 = d4.stateNode;
              d4.flags & 32 && (ob(e3, ""), d4.flags &= -33);
              var f2 = Vj(a4);
              Xj(a4, f2, e3);
              break;
            case 3:
            case 4:
              var g2 = d4.stateNode.containerInfo, h4 = Vj(a4);
              Wj(a4, h4, g2);
              break;
            default:
              throw Error(p2(161));
          }
        } catch (k3) {
          W(a4, a4.return, k3);
        }
        a4.flags &= -3;
      }
      b3 & 4096 && (a4.flags &= -4097);
    }
    function ik(a4, b3, c3) {
      V = a4, jk(a4, b3, c3);
    }
    function jk(a4, b3, c3) {
      for (var d4 = (a4.mode & 1) !== 0; V !== null; ) {
        var e3 = V, f2 = e3.child;
        if (e3.tag === 22 && d4) {
          var g2 = e3.memoizedState !== null || Kj;
          if (!g2) {
            var h4 = e3.alternate, k3 = h4 !== null && h4.memoizedState !== null || U2;
            h4 = Kj;
            var l2 = U2;
            if (Kj = g2, (U2 = k3) && !l2)
              for (V = e3; V !== null; )
                g2 = V, k3 = g2.child, g2.tag === 22 && g2.memoizedState !== null ? kk(e3) : k3 !== null ? (k3.return = g2, V = k3) : kk(e3);
            for (; f2 !== null; )
              V = f2, jk(f2, b3, c3), f2 = f2.sibling;
            V = e3, Kj = h4, U2 = l2;
          }
          lk(a4, b3, c3);
        } else
          e3.subtreeFlags & 8772 && f2 !== null ? (f2.return = e3, V = f2) : lk(a4, b3, c3);
      }
    }
    function lk(a4) {
      for (; V !== null; ) {
        var b3 = V;
        if (b3.flags & 8772) {
          var c3 = b3.alternate;
          try {
            if (b3.flags & 8772)
              switch (b3.tag) {
                case 0:
                case 11:
                case 15:
                  U2 || Rj(5, b3);
                  break;
                case 1:
                  var d4 = b3.stateNode;
                  if (b3.flags & 4 && !U2)
                    if (c3 === null)
                      d4.componentDidMount();
                    else {
                      var e3 = b3.elementType === b3.type ? c3.memoizedProps : Lg(b3.type, c3.memoizedProps);
                      d4.componentDidUpdate(e3, c3.memoizedState, d4.__reactInternalSnapshotBeforeUpdate);
                    }
                  var f2 = b3.updateQueue;
                  f2 !== null && ih(b3, f2, d4);
                  break;
                case 3:
                  var g2 = b3.updateQueue;
                  if (g2 !== null) {
                    if (c3 = null, b3.child !== null)
                      switch (b3.child.tag) {
                        case 5:
                          c3 = b3.child.stateNode;
                          break;
                        case 1:
                          c3 = b3.child.stateNode;
                      }
                    ih(b3, g2, c3);
                  }
                  break;
                case 5:
                  var h4 = b3.stateNode;
                  if (c3 === null && b3.flags & 4) {
                    c3 = h4;
                    var k3 = b3.memoizedProps;
                    switch (b3.type) {
                      case "button":
                      case "input":
                      case "select":
                      case "textarea":
                        k3.autoFocus && c3.focus();
                        break;
                      case "img":
                        k3.src && (c3.src = k3.src);
                    }
                  }
                  break;
                case 6:
                  break;
                case 4:
                  break;
                case 12:
                  break;
                case 13:
                  if (b3.memoizedState === null) {
                    var l2 = b3.alternate;
                    if (l2 !== null) {
                      var m4 = l2.memoizedState;
                      if (m4 !== null) {
                        var q2 = m4.dehydrated;
                        q2 !== null && bd(q2);
                      }
                    }
                  }
                  break;
                case 19:
                case 17:
                case 21:
                case 22:
                case 23:
                case 25:
                  break;
                default:
                  throw Error(p2(163));
              }
            U2 || b3.flags & 512 && Sj(b3);
          } catch (r3) {
            W(b3, b3.return, r3);
          }
        }
        if (b3 === a4) {
          V = null;
          break;
        }
        if (c3 = b3.sibling, c3 !== null) {
          c3.return = b3.return, V = c3;
          break;
        }
        V = b3.return;
      }
    }
    function hk(a4) {
      for (; V !== null; ) {
        var b3 = V;
        if (b3 === a4) {
          V = null;
          break;
        }
        var c3 = b3.sibling;
        if (c3 !== null) {
          c3.return = b3.return, V = c3;
          break;
        }
        V = b3.return;
      }
    }
    function kk(a4) {
      for (; V !== null; ) {
        var b3 = V;
        try {
          switch (b3.tag) {
            case 0:
            case 11:
            case 15:
              var c3 = b3.return;
              try {
                Rj(4, b3);
              } catch (k3) {
                W(b3, c3, k3);
              }
              break;
            case 1:
              var d4 = b3.stateNode;
              if (typeof d4.componentDidMount == "function") {
                var e3 = b3.return;
                try {
                  d4.componentDidMount();
                } catch (k3) {
                  W(b3, e3, k3);
                }
              }
              var f2 = b3.return;
              try {
                Sj(b3);
              } catch (k3) {
                W(b3, f2, k3);
              }
              break;
            case 5:
              var g2 = b3.return;
              try {
                Sj(b3);
              } catch (k3) {
                W(b3, g2, k3);
              }
          }
        } catch (k3) {
          W(b3, b3.return, k3);
        }
        if (b3 === a4) {
          V = null;
          break;
        }
        var h4 = b3.sibling;
        if (h4 !== null) {
          h4.return = b3.return, V = h4;
          break;
        }
        V = b3.return;
      }
    }
    var mk = Math.ceil, nk = ua.ReactCurrentDispatcher, ok = ua.ReactCurrentOwner, pk = ua.ReactCurrentBatchConfig, K2 = 0, R2 = null, Y2 = null, Z2 = 0, gj = 0, fj = Uf(0), T3 = 0, qk = null, hh = 0, rk = 0, sk = 0, tk = null, uk = null, gk = 0, Hj = 1 / 0, vk = null, Pi = !1, Qi = null, Si = null, wk = !1, xk = null, yk = 0, zk = 0, Ak = null, Bk = -1, Ck = 0;
    function L3() {
      return K2 & 6 ? B2() : Bk !== -1 ? Bk : Bk = B2();
    }
    function lh(a4) {
      return a4.mode & 1 ? K2 & 2 && Z2 !== 0 ? Z2 & -Z2 : Kg.transition !== null ? (Ck === 0 && (Ck = yc()), Ck) : (a4 = C, a4 !== 0 || (a4 = window.event, a4 = a4 === void 0 ? 16 : jd(a4.type)), a4) : 1;
    }
    function mh(a4, b3, c3, d4) {
      if (50 < zk)
        throw zk = 0, Ak = null, Error(p2(185));
      Ac(a4, c3, d4), (!(K2 & 2) || a4 !== R2) && (a4 === R2 && (!(K2 & 2) && (rk |= c3), T3 === 4 && Dk(a4, Z2)), Ek(a4, d4), c3 === 1 && K2 === 0 && !(b3.mode & 1) && (Hj = B2() + 500, fg && jg()));
    }
    function Ek(a4, b3) {
      var c3 = a4.callbackNode;
      wc(a4, b3);
      var d4 = uc(a4, a4 === R2 ? Z2 : 0);
      if (d4 === 0)
        c3 !== null && bc(c3), a4.callbackNode = null, a4.callbackPriority = 0;
      else if (b3 = d4 & -d4, a4.callbackPriority !== b3) {
        if (c3 != null && bc(c3), b3 === 1)
          a4.tag === 0 ? ig(Fk.bind(null, a4)) : hg(Fk.bind(null, a4)), Jf(function() {
            !(K2 & 6) && jg();
          }), c3 = null;
        else {
          switch (Dc(d4)) {
            case 1:
              c3 = fc;
              break;
            case 4:
              c3 = gc;
              break;
            case 16:
              c3 = hc;
              break;
            case 536870912:
              c3 = jc;
              break;
            default:
              c3 = hc;
          }
          c3 = Gk(c3, Hk.bind(null, a4));
        }
        a4.callbackPriority = b3, a4.callbackNode = c3;
      }
    }
    function Hk(a4, b3) {
      if (Bk = -1, Ck = 0, K2 & 6)
        throw Error(p2(327));
      var c3 = a4.callbackNode;
      if (Ik() && a4.callbackNode !== c3)
        return null;
      var d4 = uc(a4, a4 === R2 ? Z2 : 0);
      if (d4 === 0)
        return null;
      if (d4 & 30 || d4 & a4.expiredLanes || b3)
        b3 = Jk(a4, d4);
      else {
        b3 = d4;
        var e3 = K2;
        K2 |= 2;
        var f2 = Kk();
        (R2 !== a4 || Z2 !== b3) && (vk = null, Hj = B2() + 500, Lk(a4, b3));
        do
          try {
            Mk();
            break;
          } catch (h4) {
            Nk(a4, h4);
          }
        while (1);
        Qg(), nk.current = f2, K2 = e3, Y2 !== null ? b3 = 0 : (R2 = null, Z2 = 0, b3 = T3);
      }
      if (b3 !== 0) {
        if (b3 === 2 && (e3 = xc(a4), e3 !== 0 && (d4 = e3, b3 = Ok(a4, e3))), b3 === 1)
          throw c3 = qk, Lk(a4, 0), Dk(a4, d4), Ek(a4, B2()), c3;
        if (b3 === 6)
          Dk(a4, d4);
        else {
          if (e3 = a4.current.alternate, !(d4 & 30) && !Pk(e3) && (b3 = Jk(a4, d4), b3 === 2 && (f2 = xc(a4), f2 !== 0 && (d4 = f2, b3 = Ok(a4, f2))), b3 === 1))
            throw c3 = qk, Lk(a4, 0), Dk(a4, d4), Ek(a4, B2()), c3;
          switch (a4.finishedWork = e3, a4.finishedLanes = d4, b3) {
            case 0:
            case 1:
              throw Error(p2(345));
            case 2:
              Qk(a4, uk, vk);
              break;
            case 3:
              if (Dk(a4, d4), (d4 & 130023424) === d4 && (b3 = gk + 500 - B2(), 10 < b3)) {
                if (uc(a4, 0) !== 0)
                  break;
                if (e3 = a4.suspendedLanes, (e3 & d4) !== d4) {
                  L3(), a4.pingedLanes |= a4.suspendedLanes & e3;
                  break;
                }
                a4.timeoutHandle = Ff(Qk.bind(null, a4, uk, vk), b3);
                break;
              }
              Qk(a4, uk, vk);
              break;
            case 4:
              if (Dk(a4, d4), (d4 & 4194240) === d4)
                break;
              for (b3 = a4.eventTimes, e3 = -1; 0 < d4; ) {
                var g2 = 31 - oc(d4);
                f2 = 1 << g2, g2 = b3[g2], g2 > e3 && (e3 = g2), d4 &= ~f2;
              }
              if (d4 = e3, d4 = B2() - d4, d4 = (120 > d4 ? 120 : 480 > d4 ? 480 : 1080 > d4 ? 1080 : 1920 > d4 ? 1920 : 3e3 > d4 ? 3e3 : 4320 > d4 ? 4320 : 1960 * mk(d4 / 1960)) - d4, 10 < d4) {
                a4.timeoutHandle = Ff(Qk.bind(null, a4, uk, vk), d4);
                break;
              }
              Qk(a4, uk, vk);
              break;
            case 5:
              Qk(a4, uk, vk);
              break;
            default:
              throw Error(p2(329));
          }
        }
      }
      return Ek(a4, B2()), a4.callbackNode === c3 ? Hk.bind(null, a4) : null;
    }
    function Ok(a4, b3) {
      var c3 = tk;
      return a4.current.memoizedState.isDehydrated && (Lk(a4, b3).flags |= 256), a4 = Jk(a4, b3), a4 !== 2 && (b3 = uk, uk = c3, b3 !== null && Gj(b3)), a4;
    }
    function Gj(a4) {
      uk === null ? uk = a4 : uk.push.apply(uk, a4);
    }
    function Pk(a4) {
      for (var b3 = a4; ; ) {
        if (b3.flags & 16384) {
          var c3 = b3.updateQueue;
          if (c3 !== null && (c3 = c3.stores, c3 !== null))
            for (var d4 = 0; d4 < c3.length; d4++) {
              var e3 = c3[d4], f2 = e3.getSnapshot;
              e3 = e3.value;
              try {
                if (!He(f2(), e3))
                  return !1;
              } catch {
                return !1;
              }
            }
        }
        if (c3 = b3.child, b3.subtreeFlags & 16384 && c3 !== null)
          c3.return = b3, b3 = c3;
        else {
          if (b3 === a4)
            break;
          for (; b3.sibling === null; ) {
            if (b3.return === null || b3.return === a4)
              return !0;
            b3 = b3.return;
          }
          b3.sibling.return = b3.return, b3 = b3.sibling;
        }
      }
      return !0;
    }
    function Dk(a4, b3) {
      for (b3 &= ~sk, b3 &= ~rk, a4.suspendedLanes |= b3, a4.pingedLanes &= ~b3, a4 = a4.expirationTimes; 0 < b3; ) {
        var c3 = 31 - oc(b3), d4 = 1 << c3;
        a4[c3] = -1, b3 &= ~d4;
      }
    }
    function Fk(a4) {
      if (K2 & 6)
        throw Error(p2(327));
      Ik();
      var b3 = uc(a4, 0);
      if (!(b3 & 1))
        return Ek(a4, B2()), null;
      var c3 = Jk(a4, b3);
      if (a4.tag !== 0 && c3 === 2) {
        var d4 = xc(a4);
        d4 !== 0 && (b3 = d4, c3 = Ok(a4, d4));
      }
      if (c3 === 1)
        throw c3 = qk, Lk(a4, 0), Dk(a4, b3), Ek(a4, B2()), c3;
      if (c3 === 6)
        throw Error(p2(345));
      return a4.finishedWork = a4.current.alternate, a4.finishedLanes = b3, Qk(a4, uk, vk), Ek(a4, B2()), null;
    }
    function Rk(a4, b3) {
      var c3 = K2;
      K2 |= 1;
      try {
        return a4(b3);
      } finally {
        K2 = c3, K2 === 0 && (Hj = B2() + 500, fg && jg());
      }
    }
    function Sk(a4) {
      xk !== null && xk.tag === 0 && !(K2 & 6) && Ik();
      var b3 = K2;
      K2 |= 1;
      var c3 = pk.transition, d4 = C;
      try {
        if (pk.transition = null, C = 1, a4)
          return a4();
      } finally {
        C = d4, pk.transition = c3, K2 = b3, !(K2 & 6) && jg();
      }
    }
    function Ij() {
      gj = fj.current, E2(fj);
    }
    function Lk(a4, b3) {
      a4.finishedWork = null, a4.finishedLanes = 0;
      var c3 = a4.timeoutHandle;
      if (c3 !== -1 && (a4.timeoutHandle = -1, Gf(c3)), Y2 !== null)
        for (c3 = Y2.return; c3 !== null; ) {
          var d4 = c3;
          switch (wg(d4), d4.tag) {
            case 1:
              d4 = d4.type.childContextTypes, d4 != null && $f();
              break;
            case 3:
              Jh(), E2(Wf), E2(H4), Oh();
              break;
            case 5:
              Lh(d4);
              break;
            case 4:
              Jh();
              break;
            case 13:
              E2(M4);
              break;
            case 19:
              E2(M4);
              break;
            case 10:
              Rg(d4.type._context);
              break;
            case 22:
            case 23:
              Ij();
          }
          c3 = c3.return;
        }
      if (R2 = a4, Y2 = a4 = wh(a4.current, null), Z2 = gj = b3, T3 = 0, qk = null, sk = rk = hh = 0, uk = tk = null, Wg !== null) {
        for (b3 = 0; b3 < Wg.length; b3++)
          if (c3 = Wg[b3], d4 = c3.interleaved, d4 !== null) {
            c3.interleaved = null;
            var e3 = d4.next, f2 = c3.pending;
            if (f2 !== null) {
              var g2 = f2.next;
              f2.next = e3, d4.next = g2;
            }
            c3.pending = d4;
          }
        Wg = null;
      }
      return a4;
    }
    function Nk(a4, b3) {
      do {
        var c3 = Y2;
        try {
          if (Qg(), Ph.current = ai, Sh) {
            for (var d4 = N2.memoizedState; d4 !== null; ) {
              var e3 = d4.queue;
              e3 !== null && (e3.pending = null), d4 = d4.next;
            }
            Sh = !1;
          }
          if (Rh = 0, P = O2 = N2 = null, Th = !1, Uh = 0, ok.current = null, c3 === null || c3.return === null) {
            T3 = 1, qk = b3, Y2 = null;
            break;
          }
          a: {
            var f2 = a4, g2 = c3.return, h4 = c3, k3 = b3;
            if (b3 = Z2, h4.flags |= 32768, k3 !== null && typeof k3 == "object" && typeof k3.then == "function") {
              var l2 = k3, m4 = h4, q2 = m4.tag;
              if (!(m4.mode & 1) && (q2 === 0 || q2 === 11 || q2 === 15)) {
                var r3 = m4.alternate;
                r3 ? (m4.updateQueue = r3.updateQueue, m4.memoizedState = r3.memoizedState, m4.lanes = r3.lanes) : (m4.updateQueue = null, m4.memoizedState = null);
              }
              var y4 = Vi(g2);
              if (y4 !== null) {
                y4.flags &= -257, Wi(y4, g2, h4, f2, b3), y4.mode & 1 && Ti(f2, l2, b3), b3 = y4, k3 = l2;
                var n2 = b3.updateQueue;
                if (n2 === null) {
                  var t4 = /* @__PURE__ */ new Set();
                  t4.add(k3), b3.updateQueue = t4;
                } else
                  n2.add(k3);
                break a;
              } else {
                if (!(b3 & 1)) {
                  Ti(f2, l2, b3), uj();
                  break a;
                }
                k3 = Error(p2(426));
              }
            } else if (I2 && h4.mode & 1) {
              var J = Vi(g2);
              if (J !== null) {
                !(J.flags & 65536) && (J.flags |= 256), Wi(J, g2, h4, f2, b3), Jg(Ki(k3, h4));
                break a;
              }
            }
            f2 = k3 = Ki(k3, h4), T3 !== 4 && (T3 = 2), tk === null ? tk = [f2] : tk.push(f2), f2 = g2;
            do {
              switch (f2.tag) {
                case 3:
                  f2.flags |= 65536, b3 &= -b3, f2.lanes |= b3;
                  var x3 = Oi(f2, k3, b3);
                  fh(f2, x3);
                  break a;
                case 1:
                  h4 = k3;
                  var w2 = f2.type, u3 = f2.stateNode;
                  if (!(f2.flags & 128) && (typeof w2.getDerivedStateFromError == "function" || u3 !== null && typeof u3.componentDidCatch == "function" && (Si === null || !Si.has(u3)))) {
                    f2.flags |= 65536, b3 &= -b3, f2.lanes |= b3;
                    var F = Ri(f2, h4, b3);
                    fh(f2, F);
                    break a;
                  }
              }
              f2 = f2.return;
            } while (f2 !== null);
          }
          Tk(c3);
        } catch (na) {
          b3 = na, Y2 === c3 && c3 !== null && (Y2 = c3 = c3.return);
          continue;
        }
        break;
      } while (1);
    }
    function Kk() {
      var a4 = nk.current;
      return nk.current = ai, a4 === null ? ai : a4;
    }
    function uj() {
      (T3 === 0 || T3 === 3 || T3 === 2) && (T3 = 4), R2 === null || !(hh & 268435455) && !(rk & 268435455) || Dk(R2, Z2);
    }
    function Jk(a4, b3) {
      var c3 = K2;
      K2 |= 2;
      var d4 = Kk();
      (R2 !== a4 || Z2 !== b3) && (vk = null, Lk(a4, b3));
      do
        try {
          Uk();
          break;
        } catch (e3) {
          Nk(a4, e3);
        }
      while (1);
      if (Qg(), K2 = c3, nk.current = d4, Y2 !== null)
        throw Error(p2(261));
      return R2 = null, Z2 = 0, T3;
    }
    function Uk() {
      for (; Y2 !== null; )
        Vk(Y2);
    }
    function Mk() {
      for (; Y2 !== null && !cc(); )
        Vk(Y2);
    }
    function Vk(a4) {
      var b3 = Wk(a4.alternate, a4, gj);
      a4.memoizedProps = a4.pendingProps, b3 === null ? Tk(a4) : Y2 = b3, ok.current = null;
    }
    function Tk(a4) {
      var b3 = a4;
      do {
        var c3 = b3.alternate;
        if (a4 = b3.return, b3.flags & 32768) {
          if (c3 = Jj(c3, b3), c3 !== null) {
            c3.flags &= 32767, Y2 = c3;
            return;
          }
          if (a4 !== null)
            a4.flags |= 32768, a4.subtreeFlags = 0, a4.deletions = null;
          else {
            T3 = 6, Y2 = null;
            return;
          }
        } else if (c3 = Fj(c3, b3, gj), c3 !== null) {
          Y2 = c3;
          return;
        }
        if (b3 = b3.sibling, b3 !== null) {
          Y2 = b3;
          return;
        }
        Y2 = b3 = a4;
      } while (b3 !== null);
      T3 === 0 && (T3 = 5);
    }
    function Qk(a4, b3, c3) {
      var d4 = C, e3 = pk.transition;
      try {
        pk.transition = null, C = 1, Xk(a4, b3, c3, d4);
      } finally {
        pk.transition = e3, C = d4;
      }
      return null;
    }
    function Xk(a4, b3, c3, d4) {
      do
        Ik();
      while (xk !== null);
      if (K2 & 6)
        throw Error(p2(327));
      c3 = a4.finishedWork;
      var e3 = a4.finishedLanes;
      if (c3 === null)
        return null;
      if (a4.finishedWork = null, a4.finishedLanes = 0, c3 === a4.current)
        throw Error(p2(177));
      a4.callbackNode = null, a4.callbackPriority = 0;
      var f2 = c3.lanes | c3.childLanes;
      if (Bc(a4, f2), a4 === R2 && (Y2 = R2 = null, Z2 = 0), !(c3.subtreeFlags & 2064) && !(c3.flags & 2064) || wk || (wk = !0, Gk(hc, function() {
        return Ik(), null;
      })), f2 = (c3.flags & 15990) !== 0, c3.subtreeFlags & 15990 || f2) {
        f2 = pk.transition, pk.transition = null;
        var g2 = C;
        C = 1;
        var h4 = K2;
        K2 |= 4, ok.current = null, Pj(a4, c3), ek(c3, a4), Oe(Df), dd = !!Cf, Df = Cf = null, a4.current = c3, ik(c3, a4, e3), dc(), K2 = h4, C = g2, pk.transition = f2;
      } else
        a4.current = c3;
      if (wk && (wk = !1, xk = a4, yk = e3), f2 = a4.pendingLanes, f2 === 0 && (Si = null), mc(c3.stateNode, d4), Ek(a4, B2()), b3 !== null)
        for (d4 = a4.onRecoverableError, c3 = 0; c3 < b3.length; c3++)
          e3 = b3[c3], d4(e3.value, { componentStack: e3.stack, digest: e3.digest });
      if (Pi)
        throw Pi = !1, a4 = Qi, Qi = null, a4;
      return yk & 1 && a4.tag !== 0 && Ik(), f2 = a4.pendingLanes, f2 & 1 ? a4 === Ak ? zk++ : (zk = 0, Ak = a4) : zk = 0, jg(), null;
    }
    function Ik() {
      if (xk !== null) {
        var a4 = Dc(yk), b3 = pk.transition, c3 = C;
        try {
          if (pk.transition = null, C = 16 > a4 ? 16 : a4, xk === null)
            var d4 = !1;
          else {
            if (a4 = xk, xk = null, yk = 0, K2 & 6)
              throw Error(p2(331));
            var e3 = K2;
            for (K2 |= 4, V = a4.current; V !== null; ) {
              var f2 = V, g2 = f2.child;
              if (V.flags & 16) {
                var h4 = f2.deletions;
                if (h4 !== null) {
                  for (var k3 = 0; k3 < h4.length; k3++) {
                    var l2 = h4[k3];
                    for (V = l2; V !== null; ) {
                      var m4 = V;
                      switch (m4.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Qj(8, m4, f2);
                      }
                      var q2 = m4.child;
                      if (q2 !== null)
                        q2.return = m4, V = q2;
                      else
                        for (; V !== null; ) {
                          m4 = V;
                          var r3 = m4.sibling, y4 = m4.return;
                          if (Tj(m4), m4 === l2) {
                            V = null;
                            break;
                          }
                          if (r3 !== null) {
                            r3.return = y4, V = r3;
                            break;
                          }
                          V = y4;
                        }
                    }
                  }
                  var n2 = f2.alternate;
                  if (n2 !== null) {
                    var t4 = n2.child;
                    if (t4 !== null) {
                      n2.child = null;
                      do {
                        var J = t4.sibling;
                        t4.sibling = null, t4 = J;
                      } while (t4 !== null);
                    }
                  }
                  V = f2;
                }
              }
              if (f2.subtreeFlags & 2064 && g2 !== null)
                g2.return = f2, V = g2;
              else
                b:
                  for (; V !== null; ) {
                    if (f2 = V, f2.flags & 2048)
                      switch (f2.tag) {
                        case 0:
                        case 11:
                        case 15:
                          Qj(9, f2, f2.return);
                      }
                    var x3 = f2.sibling;
                    if (x3 !== null) {
                      x3.return = f2.return, V = x3;
                      break b;
                    }
                    V = f2.return;
                  }
            }
            var w2 = a4.current;
            for (V = w2; V !== null; ) {
              g2 = V;
              var u3 = g2.child;
              if (g2.subtreeFlags & 2064 && u3 !== null)
                u3.return = g2, V = u3;
              else
                b:
                  for (g2 = w2; V !== null; ) {
                    if (h4 = V, h4.flags & 2048)
                      try {
                        switch (h4.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Rj(9, h4);
                        }
                      } catch (na) {
                        W(h4, h4.return, na);
                      }
                    if (h4 === g2) {
                      V = null;
                      break b;
                    }
                    var F = h4.sibling;
                    if (F !== null) {
                      F.return = h4.return, V = F;
                      break b;
                    }
                    V = h4.return;
                  }
            }
            if (K2 = e3, jg(), lc && typeof lc.onPostCommitFiberRoot == "function")
              try {
                lc.onPostCommitFiberRoot(kc, a4);
              } catch {
              }
            d4 = !0;
          }
          return d4;
        } finally {
          C = c3, pk.transition = b3;
        }
      }
      return !1;
    }
    function Yk(a4, b3, c3) {
      b3 = Ki(c3, b3), b3 = Oi(a4, b3, 1), a4 = dh(a4, b3, 1), b3 = L3(), a4 !== null && (Ac(a4, 1, b3), Ek(a4, b3));
    }
    function W(a4, b3, c3) {
      if (a4.tag === 3)
        Yk(a4, a4, c3);
      else
        for (; b3 !== null; ) {
          if (b3.tag === 3) {
            Yk(b3, a4, c3);
            break;
          } else if (b3.tag === 1) {
            var d4 = b3.stateNode;
            if (typeof b3.type.getDerivedStateFromError == "function" || typeof d4.componentDidCatch == "function" && (Si === null || !Si.has(d4))) {
              a4 = Ki(c3, a4), a4 = Ri(b3, a4, 1), b3 = dh(b3, a4, 1), a4 = L3(), b3 !== null && (Ac(b3, 1, a4), Ek(b3, a4));
              break;
            }
          }
          b3 = b3.return;
        }
    }
    function Ui(a4, b3, c3) {
      var d4 = a4.pingCache;
      d4 !== null && d4.delete(b3), b3 = L3(), a4.pingedLanes |= a4.suspendedLanes & c3, R2 === a4 && (Z2 & c3) === c3 && (T3 === 4 || T3 === 3 && (Z2 & 130023424) === Z2 && 500 > B2() - gk ? Lk(a4, 0) : sk |= c3), Ek(a4, b3);
    }
    function Zk(a4, b3) {
      b3 === 0 && (a4.mode & 1 ? (b3 = sc, sc <<= 1, !(sc & 130023424) && (sc = 4194304)) : b3 = 1);
      var c3 = L3();
      a4 = Zg(a4, b3), a4 !== null && (Ac(a4, b3, c3), Ek(a4, c3));
    }
    function vj(a4) {
      var b3 = a4.memoizedState, c3 = 0;
      b3 !== null && (c3 = b3.retryLane), Zk(a4, c3);
    }
    function ck(a4, b3) {
      var c3 = 0;
      switch (a4.tag) {
        case 13:
          var d4 = a4.stateNode, e3 = a4.memoizedState;
          e3 !== null && (c3 = e3.retryLane);
          break;
        case 19:
          d4 = a4.stateNode;
          break;
        default:
          throw Error(p2(314));
      }
      d4 !== null && d4.delete(b3), Zk(a4, c3);
    }
    var Wk;
    Wk = function(a4, b3, c3) {
      if (a4 !== null)
        if (a4.memoizedProps !== b3.pendingProps || Wf.current)
          Ug = !0;
        else {
          if (!(a4.lanes & c3) && !(b3.flags & 128))
            return Ug = !1, zj(a4, b3, c3);
          Ug = !!(a4.flags & 131072);
        }
      else
        Ug = !1, I2 && b3.flags & 1048576 && ug(b3, ng, b3.index);
      switch (b3.lanes = 0, b3.tag) {
        case 2:
          var d4 = b3.type;
          jj(a4, b3), a4 = b3.pendingProps;
          var e3 = Yf(b3, H4.current);
          Tg(b3, c3), e3 = Xh(null, b3, d4, a4, e3, c3);
          var f2 = bi();
          return b3.flags |= 1, typeof e3 == "object" && e3 !== null && typeof e3.render == "function" && e3.$$typeof === void 0 ? (b3.tag = 1, b3.memoizedState = null, b3.updateQueue = null, Zf(d4) ? (f2 = !0, cg(b3)) : f2 = !1, b3.memoizedState = e3.state !== null && e3.state !== void 0 ? e3.state : null, ah(b3), e3.updater = nh, b3.stateNode = e3, e3._reactInternals = b3, rh(b3, d4, a4, c3), b3 = kj(null, b3, d4, !0, f2, c3)) : (b3.tag = 0, I2 && f2 && vg(b3), Yi(null, b3, e3, c3), b3 = b3.child), b3;
        case 16:
          d4 = b3.elementType;
          a: {
            switch (jj(a4, b3), a4 = b3.pendingProps, e3 = d4._init, d4 = e3(d4._payload), b3.type = d4, e3 = b3.tag = $k(d4), a4 = Lg(d4, a4), e3) {
              case 0:
                b3 = dj(null, b3, d4, a4, c3);
                break a;
              case 1:
                b3 = ij(null, b3, d4, a4, c3);
                break a;
              case 11:
                b3 = Zi(null, b3, d4, a4, c3);
                break a;
              case 14:
                b3 = aj(null, b3, d4, Lg(d4.type, a4), c3);
                break a;
            }
            throw Error(p2(
              306,
              d4,
              ""
            ));
          }
          return b3;
        case 0:
          return d4 = b3.type, e3 = b3.pendingProps, e3 = b3.elementType === d4 ? e3 : Lg(d4, e3), dj(a4, b3, d4, e3, c3);
        case 1:
          return d4 = b3.type, e3 = b3.pendingProps, e3 = b3.elementType === d4 ? e3 : Lg(d4, e3), ij(a4, b3, d4, e3, c3);
        case 3:
          a: {
            if (lj(b3), a4 === null)
              throw Error(p2(387));
            d4 = b3.pendingProps, f2 = b3.memoizedState, e3 = f2.element, bh(a4, b3), gh(b3, d4, null, c3);
            var g2 = b3.memoizedState;
            if (d4 = g2.element, f2.isDehydrated)
              if (f2 = { element: d4, isDehydrated: !1, cache: g2.cache, pendingSuspenseBoundaries: g2.pendingSuspenseBoundaries, transitions: g2.transitions }, b3.updateQueue.baseState = f2, b3.memoizedState = f2, b3.flags & 256) {
                e3 = Ki(Error(p2(423)), b3), b3 = mj(a4, b3, d4, c3, e3);
                break a;
              } else if (d4 !== e3) {
                e3 = Ki(Error(p2(424)), b3), b3 = mj(a4, b3, d4, c3, e3);
                break a;
              } else
                for (yg = Lf(b3.stateNode.containerInfo.firstChild), xg = b3, I2 = !0, zg = null, c3 = Ch(b3, null, d4, c3), b3.child = c3; c3; )
                  c3.flags = c3.flags & -3 | 4096, c3 = c3.sibling;
            else {
              if (Ig(), d4 === e3) {
                b3 = $i(a4, b3, c3);
                break a;
              }
              Yi(a4, b3, d4, c3);
            }
            b3 = b3.child;
          }
          return b3;
        case 5:
          return Kh(b3), a4 === null && Eg(b3), d4 = b3.type, e3 = b3.pendingProps, f2 = a4 !== null ? a4.memoizedProps : null, g2 = e3.children, Ef(d4, e3) ? g2 = null : f2 !== null && Ef(d4, f2) && (b3.flags |= 32), hj(a4, b3), Yi(a4, b3, g2, c3), b3.child;
        case 6:
          return a4 === null && Eg(b3), null;
        case 13:
          return pj(a4, b3, c3);
        case 4:
          return Ih(b3, b3.stateNode.containerInfo), d4 = b3.pendingProps, a4 === null ? b3.child = Bh(b3, null, d4, c3) : Yi(a4, b3, d4, c3), b3.child;
        case 11:
          return d4 = b3.type, e3 = b3.pendingProps, e3 = b3.elementType === d4 ? e3 : Lg(d4, e3), Zi(a4, b3, d4, e3, c3);
        case 7:
          return Yi(a4, b3, b3.pendingProps, c3), b3.child;
        case 8:
          return Yi(a4, b3, b3.pendingProps.children, c3), b3.child;
        case 12:
          return Yi(a4, b3, b3.pendingProps.children, c3), b3.child;
        case 10:
          a: {
            if (d4 = b3.type._context, e3 = b3.pendingProps, f2 = b3.memoizedProps, g2 = e3.value, G2(Mg, d4._currentValue), d4._currentValue = g2, f2 !== null)
              if (He(f2.value, g2)) {
                if (f2.children === e3.children && !Wf.current) {
                  b3 = $i(a4, b3, c3);
                  break a;
                }
              } else
                for (f2 = b3.child, f2 !== null && (f2.return = b3); f2 !== null; ) {
                  var h4 = f2.dependencies;
                  if (h4 !== null) {
                    g2 = f2.child;
                    for (var k3 = h4.firstContext; k3 !== null; ) {
                      if (k3.context === d4) {
                        if (f2.tag === 1) {
                          k3 = ch(-1, c3 & -c3), k3.tag = 2;
                          var l2 = f2.updateQueue;
                          if (l2 !== null) {
                            l2 = l2.shared;
                            var m4 = l2.pending;
                            m4 === null ? k3.next = k3 : (k3.next = m4.next, m4.next = k3), l2.pending = k3;
                          }
                        }
                        f2.lanes |= c3, k3 = f2.alternate, k3 !== null && (k3.lanes |= c3), Sg(
                          f2.return,
                          c3,
                          b3
                        ), h4.lanes |= c3;
                        break;
                      }
                      k3 = k3.next;
                    }
                  } else if (f2.tag === 10)
                    g2 = f2.type === b3.type ? null : f2.child;
                  else if (f2.tag === 18) {
                    if (g2 = f2.return, g2 === null)
                      throw Error(p2(341));
                    g2.lanes |= c3, h4 = g2.alternate, h4 !== null && (h4.lanes |= c3), Sg(g2, c3, b3), g2 = f2.sibling;
                  } else
                    g2 = f2.child;
                  if (g2 !== null)
                    g2.return = f2;
                  else
                    for (g2 = f2; g2 !== null; ) {
                      if (g2 === b3) {
                        g2 = null;
                        break;
                      }
                      if (f2 = g2.sibling, f2 !== null) {
                        f2.return = g2.return, g2 = f2;
                        break;
                      }
                      g2 = g2.return;
                    }
                  f2 = g2;
                }
            Yi(a4, b3, e3.children, c3), b3 = b3.child;
          }
          return b3;
        case 9:
          return e3 = b3.type, d4 = b3.pendingProps.children, Tg(b3, c3), e3 = Vg(e3), d4 = d4(e3), b3.flags |= 1, Yi(a4, b3, d4, c3), b3.child;
        case 14:
          return d4 = b3.type, e3 = Lg(d4, b3.pendingProps), e3 = Lg(d4.type, e3), aj(a4, b3, d4, e3, c3);
        case 15:
          return cj(a4, b3, b3.type, b3.pendingProps, c3);
        case 17:
          return d4 = b3.type, e3 = b3.pendingProps, e3 = b3.elementType === d4 ? e3 : Lg(d4, e3), jj(a4, b3), b3.tag = 1, Zf(d4) ? (a4 = !0, cg(b3)) : a4 = !1, Tg(b3, c3), ph(b3, d4, e3), rh(b3, d4, e3, c3), kj(null, b3, d4, !0, a4, c3);
        case 19:
          return yj(a4, b3, c3);
        case 22:
          return ej(a4, b3, c3);
      }
      throw Error(p2(156, b3.tag));
    };
    function Gk(a4, b3) {
      return ac(a4, b3);
    }
    function al(a4, b3, c3, d4) {
      this.tag = a4, this.key = c3, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = b3, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = d4, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null;
    }
    function Bg(a4, b3, c3, d4) {
      return new al(a4, b3, c3, d4);
    }
    function bj(a4) {
      return a4 = a4.prototype, !(!a4 || !a4.isReactComponent);
    }
    function $k(a4) {
      if (typeof a4 == "function")
        return bj(a4) ? 1 : 0;
      if (a4 != null) {
        if (a4 = a4.$$typeof, a4 === Da)
          return 11;
        if (a4 === Ga)
          return 14;
      }
      return 2;
    }
    function wh(a4, b3) {
      var c3 = a4.alternate;
      return c3 === null ? (c3 = Bg(a4.tag, b3, a4.key, a4.mode), c3.elementType = a4.elementType, c3.type = a4.type, c3.stateNode = a4.stateNode, c3.alternate = a4, a4.alternate = c3) : (c3.pendingProps = b3, c3.type = a4.type, c3.flags = 0, c3.subtreeFlags = 0, c3.deletions = null), c3.flags = a4.flags & 14680064, c3.childLanes = a4.childLanes, c3.lanes = a4.lanes, c3.child = a4.child, c3.memoizedProps = a4.memoizedProps, c3.memoizedState = a4.memoizedState, c3.updateQueue = a4.updateQueue, b3 = a4.dependencies, c3.dependencies = b3 === null ? null : { lanes: b3.lanes, firstContext: b3.firstContext }, c3.sibling = a4.sibling, c3.index = a4.index, c3.ref = a4.ref, c3;
    }
    function yh(a4, b3, c3, d4, e3, f2) {
      var g2 = 2;
      if (d4 = a4, typeof a4 == "function")
        bj(a4) && (g2 = 1);
      else if (typeof a4 == "string")
        g2 = 5;
      else
        a:
          switch (a4) {
            case ya:
              return Ah(c3.children, e3, f2, b3);
            case za:
              g2 = 8, e3 |= 8;
              break;
            case Aa:
              return a4 = Bg(12, c3, b3, e3 | 2), a4.elementType = Aa, a4.lanes = f2, a4;
            case Ea:
              return a4 = Bg(13, c3, b3, e3), a4.elementType = Ea, a4.lanes = f2, a4;
            case Fa:
              return a4 = Bg(19, c3, b3, e3), a4.elementType = Fa, a4.lanes = f2, a4;
            case Ia:
              return qj(c3, e3, f2, b3);
            default:
              if (typeof a4 == "object" && a4 !== null)
                switch (a4.$$typeof) {
                  case Ba:
                    g2 = 10;
                    break a;
                  case Ca:
                    g2 = 9;
                    break a;
                  case Da:
                    g2 = 11;
                    break a;
                  case Ga:
                    g2 = 14;
                    break a;
                  case Ha:
                    g2 = 16, d4 = null;
                    break a;
                }
              throw Error(p2(130, a4 == null ? a4 : typeof a4, ""));
          }
      return b3 = Bg(g2, c3, b3, e3), b3.elementType = a4, b3.type = d4, b3.lanes = f2, b3;
    }
    function Ah(a4, b3, c3, d4) {
      return a4 = Bg(7, a4, d4, b3), a4.lanes = c3, a4;
    }
    function qj(a4, b3, c3, d4) {
      return a4 = Bg(22, a4, d4, b3), a4.elementType = Ia, a4.lanes = c3, a4.stateNode = { isHidden: !1 }, a4;
    }
    function xh(a4, b3, c3) {
      return a4 = Bg(6, a4, null, b3), a4.lanes = c3, a4;
    }
    function zh(a4, b3, c3) {
      return b3 = Bg(4, a4.children !== null ? a4.children : [], a4.key, b3), b3.lanes = c3, b3.stateNode = { containerInfo: a4.containerInfo, pendingChildren: null, implementation: a4.implementation }, b3;
    }
    function bl(a4, b3, c3, d4, e3) {
      this.tag = b3, this.containerInfo = a4, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = zc(0), this.expirationTimes = zc(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = zc(0), this.identifierPrefix = d4, this.onRecoverableError = e3, this.mutableSourceEagerHydrationData = null;
    }
    function cl(a4, b3, c3, d4, e3, f2, g2, h4, k3) {
      return a4 = new bl(a4, b3, c3, h4, k3), b3 === 1 ? (b3 = 1, f2 === !0 && (b3 |= 8)) : b3 = 0, f2 = Bg(3, null, null, b3), a4.current = f2, f2.stateNode = a4, f2.memoizedState = { element: d4, isDehydrated: c3, cache: null, transitions: null, pendingSuspenseBoundaries: null }, ah(f2), a4;
    }
    function dl(a4, b3, c3) {
      var d4 = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
      return { $$typeof: wa, key: d4 == null ? null : "" + d4, children: a4, containerInfo: b3, implementation: c3 };
    }
    function el(a4) {
      if (!a4)
        return Vf;
      a4 = a4._reactInternals;
      a: {
        if (Vb(a4) !== a4 || a4.tag !== 1)
          throw Error(p2(170));
        var b3 = a4;
        do {
          switch (b3.tag) {
            case 3:
              b3 = b3.stateNode.context;
              break a;
            case 1:
              if (Zf(b3.type)) {
                b3 = b3.stateNode.__reactInternalMemoizedMergedChildContext;
                break a;
              }
          }
          b3 = b3.return;
        } while (b3 !== null);
        throw Error(p2(171));
      }
      if (a4.tag === 1) {
        var c3 = a4.type;
        if (Zf(c3))
          return bg(a4, c3, b3);
      }
      return b3;
    }
    function fl(a4, b3, c3, d4, e3, f2, g2, h4, k3) {
      return a4 = cl(c3, d4, !0, a4, e3, f2, g2, h4, k3), a4.context = el(null), c3 = a4.current, d4 = L3(), e3 = lh(c3), f2 = ch(d4, e3), f2.callback = b3 ?? null, dh(c3, f2, e3), a4.current.lanes = e3, Ac(a4, e3, d4), Ek(a4, d4), a4;
    }
    function gl(a4, b3, c3, d4) {
      var e3 = b3.current, f2 = L3(), g2 = lh(e3);
      return c3 = el(c3), b3.context === null ? b3.context = c3 : b3.pendingContext = c3, b3 = ch(f2, g2), b3.payload = { element: a4 }, d4 = d4 === void 0 ? null : d4, d4 !== null && (b3.callback = d4), a4 = dh(e3, b3, g2), a4 !== null && (mh(a4, e3, g2, f2), eh(a4, e3, g2)), g2;
    }
    function hl(a4) {
      if (a4 = a4.current, !a4.child)
        return null;
      switch (a4.child.tag) {
        case 5:
          return a4.child.stateNode;
        default:
          return a4.child.stateNode;
      }
    }
    function il(a4, b3) {
      if (a4 = a4.memoizedState, a4 !== null && a4.dehydrated !== null) {
        var c3 = a4.retryLane;
        a4.retryLane = c3 !== 0 && c3 < b3 ? c3 : b3;
      }
    }
    function jl(a4, b3) {
      il(a4, b3), (a4 = a4.alternate) && il(a4, b3);
    }
    function kl() {
      return null;
    }
    var ll = typeof reportError == "function" ? reportError : function(a4) {
      console.error(a4);
    };
    function ml(a4) {
      this._internalRoot = a4;
    }
    nl.prototype.render = ml.prototype.render = function(a4) {
      var b3 = this._internalRoot;
      if (b3 === null)
        throw Error(p2(409));
      gl(a4, b3, null, null);
    };
    nl.prototype.unmount = ml.prototype.unmount = function() {
      var a4 = this._internalRoot;
      if (a4 !== null) {
        this._internalRoot = null;
        var b3 = a4.containerInfo;
        Sk(function() {
          gl(null, a4, null, null);
        }), b3[uf] = null;
      }
    };
    function nl(a4) {
      this._internalRoot = a4;
    }
    nl.prototype.unstable_scheduleHydration = function(a4) {
      if (a4) {
        var b3 = Hc();
        a4 = { blockedOn: null, target: a4, priority: b3 };
        for (var c3 = 0; c3 < Qc.length && b3 !== 0 && b3 < Qc[c3].priority; c3++)
          ;
        Qc.splice(c3, 0, a4), c3 === 0 && Vc(a4);
      }
    };
    function ol(a4) {
      return !(!a4 || a4.nodeType !== 1 && a4.nodeType !== 9 && a4.nodeType !== 11);
    }
    function pl(a4) {
      return !(!a4 || a4.nodeType !== 1 && a4.nodeType !== 9 && a4.nodeType !== 11 && (a4.nodeType !== 8 || a4.nodeValue !== " react-mount-point-unstable "));
    }
    function ql() {
    }
    function rl(a4, b3, c3, d4, e3) {
      if (e3) {
        if (typeof d4 == "function") {
          var f2 = d4;
          d4 = function() {
            var a5 = hl(g2);
            f2.call(a5);
          };
        }
        var g2 = fl(b3, d4, a4, 0, null, !1, !1, "", ql);
        return a4._reactRootContainer = g2, a4[uf] = g2.current, sf(a4.nodeType === 8 ? a4.parentNode : a4), Sk(), g2;
      }
      for (; e3 = a4.lastChild; )
        a4.removeChild(e3);
      if (typeof d4 == "function") {
        var h4 = d4;
        d4 = function() {
          var a5 = hl(k3);
          h4.call(a5);
        };
      }
      var k3 = cl(a4, 0, !1, null, null, !1, !1, "", ql);
      return a4._reactRootContainer = k3, a4[uf] = k3.current, sf(a4.nodeType === 8 ? a4.parentNode : a4), Sk(function() {
        gl(b3, k3, c3, d4);
      }), k3;
    }
    function sl(a4, b3, c3, d4, e3) {
      var f2 = c3._reactRootContainer;
      if (f2) {
        var g2 = f2;
        if (typeof e3 == "function") {
          var h4 = e3;
          e3 = function() {
            var a5 = hl(g2);
            h4.call(a5);
          };
        }
        gl(b3, g2, a4, e3);
      } else
        g2 = rl(c3, b3, a4, e3, d4);
      return hl(g2);
    }
    Ec = function(a4) {
      switch (a4.tag) {
        case 3:
          var b3 = a4.stateNode;
          if (b3.current.memoizedState.isDehydrated) {
            var c3 = tc(b3.pendingLanes);
            c3 !== 0 && (Cc(b3, c3 | 1), Ek(b3, B2()), !(K2 & 6) && (Hj = B2() + 500, jg()));
          }
          break;
        case 13:
          Sk(function() {
            var b4 = Zg(a4, 1);
            if (b4 !== null) {
              var c4 = L3();
              mh(b4, a4, 1, c4);
            }
          }), jl(a4, 1);
      }
    };
    Fc = function(a4) {
      if (a4.tag === 13) {
        var b3 = Zg(a4, 134217728);
        if (b3 !== null) {
          var c3 = L3();
          mh(b3, a4, 134217728, c3);
        }
        jl(a4, 134217728);
      }
    };
    Gc = function(a4) {
      if (a4.tag === 13) {
        var b3 = lh(a4), c3 = Zg(a4, b3);
        if (c3 !== null) {
          var d4 = L3();
          mh(c3, a4, b3, d4);
        }
        jl(a4, b3);
      }
    };
    Hc = function() {
      return C;
    };
    Ic = function(a4, b3) {
      var c3 = C;
      try {
        return C = a4, b3();
      } finally {
        C = c3;
      }
    };
    yb = function(a4, b3, c3) {
      switch (b3) {
        case "input":
          if (bb(a4, c3), b3 = c3.name, c3.type === "radio" && b3 != null) {
            for (c3 = a4; c3.parentNode; )
              c3 = c3.parentNode;
            for (c3 = c3.querySelectorAll("input[name=" + JSON.stringify("" + b3) + '][type="radio"]'), b3 = 0; b3 < c3.length; b3++) {
              var d4 = c3[b3];
              if (d4 !== a4 && d4.form === a4.form) {
                var e3 = Db(d4);
                if (!e3)
                  throw Error(p2(90));
                Wa(d4), bb(d4, e3);
              }
            }
          }
          break;
        case "textarea":
          ib(a4, c3);
          break;
        case "select":
          b3 = c3.value, b3 != null && fb(a4, !!c3.multiple, b3, !1);
      }
    };
    Gb = Rk;
    Hb = Sk;
    var tl = { usingClientEntryPoint: !1, Events: [Cb, ue2, Db, Eb, Fb, Rk] }, ul = { findFiberByHostInstance: Wc, bundleType: 0, version: "18.2.0", rendererPackageName: "react-dom" }, vl = { bundleType: ul.bundleType, version: ul.version, rendererPackageName: ul.rendererPackageName, rendererConfig: ul.rendererConfig, overrideHookState: null, overrideHookStateDeletePath: null, overrideHookStateRenamePath: null, overrideProps: null, overridePropsDeletePath: null, overridePropsRenamePath: null, setErrorHandler: null, setSuspenseHandler: null, scheduleUpdate: null, currentDispatcherRef: ua.ReactCurrentDispatcher, findHostInstanceByFiber: function(a4) {
      return a4 = Zb(a4), a4 === null ? null : a4.stateNode;
    }, findFiberByHostInstance: ul.findFiberByHostInstance || kl, findHostInstancesForRefresh: null, scheduleRefresh: null, scheduleRoot: null, setRefreshHandler: null, getCurrentFiber: null, reconcilerVersion: "18.2.0-next-9e3b772b8-20220608" };
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u" && (wl = __REACT_DEVTOOLS_GLOBAL_HOOK__, !wl.isDisabled && wl.supportsFiber))
      try {
        kc = wl.inject(vl), lc = wl;
      } catch {
      }
    var wl;
    exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl;
    exports.createPortal = function(a4, b3) {
      var c3 = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
      if (!ol(b3))
        throw Error(p2(200));
      return dl(a4, b3, null, c3);
    };
    exports.createRoot = function(a4, b3) {
      if (!ol(a4))
        throw Error(p2(299));
      var c3 = !1, d4 = "", e3 = ll;
      return b3 != null && (b3.unstable_strictMode === !0 && (c3 = !0), b3.identifierPrefix !== void 0 && (d4 = b3.identifierPrefix), b3.onRecoverableError !== void 0 && (e3 = b3.onRecoverableError)), b3 = cl(a4, 1, !1, null, null, c3, !1, d4, e3), a4[uf] = b3.current, sf(a4.nodeType === 8 ? a4.parentNode : a4), new ml(b3);
    };
    exports.findDOMNode = function(a4) {
      if (a4 == null)
        return null;
      if (a4.nodeType === 1)
        return a4;
      var b3 = a4._reactInternals;
      if (b3 === void 0)
        throw typeof a4.render == "function" ? Error(p2(188)) : (a4 = Object.keys(a4).join(","), Error(p2(268, a4)));
      return a4 = Zb(b3), a4 = a4 === null ? null : a4.stateNode, a4;
    };
    exports.flushSync = function(a4) {
      return Sk(a4);
    };
    exports.hydrate = function(a4, b3, c3) {
      if (!pl(b3))
        throw Error(p2(200));
      return sl(null, a4, b3, !0, c3);
    };
    exports.hydrateRoot = function(a4, b3, c3) {
      if (!ol(a4))
        throw Error(p2(405));
      var d4 = c3 != null && c3.hydratedSources || null, e3 = !1, f2 = "", g2 = ll;
      if (c3 != null && (c3.unstable_strictMode === !0 && (e3 = !0), c3.identifierPrefix !== void 0 && (f2 = c3.identifierPrefix), c3.onRecoverableError !== void 0 && (g2 = c3.onRecoverableError)), b3 = fl(b3, null, a4, 1, c3 ?? null, e3, !1, f2, g2), a4[uf] = b3.current, sf(a4), d4)
        for (a4 = 0; a4 < d4.length; a4++)
          c3 = d4[a4], e3 = c3._getVersion, e3 = e3(c3._source), b3.mutableSourceEagerHydrationData == null ? b3.mutableSourceEagerHydrationData = [c3, e3] : b3.mutableSourceEagerHydrationData.push(
            c3,
            e3
          );
      return new nl(b3);
    };
    exports.render = function(a4, b3, c3) {
      if (!pl(b3))
        throw Error(p2(200));
      return sl(null, a4, b3, !1, c3);
    };
    exports.unmountComponentAtNode = function(a4) {
      if (!pl(a4))
        throw Error(p2(40));
      return a4._reactRootContainer ? (Sk(function() {
        sl(null, null, a4, !1, function() {
          a4._reactRootContainer = null, a4[uf] = null;
        });
      }), !0) : !1;
    };
    exports.unstable_batchedUpdates = Rk;
    exports.unstable_renderSubtreeIntoContainer = function(a4, b3, c3, d4) {
      if (!pl(c3))
        throw Error(p2(200));
      if (a4 == null || a4._reactInternals === void 0)
        throw Error(p2(38));
      return sl(a4, b3, c3, !1, d4);
    };
    exports.version = "18.2.0-next-9e3b772b8-20220608";
  }
});

// ../../node_modules/react-dom/index.js
var require_react_dom = __commonJS({
  "../../node_modules/react-dom/index.js"(exports, module) {
    "use strict";
    function checkDCE() {
      if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"))
        try {
          __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
        } catch (err) {
          console.error(err);
        }
    }
    checkDCE(), module.exports = require_react_dom_production_min();
  }
});

// ../../node_modules/react-router-dom/dist/index.js
var dist_exports2 = {};
__export(dist_exports2, {
  AbortedDeferredError: () => AbortedDeferredError2,
  Await: () => Await,
  BrowserRouter: () => BrowserRouter,
  Form: () => Form,
  HashRouter: () => HashRouter,
  Link: () => Link,
  MemoryRouter: () => MemoryRouter,
  NavLink: () => NavLink,
  Navigate: () => Navigate,
  NavigationType: () => Action2,
  Outlet: () => Outlet,
  Route: () => Route,
  Router: () => Router,
  RouterProvider: () => RouterProvider2,
  Routes: () => Routes,
  ScrollRestoration: () => ScrollRestoration,
  UNSAFE_DataRouterContext: () => DataRouterContext,
  UNSAFE_DataRouterStateContext: () => DataRouterStateContext,
  UNSAFE_FetchersContext: () => FetchersContext,
  UNSAFE_LocationContext: () => LocationContext,
  UNSAFE_NavigationContext: () => NavigationContext,
  UNSAFE_RouteContext: () => RouteContext,
  UNSAFE_ViewTransitionContext: () => ViewTransitionContext,
  UNSAFE_useRouteId: () => useRouteId,
  UNSAFE_useScrollRestoration: () => useScrollRestoration,
  createBrowserRouter: () => createBrowserRouter,
  createHashRouter: () => createHashRouter,
  createMemoryRouter: () => createMemoryRouter,
  createPath: () => createPath2,
  createRoutesFromChildren: () => createRoutesFromChildren,
  createRoutesFromElements: () => createRoutesFromChildren,
  createSearchParams: () => createSearchParams,
  defer: () => defer4,
  generatePath: () => generatePath,
  isRouteErrorResponse: () => isRouteErrorResponse2,
  json: () => json4,
  matchPath: () => matchPath2,
  matchRoutes: () => matchRoutes2,
  parsePath: () => parsePath2,
  redirect: () => redirect4,
  redirectDocument: () => redirectDocument3,
  renderMatches: () => renderMatches,
  resolvePath: () => resolvePath2,
  unstable_HistoryRouter: () => HistoryRouter,
  unstable_usePrompt: () => usePrompt,
  unstable_useViewTransitionState: () => useViewTransitionState,
  useActionData: () => useActionData,
  useAsyncError: () => useAsyncError,
  useAsyncValue: () => useAsyncValue,
  useBeforeUnload: () => useBeforeUnload,
  useBlocker: () => useBlocker,
  useFetcher: () => useFetcher,
  useFetchers: () => useFetchers,
  useFormAction: () => useFormAction,
  useHref: () => useHref,
  useInRouterContext: () => useInRouterContext,
  useLinkClickHandler: () => useLinkClickHandler,
  useLoaderData: () => useLoaderData,
  useLocation: () => useLocation,
  useMatch: () => useMatch,
  useMatches: () => useMatches,
  useNavigate: () => useNavigate,
  useNavigation: () => useNavigation,
  useNavigationType: () => useNavigationType,
  useOutlet: () => useOutlet,
  useOutletContext: () => useOutletContext,
  useParams: () => useParams,
  useResolvedPath: () => useResolvedPath,
  useRevalidator: () => useRevalidator,
  useRouteError: () => useRouteError,
  useRouteLoaderData: () => useRouteLoaderData,
  useRoutes: () => useRoutes,
  useSearchParams: () => useSearchParams,
  useSubmit: () => useSubmit
});
function _extends4() {
  return _extends4 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends4.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {}, sourceKeys = Object.keys(source), key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++)
    key = sourceKeys[i3], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
function isHtmlElement(object) {
  return object != null && typeof object.tagName == "string";
}
function isButtonElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "button";
}
function isFormElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "form";
}
function isInputElement(object) {
  return isHtmlElement(object) && object.tagName.toLowerCase() === "input";
}
function isModifiedEvent(event) {
  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);
}
function shouldProcessLinkClick(event, target) {
  return event.button === 0 && // Ignore everything but left clicks
  (!target || target === "_self") && // Let browser handle "target=_blank" etc.
  !isModifiedEvent(event);
}
function createSearchParams(init) {
  return init === void 0 && (init = ""), new URLSearchParams(typeof init == "string" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {
    let value = init[key];
    return memo2.concat(Array.isArray(value) ? value.map((v2) => [key, v2]) : [[key, value]]);
  }, []));
}
function getSearchParamsForLocation(locationSearch, defaultSearchParams) {
  let searchParams = createSearchParams(locationSearch);
  return defaultSearchParams && defaultSearchParams.forEach((_, key) => {
    searchParams.has(key) || defaultSearchParams.getAll(key).forEach((value) => {
      searchParams.append(key, value);
    });
  }), searchParams;
}
function isFormDataSubmitterSupported() {
  if (_formDataSupportsSubmitter === null)
    try {
      new FormData(
        document.createElement("form"),
        // @ts-expect-error if FormData supports the submitter parameter, this will throw
        0
      ), _formDataSupportsSubmitter = !1;
    } catch {
      _formDataSupportsSubmitter = !0;
    }
  return _formDataSupportsSubmitter;
}
function getFormEncType(encType) {
  return encType != null && !supportedFormEncTypes.has(encType) ? null : encType;
}
function getFormSubmissionInfo(target, basename) {
  let method, action, encType, formData, body;
  if (isFormElement(target)) {
    let attr = target.getAttribute("action");
    action = attr ? stripBasename2(attr, basename) : null, method = target.getAttribute("method") || defaultMethod, encType = getFormEncType(target.getAttribute("enctype")) || defaultEncType, formData = new FormData(target);
  } else if (isButtonElement(target) || isInputElement(target) && (target.type === "submit" || target.type === "image")) {
    let form = target.form;
    if (form == null)
      throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');
    let attr = target.getAttribute("formaction") || form.getAttribute("action");
    if (action = attr ? stripBasename2(attr, basename) : null, method = target.getAttribute("formmethod") || form.getAttribute("method") || defaultMethod, encType = getFormEncType(target.getAttribute("formenctype")) || getFormEncType(form.getAttribute("enctype")) || defaultEncType, formData = new FormData(form, target), !isFormDataSubmitterSupported()) {
      let {
        name,
        type,
        value
      } = target;
      if (type === "image") {
        let prefix = name ? name + "." : "";
        formData.append(prefix + "x", "0"), formData.append(prefix + "y", "0");
      } else
        name && formData.append(name, value);
    }
  } else {
    if (isHtmlElement(target))
      throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');
    method = defaultMethod, action = null, encType = defaultEncType, body = target;
  }
  return formData && encType === "text/plain" && (body = formData, formData = void 0), {
    action,
    method: method.toLowerCase(),
    encType,
    formData,
    body
  };
}
function createBrowserRouter(routes2, opts) {
  return createRouter({
    basename: opts?.basename,
    future: _extends4({}, opts?.future, {
      v7_prependBasename: !0
    }),
    history: createBrowserHistory({
      window: opts?.window
    }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes: routes2,
    mapRouteProperties,
    window: opts?.window
  }).initialize();
}
function createHashRouter(routes2, opts) {
  return createRouter({
    basename: opts?.basename,
    future: _extends4({}, opts?.future, {
      v7_prependBasename: !0
    }),
    history: createHashHistory({
      window: opts?.window
    }),
    hydrationData: opts?.hydrationData || parseHydrationData(),
    routes: routes2,
    mapRouteProperties,
    window: opts?.window
  }).initialize();
}
function parseHydrationData() {
  var _window;
  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;
  return state && state.errors && (state = _extends4({}, state, {
    errors: deserializeErrors(state.errors)
  })), state;
}
function deserializeErrors(errors) {
  if (!errors)
    return null;
  let entries = Object.entries(errors), serialized = {};
  for (let [key, val] of entries)
    if (val && val.__type === "RouteErrorResponse")
      serialized[key] = new ErrorResponseImpl2(val.status, val.statusText, val.data, val.internal === !0);
    else if (val && val.__type === "Error") {
      if (val.__subType) {
        let ErrorConstructor = window[val.__subType];
        if (typeof ErrorConstructor == "function")
          try {
            let error = new ErrorConstructor(val.message);
            error.stack = "", serialized[key] = error;
          } catch {
          }
      }
      if (serialized[key] == null) {
        let error = new Error(val.message);
        error.stack = "", serialized[key] = error;
      }
    } else
      serialized[key] = val;
  return serialized;
}
function startTransitionSafe(cb) {
  startTransitionImpl2 ? startTransitionImpl2(cb) : cb();
}
function flushSyncSafe(cb) {
  flushSyncImpl ? flushSyncImpl(cb) : cb();
}
function RouterProvider2(_ref) {
  let {
    fallbackElement,
    router,
    future: future2
  } = _ref, [state, setStateImpl] = React2.useState(router.state), [pendingState, setPendingState] = React2.useState(), [vtContext, setVtContext] = React2.useState({
    isTransitioning: !1
  }), [renderDfd, setRenderDfd] = React2.useState(), [transition, setTransition] = React2.useState(), [interruption, setInterruption] = React2.useState(), fetcherData = React2.useRef(/* @__PURE__ */ new Map()), {
    v7_startTransition
  } = future2 || {}, optInStartTransition = React2.useCallback((cb) => {
    v7_startTransition ? startTransitionSafe(cb) : cb();
  }, [v7_startTransition]), setState = React2.useCallback((newState, _ref2) => {
    let {
      deletedFetchers,
      unstable_flushSync: flushSync2,
      unstable_viewTransitionOpts: viewTransitionOpts
    } = _ref2;
    deletedFetchers.forEach((key) => fetcherData.current.delete(key)), newState.fetchers.forEach((fetcher, key) => {
      fetcher.data !== void 0 && fetcherData.current.set(key, fetcher.data);
    });
    let isViewTransitionUnavailable = router.window == null || typeof router.window.document.startViewTransition != "function";
    if (!viewTransitionOpts || isViewTransitionUnavailable) {
      flushSync2 ? flushSyncSafe(() => setStateImpl(newState)) : optInStartTransition(() => setStateImpl(newState));
      return;
    }
    if (flushSync2) {
      flushSyncSafe(() => {
        transition && (renderDfd && renderDfd.resolve(), transition.skipTransition()), setVtContext({
          isTransitioning: !0,
          flushSync: !0,
          currentLocation: viewTransitionOpts.currentLocation,
          nextLocation: viewTransitionOpts.nextLocation
        });
      });
      let t4 = router.window.document.startViewTransition(() => {
        flushSyncSafe(() => setStateImpl(newState));
      });
      t4.finished.finally(() => {
        flushSyncSafe(() => {
          setRenderDfd(void 0), setTransition(void 0), setPendingState(void 0), setVtContext({
            isTransitioning: !1
          });
        });
      }), flushSyncSafe(() => setTransition(t4));
      return;
    }
    transition ? (renderDfd && renderDfd.resolve(), transition.skipTransition(), setInterruption({
      state: newState,
      currentLocation: viewTransitionOpts.currentLocation,
      nextLocation: viewTransitionOpts.nextLocation
    })) : (setPendingState(newState), setVtContext({
      isTransitioning: !0,
      flushSync: !1,
      currentLocation: viewTransitionOpts.currentLocation,
      nextLocation: viewTransitionOpts.nextLocation
    }));
  }, [router.window, transition, renderDfd, fetcherData, optInStartTransition]);
  React2.useLayoutEffect(() => router.subscribe(setState), [router, setState]), React2.useEffect(() => {
    vtContext.isTransitioning && !vtContext.flushSync && setRenderDfd(new Deferred());
  }, [vtContext]), React2.useEffect(() => {
    if (renderDfd && pendingState && router.window) {
      let newState = pendingState, renderPromise = renderDfd.promise, transition2 = router.window.document.startViewTransition(async () => {
        optInStartTransition(() => setStateImpl(newState)), await renderPromise;
      });
      transition2.finished.finally(() => {
        setRenderDfd(void 0), setTransition(void 0), setPendingState(void 0), setVtContext({
          isTransitioning: !1
        });
      }), setTransition(transition2);
    }
  }, [optInStartTransition, pendingState, renderDfd, router.window]), React2.useEffect(() => {
    renderDfd && pendingState && state.location.key === pendingState.location.key && renderDfd.resolve();
  }, [renderDfd, transition, state.location, pendingState]), React2.useEffect(() => {
    !vtContext.isTransitioning && interruption && (setPendingState(interruption.state), setVtContext({
      isTransitioning: !0,
      flushSync: !1,
      currentLocation: interruption.currentLocation,
      nextLocation: interruption.nextLocation
    }), setInterruption(void 0));
  }, [vtContext.isTransitioning, interruption]), React2.useEffect(() => {
  }, []);
  let navigator2 = React2.useMemo(() => ({
    createHref: router.createHref,
    encodeLocation: router.encodeLocation,
    go: (n2) => router.navigate(n2),
    push: (to, state2, opts) => router.navigate(to, {
      state: state2,
      preventScrollReset: opts?.preventScrollReset
    }),
    replace: (to, state2, opts) => router.navigate(to, {
      replace: !0,
      state: state2,
      preventScrollReset: opts?.preventScrollReset
    })
  }), [router]), basename = router.basename || "/", dataRouterContext = React2.useMemo(() => ({
    router,
    navigator: navigator2,
    static: !1,
    basename
  }), [router, navigator2, basename]);
  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(DataRouterContext.Provider, {
    value: dataRouterContext
  }, /* @__PURE__ */ React2.createElement(DataRouterStateContext.Provider, {
    value: state
  }, /* @__PURE__ */ React2.createElement(FetchersContext.Provider, {
    value: fetcherData.current
  }, /* @__PURE__ */ React2.createElement(ViewTransitionContext.Provider, {
    value: vtContext
  }, /* @__PURE__ */ React2.createElement(Router, {
    basename,
    location: state.location,
    navigationType: state.historyAction,
    navigator: navigator2,
    future: {
      v7_relativeSplatPath: router.future.v7_relativeSplatPath
    }
  }, state.initialized || router.future.v7_partialHydration ? /* @__PURE__ */ React2.createElement(DataRoutes2, {
    routes: router.routes,
    future: router.future,
    state
  }) : fallbackElement))))), null);
}
function DataRoutes2(_ref3) {
  let {
    routes: routes2,
    future: future2,
    state
  } = _ref3;
  return useRoutesImpl(routes2, void 0, state, future2);
}
function BrowserRouter(_ref4) {
  let {
    basename,
    children,
    future: future2,
    window: window2
  } = _ref4, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createBrowserHistory({
    window: window2,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setStateImpl] = React2.useState({
    action: history.action,
    location: history.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history.listen(setState), [history, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future: future2
  });
}
function HashRouter(_ref5) {
  let {
    basename,
    children,
    future: future2,
    window: window2
  } = _ref5, historyRef = React2.useRef();
  historyRef.current == null && (historyRef.current = createHashHistory({
    window: window2,
    v5Compat: !0
  }));
  let history = historyRef.current, [state, setStateImpl] = React2.useState({
    action: history.action,
    location: history.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history.listen(setState), [history, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future: future2
  });
}
function HistoryRouter(_ref6) {
  let {
    basename,
    children,
    future: future2,
    history
  } = _ref6, [state, setStateImpl] = React2.useState({
    action: history.action,
    location: history.location
  }), {
    v7_startTransition
  } = future2 || {}, setState = React2.useCallback((newState) => {
    v7_startTransition && startTransitionImpl2 ? startTransitionImpl2(() => setStateImpl(newState)) : setStateImpl(newState);
  }, [setStateImpl, v7_startTransition]);
  return React2.useLayoutEffect(() => history.listen(setState), [history, setState]), /* @__PURE__ */ React2.createElement(Router, {
    basename,
    children,
    location: state.location,
    navigationType: state.action,
    navigator: history,
    future: future2
  });
}
function ScrollRestoration(_ref10) {
  let {
    getKey,
    storageKey
  } = _ref10;
  return useScrollRestoration({
    getKey,
    storageKey
  }), null;
}
function useDataRouterContext2(hookName) {
  let ctx = React2.useContext(DataRouterContext);
  return ctx || invariant3(!1), ctx;
}
function useDataRouterState2(hookName) {
  let state = React2.useContext(DataRouterStateContext);
  return state || invariant3(!1), state;
}
function useLinkClickHandler(to, _temp) {
  let {
    target,
    replace: replaceProp,
    state,
    preventScrollReset,
    relative,
    unstable_viewTransition
  } = _temp === void 0 ? {} : _temp, navigate = useNavigate(), location = useLocation(), path = useResolvedPath(to, {
    relative
  });
  return React2.useCallback((event) => {
    if (shouldProcessLinkClick(event, target)) {
      event.preventDefault();
      let replace = replaceProp !== void 0 ? replaceProp : createPath2(location) === createPath2(path);
      navigate(to, {
        replace,
        state,
        preventScrollReset,
        relative,
        unstable_viewTransition
      });
    }
  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative, unstable_viewTransition]);
}
function useSearchParams(defaultInit) {
  let defaultSearchParamsRef = React2.useRef(createSearchParams(defaultInit)), hasSetSearchParamsRef = React2.useRef(!1), location = useLocation(), searchParams = React2.useMemo(() => (
    // Only merge in the defaults if we haven't yet called setSearchParams.
    // Once we call that we want those to take precedence, otherwise you can't
    // remove a param with setSearchParams({}) if it has an initial value
    getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current)
  ), [location.search]), navigate = useNavigate(), setSearchParams = React2.useCallback((nextInit, navigateOptions) => {
    let newSearchParams = createSearchParams(typeof nextInit == "function" ? nextInit(searchParams) : nextInit);
    hasSetSearchParamsRef.current = !0, navigate("?" + newSearchParams, navigateOptions);
  }, [navigate, searchParams]);
  return [searchParams, setSearchParams];
}
function validateClientSideSubmission() {
  if (typeof document > "u")
    throw new Error("You are calling submit during the server render. Try calling submit within a `useEffect` or callback instead.");
}
function useSubmit() {
  let {
    router
  } = useDataRouterContext2(DataRouterHook2.UseSubmit), {
    basename
  } = React2.useContext(NavigationContext), currentRouteId = useRouteId();
  return React2.useCallback(function(target, options) {
    options === void 0 && (options = {}), validateClientSideSubmission();
    let {
      action,
      method,
      encType,
      formData,
      body
    } = getFormSubmissionInfo(target, basename);
    if (options.navigate === !1) {
      let key = options.fetcherKey || getUniqueFetcherId();
      router.fetch(key, currentRouteId, options.action || action, {
        preventScrollReset: options.preventScrollReset,
        formData,
        body,
        formMethod: options.method || method,
        formEncType: options.encType || encType,
        unstable_flushSync: options.unstable_flushSync
      });
    } else
      router.navigate(options.action || action, {
        preventScrollReset: options.preventScrollReset,
        formData,
        body,
        formMethod: options.method || method,
        formEncType: options.encType || encType,
        replace: options.replace,
        state: options.state,
        fromRouteId: currentRouteId,
        unstable_flushSync: options.unstable_flushSync,
        unstable_viewTransition: options.unstable_viewTransition
      });
  }, [router, basename, currentRouteId]);
}
function useFormAction(action, _temp2) {
  let {
    relative
  } = _temp2 === void 0 ? {} : _temp2, {
    basename
  } = React2.useContext(NavigationContext), routeContext = React2.useContext(RouteContext);
  routeContext || invariant3(!1);
  let [match2] = routeContext.matches.slice(-1), path = _extends4({}, useResolvedPath(action || ".", {
    relative
  })), location = useLocation();
  if (action == null) {
    path.search = location.search;
    let params = new URLSearchParams(path.search);
    params.has("index") && params.get("index") === "" && (params.delete("index"), path.search = params.toString() ? "?" + params.toString() : "");
  }
  return (!action || action === ".") && match2.route.index && (path.search = path.search ? path.search.replace(/^\?/, "?index&") : "?index"), basename !== "/" && (path.pathname = path.pathname === "/" ? basename : joinPaths2([basename, path.pathname])), createPath2(path);
}
function useFetcher(_temp3) {
  var _route$matches;
  let {
    key
  } = _temp3 === void 0 ? {} : _temp3, {
    router
  } = useDataRouterContext2(DataRouterHook2.UseFetcher), state = useDataRouterState2(DataRouterStateHook2.UseFetcher), fetcherData = React2.useContext(FetchersContext), route = React2.useContext(RouteContext), routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;
  fetcherData || invariant3(!1), route || invariant3(!1), routeId == null && invariant3(!1);
  let [fetcherKey, setFetcherKey] = React2.useState(key || "");
  key && key !== fetcherKey ? setFetcherKey(key) : fetcherKey || setFetcherKey(getUniqueFetcherId()), React2.useEffect(() => (router.getFetcher(fetcherKey), () => {
    router.deleteFetcher(fetcherKey);
  }), [router, fetcherKey]);
  let load = React2.useCallback((href, opts) => {
    routeId || invariant3(!1), router.fetch(fetcherKey, routeId, href, opts);
  }, [fetcherKey, routeId, router]), submitImpl = useSubmit(), submit = React2.useCallback((target, opts) => {
    submitImpl(target, _extends4({}, opts, {
      navigate: !1,
      fetcherKey
    }));
  }, [fetcherKey, submitImpl]), FetcherForm = React2.useMemo(() => /* @__PURE__ */ React2.forwardRef((props, ref) => /* @__PURE__ */ React2.createElement(Form, _extends4({}, props, {
    navigate: !1,
    fetcherKey,
    ref
  }))), [fetcherKey]), fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER, data = fetcherData.get(fetcherKey);
  return React2.useMemo(() => _extends4({
    Form: FetcherForm,
    submit,
    load
  }, fetcher, {
    data
  }), [FetcherForm, submit, load, fetcher, data]);
}
function useFetchers() {
  let state = useDataRouterState2(DataRouterStateHook2.UseFetchers);
  return Array.from(state.fetchers.entries()).map((_ref11) => {
    let [key, fetcher] = _ref11;
    return _extends4({}, fetcher, {
      key
    });
  });
}
function useScrollRestoration(_temp4) {
  let {
    getKey,
    storageKey
  } = _temp4 === void 0 ? {} : _temp4, {
    router
  } = useDataRouterContext2(DataRouterHook2.UseScrollRestoration), {
    restoreScrollPosition,
    preventScrollReset
  } = useDataRouterState2(DataRouterStateHook2.UseScrollRestoration), {
    basename
  } = React2.useContext(NavigationContext), location = useLocation(), matches = useMatches(), navigation = useNavigation();
  React2.useEffect(() => (window.history.scrollRestoration = "manual", () => {
    window.history.scrollRestoration = "auto";
  }), []), usePageHide(React2.useCallback(() => {
    if (navigation.state === "idle") {
      let key = (getKey ? getKey(location, matches) : null) || location.key;
      savedScrollPositions[key] = window.scrollY;
    }
    try {
      sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));
    } catch {
    }
    window.history.scrollRestoration = "auto";
  }, [storageKey, getKey, navigation.state, location, matches])), typeof document < "u" && (React2.useLayoutEffect(() => {
    try {
      let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);
      sessionPositions && (savedScrollPositions = JSON.parse(sessionPositions));
    } catch {
    }
  }, [storageKey]), React2.useLayoutEffect(() => {
    let getKeyWithoutBasename = getKey && basename !== "/" ? (location2, matches2) => getKey(
      // Strip the basename to match useLocation()
      _extends4({}, location2, {
        pathname: stripBasename2(location2.pathname, basename) || location2.pathname
      }),
      matches2
    ) : getKey, disableScrollRestoration = router?.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);
    return () => disableScrollRestoration && disableScrollRestoration();
  }, [router, basename, getKey]), React2.useLayoutEffect(() => {
    if (restoreScrollPosition !== !1) {
      if (typeof restoreScrollPosition == "number") {
        window.scrollTo(0, restoreScrollPosition);
        return;
      }
      if (location.hash) {
        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));
        if (el) {
          el.scrollIntoView();
          return;
        }
      }
      preventScrollReset !== !0 && window.scrollTo(0, 0);
    }
  }, [location, restoreScrollPosition, preventScrollReset]));
}
function useBeforeUnload(callback, options) {
  let {
    capture
  } = options || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("beforeunload", callback, opts), () => {
      window.removeEventListener("beforeunload", callback, opts);
    };
  }, [callback, capture]);
}
function usePageHide(callback, options) {
  let {
    capture
  } = options || {};
  React2.useEffect(() => {
    let opts = capture != null ? {
      capture
    } : void 0;
    return window.addEventListener("pagehide", callback, opts), () => {
      window.removeEventListener("pagehide", callback, opts);
    };
  }, [callback, capture]);
}
function usePrompt(_ref12) {
  let {
    when,
    message
  } = _ref12, blocker = useBlocker(when);
  React2.useEffect(() => {
    blocker.state === "blocked" && (window.confirm(message) ? setTimeout(blocker.proceed, 0) : blocker.reset());
  }, [blocker, message]), React2.useEffect(() => {
    blocker.state === "blocked" && !when && blocker.reset();
  }, [blocker, when]);
}
function useViewTransitionState(to, opts) {
  opts === void 0 && (opts = {});
  let vtContext = React2.useContext(ViewTransitionContext);
  vtContext == null && invariant3(!1);
  let {
    basename
  } = useDataRouterContext2(DataRouterHook2.useViewTransitionState), path = useResolvedPath(to, {
    relative: opts.relative
  });
  if (!vtContext.isTransitioning)
    return !1;
  let currentPath = stripBasename2(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname, nextPath = stripBasename2(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;
  return matchPath2(path.pathname, nextPath) != null || matchPath2(path.pathname, currentPath) != null;
}
var React2, ReactDOM, defaultMethod, defaultEncType, _formDataSupportsSubmitter, supportedFormEncTypes, _excluded, _excluded2, _excluded3, ViewTransitionContext, FetchersContext, START_TRANSITION2, startTransitionImpl2, FLUSH_SYNC, flushSyncImpl, Deferred, isBrowser, ABSOLUTE_URL_REGEX3, Link, NavLink, Form, DataRouterHook2, DataRouterStateHook2, fetcherId, getUniqueFetcherId, SCROLL_RESTORATION_STORAGE_KEY, savedScrollPositions, init_dist2 = __esm({
  "../../node_modules/react-router-dom/dist/index.js"() {
    React2 = __toESM(require_react()), ReactDOM = __toESM(require_react_dom());
    init_dist();
    init_dist();
    init_router2();
    defaultMethod = "get", defaultEncType = "application/x-www-form-urlencoded";
    _formDataSupportsSubmitter = null;
    supportedFormEncTypes = /* @__PURE__ */ new Set(["application/x-www-form-urlencoded", "multipart/form-data", "text/plain"]);
    _excluded = ["onClick", "relative", "reloadDocument", "replace", "state", "target", "to", "preventScrollReset", "unstable_viewTransition"], _excluded2 = ["aria-current", "caseSensitive", "className", "end", "style", "to", "unstable_viewTransition", "children"], _excluded3 = ["fetcherKey", "navigate", "reloadDocument", "replace", "state", "method", "action", "onSubmit", "relative", "preventScrollReset", "unstable_viewTransition"];
    ViewTransitionContext = /* @__PURE__ */ React2.createContext({
      isTransitioning: !1
    }), FetchersContext = /* @__PURE__ */ React2.createContext(/* @__PURE__ */ new Map()), START_TRANSITION2 = "startTransition", startTransitionImpl2 = React2[START_TRANSITION2], FLUSH_SYNC = "flushSync", flushSyncImpl = ReactDOM[FLUSH_SYNC];
    Deferred = class {
      constructor() {
        this.status = "pending", this.promise = new Promise((resolve, reject) => {
          this.resolve = (value) => {
            this.status === "pending" && (this.status = "resolved", resolve(value));
          }, this.reject = (reason) => {
            this.status === "pending" && (this.status = "rejected", reject(reason));
          };
        });
      }
    };
    isBrowser = typeof window < "u" && typeof window.document < "u" && typeof window.document.createElement < "u", ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, Link = /* @__PURE__ */ React2.forwardRef(function(_ref7, ref) {
      let {
        onClick,
        relative,
        reloadDocument,
        replace,
        state,
        target,
        to,
        preventScrollReset,
        unstable_viewTransition
      } = _ref7, rest = _objectWithoutPropertiesLoose(_ref7, _excluded), {
        basename
      } = React2.useContext(NavigationContext), absoluteHref, isExternal = !1;
      if (typeof to == "string" && ABSOLUTE_URL_REGEX3.test(to) && (absoluteHref = to, isBrowser))
        try {
          let currentUrl = new URL(window.location.href), targetUrl = to.startsWith("//") ? new URL(currentUrl.protocol + to) : new URL(to), path = stripBasename2(targetUrl.pathname, basename);
          targetUrl.origin === currentUrl.origin && path != null ? to = path + targetUrl.search + targetUrl.hash : isExternal = !0;
        } catch {
        }
      let href = useHref(to, {
        relative
      }), internalOnClick = useLinkClickHandler(to, {
        replace,
        state,
        target,
        preventScrollReset,
        relative,
        unstable_viewTransition
      });
      function handleClick(event) {
        onClick && onClick(event), event.defaultPrevented || internalOnClick(event);
      }
      return (
        // eslint-disable-next-line jsx-a11y/anchor-has-content
        /* @__PURE__ */ React2.createElement("a", _extends4({}, rest, {
          href: absoluteHref || href,
          onClick: isExternal || reloadDocument ? onClick : handleClick,
          ref,
          target
        }))
      );
    }), NavLink = /* @__PURE__ */ React2.forwardRef(function(_ref8, ref) {
      let {
        "aria-current": ariaCurrentProp = "page",
        caseSensitive = !1,
        className: classNameProp = "",
        end = !1,
        style: styleProp,
        to,
        unstable_viewTransition,
        children
      } = _ref8, rest = _objectWithoutPropertiesLoose(_ref8, _excluded2), path = useResolvedPath(to, {
        relative: rest.relative
      }), location = useLocation(), routerState = React2.useContext(DataRouterStateContext), {
        navigator: navigator2
      } = React2.useContext(NavigationContext), isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static
      // eslint-disable-next-line react-hooks/rules-of-hooks
      useViewTransitionState(path) && unstable_viewTransition === !0, toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname, locationPathname = location.pathname, nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;
      caseSensitive || (locationPathname = locationPathname.toLowerCase(), nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null, toPathname = toPathname.toLowerCase());
      let endSlashPosition = toPathname !== "/" && toPathname.endsWith("/") ? toPathname.length - 1 : toPathname.length, isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === "/", isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === "/"), renderProps = {
        isActive,
        isPending,
        isTransitioning
      }, ariaCurrent = isActive ? ariaCurrentProp : void 0, className;
      typeof classNameProp == "function" ? className = classNameProp(renderProps) : className = [classNameProp, isActive ? "active" : null, isPending ? "pending" : null, isTransitioning ? "transitioning" : null].filter(Boolean).join(" ");
      let style = typeof styleProp == "function" ? styleProp(renderProps) : styleProp;
      return /* @__PURE__ */ React2.createElement(Link, _extends4({}, rest, {
        "aria-current": ariaCurrent,
        className,
        ref,
        style,
        to,
        unstable_viewTransition
      }), typeof children == "function" ? children(renderProps) : children);
    }), Form = /* @__PURE__ */ React2.forwardRef((_ref9, forwardedRef) => {
      let {
        fetcherKey,
        navigate,
        reloadDocument,
        replace,
        state,
        method = defaultMethod,
        action,
        onSubmit,
        relative,
        preventScrollReset,
        unstable_viewTransition
      } = _ref9, props = _objectWithoutPropertiesLoose(_ref9, _excluded3), submit = useSubmit(), formAction = useFormAction(action, {
        relative
      }), formMethod = method.toLowerCase() === "get" ? "get" : "post";
      return /* @__PURE__ */ React2.createElement("form", _extends4({
        ref: forwardedRef,
        method: formMethod,
        action: formAction,
        onSubmit: reloadDocument ? onSubmit : (event) => {
          if (onSubmit && onSubmit(event), event.defaultPrevented)
            return;
          event.preventDefault();
          let submitter = event.nativeEvent.submitter, submitMethod = submitter?.getAttribute("formmethod") || method;
          submit(submitter || event.currentTarget, {
            fetcherKey,
            method: submitMethod,
            navigate,
            replace,
            state,
            relative,
            preventScrollReset,
            unstable_viewTransition
          });
        }
      }, props));
    });
    (function(DataRouterHook3) {
      DataRouterHook3.UseScrollRestoration = "useScrollRestoration", DataRouterHook3.UseSubmit = "useSubmit", DataRouterHook3.UseSubmitFetcher = "useSubmitFetcher", DataRouterHook3.UseFetcher = "useFetcher", DataRouterHook3.useViewTransitionState = "useViewTransitionState";
    })(DataRouterHook2 || (DataRouterHook2 = {}));
    (function(DataRouterStateHook3) {
      DataRouterStateHook3.UseFetcher = "useFetcher", DataRouterStateHook3.UseFetchers = "useFetchers", DataRouterStateHook3.UseScrollRestoration = "useScrollRestoration";
    })(DataRouterStateHook2 || (DataRouterStateHook2 = {}));
    fetcherId = 0, getUniqueFetcherId = () => "__" + String(++fetcherId) + "__";
    SCROLL_RESTORATION_STORAGE_KEY = "react-router-scroll-positions", savedScrollPositions = {};
  }
});

// ../../node_modules/react-router-dom/server.js
var require_server = __commonJS({
  "../../node_modules/react-router-dom/server.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    var React54 = require_react(), router = (init_router2(), __toCommonJS(router_exports)), reactRouter = (init_dist(), __toCommonJS(dist_exports)), reactRouterDom = (init_dist2(), __toCommonJS(dist_exports2));
    function _interopNamespace(e3) {
      if (e3 && e3.__esModule)
        return e3;
      var n2 = /* @__PURE__ */ Object.create(null);
      return e3 && Object.keys(e3).forEach(function(k3) {
        if (k3 !== "default") {
          var d4 = Object.getOwnPropertyDescriptor(e3, k3);
          Object.defineProperty(n2, k3, d4.get ? d4 : {
            enumerable: !0,
            get: function() {
              return e3[k3];
            }
          });
        }
      }), n2.default = e3, Object.freeze(n2);
    }
    var React__namespace = /* @__PURE__ */ _interopNamespace(React54);
    function StaticRouter({
      basename,
      children,
      location: locationProp = "/",
      future: future2
    }) {
      typeof locationProp == "string" && (locationProp = reactRouterDom.parsePath(locationProp));
      let action = router.Action.Pop, location = {
        pathname: locationProp.pathname || "/",
        search: locationProp.search || "",
        hash: locationProp.hash || "",
        state: locationProp.state || null,
        key: locationProp.key || "default"
      }, staticNavigator = getStatelessNavigator();
      return /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename,
        children,
        location,
        navigationType: action,
        navigator: staticNavigator,
        future: future2,
        static: !0
      });
    }
    function StaticRouterProvider2({
      context,
      router: router$1,
      hydrate: hydrate2 = !0,
      nonce
    }) {
      router$1 && context || router.UNSAFE_invariant(!1);
      let dataRouterContext = {
        router: router$1,
        navigator: getStatelessNavigator(),
        static: !0,
        staticContext: context,
        basename: context.basename || "/"
      }, fetchersContext = /* @__PURE__ */ new Map(), hydrateScript = "";
      if (hydrate2 !== !1) {
        let data = {
          loaderData: context.loaderData,
          actionData: context.actionData,
          errors: serializeErrors2(context.errors)
        };
        hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${htmlEscape(JSON.stringify(JSON.stringify(data)))});`;
      }
      let {
        state
      } = dataRouterContext.router;
      return /* @__PURE__ */ React__namespace.createElement(React__namespace.Fragment, null, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterContext.Provider, {
        value: dataRouterContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_DataRouterStateContext.Provider, {
        value: state
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_FetchersContext.Provider, {
        value: fetchersContext
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.UNSAFE_ViewTransitionContext.Provider, {
        value: {
          isTransitioning: !1
        }
      }, /* @__PURE__ */ React__namespace.createElement(reactRouterDom.Router, {
        basename: dataRouterContext.basename,
        location: state.location,
        navigationType: state.historyAction,
        navigator: dataRouterContext.navigator,
        static: dataRouterContext.static,
        future: {
          v7_relativeSplatPath: router$1.future.v7_relativeSplatPath
        }
      }, /* @__PURE__ */ React__namespace.createElement(DataRoutes3, {
        routes: router$1.routes,
        future: router$1.future,
        state
      })))))), hydrateScript ? /* @__PURE__ */ React__namespace.createElement("script", {
        suppressHydrationWarning: !0,
        nonce,
        dangerouslySetInnerHTML: {
          __html: hydrateScript
        }
      }) : null);
    }
    function DataRoutes3({
      routes: routes2,
      future: future2,
      state
    }) {
      return reactRouter.UNSAFE_useRoutesImpl(routes2, void 0, state, future2);
    }
    function serializeErrors2(errors) {
      if (!errors)
        return null;
      let entries = Object.entries(errors), serialized = {};
      for (let [key, val] of entries)
        router.isRouteErrorResponse(val) ? serialized[key] = {
          ...val,
          __type: "RouteErrorResponse"
        } : val instanceof Error ? serialized[key] = {
          message: val.message,
          __type: "Error",
          // If this is a subclass (i.e., ReferenceError), send up the type so we
          // can re-create the same type during hydration.
          ...val.name !== "Error" ? {
            __subType: val.name
          } : {}
        } : serialized[key] = val;
      return serialized;
    }
    function getStatelessNavigator() {
      return {
        createHref,
        encodeLocation,
        push(to) {
          throw new Error(`You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)})\` somewhere in your app.`);
        },
        replace(to) {
          throw new Error(`You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${JSON.stringify(to)}, { replace: true })\` somewhere in your app.`);
        },
        go(delta) {
          throw new Error(`You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \`navigate(${delta})\` somewhere in your app.`);
        },
        back() {
          throw new Error("You cannot use navigator.back() on the server because it is a stateless environment.");
        },
        forward() {
          throw new Error("You cannot use navigator.forward() on the server because it is a stateless environment.");
        }
      };
    }
    function createStaticHandler3(routes2, opts) {
      return router.createStaticHandler(routes2, {
        ...opts,
        mapRouteProperties: reactRouter.UNSAFE_mapRouteProperties
      });
    }
    function createStaticRouter2(routes2, context, opts = {}) {
      let manifest = {}, dataRoutes = router.UNSAFE_convertRoutesToDataRoutes(routes2, reactRouter.UNSAFE_mapRouteProperties, void 0, manifest), matches = context.matches.map((match2) => {
        let route = manifest[match2.route.id] || match2.route;
        return {
          ...match2,
          route
        };
      }), msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;
      return {
        get basename() {
          return context.basename;
        },
        get future() {
          return {
            v7_fetcherPersist: !1,
            v7_normalizeFormMethod: !1,
            v7_partialHydration: opts.future?.v7_partialHydration === !0,
            v7_prependBasename: !1,
            v7_relativeSplatPath: opts.future?.v7_relativeSplatPath === !0
          };
        },
        get state() {
          return {
            historyAction: router.Action.Pop,
            location: context.location,
            matches,
            loaderData: context.loaderData,
            actionData: context.actionData,
            errors: context.errors,
            initialized: !0,
            navigation: router.IDLE_NAVIGATION,
            restoreScrollPosition: null,
            preventScrollReset: !1,
            revalidation: "idle",
            fetchers: /* @__PURE__ */ new Map(),
            blockers: /* @__PURE__ */ new Map()
          };
        },
        get routes() {
          return dataRoutes;
        },
        get window() {
        },
        initialize() {
          throw msg("initialize");
        },
        subscribe() {
          throw msg("subscribe");
        },
        enableScrollRestoration() {
          throw msg("enableScrollRestoration");
        },
        navigate() {
          throw msg("navigate");
        },
        fetch() {
          throw msg("fetch");
        },
        revalidate() {
          throw msg("revalidate");
        },
        createHref,
        encodeLocation,
        getFetcher() {
          return router.IDLE_FETCHER;
        },
        deleteFetcher() {
          throw msg("deleteFetcher");
        },
        dispose() {
          throw msg("dispose");
        },
        getBlocker() {
          return router.IDLE_BLOCKER;
        },
        deleteBlocker() {
          throw msg("deleteBlocker");
        },
        _internalFetchControllers: /* @__PURE__ */ new Map(),
        _internalActiveDeferreds: /* @__PURE__ */ new Map(),
        _internalSetRoutes() {
          throw msg("_internalSetRoutes");
        }
      };
    }
    function createHref(to) {
      return typeof to == "string" ? to : reactRouterDom.createPath(to);
    }
    function encodeLocation(to) {
      let href = typeof to == "string" ? to : reactRouterDom.createPath(to), encoded = ABSOLUTE_URL_REGEX5.test(href) ? new URL(href) : new URL(href, "http://localhost");
      return {
        pathname: encoded.pathname,
        search: encoded.search,
        hash: encoded.hash
      };
    }
    var ABSOLUTE_URL_REGEX5 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, ESCAPE_LOOKUP3 = {
      "&": "\\u0026",
      ">": "\\u003e",
      "<": "\\u003c",
      "\u2028": "\\u2028",
      "\u2029": "\\u2029"
    }, ESCAPE_REGEX3 = /[&><\u2028\u2029]/g;
    function htmlEscape(str) {
      return str.replace(ESCAPE_REGEX3, (match2) => ESCAPE_LOOKUP3[match2]);
    }
    exports.StaticRouter = StaticRouter;
    exports.StaticRouterProvider = StaticRouterProvider2;
    exports.createStaticHandler = createStaticHandler3;
    exports.createStaticRouter = createStaticRouter2;
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.min.js
var require_react_dom_server_legacy_browser_production_min = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server-legacy.browser.production.min.js"(exports) {
    "use strict";
    var aa = require_react();
    function l2(a4) {
      for (var b3 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a4, c3 = 1; c3 < arguments.length; c3++)
        b3 += "&args[]=" + encodeURIComponent(arguments[c3]);
      return "Minified React error #" + a4 + "; visit " + b3 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var p2 = Object.prototype.hasOwnProperty, fa = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, ha = {}, ia = {};
    function ja(a4) {
      return p2.call(ia, a4) ? !0 : p2.call(ha, a4) ? !1 : fa.test(a4) ? ia[a4] = !0 : (ha[a4] = !0, !1);
    }
    function r3(a4, b3, c3, d4, f2, e3, g2) {
      this.acceptsBooleans = b3 === 2 || b3 === 3 || b3 === 4, this.attributeName = d4, this.attributeNamespace = f2, this.mustUseProperty = c3, this.propertyName = a4, this.type = b3, this.sanitizeURL = e3, this.removeEmptyString = g2;
    }
    var t4 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a4) {
      t4[a4] = new r3(a4, 0, !1, a4, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a4) {
      var b3 = a4[0];
      t4[b3] = new r3(b3, 1, !1, a4[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a4) {
      t4[a4] = new r3(a4, 2, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a4) {
      t4[a4] = new r3(a4, 2, !1, a4, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a4) {
      t4[a4] = new r3(a4, 3, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a4) {
      t4[a4] = new r3(a4, 3, !0, a4, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a4) {
      t4[a4] = new r3(a4, 4, !1, a4, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a4) {
      t4[a4] = new r3(a4, 6, !1, a4, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a4) {
      t4[a4] = new r3(a4, 5, !1, a4.toLowerCase(), null, !1, !1);
    });
    var ka = /[\-:]([a-z])/g;
    function la(a4) {
      return a4[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a4) {
      var b3 = a4.replace(
        ka,
        la
      );
      t4[b3] = new r3(b3, 1, !1, a4, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a4) {
      var b3 = a4.replace(ka, la);
      t4[b3] = new r3(b3, 1, !1, a4, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a4) {
      var b3 = a4.replace(ka, la);
      t4[b3] = new r3(b3, 1, !1, a4, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a4) {
      t4[a4] = new r3(a4, 1, !1, a4.toLowerCase(), null, !1, !1);
    });
    t4.xlinkHref = new r3("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a4) {
      t4[a4] = new r3(a4, 1, !1, a4.toLowerCase(), null, !0, !0);
    });
    var u3 = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, ma = ["Webkit", "ms", "Moz", "O"];
    Object.keys(u3).forEach(function(a4) {
      ma.forEach(function(b3) {
        b3 = b3 + a4.charAt(0).toUpperCase() + a4.substring(1), u3[b3] = u3[a4];
      });
    });
    var na = /["'&<>]/;
    function v2(a4) {
      if (typeof a4 == "boolean" || typeof a4 == "number")
        return "" + a4;
      a4 = "" + a4;
      var b3 = na.exec(a4);
      if (b3) {
        var c3 = "", d4, f2 = 0;
        for (d4 = b3.index; d4 < a4.length; d4++) {
          switch (a4.charCodeAt(d4)) {
            case 34:
              b3 = "&quot;";
              break;
            case 38:
              b3 = "&amp;";
              break;
            case 39:
              b3 = "&#x27;";
              break;
            case 60:
              b3 = "&lt;";
              break;
            case 62:
              b3 = "&gt;";
              break;
            default:
              continue;
          }
          f2 !== d4 && (c3 += a4.substring(f2, d4)), f2 = d4 + 1, c3 += b3;
        }
        a4 = f2 !== d4 ? c3 + a4.substring(f2, d4) : c3;
      }
      return a4;
    }
    var oa = /([A-Z])/g, pa = /^ms-/, qa = Array.isArray;
    function w2(a4, b3) {
      return { insertionMode: a4, selectedValue: b3 };
    }
    function ra(a4, b3, c3) {
      switch (b3) {
        case "select":
          return w2(1, c3.value != null ? c3.value : c3.defaultValue);
        case "svg":
          return w2(2, null);
        case "math":
          return w2(3, null);
        case "foreignObject":
          return w2(1, null);
        case "table":
          return w2(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return w2(5, null);
        case "colgroup":
          return w2(7, null);
        case "tr":
          return w2(6, null);
      }
      return 4 <= a4.insertionMode || a4.insertionMode === 0 ? w2(1, null) : a4;
    }
    var sa = /* @__PURE__ */ new Map();
    function ta(a4, b3, c3) {
      if (typeof c3 != "object")
        throw Error(l2(62));
      b3 = !0;
      for (var d4 in c3)
        if (p2.call(c3, d4)) {
          var f2 = c3[d4];
          if (f2 != null && typeof f2 != "boolean" && f2 !== "") {
            if (d4.indexOf("--") === 0) {
              var e3 = v2(d4);
              f2 = v2(("" + f2).trim());
            } else {
              e3 = d4;
              var g2 = sa.get(e3);
              g2 !== void 0 || (g2 = v2(e3.replace(oa, "-$1").toLowerCase().replace(pa, "-ms-")), sa.set(e3, g2)), e3 = g2, f2 = typeof f2 == "number" ? f2 === 0 || p2.call(u3, d4) ? "" + f2 : f2 + "px" : v2(("" + f2).trim());
            }
            b3 ? (b3 = !1, a4.push(' style="', e3, ":", f2)) : a4.push(";", e3, ":", f2);
          }
        }
      b3 || a4.push('"');
    }
    function x3(a4, b3, c3, d4) {
      switch (c3) {
        case "style":
          ta(a4, b3, d4);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c3.length) || c3[0] !== "o" && c3[0] !== "O" || c3[1] !== "n" && c3[1] !== "N") {
        if (b3 = t4.hasOwnProperty(c3) ? t4[c3] : null, b3 !== null) {
          switch (typeof d4) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b3.acceptsBooleans)
                return;
          }
          switch (c3 = b3.attributeName, b3.type) {
            case 3:
              d4 && a4.push(" ", c3, '=""');
              break;
            case 4:
              d4 === !0 ? a4.push(" ", c3, '=""') : d4 !== !1 && a4.push(" ", c3, '="', v2(d4), '"');
              break;
            case 5:
              isNaN(d4) || a4.push(" ", c3, '="', v2(d4), '"');
              break;
            case 6:
              !isNaN(d4) && 1 <= d4 && a4.push(" ", c3, '="', v2(d4), '"');
              break;
            default:
              b3.sanitizeURL && (d4 = "" + d4), a4.push(" ", c3, '="', v2(d4), '"');
          }
        } else if (ja(c3)) {
          switch (typeof d4) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b3 = c3.toLowerCase().slice(0, 5), b3 !== "data-" && b3 !== "aria-")
                return;
          }
          a4.push(" ", c3, '="', v2(d4), '"');
        }
      }
    }
    function y4(a4, b3, c3) {
      if (b3 != null) {
        if (c3 != null)
          throw Error(l2(60));
        if (typeof b3 != "object" || !("__html" in b3))
          throw Error(l2(61));
        b3 = b3.__html, b3 != null && a4.push("" + b3);
      }
    }
    function ua(a4) {
      var b3 = "";
      return aa.Children.forEach(a4, function(a5) {
        a5 != null && (b3 += a5);
      }), b3;
    }
    function va(a4, b3, c3, d4) {
      a4.push(A(c3));
      var f2 = c3 = null, e3;
      for (e3 in b3)
        if (p2.call(b3, e3)) {
          var g2 = b3[e3];
          if (g2 != null)
            switch (e3) {
              case "children":
                c3 = g2;
                break;
              case "dangerouslySetInnerHTML":
                f2 = g2;
                break;
              default:
                x3(a4, d4, e3, g2);
            }
        }
      return a4.push(">"), y4(a4, f2, c3), typeof c3 == "string" ? (a4.push(v2(c3)), null) : c3;
    }
    var wa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, xa = /* @__PURE__ */ new Map();
    function A(a4) {
      var b3 = xa.get(a4);
      if (b3 === void 0) {
        if (!wa.test(a4))
          throw Error(l2(65, a4));
        b3 = "<" + a4, xa.set(a4, b3);
      }
      return b3;
    }
    function ya(a4, b3, c3, d4, f2) {
      switch (b3) {
        case "select":
          a4.push(A("select"));
          var e3 = null, g2 = null;
          for (n2 in c3)
            if (p2.call(c3, n2)) {
              var h4 = c3[n2];
              if (h4 != null)
                switch (n2) {
                  case "children":
                    e3 = h4;
                    break;
                  case "dangerouslySetInnerHTML":
                    g2 = h4;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    x3(a4, d4, n2, h4);
                }
            }
          return a4.push(">"), y4(a4, g2, e3), e3;
        case "option":
          g2 = f2.selectedValue, a4.push(A("option"));
          var k3 = h4 = null, m4 = null, n2 = null;
          for (e3 in c3)
            if (p2.call(c3, e3)) {
              var q2 = c3[e3];
              if (q2 != null)
                switch (e3) {
                  case "children":
                    h4 = q2;
                    break;
                  case "selected":
                    m4 = q2;
                    break;
                  case "dangerouslySetInnerHTML":
                    n2 = q2;
                    break;
                  case "value":
                    k3 = q2;
                  default:
                    x3(a4, d4, e3, q2);
                }
            }
          if (g2 != null)
            if (c3 = k3 !== null ? "" + k3 : ua(h4), qa(g2)) {
              for (d4 = 0; d4 < g2.length; d4++)
                if ("" + g2[d4] === c3) {
                  a4.push(' selected=""');
                  break;
                }
            } else
              "" + g2 === c3 && a4.push(' selected=""');
          else
            m4 && a4.push(' selected=""');
          return a4.push(">"), y4(a4, n2, h4), h4;
        case "textarea":
          a4.push(A("textarea")), n2 = g2 = e3 = null;
          for (h4 in c3)
            if (p2.call(c3, h4) && (k3 = c3[h4], k3 != null))
              switch (h4) {
                case "children":
                  n2 = k3;
                  break;
                case "value":
                  e3 = k3;
                  break;
                case "defaultValue":
                  g2 = k3;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error(l2(91));
                default:
                  x3(
                    a4,
                    d4,
                    h4,
                    k3
                  );
              }
          if (e3 === null && g2 !== null && (e3 = g2), a4.push(">"), n2 != null) {
            if (e3 != null)
              throw Error(l2(92));
            if (qa(n2) && 1 < n2.length)
              throw Error(l2(93));
            e3 = "" + n2;
          }
          return typeof e3 == "string" && e3[0] === `
` && a4.push(`
`), e3 !== null && a4.push(v2("" + e3)), null;
        case "input":
          a4.push(A("input")), k3 = n2 = h4 = e3 = null;
          for (g2 in c3)
            if (p2.call(c3, g2) && (m4 = c3[g2], m4 != null))
              switch (g2) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(l2(399, "input"));
                case "defaultChecked":
                  k3 = m4;
                  break;
                case "defaultValue":
                  h4 = m4;
                  break;
                case "checked":
                  n2 = m4;
                  break;
                case "value":
                  e3 = m4;
                  break;
                default:
                  x3(a4, d4, g2, m4);
              }
          return n2 !== null ? x3(a4, d4, "checked", n2) : k3 !== null && x3(a4, d4, "checked", k3), e3 !== null ? x3(a4, d4, "value", e3) : h4 !== null && x3(a4, d4, "value", h4), a4.push("/>"), null;
        case "menuitem":
          a4.push(A("menuitem"));
          for (var C in c3)
            if (p2.call(c3, C) && (e3 = c3[C], e3 != null))
              switch (C) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(l2(400));
                default:
                  x3(a4, d4, C, e3);
              }
          return a4.push(">"), null;
        case "title":
          a4.push(A("title")), e3 = null;
          for (q2 in c3)
            if (p2.call(c3, q2) && (g2 = c3[q2], g2 != null))
              switch (q2) {
                case "children":
                  e3 = g2;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error(l2(434));
                default:
                  x3(a4, d4, q2, g2);
              }
          return a4.push(">"), e3;
        case "listing":
        case "pre":
          a4.push(A(b3)), g2 = e3 = null;
          for (k3 in c3)
            if (p2.call(c3, k3) && (h4 = c3[k3], h4 != null))
              switch (k3) {
                case "children":
                  e3 = h4;
                  break;
                case "dangerouslySetInnerHTML":
                  g2 = h4;
                  break;
                default:
                  x3(a4, d4, k3, h4);
              }
          if (a4.push(">"), g2 != null) {
            if (e3 != null)
              throw Error(l2(60));
            if (typeof g2 != "object" || !("__html" in g2))
              throw Error(l2(61));
            c3 = g2.__html, c3 != null && (typeof c3 == "string" && 0 < c3.length && c3[0] === `
` ? a4.push(`
`, c3) : a4.push("" + c3));
          }
          return typeof e3 == "string" && e3[0] === `
` && a4.push(`
`), e3;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a4.push(A(b3));
          for (var D2 in c3)
            if (p2.call(c3, D2) && (e3 = c3[D2], e3 != null))
              switch (D2) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(l2(399, b3));
                default:
                  x3(a4, d4, D2, e3);
              }
          return a4.push("/>"), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return va(
            a4,
            c3,
            b3,
            d4
          );
        case "html":
          return f2.insertionMode === 0 && a4.push("<!DOCTYPE html>"), va(a4, c3, b3, d4);
        default:
          if (b3.indexOf("-") === -1 && typeof c3.is != "string")
            return va(a4, c3, b3, d4);
          a4.push(A(b3)), g2 = e3 = null;
          for (m4 in c3)
            if (p2.call(c3, m4) && (h4 = c3[m4], h4 != null))
              switch (m4) {
                case "children":
                  e3 = h4;
                  break;
                case "dangerouslySetInnerHTML":
                  g2 = h4;
                  break;
                case "style":
                  ta(a4, d4, h4);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ja(m4) && typeof h4 != "function" && typeof h4 != "symbol" && a4.push(" ", m4, '="', v2(h4), '"');
              }
          return a4.push(">"), y4(a4, g2, e3), e3;
      }
    }
    function za(a4, b3, c3) {
      if (a4.push('<!--$?--><template id="'), c3 === null)
        throw Error(l2(395));
      return a4.push(c3), a4.push('"></template>');
    }
    function Aa(a4, b3, c3, d4) {
      switch (c3.insertionMode) {
        case 0:
        case 1:
          return a4.push('<div hidden id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 2:
          return a4.push('<svg aria-hidden="true" style="display:none" id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 3:
          return a4.push('<math aria-hidden="true" style="display:none" id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 4:
          return a4.push('<table hidden id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 5:
          return a4.push('<table hidden><tbody id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 6:
          return a4.push('<table hidden><tr id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        case 7:
          return a4.push('<table hidden><colgroup id="'), a4.push(b3.segmentPrefix), b3 = d4.toString(16), a4.push(b3), a4.push('">');
        default:
          throw Error(l2(397));
      }
    }
    function Ba(a4, b3) {
      switch (b3.insertionMode) {
        case 0:
        case 1:
          return a4.push("</div>");
        case 2:
          return a4.push("</svg>");
        case 3:
          return a4.push("</math>");
        case 4:
          return a4.push("</table>");
        case 5:
          return a4.push("</tbody></table>");
        case 6:
          return a4.push("</tr></table>");
        case 7:
          return a4.push("</colgroup></table>");
        default:
          throw Error(l2(397));
      }
    }
    var Ca = /[<\u2028\u2029]/g;
    function Da(a4) {
      return JSON.stringify(a4).replace(Ca, function(a5) {
        switch (a5) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    function Ea(a4, b3) {
      return b3 = b3 === void 0 ? "" : b3, { bootstrapChunks: [], startInlineScript: "<script>", placeholderPrefix: b3 + "P:", segmentPrefix: b3 + "S:", boundaryPrefix: b3 + "B:", idPrefix: b3, nextSuspenseID: 0, sentCompleteSegmentFunction: !1, sentCompleteBoundaryFunction: !1, sentClientRenderFunction: !1, generateStaticMarkup: a4 };
    }
    function Fa(a4, b3, c3, d4) {
      return c3.generateStaticMarkup ? (a4.push(v2(b3)), !1) : (b3 === "" ? a4 = d4 : (d4 && a4.push("<!-- -->"), a4.push(v2(b3)), a4 = !0), a4);
    }
    var B2 = Object.assign, Ga = Symbol.for("react.element"), Ha = Symbol.for("react.portal"), Ia = Symbol.for("react.fragment"), Ja = Symbol.for("react.strict_mode"), Ka = Symbol.for("react.profiler"), La = Symbol.for("react.provider"), Ma = Symbol.for("react.context"), Na = Symbol.for("react.forward_ref"), Oa = Symbol.for("react.suspense"), Pa = Symbol.for("react.suspense_list"), Qa = Symbol.for("react.memo"), Ra = Symbol.for("react.lazy"), Sa = Symbol.for("react.scope"), Ta = Symbol.for("react.debug_trace_mode"), Ua = Symbol.for("react.legacy_hidden"), Va = Symbol.for("react.default_value"), Wa = Symbol.iterator;
    function Xa(a4) {
      if (a4 == null)
        return null;
      if (typeof a4 == "function")
        return a4.displayName || a4.name || null;
      if (typeof a4 == "string")
        return a4;
      switch (a4) {
        case Ia:
          return "Fragment";
        case Ha:
          return "Portal";
        case Ka:
          return "Profiler";
        case Ja:
          return "StrictMode";
        case Oa:
          return "Suspense";
        case Pa:
          return "SuspenseList";
      }
      if (typeof a4 == "object")
        switch (a4.$$typeof) {
          case Ma:
            return (a4.displayName || "Context") + ".Consumer";
          case La:
            return (a4._context.displayName || "Context") + ".Provider";
          case Na:
            var b3 = a4.render;
            return a4 = a4.displayName, a4 || (a4 = b3.displayName || b3.name || "", a4 = a4 !== "" ? "ForwardRef(" + a4 + ")" : "ForwardRef"), a4;
          case Qa:
            return b3 = a4.displayName || null, b3 !== null ? b3 : Xa(a4.type) || "Memo";
          case Ra:
            b3 = a4._payload, a4 = a4._init;
            try {
              return Xa(a4(b3));
            } catch {
            }
        }
      return null;
    }
    var Ya = {};
    function Za(a4, b3) {
      if (a4 = a4.contextTypes, !a4)
        return Ya;
      var c3 = {}, d4;
      for (d4 in a4)
        c3[d4] = b3[d4];
      return c3;
    }
    var E2 = null;
    function F(a4, b3) {
      if (a4 !== b3) {
        a4.context._currentValue2 = a4.parentValue, a4 = a4.parent;
        var c3 = b3.parent;
        if (a4 === null) {
          if (c3 !== null)
            throw Error(l2(401));
        } else {
          if (c3 === null)
            throw Error(l2(401));
          F(a4, c3);
        }
        b3.context._currentValue2 = b3.value;
      }
    }
    function $a(a4) {
      a4.context._currentValue2 = a4.parentValue, a4 = a4.parent, a4 !== null && $a(a4);
    }
    function ab(a4) {
      var b3 = a4.parent;
      b3 !== null && ab(b3), a4.context._currentValue2 = a4.value;
    }
    function bb(a4, b3) {
      if (a4.context._currentValue2 = a4.parentValue, a4 = a4.parent, a4 === null)
        throw Error(l2(402));
      a4.depth === b3.depth ? F(a4, b3) : bb(a4, b3);
    }
    function cb(a4, b3) {
      var c3 = b3.parent;
      if (c3 === null)
        throw Error(l2(402));
      a4.depth === c3.depth ? F(a4, c3) : cb(a4, c3), b3.context._currentValue2 = b3.value;
    }
    function G2(a4) {
      var b3 = E2;
      b3 !== a4 && (b3 === null ? ab(a4) : a4 === null ? $a(b3) : b3.depth === a4.depth ? F(b3, a4) : b3.depth > a4.depth ? bb(b3, a4) : cb(b3, a4), E2 = a4);
    }
    var db = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a4, b3) {
      a4 = a4._reactInternals, a4.queue !== null && a4.queue.push(b3);
    }, enqueueReplaceState: function(a4, b3) {
      a4 = a4._reactInternals, a4.replace = !0, a4.queue = [b3];
    }, enqueueForceUpdate: function() {
    } };
    function eb(a4, b3, c3, d4) {
      var f2 = a4.state !== void 0 ? a4.state : null;
      a4.updater = db, a4.props = c3, a4.state = f2;
      var e3 = { queue: [], replace: !1 };
      a4._reactInternals = e3;
      var g2 = b3.contextType;
      if (a4.context = typeof g2 == "object" && g2 !== null ? g2._currentValue2 : d4, g2 = b3.getDerivedStateFromProps, typeof g2 == "function" && (g2 = g2(c3, f2), f2 = g2 == null ? f2 : B2({}, f2, g2), a4.state = f2), typeof b3.getDerivedStateFromProps != "function" && typeof a4.getSnapshotBeforeUpdate != "function" && (typeof a4.UNSAFE_componentWillMount == "function" || typeof a4.componentWillMount == "function"))
        if (b3 = a4.state, typeof a4.componentWillMount == "function" && a4.componentWillMount(), typeof a4.UNSAFE_componentWillMount == "function" && a4.UNSAFE_componentWillMount(), b3 !== a4.state && db.enqueueReplaceState(a4, a4.state, null), e3.queue !== null && 0 < e3.queue.length)
          if (b3 = e3.queue, g2 = e3.replace, e3.queue = null, e3.replace = !1, g2 && b3.length === 1)
            a4.state = b3[0];
          else {
            for (e3 = g2 ? b3[0] : a4.state, f2 = !0, g2 = g2 ? 1 : 0; g2 < b3.length; g2++) {
              var h4 = b3[g2];
              h4 = typeof h4 == "function" ? h4.call(a4, e3, c3, d4) : h4, h4 != null && (f2 ? (f2 = !1, e3 = B2({}, e3, h4)) : B2(e3, h4));
            }
            a4.state = e3;
          }
        else
          e3.queue = null;
    }
    var fb = { id: 1, overflow: "" };
    function gb(a4, b3, c3) {
      var d4 = a4.id;
      a4 = a4.overflow;
      var f2 = 32 - H4(d4) - 1;
      d4 &= ~(1 << f2), c3 += 1;
      var e3 = 32 - H4(b3) + f2;
      if (30 < e3) {
        var g2 = f2 - f2 % 5;
        return e3 = (d4 & (1 << g2) - 1).toString(32), d4 >>= g2, f2 -= g2, { id: 1 << 32 - H4(b3) + f2 | c3 << f2 | d4, overflow: e3 + a4 };
      }
      return { id: 1 << e3 | c3 << f2 | d4, overflow: a4 };
    }
    var H4 = Math.clz32 ? Math.clz32 : hb, ib = Math.log, jb = Math.LN2;
    function hb(a4) {
      return a4 >>>= 0, a4 === 0 ? 32 : 31 - (ib(a4) / jb | 0) | 0;
    }
    function kb(a4, b3) {
      return a4 === b3 && (a4 !== 0 || 1 / a4 === 1 / b3) || a4 !== a4 && b3 !== b3;
    }
    var lb = typeof Object.is == "function" ? Object.is : kb, I2 = null, ob = null, J = null, K2 = null, L3 = !1, M4 = !1, N2 = 0, O2 = null, P = 0;
    function Q2() {
      if (I2 === null)
        throw Error(l2(321));
      return I2;
    }
    function pb() {
      if (0 < P)
        throw Error(l2(312));
      return { memoizedState: null, queue: null, next: null };
    }
    function qb() {
      return K2 === null ? J === null ? (L3 = !1, J = K2 = pb()) : (L3 = !0, K2 = J) : K2.next === null ? (L3 = !1, K2 = K2.next = pb()) : (L3 = !0, K2 = K2.next), K2;
    }
    function rb() {
      ob = I2 = null, M4 = !1, J = null, P = 0, K2 = O2 = null;
    }
    function sb(a4, b3) {
      return typeof b3 == "function" ? b3(a4) : b3;
    }
    function tb(a4, b3, c3) {
      if (I2 = Q2(), K2 = qb(), L3) {
        var d4 = K2.queue;
        if (b3 = d4.dispatch, O2 !== null && (c3 = O2.get(d4), c3 !== void 0)) {
          O2.delete(d4), d4 = K2.memoizedState;
          do
            d4 = a4(d4, c3.action), c3 = c3.next;
          while (c3 !== null);
          return K2.memoizedState = d4, [d4, b3];
        }
        return [K2.memoizedState, b3];
      }
      return a4 = a4 === sb ? typeof b3 == "function" ? b3() : b3 : c3 !== void 0 ? c3(b3) : b3, K2.memoizedState = a4, a4 = K2.queue = { last: null, dispatch: null }, a4 = a4.dispatch = ub.bind(null, I2, a4), [K2.memoizedState, a4];
    }
    function vb(a4, b3) {
      if (I2 = Q2(), K2 = qb(), b3 = b3 === void 0 ? null : b3, K2 !== null) {
        var c3 = K2.memoizedState;
        if (c3 !== null && b3 !== null) {
          var d4 = c3[1];
          a:
            if (d4 === null)
              d4 = !1;
            else {
              for (var f2 = 0; f2 < d4.length && f2 < b3.length; f2++)
                if (!lb(b3[f2], d4[f2])) {
                  d4 = !1;
                  break a;
                }
              d4 = !0;
            }
          if (d4)
            return c3[0];
        }
      }
      return a4 = a4(), K2.memoizedState = [a4, b3], a4;
    }
    function ub(a4, b3, c3) {
      if (25 <= P)
        throw Error(l2(301));
      if (a4 === I2)
        if (M4 = !0, a4 = { action: c3, next: null }, O2 === null && (O2 = /* @__PURE__ */ new Map()), c3 = O2.get(b3), c3 === void 0)
          O2.set(b3, a4);
        else {
          for (b3 = c3; b3.next !== null; )
            b3 = b3.next;
          b3.next = a4;
        }
    }
    function wb() {
      throw Error(l2(394));
    }
    function R2() {
    }
    var xb = { readContext: function(a4) {
      return a4._currentValue2;
    }, useContext: function(a4) {
      return Q2(), a4._currentValue2;
    }, useMemo: vb, useReducer: tb, useRef: function(a4) {
      I2 = Q2(), K2 = qb();
      var b3 = K2.memoizedState;
      return b3 === null ? (a4 = { current: a4 }, K2.memoizedState = a4) : b3;
    }, useState: function(a4) {
      return tb(sb, a4);
    }, useInsertionEffect: R2, useLayoutEffect: function() {
    }, useCallback: function(a4, b3) {
      return vb(function() {
        return a4;
      }, b3);
    }, useImperativeHandle: R2, useEffect: R2, useDebugValue: R2, useDeferredValue: function(a4) {
      return Q2(), a4;
    }, useTransition: function() {
      return Q2(), [
        !1,
        wb
      ];
    }, useId: function() {
      var a4 = ob.treeContext, b3 = a4.overflow;
      a4 = a4.id, a4 = (a4 & ~(1 << 32 - H4(a4) - 1)).toString(32) + b3;
      var c3 = S5;
      if (c3 === null)
        throw Error(l2(404));
      return b3 = N2++, a4 = ":" + c3.idPrefix + "R" + a4, 0 < b3 && (a4 += "H" + b3.toString(32)), a4 + ":";
    }, useMutableSource: function(a4, b3) {
      return Q2(), b3(a4._source);
    }, useSyncExternalStore: function(a4, b3, c3) {
      if (c3 === void 0)
        throw Error(l2(407));
      return c3();
    } }, S5 = null, yb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function zb(a4) {
      return console.error(a4), null;
    }
    function T3() {
    }
    function Ab(a4, b3, c3, d4, f2, e3, g2, h4, k3) {
      var m4 = [], n2 = /* @__PURE__ */ new Set();
      return b3 = { destination: null, responseState: b3, progressiveChunkSize: d4 === void 0 ? 12800 : d4, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: n2, pingedTasks: m4, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: f2 === void 0 ? zb : f2, onAllReady: e3 === void 0 ? T3 : e3, onShellReady: g2 === void 0 ? T3 : g2, onShellError: h4 === void 0 ? T3 : h4, onFatalError: k3 === void 0 ? T3 : k3 }, c3 = U2(b3, 0, null, c3, !1, !1), c3.parentFlushed = !0, a4 = Bb(b3, a4, null, c3, n2, Ya, null, fb), m4.push(a4), b3;
    }
    function Bb(a4, b3, c3, d4, f2, e3, g2, h4) {
      a4.allPendingTasks++, c3 === null ? a4.pendingRootTasks++ : c3.pendingTasks++;
      var k3 = { node: b3, ping: function() {
        var b4 = a4.pingedTasks;
        b4.push(k3), b4.length === 1 && Cb(a4);
      }, blockedBoundary: c3, blockedSegment: d4, abortSet: f2, legacyContext: e3, context: g2, treeContext: h4 };
      return f2.add(k3), k3;
    }
    function U2(a4, b3, c3, d4, f2, e3) {
      return { status: 0, id: -1, index: b3, parentFlushed: !1, chunks: [], children: [], formatContext: d4, boundary: c3, lastPushedText: f2, textEmbedded: e3 };
    }
    function V(a4, b3) {
      if (a4 = a4.onError(b3), a4 != null && typeof a4 != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a4 + '" instead');
      return a4;
    }
    function W(a4, b3) {
      var c3 = a4.onShellError;
      c3(b3), c3 = a4.onFatalError, c3(b3), a4.destination !== null ? (a4.status = 2, a4.destination.destroy(b3)) : (a4.status = 1, a4.fatalError = b3);
    }
    function Db(a4, b3, c3, d4, f2) {
      for (I2 = {}, ob = b3, N2 = 0, a4 = c3(d4, f2); M4; )
        M4 = !1, N2 = 0, P += 1, K2 = null, a4 = c3(d4, f2);
      return rb(), a4;
    }
    function Eb(a4, b3, c3, d4) {
      var f2 = c3.render(), e3 = d4.childContextTypes;
      if (e3 != null) {
        var g2 = b3.legacyContext;
        if (typeof c3.getChildContext != "function")
          d4 = g2;
        else {
          c3 = c3.getChildContext();
          for (var h4 in c3)
            if (!(h4 in e3))
              throw Error(l2(108, Xa(d4) || "Unknown", h4));
          d4 = B2({}, g2, c3);
        }
        b3.legacyContext = d4, X2(a4, b3, f2), b3.legacyContext = g2;
      } else
        X2(a4, b3, f2);
    }
    function Fb(a4, b3) {
      if (a4 && a4.defaultProps) {
        b3 = B2({}, b3), a4 = a4.defaultProps;
        for (var c3 in a4)
          b3[c3] === void 0 && (b3[c3] = a4[c3]);
        return b3;
      }
      return b3;
    }
    function Gb(a4, b3, c3, d4, f2) {
      if (typeof c3 == "function")
        if (c3.prototype && c3.prototype.isReactComponent) {
          f2 = Za(c3, b3.legacyContext);
          var e3 = c3.contextType;
          e3 = new c3(d4, typeof e3 == "object" && e3 !== null ? e3._currentValue2 : f2), eb(e3, c3, d4, f2), Eb(a4, b3, e3, c3);
        } else {
          e3 = Za(c3, b3.legacyContext), f2 = Db(a4, b3, c3, d4, e3);
          var g2 = N2 !== 0;
          if (typeof f2 == "object" && f2 !== null && typeof f2.render == "function" && f2.$$typeof === void 0)
            eb(f2, c3, d4, e3), Eb(a4, b3, f2, c3);
          else if (g2) {
            d4 = b3.treeContext, b3.treeContext = gb(d4, 1, 0);
            try {
              X2(a4, b3, f2);
            } finally {
              b3.treeContext = d4;
            }
          } else
            X2(a4, b3, f2);
        }
      else if (typeof c3 == "string") {
        switch (f2 = b3.blockedSegment, e3 = ya(f2.chunks, c3, d4, a4.responseState, f2.formatContext), f2.lastPushedText = !1, g2 = f2.formatContext, f2.formatContext = ra(g2, c3, d4), Hb(a4, b3, e3), f2.formatContext = g2, c3) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f2.chunks.push("</", c3, ">");
        }
        f2.lastPushedText = !1;
      } else {
        switch (c3) {
          case Ua:
          case Ta:
          case Ja:
          case Ka:
          case Ia:
            X2(a4, b3, d4.children);
            return;
          case Pa:
            X2(a4, b3, d4.children);
            return;
          case Sa:
            throw Error(l2(343));
          case Oa:
            a: {
              c3 = b3.blockedBoundary, f2 = b3.blockedSegment, e3 = d4.fallback, d4 = d4.children, g2 = /* @__PURE__ */ new Set();
              var h4 = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g2, errorDigest: null }, k3 = U2(a4, f2.chunks.length, h4, f2.formatContext, !1, !1);
              f2.children.push(k3), f2.lastPushedText = !1;
              var m4 = U2(a4, 0, null, f2.formatContext, !1, !1);
              m4.parentFlushed = !0, b3.blockedBoundary = h4, b3.blockedSegment = m4;
              try {
                if (Hb(
                  a4,
                  b3,
                  d4
                ), a4.responseState.generateStaticMarkup || m4.lastPushedText && m4.textEmbedded && m4.chunks.push("<!-- -->"), m4.status = 1, Y2(h4, m4), h4.pendingTasks === 0)
                  break a;
              } catch (n2) {
                m4.status = 4, h4.forceClientRender = !0, h4.errorDigest = V(a4, n2);
              } finally {
                b3.blockedBoundary = c3, b3.blockedSegment = f2;
              }
              b3 = Bb(a4, e3, c3, k3, g2, b3.legacyContext, b3.context, b3.treeContext), a4.pingedTasks.push(b3);
            }
            return;
        }
        if (typeof c3 == "object" && c3 !== null)
          switch (c3.$$typeof) {
            case Na:
              if (d4 = Db(a4, b3, c3.render, d4, f2), N2 !== 0) {
                c3 = b3.treeContext, b3.treeContext = gb(c3, 1, 0);
                try {
                  X2(a4, b3, d4);
                } finally {
                  b3.treeContext = c3;
                }
              } else
                X2(a4, b3, d4);
              return;
            case Qa:
              c3 = c3.type, d4 = Fb(c3, d4), Gb(a4, b3, c3, d4, f2);
              return;
            case La:
              if (f2 = d4.children, c3 = c3._context, d4 = d4.value, e3 = c3._currentValue2, c3._currentValue2 = d4, g2 = E2, E2 = d4 = { parent: g2, depth: g2 === null ? 0 : g2.depth + 1, context: c3, parentValue: e3, value: d4 }, b3.context = d4, X2(a4, b3, f2), a4 = E2, a4 === null)
                throw Error(l2(403));
              d4 = a4.parentValue, a4.context._currentValue2 = d4 === Va ? a4.context._defaultValue : d4, a4 = E2 = a4.parent, b3.context = a4;
              return;
            case Ma:
              d4 = d4.children, d4 = d4(c3._currentValue2), X2(a4, b3, d4);
              return;
            case Ra:
              f2 = c3._init, c3 = f2(c3._payload), d4 = Fb(c3, d4), Gb(
                a4,
                b3,
                c3,
                d4,
                void 0
              );
              return;
          }
        throw Error(l2(130, c3 == null ? c3 : typeof c3, ""));
      }
    }
    function X2(a4, b3, c3) {
      if (b3.node = c3, typeof c3 == "object" && c3 !== null) {
        switch (c3.$$typeof) {
          case Ga:
            Gb(a4, b3, c3.type, c3.props, c3.ref);
            return;
          case Ha:
            throw Error(l2(257));
          case Ra:
            var d4 = c3._init;
            c3 = d4(c3._payload), X2(a4, b3, c3);
            return;
        }
        if (qa(c3)) {
          Ib(a4, b3, c3);
          return;
        }
        if (c3 === null || typeof c3 != "object" ? d4 = null : (d4 = Wa && c3[Wa] || c3["@@iterator"], d4 = typeof d4 == "function" ? d4 : null), d4 && (d4 = d4.call(c3))) {
          if (c3 = d4.next(), !c3.done) {
            var f2 = [];
            do
              f2.push(c3.value), c3 = d4.next();
            while (!c3.done);
            Ib(a4, b3, f2);
          }
          return;
        }
        throw a4 = Object.prototype.toString.call(c3), Error(l2(31, a4 === "[object Object]" ? "object with keys {" + Object.keys(c3).join(", ") + "}" : a4));
      }
      typeof c3 == "string" ? (d4 = b3.blockedSegment, d4.lastPushedText = Fa(b3.blockedSegment.chunks, c3, a4.responseState, d4.lastPushedText)) : typeof c3 == "number" && (d4 = b3.blockedSegment, d4.lastPushedText = Fa(b3.blockedSegment.chunks, "" + c3, a4.responseState, d4.lastPushedText));
    }
    function Ib(a4, b3, c3) {
      for (var d4 = c3.length, f2 = 0; f2 < d4; f2++) {
        var e3 = b3.treeContext;
        b3.treeContext = gb(e3, d4, f2);
        try {
          Hb(a4, b3, c3[f2]);
        } finally {
          b3.treeContext = e3;
        }
      }
    }
    function Hb(a4, b3, c3) {
      var d4 = b3.blockedSegment.formatContext, f2 = b3.legacyContext, e3 = b3.context;
      try {
        return X2(a4, b3, c3);
      } catch (k3) {
        if (rb(), typeof k3 == "object" && k3 !== null && typeof k3.then == "function") {
          c3 = k3;
          var g2 = b3.blockedSegment, h4 = U2(a4, g2.chunks.length, null, g2.formatContext, g2.lastPushedText, !0);
          g2.children.push(h4), g2.lastPushedText = !1, a4 = Bb(a4, b3.node, b3.blockedBoundary, h4, b3.abortSet, b3.legacyContext, b3.context, b3.treeContext).ping, c3.then(a4, a4), b3.blockedSegment.formatContext = d4, b3.legacyContext = f2, b3.context = e3, G2(e3);
        } else
          throw b3.blockedSegment.formatContext = d4, b3.legacyContext = f2, b3.context = e3, G2(e3), k3;
      }
    }
    function Jb(a4) {
      var b3 = a4.blockedBoundary;
      a4 = a4.blockedSegment, a4.status = 3, Kb(this, b3, a4);
    }
    function Lb(a4, b3, c3) {
      var d4 = a4.blockedBoundary;
      a4.blockedSegment.status = 3, d4 === null ? (b3.allPendingTasks--, b3.status !== 2 && (b3.status = 2, b3.destination !== null && b3.destination.push(null))) : (d4.pendingTasks--, d4.forceClientRender || (d4.forceClientRender = !0, a4 = c3 === void 0 ? Error(l2(432)) : c3, d4.errorDigest = b3.onError(a4), d4.parentFlushed && b3.clientRenderedBoundaries.push(d4)), d4.fallbackAbortableTasks.forEach(function(a5) {
        return Lb(a5, b3, c3);
      }), d4.fallbackAbortableTasks.clear(), b3.allPendingTasks--, b3.allPendingTasks === 0 && (d4 = b3.onAllReady, d4()));
    }
    function Y2(a4, b3) {
      if (b3.chunks.length === 0 && b3.children.length === 1 && b3.children[0].boundary === null) {
        var c3 = b3.children[0];
        c3.id = b3.id, c3.parentFlushed = !0, c3.status === 1 && Y2(a4, c3);
      } else
        a4.completedSegments.push(b3);
    }
    function Kb(a4, b3, c3) {
      if (b3 === null) {
        if (c3.parentFlushed) {
          if (a4.completedRootSegment !== null)
            throw Error(l2(389));
          a4.completedRootSegment = c3;
        }
        a4.pendingRootTasks--, a4.pendingRootTasks === 0 && (a4.onShellError = T3, b3 = a4.onShellReady, b3());
      } else
        b3.pendingTasks--, b3.forceClientRender || (b3.pendingTasks === 0 ? (c3.parentFlushed && c3.status === 1 && Y2(b3, c3), b3.parentFlushed && a4.completedBoundaries.push(b3), b3.fallbackAbortableTasks.forEach(Jb, a4), b3.fallbackAbortableTasks.clear()) : c3.parentFlushed && c3.status === 1 && (Y2(b3, c3), b3.completedSegments.length === 1 && b3.parentFlushed && a4.partialBoundaries.push(b3)));
      a4.allPendingTasks--, a4.allPendingTasks === 0 && (a4 = a4.onAllReady, a4());
    }
    function Cb(a4) {
      if (a4.status !== 2) {
        var b3 = E2, c3 = yb.current;
        yb.current = xb;
        var d4 = S5;
        S5 = a4.responseState;
        try {
          var f2 = a4.pingedTasks, e3;
          for (e3 = 0; e3 < f2.length; e3++) {
            var g2 = f2[e3], h4 = a4, k3 = g2.blockedSegment;
            if (k3.status === 0) {
              G2(g2.context);
              try {
                X2(h4, g2, g2.node), h4.responseState.generateStaticMarkup || k3.lastPushedText && k3.textEmbedded && k3.chunks.push("<!-- -->"), g2.abortSet.delete(g2), k3.status = 1, Kb(h4, g2.blockedBoundary, k3);
              } catch (z3) {
                if (rb(), typeof z3 == "object" && z3 !== null && typeof z3.then == "function") {
                  var m4 = g2.ping;
                  z3.then(m4, m4);
                } else {
                  g2.abortSet.delete(g2), k3.status = 4;
                  var n2 = g2.blockedBoundary, q2 = z3, C = V(h4, q2);
                  if (n2 === null ? W(h4, q2) : (n2.pendingTasks--, n2.forceClientRender || (n2.forceClientRender = !0, n2.errorDigest = C, n2.parentFlushed && h4.clientRenderedBoundaries.push(n2))), h4.allPendingTasks--, h4.allPendingTasks === 0) {
                    var D2 = h4.onAllReady;
                    D2();
                  }
                }
              } finally {
              }
            }
          }
          f2.splice(0, e3), a4.destination !== null && Mb(a4, a4.destination);
        } catch (z3) {
          V(a4, z3), W(a4, z3);
        } finally {
          S5 = d4, yb.current = c3, c3 === xb && G2(b3);
        }
      }
    }
    function Z2(a4, b3, c3) {
      switch (c3.parentFlushed = !0, c3.status) {
        case 0:
          var d4 = c3.id = a4.nextSegmentId++;
          return c3.lastPushedText = !1, c3.textEmbedded = !1, a4 = a4.responseState, b3.push('<template id="'), b3.push(a4.placeholderPrefix), a4 = d4.toString(16), b3.push(a4), b3.push('"></template>');
        case 1:
          c3.status = 2;
          var f2 = !0;
          d4 = c3.chunks;
          var e3 = 0;
          c3 = c3.children;
          for (var g2 = 0; g2 < c3.length; g2++) {
            for (f2 = c3[g2]; e3 < f2.index; e3++)
              b3.push(d4[e3]);
            f2 = Nb(a4, b3, f2);
          }
          for (; e3 < d4.length - 1; e3++)
            b3.push(d4[e3]);
          return e3 < d4.length && (f2 = b3.push(d4[e3])), f2;
        default:
          throw Error(l2(390));
      }
    }
    function Nb(a4, b3, c3) {
      var d4 = c3.boundary;
      if (d4 === null)
        return Z2(a4, b3, c3);
      if (d4.parentFlushed = !0, d4.forceClientRender)
        return a4.responseState.generateStaticMarkup || (d4 = d4.errorDigest, b3.push("<!--$!-->"), b3.push("<template"), d4 && (b3.push(' data-dgst="'), d4 = v2(d4), b3.push(d4), b3.push('"')), b3.push("></template>")), Z2(a4, b3, c3), a4 = a4.responseState.generateStaticMarkup ? !0 : b3.push("<!--/$-->"), a4;
      if (0 < d4.pendingTasks) {
        d4.rootSegmentID = a4.nextSegmentId++, 0 < d4.completedSegments.length && a4.partialBoundaries.push(d4);
        var f2 = a4.responseState, e3 = f2.nextSuspenseID++;
        return f2 = f2.boundaryPrefix + e3.toString(16), d4 = d4.id = f2, za(b3, a4.responseState, d4), Z2(a4, b3, c3), b3.push("<!--/$-->");
      }
      if (d4.byteSize > a4.progressiveChunkSize)
        return d4.rootSegmentID = a4.nextSegmentId++, a4.completedBoundaries.push(d4), za(b3, a4.responseState, d4.id), Z2(a4, b3, c3), b3.push("<!--/$-->");
      if (a4.responseState.generateStaticMarkup || b3.push("<!--$-->"), c3 = d4.completedSegments, c3.length !== 1)
        throw Error(l2(391));
      return Nb(a4, b3, c3[0]), a4 = a4.responseState.generateStaticMarkup ? !0 : b3.push("<!--/$-->"), a4;
    }
    function Ob(a4, b3, c3) {
      return Aa(b3, a4.responseState, c3.formatContext, c3.id), Nb(a4, b3, c3), Ba(b3, c3.formatContext);
    }
    function Pb(a4, b3, c3) {
      for (var d4 = c3.completedSegments, f2 = 0; f2 < d4.length; f2++)
        Qb(a4, b3, c3, d4[f2]);
      if (d4.length = 0, a4 = a4.responseState, d4 = c3.id, c3 = c3.rootSegmentID, b3.push(a4.startInlineScript), a4.sentCompleteBoundaryFunction ? b3.push('$RC("') : (a4.sentCompleteBoundaryFunction = !0, b3.push('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("')), d4 === null)
        throw Error(l2(395));
      return c3 = c3.toString(16), b3.push(d4), b3.push('","'), b3.push(a4.segmentPrefix), b3.push(c3), b3.push('")</script>');
    }
    function Qb(a4, b3, c3, d4) {
      if (d4.status === 2)
        return !0;
      var f2 = d4.id;
      if (f2 === -1) {
        if ((d4.id = c3.rootSegmentID) === -1)
          throw Error(l2(392));
        return Ob(a4, b3, d4);
      }
      return Ob(a4, b3, d4), a4 = a4.responseState, b3.push(a4.startInlineScript), a4.sentCompleteSegmentFunction ? b3.push('$RS("') : (a4.sentCompleteSegmentFunction = !0, b3.push('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("')), b3.push(a4.segmentPrefix), f2 = f2.toString(16), b3.push(f2), b3.push('","'), b3.push(a4.placeholderPrefix), b3.push(f2), b3.push('")</script>');
    }
    function Mb(a4, b3) {
      try {
        var c3 = a4.completedRootSegment;
        if (c3 !== null && a4.pendingRootTasks === 0) {
          Nb(a4, b3, c3), a4.completedRootSegment = null;
          var d4 = a4.responseState.bootstrapChunks;
          for (c3 = 0; c3 < d4.length - 1; c3++)
            b3.push(d4[c3]);
          c3 < d4.length && b3.push(d4[c3]);
        }
        var f2 = a4.clientRenderedBoundaries, e3;
        for (e3 = 0; e3 < f2.length; e3++) {
          var g2 = f2[e3];
          d4 = b3;
          var h4 = a4.responseState, k3 = g2.id, m4 = g2.errorDigest, n2 = g2.errorMessage, q2 = g2.errorComponentStack;
          if (d4.push(h4.startInlineScript), h4.sentClientRenderFunction ? d4.push('$RX("') : (h4.sentClientRenderFunction = !0, d4.push('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("')), k3 === null)
            throw Error(l2(395));
          if (d4.push(k3), d4.push('"'), m4 || n2 || q2) {
            d4.push(",");
            var C = Da(m4 || "");
            d4.push(C);
          }
          if (n2 || q2) {
            d4.push(",");
            var D2 = Da(n2 || "");
            d4.push(D2);
          }
          if (q2) {
            d4.push(",");
            var z3 = Da(q2);
            d4.push(z3);
          }
          if (!d4.push(")</script>")) {
            a4.destination = null, e3++, f2.splice(0, e3);
            return;
          }
        }
        f2.splice(0, e3);
        var ba = a4.completedBoundaries;
        for (e3 = 0; e3 < ba.length; e3++)
          if (!Pb(a4, b3, ba[e3])) {
            a4.destination = null, e3++, ba.splice(0, e3);
            return;
          }
        ba.splice(0, e3);
        var ca = a4.partialBoundaries;
        for (e3 = 0; e3 < ca.length; e3++) {
          var mb = ca[e3];
          a: {
            f2 = a4, g2 = b3;
            var da = mb.completedSegments;
            for (h4 = 0; h4 < da.length; h4++)
              if (!Qb(f2, g2, mb, da[h4])) {
                h4++, da.splice(0, h4);
                var nb = !1;
                break a;
              }
            da.splice(0, h4), nb = !0;
          }
          if (!nb) {
            a4.destination = null, e3++, ca.splice(0, e3);
            return;
          }
        }
        ca.splice(0, e3);
        var ea = a4.completedBoundaries;
        for (e3 = 0; e3 < ea.length; e3++)
          if (!Pb(a4, b3, ea[e3])) {
            a4.destination = null, e3++, ea.splice(0, e3);
            return;
          }
        ea.splice(0, e3);
      } finally {
        a4.allPendingTasks === 0 && a4.pingedTasks.length === 0 && a4.clientRenderedBoundaries.length === 0 && a4.completedBoundaries.length === 0 && b3.push(null);
      }
    }
    function Rb(a4, b3) {
      try {
        var c3 = a4.abortableTasks;
        c3.forEach(function(c4) {
          return Lb(c4, a4, b3);
        }), c3.clear(), a4.destination !== null && Mb(a4, a4.destination);
      } catch (d4) {
        V(a4, d4), W(a4, d4);
      }
    }
    function Sb() {
    }
    function Tb(a4, b3, c3, d4) {
      var f2 = !1, e3 = null, g2 = "", h4 = { push: function(a5) {
        return a5 !== null && (g2 += a5), !0;
      }, destroy: function(a5) {
        f2 = !0, e3 = a5;
      } }, k3 = !1;
      if (a4 = Ab(a4, Ea(c3, b3 ? b3.identifierPrefix : void 0), { insertionMode: 1, selectedValue: null }, 1 / 0, Sb, void 0, function() {
        k3 = !0;
      }, void 0, void 0), Cb(a4), Rb(a4, d4), a4.status === 1)
        a4.status = 2, h4.destroy(a4.fatalError);
      else if (a4.status !== 2 && a4.destination === null) {
        a4.destination = h4;
        try {
          Mb(a4, h4);
        } catch (m4) {
          V(a4, m4), W(a4, m4);
        }
      }
      if (f2)
        throw e3;
      if (!k3)
        throw Error(l2(426));
      return g2;
    }
    exports.renderToNodeStream = function() {
      throw Error(l2(207));
    };
    exports.renderToStaticMarkup = function(a4, b3) {
      return Tb(a4, b3, !0, 'The server used "renderToStaticMarkup" which does not support Suspense. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
    };
    exports.renderToStaticNodeStream = function() {
      throw Error(l2(208));
    };
    exports.renderToString = function(a4, b3) {
      return Tb(a4, b3, !1, 'The server used "renderToString" which does not support Suspense. If you intended for this Suspense boundary to render the fallback content on the server consider throwing an Error somewhere within the Suspense boundary. If you intended to have the server wait for the suspended component please switch to "renderToReadableStream" which supports Suspense on the server');
    };
    exports.version = "18.2.0";
  }
});

// ../../node_modules/react-dom/cjs/react-dom-server.browser.production.min.js
var require_react_dom_server_browser_production_min = __commonJS({
  "../../node_modules/react-dom/cjs/react-dom-server.browser.production.min.js"(exports) {
    "use strict";
    var aa = require_react();
    function k3(a4) {
      for (var b3 = "https://reactjs.org/docs/error-decoder.html?invariant=" + a4, c3 = 1; c3 < arguments.length; c3++)
        b3 += "&args[]=" + encodeURIComponent(arguments[c3]);
      return "Minified React error #" + a4 + "; visit " + b3 + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
    }
    var l2 = null, n2 = 0;
    function p2(a4, b3) {
      if (b3.length !== 0)
        if (512 < b3.length)
          0 < n2 && (a4.enqueue(new Uint8Array(l2.buffer, 0, n2)), l2 = new Uint8Array(512), n2 = 0), a4.enqueue(b3);
        else {
          var c3 = l2.length - n2;
          c3 < b3.length && (c3 === 0 ? a4.enqueue(l2) : (l2.set(b3.subarray(0, c3), n2), a4.enqueue(l2), b3 = b3.subarray(c3)), l2 = new Uint8Array(512), n2 = 0), l2.set(b3, n2), n2 += b3.length;
        }
    }
    function t4(a4, b3) {
      return p2(a4, b3), !0;
    }
    function ba(a4) {
      l2 && 0 < n2 && (a4.enqueue(new Uint8Array(l2.buffer, 0, n2)), l2 = null, n2 = 0);
    }
    var ca = new TextEncoder();
    function u3(a4) {
      return ca.encode(a4);
    }
    function w2(a4) {
      return ca.encode(a4);
    }
    function da(a4, b3) {
      typeof a4.error == "function" ? a4.error(b3) : a4.close();
    }
    var x3 = Object.prototype.hasOwnProperty, ea = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, fa = {}, ha = {};
    function ia(a4) {
      return x3.call(ha, a4) ? !0 : x3.call(fa, a4) ? !1 : ea.test(a4) ? ha[a4] = !0 : (fa[a4] = !0, !1);
    }
    function y4(a4, b3, c3, d4, f2, e3, g2) {
      this.acceptsBooleans = b3 === 2 || b3 === 3 || b3 === 4, this.attributeName = d4, this.attributeNamespace = f2, this.mustUseProperty = c3, this.propertyName = a4, this.type = b3, this.sanitizeURL = e3, this.removeEmptyString = g2;
    }
    var z3 = {};
    "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a4) {
      z3[a4] = new y4(a4, 0, !1, a4, null, !1, !1);
    });
    [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(a4) {
      var b3 = a4[0];
      z3[b3] = new y4(b3, 1, !1, a4[1], null, !1, !1);
    });
    ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(a4) {
      z3[a4] = new y4(a4, 2, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(a4) {
      z3[a4] = new y4(a4, 2, !1, a4, null, !1, !1);
    });
    "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a4) {
      z3[a4] = new y4(a4, 3, !1, a4.toLowerCase(), null, !1, !1);
    });
    ["checked", "multiple", "muted", "selected"].forEach(function(a4) {
      z3[a4] = new y4(a4, 3, !0, a4, null, !1, !1);
    });
    ["capture", "download"].forEach(function(a4) {
      z3[a4] = new y4(a4, 4, !1, a4, null, !1, !1);
    });
    ["cols", "rows", "size", "span"].forEach(function(a4) {
      z3[a4] = new y4(a4, 6, !1, a4, null, !1, !1);
    });
    ["rowSpan", "start"].forEach(function(a4) {
      z3[a4] = new y4(a4, 5, !1, a4.toLowerCase(), null, !1, !1);
    });
    var ja = /[\-:]([a-z])/g;
    function ka(a4) {
      return a4[1].toUpperCase();
    }
    "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a4) {
      var b3 = a4.replace(
        ja,
        ka
      );
      z3[b3] = new y4(b3, 1, !1, a4, null, !1, !1);
    });
    "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a4) {
      var b3 = a4.replace(ja, ka);
      z3[b3] = new y4(b3, 1, !1, a4, "http://www.w3.org/1999/xlink", !1, !1);
    });
    ["xml:base", "xml:lang", "xml:space"].forEach(function(a4) {
      var b3 = a4.replace(ja, ka);
      z3[b3] = new y4(b3, 1, !1, a4, "http://www.w3.org/XML/1998/namespace", !1, !1);
    });
    ["tabIndex", "crossOrigin"].forEach(function(a4) {
      z3[a4] = new y4(a4, 1, !1, a4.toLowerCase(), null, !1, !1);
    });
    z3.xlinkHref = new y4("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
    ["src", "href", "action", "formAction"].forEach(function(a4) {
      z3[a4] = new y4(a4, 1, !1, a4.toLowerCase(), null, !0, !0);
    });
    var B2 = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0
    }, la = ["Webkit", "ms", "Moz", "O"];
    Object.keys(B2).forEach(function(a4) {
      la.forEach(function(b3) {
        b3 = b3 + a4.charAt(0).toUpperCase() + a4.substring(1), B2[b3] = B2[a4];
      });
    });
    var oa = /["'&<>]/;
    function C(a4) {
      if (typeof a4 == "boolean" || typeof a4 == "number")
        return "" + a4;
      a4 = "" + a4;
      var b3 = oa.exec(a4);
      if (b3) {
        var c3 = "", d4, f2 = 0;
        for (d4 = b3.index; d4 < a4.length; d4++) {
          switch (a4.charCodeAt(d4)) {
            case 34:
              b3 = "&quot;";
              break;
            case 38:
              b3 = "&amp;";
              break;
            case 39:
              b3 = "&#x27;";
              break;
            case 60:
              b3 = "&lt;";
              break;
            case 62:
              b3 = "&gt;";
              break;
            default:
              continue;
          }
          f2 !== d4 && (c3 += a4.substring(f2, d4)), f2 = d4 + 1, c3 += b3;
        }
        a4 = f2 !== d4 ? c3 + a4.substring(f2, d4) : c3;
      }
      return a4;
    }
    var pa = /([A-Z])/g, qa = /^ms-/, ra = Array.isArray, sa = w2("<script>"), ta = w2("</script>"), ua = w2('<script src="'), va = w2('<script type="module" src="'), wa = w2('" async=""></script>'), xa = /(<\/|<)(s)(cript)/gi;
    function ya(a4, b3, c3, d4) {
      return "" + b3 + (c3 === "s" ? "\\u0073" : "\\u0053") + d4;
    }
    function za(a4, b3, c3, d4, f2) {
      a4 = a4 === void 0 ? "" : a4, b3 = b3 === void 0 ? sa : w2('<script nonce="' + C(b3) + '">');
      var e3 = [];
      if (c3 !== void 0 && e3.push(b3, u3(("" + c3).replace(xa, ya)), ta), d4 !== void 0)
        for (c3 = 0; c3 < d4.length; c3++)
          e3.push(ua, u3(C(d4[c3])), wa);
      if (f2 !== void 0)
        for (d4 = 0; d4 < f2.length; d4++)
          e3.push(va, u3(C(f2[d4])), wa);
      return { bootstrapChunks: e3, startInlineScript: b3, placeholderPrefix: w2(a4 + "P:"), segmentPrefix: w2(a4 + "S:"), boundaryPrefix: a4 + "B:", idPrefix: a4, nextSuspenseID: 0, sentCompleteSegmentFunction: !1, sentCompleteBoundaryFunction: !1, sentClientRenderFunction: !1 };
    }
    function D2(a4, b3) {
      return { insertionMode: a4, selectedValue: b3 };
    }
    function Aa(a4) {
      return D2(a4 === "http://www.w3.org/2000/svg" ? 2 : a4 === "http://www.w3.org/1998/Math/MathML" ? 3 : 0, null);
    }
    function Ba(a4, b3, c3) {
      switch (b3) {
        case "select":
          return D2(1, c3.value != null ? c3.value : c3.defaultValue);
        case "svg":
          return D2(2, null);
        case "math":
          return D2(3, null);
        case "foreignObject":
          return D2(1, null);
        case "table":
          return D2(4, null);
        case "thead":
        case "tbody":
        case "tfoot":
          return D2(5, null);
        case "colgroup":
          return D2(7, null);
        case "tr":
          return D2(6, null);
      }
      return 4 <= a4.insertionMode || a4.insertionMode === 0 ? D2(1, null) : a4;
    }
    var Ca = w2("<!-- -->");
    function Da(a4, b3, c3, d4) {
      return b3 === "" ? d4 : (d4 && a4.push(Ca), a4.push(u3(C(b3))), !0);
    }
    var Ea = /* @__PURE__ */ new Map(), Fa = w2(' style="'), Ga = w2(":"), Ha = w2(";");
    function Ia(a4, b3, c3) {
      if (typeof c3 != "object")
        throw Error(k3(62));
      b3 = !0;
      for (var d4 in c3)
        if (x3.call(c3, d4)) {
          var f2 = c3[d4];
          if (f2 != null && typeof f2 != "boolean" && f2 !== "") {
            if (d4.indexOf("--") === 0) {
              var e3 = u3(C(d4));
              f2 = u3(C(("" + f2).trim()));
            } else {
              e3 = d4;
              var g2 = Ea.get(e3);
              g2 !== void 0 || (g2 = w2(C(e3.replace(pa, "-$1").toLowerCase().replace(qa, "-ms-"))), Ea.set(e3, g2)), e3 = g2, f2 = typeof f2 == "number" ? f2 === 0 || x3.call(B2, d4) ? u3("" + f2) : u3(f2 + "px") : u3(C(("" + f2).trim()));
            }
            b3 ? (b3 = !1, a4.push(Fa, e3, Ga, f2)) : a4.push(Ha, e3, Ga, f2);
          }
        }
      b3 || a4.push(E2);
    }
    var H4 = w2(" "), I2 = w2('="'), E2 = w2('"'), Ja = w2('=""');
    function J(a4, b3, c3, d4) {
      switch (c3) {
        case "style":
          Ia(a4, b3, d4);
          return;
        case "defaultValue":
        case "defaultChecked":
        case "innerHTML":
        case "suppressContentEditableWarning":
        case "suppressHydrationWarning":
          return;
      }
      if (!(2 < c3.length) || c3[0] !== "o" && c3[0] !== "O" || c3[1] !== "n" && c3[1] !== "N") {
        if (b3 = z3.hasOwnProperty(c3) ? z3[c3] : null, b3 !== null) {
          switch (typeof d4) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (!b3.acceptsBooleans)
                return;
          }
          switch (c3 = u3(b3.attributeName), b3.type) {
            case 3:
              d4 && a4.push(H4, c3, Ja);
              break;
            case 4:
              d4 === !0 ? a4.push(H4, c3, Ja) : d4 !== !1 && a4.push(H4, c3, I2, u3(C(d4)), E2);
              break;
            case 5:
              isNaN(d4) || a4.push(H4, c3, I2, u3(C(d4)), E2);
              break;
            case 6:
              !isNaN(d4) && 1 <= d4 && a4.push(H4, c3, I2, u3(C(d4)), E2);
              break;
            default:
              b3.sanitizeURL && (d4 = "" + d4), a4.push(H4, c3, I2, u3(C(d4)), E2);
          }
        } else if (ia(c3)) {
          switch (typeof d4) {
            case "function":
            case "symbol":
              return;
            case "boolean":
              if (b3 = c3.toLowerCase().slice(0, 5), b3 !== "data-" && b3 !== "aria-")
                return;
          }
          a4.push(H4, u3(c3), I2, u3(C(d4)), E2);
        }
      }
    }
    var K2 = w2(">"), Ka = w2("/>");
    function L3(a4, b3, c3) {
      if (b3 != null) {
        if (c3 != null)
          throw Error(k3(60));
        if (typeof b3 != "object" || !("__html" in b3))
          throw Error(k3(61));
        b3 = b3.__html, b3 != null && a4.push(u3("" + b3));
      }
    }
    function La(a4) {
      var b3 = "";
      return aa.Children.forEach(a4, function(a5) {
        a5 != null && (b3 += a5);
      }), b3;
    }
    var Ma = w2(' selected=""');
    function Na(a4, b3, c3, d4) {
      a4.push(M4(c3));
      var f2 = c3 = null, e3;
      for (e3 in b3)
        if (x3.call(b3, e3)) {
          var g2 = b3[e3];
          if (g2 != null)
            switch (e3) {
              case "children":
                c3 = g2;
                break;
              case "dangerouslySetInnerHTML":
                f2 = g2;
                break;
              default:
                J(a4, d4, e3, g2);
            }
        }
      return a4.push(K2), L3(a4, f2, c3), typeof c3 == "string" ? (a4.push(u3(C(c3))), null) : c3;
    }
    var Oa = w2(`
`), Pa = /^[a-zA-Z][a-zA-Z:_\.\-\d]*$/, Qa = /* @__PURE__ */ new Map();
    function M4(a4) {
      var b3 = Qa.get(a4);
      if (b3 === void 0) {
        if (!Pa.test(a4))
          throw Error(k3(65, a4));
        b3 = w2("<" + a4), Qa.set(a4, b3);
      }
      return b3;
    }
    var Ra = w2("<!DOCTYPE html>");
    function Sa(a4, b3, c3, d4, f2) {
      switch (b3) {
        case "select":
          a4.push(M4("select"));
          var e3 = null, g2 = null;
          for (r3 in c3)
            if (x3.call(c3, r3)) {
              var h4 = c3[r3];
              if (h4 != null)
                switch (r3) {
                  case "children":
                    e3 = h4;
                    break;
                  case "dangerouslySetInnerHTML":
                    g2 = h4;
                    break;
                  case "defaultValue":
                  case "value":
                    break;
                  default:
                    J(a4, d4, r3, h4);
                }
            }
          return a4.push(K2), L3(a4, g2, e3), e3;
        case "option":
          g2 = f2.selectedValue, a4.push(M4("option"));
          var m4 = h4 = null, q2 = null, r3 = null;
          for (e3 in c3)
            if (x3.call(c3, e3)) {
              var v2 = c3[e3];
              if (v2 != null)
                switch (e3) {
                  case "children":
                    h4 = v2;
                    break;
                  case "selected":
                    q2 = v2;
                    break;
                  case "dangerouslySetInnerHTML":
                    r3 = v2;
                    break;
                  case "value":
                    m4 = v2;
                  default:
                    J(a4, d4, e3, v2);
                }
            }
          if (g2 != null)
            if (c3 = m4 !== null ? "" + m4 : La(h4), ra(g2)) {
              for (d4 = 0; d4 < g2.length; d4++)
                if ("" + g2[d4] === c3) {
                  a4.push(Ma);
                  break;
                }
            } else
              "" + g2 === c3 && a4.push(Ma);
          else
            q2 && a4.push(Ma);
          return a4.push(K2), L3(a4, r3, h4), h4;
        case "textarea":
          a4.push(M4("textarea")), r3 = g2 = e3 = null;
          for (h4 in c3)
            if (x3.call(c3, h4) && (m4 = c3[h4], m4 != null))
              switch (h4) {
                case "children":
                  r3 = m4;
                  break;
                case "value":
                  e3 = m4;
                  break;
                case "defaultValue":
                  g2 = m4;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error(k3(91));
                default:
                  J(a4, d4, h4, m4);
              }
          if (e3 === null && g2 !== null && (e3 = g2), a4.push(K2), r3 != null) {
            if (e3 != null)
              throw Error(k3(92));
            if (ra(r3) && 1 < r3.length)
              throw Error(k3(93));
            e3 = "" + r3;
          }
          return typeof e3 == "string" && e3[0] === `
` && a4.push(Oa), e3 !== null && a4.push(u3(C("" + e3))), null;
        case "input":
          a4.push(M4("input")), m4 = r3 = h4 = e3 = null;
          for (g2 in c3)
            if (x3.call(c3, g2) && (q2 = c3[g2], q2 != null))
              switch (g2) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(k3(399, "input"));
                case "defaultChecked":
                  m4 = q2;
                  break;
                case "defaultValue":
                  h4 = q2;
                  break;
                case "checked":
                  r3 = q2;
                  break;
                case "value":
                  e3 = q2;
                  break;
                default:
                  J(a4, d4, g2, q2);
              }
          return r3 !== null ? J(
            a4,
            d4,
            "checked",
            r3
          ) : m4 !== null && J(a4, d4, "checked", m4), e3 !== null ? J(a4, d4, "value", e3) : h4 !== null && J(a4, d4, "value", h4), a4.push(Ka), null;
        case "menuitem":
          a4.push(M4("menuitem"));
          for (var A in c3)
            if (x3.call(c3, A) && (e3 = c3[A], e3 != null))
              switch (A) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(k3(400));
                default:
                  J(a4, d4, A, e3);
              }
          return a4.push(K2), null;
        case "title":
          a4.push(M4("title")), e3 = null;
          for (v2 in c3)
            if (x3.call(c3, v2) && (g2 = c3[v2], g2 != null))
              switch (v2) {
                case "children":
                  e3 = g2;
                  break;
                case "dangerouslySetInnerHTML":
                  throw Error(k3(434));
                default:
                  J(a4, d4, v2, g2);
              }
          return a4.push(K2), e3;
        case "listing":
        case "pre":
          a4.push(M4(b3)), g2 = e3 = null;
          for (m4 in c3)
            if (x3.call(c3, m4) && (h4 = c3[m4], h4 != null))
              switch (m4) {
                case "children":
                  e3 = h4;
                  break;
                case "dangerouslySetInnerHTML":
                  g2 = h4;
                  break;
                default:
                  J(a4, d4, m4, h4);
              }
          if (a4.push(K2), g2 != null) {
            if (e3 != null)
              throw Error(k3(60));
            if (typeof g2 != "object" || !("__html" in g2))
              throw Error(k3(61));
            c3 = g2.__html, c3 != null && (typeof c3 == "string" && 0 < c3.length && c3[0] === `
` ? a4.push(Oa, u3(c3)) : a4.push(u3("" + c3)));
          }
          return typeof e3 == "string" && e3[0] === `
` && a4.push(Oa), e3;
        case "area":
        case "base":
        case "br":
        case "col":
        case "embed":
        case "hr":
        case "img":
        case "keygen":
        case "link":
        case "meta":
        case "param":
        case "source":
        case "track":
        case "wbr":
          a4.push(M4(b3));
          for (var F in c3)
            if (x3.call(c3, F) && (e3 = c3[F], e3 != null))
              switch (F) {
                case "children":
                case "dangerouslySetInnerHTML":
                  throw Error(k3(399, b3));
                default:
                  J(a4, d4, F, e3);
              }
          return a4.push(Ka), null;
        case "annotation-xml":
        case "color-profile":
        case "font-face":
        case "font-face-src":
        case "font-face-uri":
        case "font-face-format":
        case "font-face-name":
        case "missing-glyph":
          return Na(a4, c3, b3, d4);
        case "html":
          return f2.insertionMode === 0 && a4.push(Ra), Na(a4, c3, b3, d4);
        default:
          if (b3.indexOf("-") === -1 && typeof c3.is != "string")
            return Na(a4, c3, b3, d4);
          a4.push(M4(b3)), g2 = e3 = null;
          for (q2 in c3)
            if (x3.call(c3, q2) && (h4 = c3[q2], h4 != null))
              switch (q2) {
                case "children":
                  e3 = h4;
                  break;
                case "dangerouslySetInnerHTML":
                  g2 = h4;
                  break;
                case "style":
                  Ia(a4, d4, h4);
                  break;
                case "suppressContentEditableWarning":
                case "suppressHydrationWarning":
                  break;
                default:
                  ia(q2) && typeof h4 != "function" && typeof h4 != "symbol" && a4.push(H4, u3(q2), I2, u3(C(h4)), E2);
              }
          return a4.push(K2), L3(a4, g2, e3), e3;
      }
    }
    var Ta = w2("</"), Ua = w2(">"), Va = w2('<template id="'), Wa = w2('"></template>'), Xa = w2("<!--$-->"), Ya = w2('<!--$?--><template id="'), Za = w2('"></template>'), $a = w2("<!--$!-->"), ab = w2("<!--/$-->"), bb = w2("<template"), cb = w2('"'), db = w2(' data-dgst="');
    w2(' data-msg="');
    w2(' data-stck="');
    var eb = w2("></template>");
    function fb(a4, b3, c3) {
      if (p2(a4, Ya), c3 === null)
        throw Error(k3(395));
      return p2(a4, c3), t4(a4, Za);
    }
    var gb = w2('<div hidden id="'), hb = w2('">'), ib = w2("</div>"), jb = w2('<svg aria-hidden="true" style="display:none" id="'), kb = w2('">'), lb = w2("</svg>"), mb = w2('<math aria-hidden="true" style="display:none" id="'), nb = w2('">'), ob = w2("</math>"), pb = w2('<table hidden id="'), qb = w2('">'), rb = w2("</table>"), sb = w2('<table hidden><tbody id="'), tb = w2('">'), ub = w2("</tbody></table>"), vb = w2('<table hidden><tr id="'), wb = w2('">'), xb = w2("</tr></table>"), yb = w2('<table hidden><colgroup id="'), zb = w2('">'), Ab = w2("</colgroup></table>");
    function Bb(a4, b3, c3, d4) {
      switch (c3.insertionMode) {
        case 0:
        case 1:
          return p2(a4, gb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, hb);
        case 2:
          return p2(a4, jb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, kb);
        case 3:
          return p2(a4, mb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, nb);
        case 4:
          return p2(a4, pb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, qb);
        case 5:
          return p2(a4, sb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, tb);
        case 6:
          return p2(a4, vb), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, wb);
        case 7:
          return p2(
            a4,
            yb
          ), p2(a4, b3.segmentPrefix), p2(a4, u3(d4.toString(16))), t4(a4, zb);
        default:
          throw Error(k3(397));
      }
    }
    function Cb(a4, b3) {
      switch (b3.insertionMode) {
        case 0:
        case 1:
          return t4(a4, ib);
        case 2:
          return t4(a4, lb);
        case 3:
          return t4(a4, ob);
        case 4:
          return t4(a4, rb);
        case 5:
          return t4(a4, ub);
        case 6:
          return t4(a4, xb);
        case 7:
          return t4(a4, Ab);
        default:
          throw Error(k3(397));
      }
    }
    var Db = w2('function $RS(a,b){a=document.getElementById(a);b=document.getElementById(b);for(a.parentNode.removeChild(a);a.firstChild;)b.parentNode.insertBefore(a.firstChild,b);b.parentNode.removeChild(b)};$RS("'), Eb = w2('$RS("'), Gb = w2('","'), Hb = w2('")</script>'), Ib = w2('function $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if("/$"===d)if(0===e)break;else e--;else"$"!==d&&"$?"!==d&&"$!"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data="$";a._reactRetry&&a._reactRetry()}};$RC("'), Jb = w2('$RC("'), Kb = w2('","'), Lb = w2('")</script>'), Mb = w2('function $RX(b,c,d,e){var a=document.getElementById(b);a&&(b=a.previousSibling,b.data="$!",a=a.dataset,c&&(a.dgst=c),d&&(a.msg=d),e&&(a.stck=e),b._reactRetry&&b._reactRetry())};$RX("'), Nb = w2('$RX("'), Ob = w2('"'), Pb = w2(")</script>"), Qb = w2(","), Rb = /[<\u2028\u2029]/g;
    function Sb(a4) {
      return JSON.stringify(a4).replace(Rb, function(a5) {
        switch (a5) {
          case "<":
            return "\\u003c";
          case "\u2028":
            return "\\u2028";
          case "\u2029":
            return "\\u2029";
          default:
            throw Error("escapeJSStringsForInstructionScripts encountered a match it does not know how to replace. this means the match regex and the replacement characters are no longer in sync. This is a bug in React");
        }
      });
    }
    var N2 = Object.assign, Tb = Symbol.for("react.element"), Ub = Symbol.for("react.portal"), Vb = Symbol.for("react.fragment"), Wb = Symbol.for("react.strict_mode"), Xb = Symbol.for("react.profiler"), Yb = Symbol.for("react.provider"), Zb = Symbol.for("react.context"), $b = Symbol.for("react.forward_ref"), ac = Symbol.for("react.suspense"), bc = Symbol.for("react.suspense_list"), cc = Symbol.for("react.memo"), dc = Symbol.for("react.lazy"), ec = Symbol.for("react.scope"), fc = Symbol.for("react.debug_trace_mode"), gc = Symbol.for("react.legacy_hidden"), hc = Symbol.for("react.default_value"), ic = Symbol.iterator;
    function jc(a4) {
      if (a4 == null)
        return null;
      if (typeof a4 == "function")
        return a4.displayName || a4.name || null;
      if (typeof a4 == "string")
        return a4;
      switch (a4) {
        case Vb:
          return "Fragment";
        case Ub:
          return "Portal";
        case Xb:
          return "Profiler";
        case Wb:
          return "StrictMode";
        case ac:
          return "Suspense";
        case bc:
          return "SuspenseList";
      }
      if (typeof a4 == "object")
        switch (a4.$$typeof) {
          case Zb:
            return (a4.displayName || "Context") + ".Consumer";
          case Yb:
            return (a4._context.displayName || "Context") + ".Provider";
          case $b:
            var b3 = a4.render;
            return a4 = a4.displayName, a4 || (a4 = b3.displayName || b3.name || "", a4 = a4 !== "" ? "ForwardRef(" + a4 + ")" : "ForwardRef"), a4;
          case cc:
            return b3 = a4.displayName || null, b3 !== null ? b3 : jc(a4.type) || "Memo";
          case dc:
            b3 = a4._payload, a4 = a4._init;
            try {
              return jc(a4(b3));
            } catch {
            }
        }
      return null;
    }
    var kc = {};
    function lc(a4, b3) {
      if (a4 = a4.contextTypes, !a4)
        return kc;
      var c3 = {}, d4;
      for (d4 in a4)
        c3[d4] = b3[d4];
      return c3;
    }
    var O2 = null;
    function P(a4, b3) {
      if (a4 !== b3) {
        a4.context._currentValue = a4.parentValue, a4 = a4.parent;
        var c3 = b3.parent;
        if (a4 === null) {
          if (c3 !== null)
            throw Error(k3(401));
        } else {
          if (c3 === null)
            throw Error(k3(401));
          P(a4, c3);
        }
        b3.context._currentValue = b3.value;
      }
    }
    function mc(a4) {
      a4.context._currentValue = a4.parentValue, a4 = a4.parent, a4 !== null && mc(a4);
    }
    function nc(a4) {
      var b3 = a4.parent;
      b3 !== null && nc(b3), a4.context._currentValue = a4.value;
    }
    function oc(a4, b3) {
      if (a4.context._currentValue = a4.parentValue, a4 = a4.parent, a4 === null)
        throw Error(k3(402));
      a4.depth === b3.depth ? P(a4, b3) : oc(a4, b3);
    }
    function pc(a4, b3) {
      var c3 = b3.parent;
      if (c3 === null)
        throw Error(k3(402));
      a4.depth === c3.depth ? P(a4, c3) : pc(a4, c3), b3.context._currentValue = b3.value;
    }
    function Q2(a4) {
      var b3 = O2;
      b3 !== a4 && (b3 === null ? nc(a4) : a4 === null ? mc(b3) : b3.depth === a4.depth ? P(b3, a4) : b3.depth > a4.depth ? oc(b3, a4) : pc(b3, a4), O2 = a4);
    }
    var qc = { isMounted: function() {
      return !1;
    }, enqueueSetState: function(a4, b3) {
      a4 = a4._reactInternals, a4.queue !== null && a4.queue.push(b3);
    }, enqueueReplaceState: function(a4, b3) {
      a4 = a4._reactInternals, a4.replace = !0, a4.queue = [b3];
    }, enqueueForceUpdate: function() {
    } };
    function rc(a4, b3, c3, d4) {
      var f2 = a4.state !== void 0 ? a4.state : null;
      a4.updater = qc, a4.props = c3, a4.state = f2;
      var e3 = { queue: [], replace: !1 };
      a4._reactInternals = e3;
      var g2 = b3.contextType;
      if (a4.context = typeof g2 == "object" && g2 !== null ? g2._currentValue : d4, g2 = b3.getDerivedStateFromProps, typeof g2 == "function" && (g2 = g2(c3, f2), f2 = g2 == null ? f2 : N2({}, f2, g2), a4.state = f2), typeof b3.getDerivedStateFromProps != "function" && typeof a4.getSnapshotBeforeUpdate != "function" && (typeof a4.UNSAFE_componentWillMount == "function" || typeof a4.componentWillMount == "function"))
        if (b3 = a4.state, typeof a4.componentWillMount == "function" && a4.componentWillMount(), typeof a4.UNSAFE_componentWillMount == "function" && a4.UNSAFE_componentWillMount(), b3 !== a4.state && qc.enqueueReplaceState(a4, a4.state, null), e3.queue !== null && 0 < e3.queue.length)
          if (b3 = e3.queue, g2 = e3.replace, e3.queue = null, e3.replace = !1, g2 && b3.length === 1)
            a4.state = b3[0];
          else {
            for (e3 = g2 ? b3[0] : a4.state, f2 = !0, g2 = g2 ? 1 : 0; g2 < b3.length; g2++) {
              var h4 = b3[g2];
              h4 = typeof h4 == "function" ? h4.call(a4, e3, c3, d4) : h4, h4 != null && (f2 ? (f2 = !1, e3 = N2({}, e3, h4)) : N2(e3, h4));
            }
            a4.state = e3;
          }
        else
          e3.queue = null;
    }
    var sc = { id: 1, overflow: "" };
    function tc(a4, b3, c3) {
      var d4 = a4.id;
      a4 = a4.overflow;
      var f2 = 32 - uc(d4) - 1;
      d4 &= ~(1 << f2), c3 += 1;
      var e3 = 32 - uc(b3) + f2;
      if (30 < e3) {
        var g2 = f2 - f2 % 5;
        return e3 = (d4 & (1 << g2) - 1).toString(32), d4 >>= g2, f2 -= g2, { id: 1 << 32 - uc(b3) + f2 | c3 << f2 | d4, overflow: e3 + a4 };
      }
      return { id: 1 << e3 | c3 << f2 | d4, overflow: a4 };
    }
    var uc = Math.clz32 ? Math.clz32 : vc, wc = Math.log, xc = Math.LN2;
    function vc(a4) {
      return a4 >>>= 0, a4 === 0 ? 32 : 31 - (wc(a4) / xc | 0) | 0;
    }
    function yc(a4, b3) {
      return a4 === b3 && (a4 !== 0 || 1 / a4 === 1 / b3) || a4 !== a4 && b3 !== b3;
    }
    var zc = typeof Object.is == "function" ? Object.is : yc, R2 = null, Ac = null, Bc = null, S5 = null, T3 = !1, Cc = !1, U2 = 0, V = null, Dc = 0;
    function W() {
      if (R2 === null)
        throw Error(k3(321));
      return R2;
    }
    function Ec() {
      if (0 < Dc)
        throw Error(k3(312));
      return { memoizedState: null, queue: null, next: null };
    }
    function Fc() {
      return S5 === null ? Bc === null ? (T3 = !1, Bc = S5 = Ec()) : (T3 = !0, S5 = Bc) : S5.next === null ? (T3 = !1, S5 = S5.next = Ec()) : (T3 = !0, S5 = S5.next), S5;
    }
    function Gc() {
      Ac = R2 = null, Cc = !1, Bc = null, Dc = 0, S5 = V = null;
    }
    function Hc(a4, b3) {
      return typeof b3 == "function" ? b3(a4) : b3;
    }
    function Ic(a4, b3, c3) {
      if (R2 = W(), S5 = Fc(), T3) {
        var d4 = S5.queue;
        if (b3 = d4.dispatch, V !== null && (c3 = V.get(d4), c3 !== void 0)) {
          V.delete(d4), d4 = S5.memoizedState;
          do
            d4 = a4(d4, c3.action), c3 = c3.next;
          while (c3 !== null);
          return S5.memoizedState = d4, [d4, b3];
        }
        return [S5.memoizedState, b3];
      }
      return a4 = a4 === Hc ? typeof b3 == "function" ? b3() : b3 : c3 !== void 0 ? c3(b3) : b3, S5.memoizedState = a4, a4 = S5.queue = { last: null, dispatch: null }, a4 = a4.dispatch = Jc.bind(null, R2, a4), [S5.memoizedState, a4];
    }
    function Kc(a4, b3) {
      if (R2 = W(), S5 = Fc(), b3 = b3 === void 0 ? null : b3, S5 !== null) {
        var c3 = S5.memoizedState;
        if (c3 !== null && b3 !== null) {
          var d4 = c3[1];
          a:
            if (d4 === null)
              d4 = !1;
            else {
              for (var f2 = 0; f2 < d4.length && f2 < b3.length; f2++)
                if (!zc(b3[f2], d4[f2])) {
                  d4 = !1;
                  break a;
                }
              d4 = !0;
            }
          if (d4)
            return c3[0];
        }
      }
      return a4 = a4(), S5.memoizedState = [a4, b3], a4;
    }
    function Jc(a4, b3, c3) {
      if (25 <= Dc)
        throw Error(k3(301));
      if (a4 === R2)
        if (Cc = !0, a4 = { action: c3, next: null }, V === null && (V = /* @__PURE__ */ new Map()), c3 = V.get(b3), c3 === void 0)
          V.set(b3, a4);
        else {
          for (b3 = c3; b3.next !== null; )
            b3 = b3.next;
          b3.next = a4;
        }
    }
    function Lc() {
      throw Error(k3(394));
    }
    function Mc() {
    }
    var Oc = { readContext: function(a4) {
      return a4._currentValue;
    }, useContext: function(a4) {
      return W(), a4._currentValue;
    }, useMemo: Kc, useReducer: Ic, useRef: function(a4) {
      R2 = W(), S5 = Fc();
      var b3 = S5.memoizedState;
      return b3 === null ? (a4 = { current: a4 }, S5.memoizedState = a4) : b3;
    }, useState: function(a4) {
      return Ic(Hc, a4);
    }, useInsertionEffect: Mc, useLayoutEffect: function() {
    }, useCallback: function(a4, b3) {
      return Kc(function() {
        return a4;
      }, b3);
    }, useImperativeHandle: Mc, useEffect: Mc, useDebugValue: Mc, useDeferredValue: function(a4) {
      return W(), a4;
    }, useTransition: function() {
      return W(), [!1, Lc];
    }, useId: function() {
      var a4 = Ac.treeContext, b3 = a4.overflow;
      a4 = a4.id, a4 = (a4 & ~(1 << 32 - uc(a4) - 1)).toString(32) + b3;
      var c3 = Nc;
      if (c3 === null)
        throw Error(k3(404));
      return b3 = U2++, a4 = ":" + c3.idPrefix + "R" + a4, 0 < b3 && (a4 += "H" + b3.toString(32)), a4 + ":";
    }, useMutableSource: function(a4, b3) {
      return W(), b3(a4._source);
    }, useSyncExternalStore: function(a4, b3, c3) {
      if (c3 === void 0)
        throw Error(k3(407));
      return c3();
    } }, Nc = null, Pc = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentDispatcher;
    function Qc(a4) {
      return console.error(a4), null;
    }
    function X2() {
    }
    function Rc(a4, b3, c3, d4, f2, e3, g2, h4, m4) {
      var q2 = [], r3 = /* @__PURE__ */ new Set();
      return b3 = { destination: null, responseState: b3, progressiveChunkSize: d4 === void 0 ? 12800 : d4, status: 0, fatalError: null, nextSegmentId: 0, allPendingTasks: 0, pendingRootTasks: 0, completedRootSegment: null, abortableTasks: r3, pingedTasks: q2, clientRenderedBoundaries: [], completedBoundaries: [], partialBoundaries: [], onError: f2 === void 0 ? Qc : f2, onAllReady: e3 === void 0 ? X2 : e3, onShellReady: g2 === void 0 ? X2 : g2, onShellError: h4 === void 0 ? X2 : h4, onFatalError: m4 === void 0 ? X2 : m4 }, c3 = Sc(b3, 0, null, c3, !1, !1), c3.parentFlushed = !0, a4 = Tc(b3, a4, null, c3, r3, kc, null, sc), q2.push(a4), b3;
    }
    function Tc(a4, b3, c3, d4, f2, e3, g2, h4) {
      a4.allPendingTasks++, c3 === null ? a4.pendingRootTasks++ : c3.pendingTasks++;
      var m4 = { node: b3, ping: function() {
        var b4 = a4.pingedTasks;
        b4.push(m4), b4.length === 1 && Uc(a4);
      }, blockedBoundary: c3, blockedSegment: d4, abortSet: f2, legacyContext: e3, context: g2, treeContext: h4 };
      return f2.add(m4), m4;
    }
    function Sc(a4, b3, c3, d4, f2, e3) {
      return { status: 0, id: -1, index: b3, parentFlushed: !1, chunks: [], children: [], formatContext: d4, boundary: c3, lastPushedText: f2, textEmbedded: e3 };
    }
    function Y2(a4, b3) {
      if (a4 = a4.onError(b3), a4 != null && typeof a4 != "string")
        throw Error('onError returned something with a type other than "string". onError should return a string and may return null or undefined but must not return anything else. It received something of type "' + typeof a4 + '" instead');
      return a4;
    }
    function Vc(a4, b3) {
      var c3 = a4.onShellError;
      c3(b3), c3 = a4.onFatalError, c3(b3), a4.destination !== null ? (a4.status = 2, da(a4.destination, b3)) : (a4.status = 1, a4.fatalError = b3);
    }
    function Wc(a4, b3, c3, d4, f2) {
      for (R2 = {}, Ac = b3, U2 = 0, a4 = c3(d4, f2); Cc; )
        Cc = !1, U2 = 0, Dc += 1, S5 = null, a4 = c3(d4, f2);
      return Gc(), a4;
    }
    function Xc(a4, b3, c3, d4) {
      var f2 = c3.render(), e3 = d4.childContextTypes;
      if (e3 != null) {
        var g2 = b3.legacyContext;
        if (typeof c3.getChildContext != "function")
          d4 = g2;
        else {
          c3 = c3.getChildContext();
          for (var h4 in c3)
            if (!(h4 in e3))
              throw Error(k3(108, jc(d4) || "Unknown", h4));
          d4 = N2({}, g2, c3);
        }
        b3.legacyContext = d4, Z2(a4, b3, f2), b3.legacyContext = g2;
      } else
        Z2(a4, b3, f2);
    }
    function Yc(a4, b3) {
      if (a4 && a4.defaultProps) {
        b3 = N2({}, b3), a4 = a4.defaultProps;
        for (var c3 in a4)
          b3[c3] === void 0 && (b3[c3] = a4[c3]);
        return b3;
      }
      return b3;
    }
    function Zc(a4, b3, c3, d4, f2) {
      if (typeof c3 == "function")
        if (c3.prototype && c3.prototype.isReactComponent) {
          f2 = lc(c3, b3.legacyContext);
          var e3 = c3.contextType;
          e3 = new c3(d4, typeof e3 == "object" && e3 !== null ? e3._currentValue : f2), rc(e3, c3, d4, f2), Xc(a4, b3, e3, c3);
        } else {
          e3 = lc(c3, b3.legacyContext), f2 = Wc(a4, b3, c3, d4, e3);
          var g2 = U2 !== 0;
          if (typeof f2 == "object" && f2 !== null && typeof f2.render == "function" && f2.$$typeof === void 0)
            rc(f2, c3, d4, e3), Xc(a4, b3, f2, c3);
          else if (g2) {
            d4 = b3.treeContext, b3.treeContext = tc(d4, 1, 0);
            try {
              Z2(a4, b3, f2);
            } finally {
              b3.treeContext = d4;
            }
          } else
            Z2(a4, b3, f2);
        }
      else if (typeof c3 == "string") {
        switch (f2 = b3.blockedSegment, e3 = Sa(f2.chunks, c3, d4, a4.responseState, f2.formatContext), f2.lastPushedText = !1, g2 = f2.formatContext, f2.formatContext = Ba(g2, c3, d4), $c(a4, b3, e3), f2.formatContext = g2, c3) {
          case "area":
          case "base":
          case "br":
          case "col":
          case "embed":
          case "hr":
          case "img":
          case "input":
          case "keygen":
          case "link":
          case "meta":
          case "param":
          case "source":
          case "track":
          case "wbr":
            break;
          default:
            f2.chunks.push(Ta, u3(c3), Ua);
        }
        f2.lastPushedText = !1;
      } else {
        switch (c3) {
          case gc:
          case fc:
          case Wb:
          case Xb:
          case Vb:
            Z2(a4, b3, d4.children);
            return;
          case bc:
            Z2(a4, b3, d4.children);
            return;
          case ec:
            throw Error(k3(343));
          case ac:
            a: {
              c3 = b3.blockedBoundary, f2 = b3.blockedSegment, e3 = d4.fallback, d4 = d4.children, g2 = /* @__PURE__ */ new Set();
              var h4 = { id: null, rootSegmentID: -1, parentFlushed: !1, pendingTasks: 0, forceClientRender: !1, completedSegments: [], byteSize: 0, fallbackAbortableTasks: g2, errorDigest: null }, m4 = Sc(a4, f2.chunks.length, h4, f2.formatContext, !1, !1);
              f2.children.push(m4), f2.lastPushedText = !1;
              var q2 = Sc(a4, 0, null, f2.formatContext, !1, !1);
              q2.parentFlushed = !0, b3.blockedBoundary = h4, b3.blockedSegment = q2;
              try {
                if ($c(
                  a4,
                  b3,
                  d4
                ), q2.lastPushedText && q2.textEmbedded && q2.chunks.push(Ca), q2.status = 1, ad(h4, q2), h4.pendingTasks === 0)
                  break a;
              } catch (r3) {
                q2.status = 4, h4.forceClientRender = !0, h4.errorDigest = Y2(a4, r3);
              } finally {
                b3.blockedBoundary = c3, b3.blockedSegment = f2;
              }
              b3 = Tc(a4, e3, c3, m4, g2, b3.legacyContext, b3.context, b3.treeContext), a4.pingedTasks.push(b3);
            }
            return;
        }
        if (typeof c3 == "object" && c3 !== null)
          switch (c3.$$typeof) {
            case $b:
              if (d4 = Wc(a4, b3, c3.render, d4, f2), U2 !== 0) {
                c3 = b3.treeContext, b3.treeContext = tc(c3, 1, 0);
                try {
                  Z2(a4, b3, d4);
                } finally {
                  b3.treeContext = c3;
                }
              } else
                Z2(a4, b3, d4);
              return;
            case cc:
              c3 = c3.type, d4 = Yc(c3, d4), Zc(a4, b3, c3, d4, f2);
              return;
            case Yb:
              if (f2 = d4.children, c3 = c3._context, d4 = d4.value, e3 = c3._currentValue, c3._currentValue = d4, g2 = O2, O2 = d4 = { parent: g2, depth: g2 === null ? 0 : g2.depth + 1, context: c3, parentValue: e3, value: d4 }, b3.context = d4, Z2(a4, b3, f2), a4 = O2, a4 === null)
                throw Error(k3(403));
              d4 = a4.parentValue, a4.context._currentValue = d4 === hc ? a4.context._defaultValue : d4, a4 = O2 = a4.parent, b3.context = a4;
              return;
            case Zb:
              d4 = d4.children, d4 = d4(c3._currentValue), Z2(a4, b3, d4);
              return;
            case dc:
              f2 = c3._init, c3 = f2(c3._payload), d4 = Yc(c3, d4), Zc(a4, b3, c3, d4, void 0);
              return;
          }
        throw Error(k3(
          130,
          c3 == null ? c3 : typeof c3,
          ""
        ));
      }
    }
    function Z2(a4, b3, c3) {
      if (b3.node = c3, typeof c3 == "object" && c3 !== null) {
        switch (c3.$$typeof) {
          case Tb:
            Zc(a4, b3, c3.type, c3.props, c3.ref);
            return;
          case Ub:
            throw Error(k3(257));
          case dc:
            var d4 = c3._init;
            c3 = d4(c3._payload), Z2(a4, b3, c3);
            return;
        }
        if (ra(c3)) {
          bd(a4, b3, c3);
          return;
        }
        if (c3 === null || typeof c3 != "object" ? d4 = null : (d4 = ic && c3[ic] || c3["@@iterator"], d4 = typeof d4 == "function" ? d4 : null), d4 && (d4 = d4.call(c3))) {
          if (c3 = d4.next(), !c3.done) {
            var f2 = [];
            do
              f2.push(c3.value), c3 = d4.next();
            while (!c3.done);
            bd(a4, b3, f2);
          }
          return;
        }
        throw a4 = Object.prototype.toString.call(c3), Error(k3(31, a4 === "[object Object]" ? "object with keys {" + Object.keys(c3).join(", ") + "}" : a4));
      }
      typeof c3 == "string" ? (d4 = b3.blockedSegment, d4.lastPushedText = Da(b3.blockedSegment.chunks, c3, a4.responseState, d4.lastPushedText)) : typeof c3 == "number" && (d4 = b3.blockedSegment, d4.lastPushedText = Da(b3.blockedSegment.chunks, "" + c3, a4.responseState, d4.lastPushedText));
    }
    function bd(a4, b3, c3) {
      for (var d4 = c3.length, f2 = 0; f2 < d4; f2++) {
        var e3 = b3.treeContext;
        b3.treeContext = tc(e3, d4, f2);
        try {
          $c(a4, b3, c3[f2]);
        } finally {
          b3.treeContext = e3;
        }
      }
    }
    function $c(a4, b3, c3) {
      var d4 = b3.blockedSegment.formatContext, f2 = b3.legacyContext, e3 = b3.context;
      try {
        return Z2(a4, b3, c3);
      } catch (m4) {
        if (Gc(), typeof m4 == "object" && m4 !== null && typeof m4.then == "function") {
          c3 = m4;
          var g2 = b3.blockedSegment, h4 = Sc(a4, g2.chunks.length, null, g2.formatContext, g2.lastPushedText, !0);
          g2.children.push(h4), g2.lastPushedText = !1, a4 = Tc(a4, b3.node, b3.blockedBoundary, h4, b3.abortSet, b3.legacyContext, b3.context, b3.treeContext).ping, c3.then(a4, a4), b3.blockedSegment.formatContext = d4, b3.legacyContext = f2, b3.context = e3, Q2(e3);
        } else
          throw b3.blockedSegment.formatContext = d4, b3.legacyContext = f2, b3.context = e3, Q2(e3), m4;
      }
    }
    function cd(a4) {
      var b3 = a4.blockedBoundary;
      a4 = a4.blockedSegment, a4.status = 3, dd(this, b3, a4);
    }
    function ed(a4, b3, c3) {
      var d4 = a4.blockedBoundary;
      a4.blockedSegment.status = 3, d4 === null ? (b3.allPendingTasks--, b3.status !== 2 && (b3.status = 2, b3.destination !== null && b3.destination.close())) : (d4.pendingTasks--, d4.forceClientRender || (d4.forceClientRender = !0, a4 = c3 === void 0 ? Error(k3(432)) : c3, d4.errorDigest = b3.onError(a4), d4.parentFlushed && b3.clientRenderedBoundaries.push(d4)), d4.fallbackAbortableTasks.forEach(function(a5) {
        return ed(a5, b3, c3);
      }), d4.fallbackAbortableTasks.clear(), b3.allPendingTasks--, b3.allPendingTasks === 0 && (d4 = b3.onAllReady, d4()));
    }
    function ad(a4, b3) {
      if (b3.chunks.length === 0 && b3.children.length === 1 && b3.children[0].boundary === null) {
        var c3 = b3.children[0];
        c3.id = b3.id, c3.parentFlushed = !0, c3.status === 1 && ad(a4, c3);
      } else
        a4.completedSegments.push(b3);
    }
    function dd(a4, b3, c3) {
      if (b3 === null) {
        if (c3.parentFlushed) {
          if (a4.completedRootSegment !== null)
            throw Error(k3(389));
          a4.completedRootSegment = c3;
        }
        a4.pendingRootTasks--, a4.pendingRootTasks === 0 && (a4.onShellError = X2, b3 = a4.onShellReady, b3());
      } else
        b3.pendingTasks--, b3.forceClientRender || (b3.pendingTasks === 0 ? (c3.parentFlushed && c3.status === 1 && ad(b3, c3), b3.parentFlushed && a4.completedBoundaries.push(b3), b3.fallbackAbortableTasks.forEach(cd, a4), b3.fallbackAbortableTasks.clear()) : c3.parentFlushed && c3.status === 1 && (ad(b3, c3), b3.completedSegments.length === 1 && b3.parentFlushed && a4.partialBoundaries.push(b3)));
      a4.allPendingTasks--, a4.allPendingTasks === 0 && (a4 = a4.onAllReady, a4());
    }
    function Uc(a4) {
      if (a4.status !== 2) {
        var b3 = O2, c3 = Pc.current;
        Pc.current = Oc;
        var d4 = Nc;
        Nc = a4.responseState;
        try {
          var f2 = a4.pingedTasks, e3;
          for (e3 = 0; e3 < f2.length; e3++) {
            var g2 = f2[e3], h4 = a4, m4 = g2.blockedSegment;
            if (m4.status === 0) {
              Q2(g2.context);
              try {
                Z2(h4, g2, g2.node), m4.lastPushedText && m4.textEmbedded && m4.chunks.push(Ca), g2.abortSet.delete(g2), m4.status = 1, dd(h4, g2.blockedBoundary, m4);
              } catch (G2) {
                if (Gc(), typeof G2 == "object" && G2 !== null && typeof G2.then == "function") {
                  var q2 = g2.ping;
                  G2.then(q2, q2);
                } else {
                  g2.abortSet.delete(g2), m4.status = 4;
                  var r3 = g2.blockedBoundary, v2 = G2, A = Y2(h4, v2);
                  if (r3 === null ? Vc(h4, v2) : (r3.pendingTasks--, r3.forceClientRender || (r3.forceClientRender = !0, r3.errorDigest = A, r3.parentFlushed && h4.clientRenderedBoundaries.push(r3))), h4.allPendingTasks--, h4.allPendingTasks === 0) {
                    var F = h4.onAllReady;
                    F();
                  }
                }
              } finally {
              }
            }
          }
          f2.splice(0, e3), a4.destination !== null && fd(a4, a4.destination);
        } catch (G2) {
          Y2(a4, G2), Vc(a4, G2);
        } finally {
          Nc = d4, Pc.current = c3, c3 === Oc && Q2(b3);
        }
      }
    }
    function gd(a4, b3, c3) {
      switch (c3.parentFlushed = !0, c3.status) {
        case 0:
          var d4 = c3.id = a4.nextSegmentId++;
          return c3.lastPushedText = !1, c3.textEmbedded = !1, a4 = a4.responseState, p2(b3, Va), p2(b3, a4.placeholderPrefix), a4 = u3(d4.toString(16)), p2(b3, a4), t4(b3, Wa);
        case 1:
          c3.status = 2;
          var f2 = !0;
          d4 = c3.chunks;
          var e3 = 0;
          c3 = c3.children;
          for (var g2 = 0; g2 < c3.length; g2++) {
            for (f2 = c3[g2]; e3 < f2.index; e3++)
              p2(b3, d4[e3]);
            f2 = hd(a4, b3, f2);
          }
          for (; e3 < d4.length - 1; e3++)
            p2(b3, d4[e3]);
          return e3 < d4.length && (f2 = t4(b3, d4[e3])), f2;
        default:
          throw Error(k3(390));
      }
    }
    function hd(a4, b3, c3) {
      var d4 = c3.boundary;
      if (d4 === null)
        return gd(a4, b3, c3);
      if (d4.parentFlushed = !0, d4.forceClientRender)
        d4 = d4.errorDigest, t4(b3, $a), p2(b3, bb), d4 && (p2(b3, db), p2(b3, u3(C(d4))), p2(b3, cb)), t4(b3, eb), gd(a4, b3, c3);
      else if (0 < d4.pendingTasks) {
        d4.rootSegmentID = a4.nextSegmentId++, 0 < d4.completedSegments.length && a4.partialBoundaries.push(d4);
        var f2 = a4.responseState, e3 = f2.nextSuspenseID++;
        f2 = w2(f2.boundaryPrefix + e3.toString(16)), d4 = d4.id = f2, fb(b3, a4.responseState, d4), gd(a4, b3, c3);
      } else if (d4.byteSize > a4.progressiveChunkSize)
        d4.rootSegmentID = a4.nextSegmentId++, a4.completedBoundaries.push(d4), fb(b3, a4.responseState, d4.id), gd(a4, b3, c3);
      else {
        if (t4(b3, Xa), c3 = d4.completedSegments, c3.length !== 1)
          throw Error(k3(391));
        hd(a4, b3, c3[0]);
      }
      return t4(b3, ab);
    }
    function id3(a4, b3, c3) {
      return Bb(b3, a4.responseState, c3.formatContext, c3.id), hd(a4, b3, c3), Cb(b3, c3.formatContext);
    }
    function jd(a4, b3, c3) {
      for (var d4 = c3.completedSegments, f2 = 0; f2 < d4.length; f2++)
        kd(a4, b3, c3, d4[f2]);
      if (d4.length = 0, a4 = a4.responseState, d4 = c3.id, c3 = c3.rootSegmentID, p2(b3, a4.startInlineScript), a4.sentCompleteBoundaryFunction ? p2(b3, Jb) : (a4.sentCompleteBoundaryFunction = !0, p2(b3, Ib)), d4 === null)
        throw Error(k3(395));
      return c3 = u3(c3.toString(16)), p2(b3, d4), p2(b3, Kb), p2(b3, a4.segmentPrefix), p2(b3, c3), t4(b3, Lb);
    }
    function kd(a4, b3, c3, d4) {
      if (d4.status === 2)
        return !0;
      var f2 = d4.id;
      if (f2 === -1) {
        if ((d4.id = c3.rootSegmentID) === -1)
          throw Error(k3(392));
        return id3(a4, b3, d4);
      }
      return id3(a4, b3, d4), a4 = a4.responseState, p2(b3, a4.startInlineScript), a4.sentCompleteSegmentFunction ? p2(b3, Eb) : (a4.sentCompleteSegmentFunction = !0, p2(b3, Db)), p2(b3, a4.segmentPrefix), f2 = u3(f2.toString(16)), p2(b3, f2), p2(b3, Gb), p2(b3, a4.placeholderPrefix), p2(b3, f2), t4(b3, Hb);
    }
    function fd(a4, b3) {
      l2 = new Uint8Array(512), n2 = 0;
      try {
        var c3 = a4.completedRootSegment;
        if (c3 !== null && a4.pendingRootTasks === 0) {
          hd(a4, b3, c3), a4.completedRootSegment = null;
          var d4 = a4.responseState.bootstrapChunks;
          for (c3 = 0; c3 < d4.length - 1; c3++)
            p2(b3, d4[c3]);
          c3 < d4.length && t4(b3, d4[c3]);
        }
        var f2 = a4.clientRenderedBoundaries, e3;
        for (e3 = 0; e3 < f2.length; e3++) {
          var g2 = f2[e3];
          d4 = b3;
          var h4 = a4.responseState, m4 = g2.id, q2 = g2.errorDigest, r3 = g2.errorMessage, v2 = g2.errorComponentStack;
          if (p2(d4, h4.startInlineScript), h4.sentClientRenderFunction ? p2(d4, Nb) : (h4.sentClientRenderFunction = !0, p2(
            d4,
            Mb
          )), m4 === null)
            throw Error(k3(395));
          if (p2(d4, m4), p2(d4, Ob), (q2 || r3 || v2) && (p2(d4, Qb), p2(d4, u3(Sb(q2 || "")))), (r3 || v2) && (p2(d4, Qb), p2(d4, u3(Sb(r3 || "")))), v2 && (p2(d4, Qb), p2(d4, u3(Sb(v2)))), !t4(d4, Pb)) {
            a4.destination = null, e3++, f2.splice(0, e3);
            return;
          }
        }
        f2.splice(0, e3);
        var A = a4.completedBoundaries;
        for (e3 = 0; e3 < A.length; e3++)
          if (!jd(a4, b3, A[e3])) {
            a4.destination = null, e3++, A.splice(0, e3);
            return;
          }
        A.splice(0, e3), ba(b3), l2 = new Uint8Array(512), n2 = 0;
        var F = a4.partialBoundaries;
        for (e3 = 0; e3 < F.length; e3++) {
          var G2 = F[e3];
          a: {
            f2 = a4, g2 = b3;
            var ma = G2.completedSegments;
            for (h4 = 0; h4 < ma.length; h4++)
              if (!kd(
                f2,
                g2,
                G2,
                ma[h4]
              )) {
                h4++, ma.splice(0, h4);
                var Fb = !1;
                break a;
              }
            ma.splice(0, h4), Fb = !0;
          }
          if (!Fb) {
            a4.destination = null, e3++, F.splice(0, e3);
            return;
          }
        }
        F.splice(0, e3);
        var na = a4.completedBoundaries;
        for (e3 = 0; e3 < na.length; e3++)
          if (!jd(a4, b3, na[e3])) {
            a4.destination = null, e3++, na.splice(0, e3);
            return;
          }
        na.splice(0, e3);
      } finally {
        ba(b3), a4.allPendingTasks === 0 && a4.pingedTasks.length === 0 && a4.clientRenderedBoundaries.length === 0 && a4.completedBoundaries.length === 0 && b3.close();
      }
    }
    function ld(a4, b3) {
      try {
        var c3 = a4.abortableTasks;
        c3.forEach(function(c4) {
          return ed(c4, a4, b3);
        }), c3.clear(), a4.destination !== null && fd(a4, a4.destination);
      } catch (d4) {
        Y2(a4, d4), Vc(a4, d4);
      }
    }
    exports.renderToReadableStream = function(a4, b3) {
      return new Promise(function(c3, d4) {
        var f2, e3, g2 = new Promise(function(a5, b4) {
          e3 = a5, f2 = b4;
        }), h4 = Rc(a4, za(b3 ? b3.identifierPrefix : void 0, b3 ? b3.nonce : void 0, b3 ? b3.bootstrapScriptContent : void 0, b3 ? b3.bootstrapScripts : void 0, b3 ? b3.bootstrapModules : void 0), Aa(b3 ? b3.namespaceURI : void 0), b3 ? b3.progressiveChunkSize : void 0, b3 ? b3.onError : void 0, e3, function() {
          var a5 = new ReadableStream({ type: "bytes", pull: function(a6) {
            if (h4.status === 1)
              h4.status = 2, da(a6, h4.fatalError);
            else if (h4.status !== 2 && h4.destination === null) {
              h4.destination = a6;
              try {
                fd(h4, a6);
              } catch (A) {
                Y2(h4, A), Vc(h4, A);
              }
            }
          }, cancel: function() {
            ld(h4);
          } }, { highWaterMark: 0 });
          a5.allReady = g2, c3(a5);
        }, function(a5) {
          g2.catch(function() {
          }), d4(a5);
        }, f2);
        if (b3 && b3.signal) {
          var m4 = b3.signal, q2 = function() {
            ld(h4, m4.reason), m4.removeEventListener("abort", q2);
          };
          m4.addEventListener("abort", q2);
        }
        Uc(h4);
      });
    };
    exports.version = "18.2.0";
  }
});

// ../../node_modules/react-dom/server.browser.js
var require_server_browser = __commonJS({
  "../../node_modules/react-dom/server.browser.js"(exports) {
    "use strict";
    var l2, s4;
    l2 = require_react_dom_server_legacy_browser_production_min(), s4 = require_react_dom_server_browser_production_min();
    exports.version = l2.version;
    exports.renderToString = l2.renderToString;
    exports.renderToStaticMarkup = l2.renderToStaticMarkup;
    exports.renderToNodeStream = l2.renderToNodeStream;
    exports.renderToStaticNodeStream = l2.renderToStaticNodeStream;
    exports.renderToReadableStream = s4.renderToReadableStream;
  }
});

// ../../node_modules/react/cjs/react-jsx-runtime.production.min.js
var require_react_jsx_runtime_production_min = __commonJS({
  "../../node_modules/react/cjs/react-jsx-runtime.production.min.js"(exports) {
    "use strict";
    var f2 = require_react(), k3 = Symbol.for("react.element"), l2 = Symbol.for("react.fragment"), m4 = Object.prototype.hasOwnProperty, n2 = f2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, p2 = { key: !0, ref: !0, __self: !0, __source: !0 };
    function q2(c3, a4, g2) {
      var b3, d4 = {}, e3 = null, h4 = null;
      g2 !== void 0 && (e3 = "" + g2), a4.key !== void 0 && (e3 = "" + a4.key), a4.ref !== void 0 && (h4 = a4.ref);
      for (b3 in a4)
        m4.call(a4, b3) && !p2.hasOwnProperty(b3) && (d4[b3] = a4[b3]);
      if (c3 && c3.defaultProps)
        for (b3 in a4 = c3.defaultProps, a4)
          d4[b3] === void 0 && (d4[b3] = a4[b3]);
      return { $$typeof: k3, type: c3, key: e3, ref: h4, props: d4, _owner: n2.current };
    }
    exports.Fragment = l2;
    exports.jsx = q2;
    exports.jsxs = q2;
  }
});

// ../../node_modules/react/jsx-runtime.js
var require_jsx_runtime = __commonJS({
  "../../node_modules/react/jsx-runtime.js"(exports, module) {
    "use strict";
    module.exports = require_react_jsx_runtime_production_min();
  }
});

// ../../node_modules/tslib/tslib.js
var require_tslib = __commonJS({
  "../../node_modules/tslib/tslib.js"(exports, module) {
    var __extends2, __assign2, __rest2, __decorate2, __param2, __esDecorate2, __runInitializers2, __propKey2, __setFunctionName2, __metadata2, __awaiter2, __generator2, __exportStar2, __values2, __read2, __spread2, __spreadArrays2, __spreadArray2, __await2, __asyncGenerator2, __asyncDelegator2, __asyncValues2, __makeTemplateObject2, __importStar2, __importDefault2, __classPrivateFieldGet2, __classPrivateFieldSet2, __classPrivateFieldIn2, __createBinding2, __addDisposableResource2, __disposeResources2;
    (function(factory) {
      var root = typeof globalThis == "object" ? globalThis : typeof self == "object" ? self : typeof this == "object" ? this : {};
      typeof define == "function" && define.amd ? define("tslib", ["exports"], function(exports2) {
        factory(createExporter(root, createExporter(exports2)));
      }) : typeof module == "object" && typeof module.exports == "object" ? factory(createExporter(root, createExporter(module.exports))) : factory(createExporter(root));
      function createExporter(exports2, previous) {
        return exports2 !== root && (typeof Object.create == "function" ? Object.defineProperty(exports2, "__esModule", { value: !0 }) : exports2.__esModule = !0), function(id3, v2) {
          return exports2[id3] = previous ? previous(id3, v2) : v2;
        };
      }
    })(function(exporter) {
      var extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b3) {
        d4.__proto__ = b3;
      } || function(d4, b3) {
        for (var p2 in b3)
          Object.prototype.hasOwnProperty.call(b3, p2) && (d4[p2] = b3[p2]);
      };
      __extends2 = function(d4, b3) {
        if (typeof b3 != "function" && b3 !== null)
          throw new TypeError("Class extends value " + String(b3) + " is not a constructor or null");
        extendStatics(d4, b3);
        function __() {
          this.constructor = d4;
        }
        d4.prototype = b3 === null ? Object.create(b3) : (__.prototype = b3.prototype, new __());
      }, __assign2 = Object.assign || function(t4) {
        for (var s4, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s4 = arguments[i3];
          for (var p2 in s4)
            Object.prototype.hasOwnProperty.call(s4, p2) && (t4[p2] = s4[p2]);
        }
        return t4;
      }, __rest2 = function(s4, e3) {
        var t4 = {};
        for (var p2 in s4)
          Object.prototype.hasOwnProperty.call(s4, p2) && e3.indexOf(p2) < 0 && (t4[p2] = s4[p2]);
        if (s4 != null && typeof Object.getOwnPropertySymbols == "function")
          for (var i3 = 0, p2 = Object.getOwnPropertySymbols(s4); i3 < p2.length; i3++)
            e3.indexOf(p2[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s4, p2[i3]) && (t4[p2[i3]] = s4[p2[i3]]);
        return t4;
      }, __decorate2 = function(decorators, target, key, desc) {
        var c3 = arguments.length, r3 = c3 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d4;
        if (typeof Reflect == "object" && typeof Reflect.decorate == "function")
          r3 = Reflect.decorate(decorators, target, key, desc);
        else
          for (var i3 = decorators.length - 1; i3 >= 0; i3--)
            (d4 = decorators[i3]) && (r3 = (c3 < 3 ? d4(r3) : c3 > 3 ? d4(target, key, r3) : d4(target, key)) || r3);
        return c3 > 3 && r3 && Object.defineProperty(target, key, r3), r3;
      }, __param2 = function(paramIndex, decorator) {
        return function(target, key) {
          decorator(target, key, paramIndex);
        };
      }, __esDecorate2 = function(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f2) {
          if (f2 !== void 0 && typeof f2 != "function")
            throw new TypeError("Function expected");
          return f2;
        }
        for (var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value", target = !descriptorIn && ctor ? contextIn.static ? ctor : ctor.prototype : null, descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {}), _, done = !1, i3 = decorators.length - 1; i3 >= 0; i3--) {
          var context = {};
          for (var p2 in contextIn)
            context[p2] = p2 === "access" ? {} : contextIn[p2];
          for (var p2 in contextIn.access)
            context.access[p2] = contextIn.access[p2];
          context.addInitializer = function(f2) {
            if (done)
              throw new TypeError("Cannot add initializers after decoration has completed");
            extraInitializers.push(accept(f2 || null));
          };
          var result = (0, decorators[i3])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
          if (kind === "accessor") {
            if (result === void 0)
              continue;
            if (result === null || typeof result != "object")
              throw new TypeError("Object expected");
            (_ = accept(result.get)) && (descriptor.get = _), (_ = accept(result.set)) && (descriptor.set = _), (_ = accept(result.init)) && initializers.unshift(_);
          } else
            (_ = accept(result)) && (kind === "field" ? initializers.unshift(_) : descriptor[key] = _);
        }
        target && Object.defineProperty(target, contextIn.name, descriptor), done = !0;
      }, __runInitializers2 = function(thisArg, initializers, value) {
        for (var useValue = arguments.length > 2, i3 = 0; i3 < initializers.length; i3++)
          value = useValue ? initializers[i3].call(thisArg, value) : initializers[i3].call(thisArg);
        return useValue ? value : void 0;
      }, __propKey2 = function(x3) {
        return typeof x3 == "symbol" ? x3 : "".concat(x3);
      }, __setFunctionName2 = function(f2, name, prefix) {
        return typeof name == "symbol" && (name = name.description ? "[".concat(name.description, "]") : ""), Object.defineProperty(f2, "name", { configurable: !0, value: prefix ? "".concat(prefix, " ", name) : name });
      }, __metadata2 = function(metadataKey, metadataValue) {
        if (typeof Reflect == "object" && typeof Reflect.metadata == "function")
          return Reflect.metadata(metadataKey, metadataValue);
      }, __awaiter2 = function(thisArg, _arguments, P, generator) {
        function adopt(value) {
          return value instanceof P ? value : new P(function(resolve) {
            resolve(value);
          });
        }
        return new (P || (P = Promise))(function(resolve, reject) {
          function fulfilled(value) {
            try {
              step(generator.next(value));
            } catch (e3) {
              reject(e3);
            }
          }
          function rejected(value) {
            try {
              step(generator.throw(value));
            } catch (e3) {
              reject(e3);
            }
          }
          function step(result) {
            result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
          }
          step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
      }, __generator2 = function(thisArg, body) {
        var _ = { label: 0, sent: function() {
          if (t4[0] & 1)
            throw t4[1];
          return t4[1];
        }, trys: [], ops: [] }, f2, y4, t4, g2;
        return g2 = { next: verb(0), throw: verb(1), return: verb(2) }, typeof Symbol == "function" && (g2[Symbol.iterator] = function() {
          return this;
        }), g2;
        function verb(n2) {
          return function(v2) {
            return step([n2, v2]);
          };
        }
        function step(op) {
          if (f2)
            throw new TypeError("Generator is already executing.");
          for (; g2 && (g2 = 0, op[0] && (_ = 0)), _; )
            try {
              if (f2 = 1, y4 && (t4 = op[0] & 2 ? y4.return : op[0] ? y4.throw || ((t4 = y4.return) && t4.call(y4), 0) : y4.next) && !(t4 = t4.call(y4, op[1])).done)
                return t4;
              switch (y4 = 0, t4 && (op = [op[0] & 2, t4.value]), op[0]) {
                case 0:
                case 1:
                  t4 = op;
                  break;
                case 4:
                  return _.label++, { value: op[1], done: !1 };
                case 5:
                  _.label++, y4 = op[1], op = [0];
                  continue;
                case 7:
                  op = _.ops.pop(), _.trys.pop();
                  continue;
                default:
                  if (t4 = _.trys, !(t4 = t4.length > 0 && t4[t4.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                    _ = 0;
                    continue;
                  }
                  if (op[0] === 3 && (!t4 || op[1] > t4[0] && op[1] < t4[3])) {
                    _.label = op[1];
                    break;
                  }
                  if (op[0] === 6 && _.label < t4[1]) {
                    _.label = t4[1], t4 = op;
                    break;
                  }
                  if (t4 && _.label < t4[2]) {
                    _.label = t4[2], _.ops.push(op);
                    break;
                  }
                  t4[2] && _.ops.pop(), _.trys.pop();
                  continue;
              }
              op = body.call(thisArg, _);
            } catch (e3) {
              op = [6, e3], y4 = 0;
            } finally {
              f2 = t4 = 0;
            }
          if (op[0] & 5)
            throw op[1];
          return { value: op[0] ? op[1] : void 0, done: !0 };
        }
      }, __exportStar2 = function(m4, o2) {
        for (var p2 in m4)
          p2 !== "default" && !Object.prototype.hasOwnProperty.call(o2, p2) && __createBinding2(o2, m4, p2);
      }, __createBinding2 = Object.create ? function(o2, m4, k3, k22) {
        k22 === void 0 && (k22 = k3);
        var desc = Object.getOwnPropertyDescriptor(m4, k3);
        (!desc || ("get" in desc ? !m4.__esModule : desc.writable || desc.configurable)) && (desc = { enumerable: !0, get: function() {
          return m4[k3];
        } }), Object.defineProperty(o2, k22, desc);
      } : function(o2, m4, k3, k22) {
        k22 === void 0 && (k22 = k3), o2[k22] = m4[k3];
      }, __values2 = function(o2) {
        var s4 = typeof Symbol == "function" && Symbol.iterator, m4 = s4 && o2[s4], i3 = 0;
        if (m4)
          return m4.call(o2);
        if (o2 && typeof o2.length == "number")
          return {
            next: function() {
              return o2 && i3 >= o2.length && (o2 = void 0), { value: o2 && o2[i3++], done: !o2 };
            }
          };
        throw new TypeError(s4 ? "Object is not iterable." : "Symbol.iterator is not defined.");
      }, __read2 = function(o2, n2) {
        var m4 = typeof Symbol == "function" && o2[Symbol.iterator];
        if (!m4)
          return o2;
        var i3 = m4.call(o2), r3, ar = [], e3;
        try {
          for (; (n2 === void 0 || n2-- > 0) && !(r3 = i3.next()).done; )
            ar.push(r3.value);
        } catch (error) {
          e3 = { error };
        } finally {
          try {
            r3 && !r3.done && (m4 = i3.return) && m4.call(i3);
          } finally {
            if (e3)
              throw e3.error;
          }
        }
        return ar;
      }, __spread2 = function() {
        for (var ar = [], i3 = 0; i3 < arguments.length; i3++)
          ar = ar.concat(__read2(arguments[i3]));
        return ar;
      }, __spreadArrays2 = function() {
        for (var s4 = 0, i3 = 0, il = arguments.length; i3 < il; i3++)
          s4 += arguments[i3].length;
        for (var r3 = Array(s4), k3 = 0, i3 = 0; i3 < il; i3++)
          for (var a4 = arguments[i3], j = 0, jl = a4.length; j < jl; j++, k3++)
            r3[k3] = a4[j];
        return r3;
      }, __spreadArray2 = function(to, from, pack) {
        if (pack || arguments.length === 2)
          for (var i3 = 0, l2 = from.length, ar; i3 < l2; i3++)
            (ar || !(i3 in from)) && (ar || (ar = Array.prototype.slice.call(from, 0, i3)), ar[i3] = from[i3]);
        return to.concat(ar || Array.prototype.slice.call(from));
      }, __await2 = function(v2) {
        return this instanceof __await2 ? (this.v = v2, this) : new __await2(v2);
      }, __asyncGenerator2 = function(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var g2 = generator.apply(thisArg, _arguments || []), i3, q2 = [];
        return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3;
        function verb(n2) {
          g2[n2] && (i3[n2] = function(v2) {
            return new Promise(function(a4, b3) {
              q2.push([n2, v2, a4, b3]) > 1 || resume(n2, v2);
            });
          });
        }
        function resume(n2, v2) {
          try {
            step(g2[n2](v2));
          } catch (e3) {
            settle2(q2[0][3], e3);
          }
        }
        function step(r3) {
          r3.value instanceof __await2 ? Promise.resolve(r3.value.v).then(fulfill, reject) : settle2(q2[0][2], r3);
        }
        function fulfill(value) {
          resume("next", value);
        }
        function reject(value) {
          resume("throw", value);
        }
        function settle2(f2, v2) {
          f2(v2), q2.shift(), q2.length && resume(q2[0][0], q2[0][1]);
        }
      }, __asyncDelegator2 = function(o2) {
        var i3, p2;
        return i3 = {}, verb("next"), verb("throw", function(e3) {
          throw e3;
        }), verb("return"), i3[Symbol.iterator] = function() {
          return this;
        }, i3;
        function verb(n2, f2) {
          i3[n2] = o2[n2] ? function(v2) {
            return (p2 = !p2) ? { value: __await2(o2[n2](v2)), done: !1 } : f2 ? f2(v2) : v2;
          } : f2;
        }
      }, __asyncValues2 = function(o2) {
        if (!Symbol.asyncIterator)
          throw new TypeError("Symbol.asyncIterator is not defined.");
        var m4 = o2[Symbol.asyncIterator], i3;
        return m4 ? m4.call(o2) : (o2 = typeof __values2 == "function" ? __values2(o2) : o2[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
          return this;
        }, i3);
        function verb(n2) {
          i3[n2] = o2[n2] && function(v2) {
            return new Promise(function(resolve, reject) {
              v2 = o2[n2](v2), settle2(resolve, reject, v2.done, v2.value);
            });
          };
        }
        function settle2(resolve, reject, d4, v2) {
          Promise.resolve(v2).then(function(v3) {
            resolve({ value: v3, done: d4 });
          }, reject);
        }
      }, __makeTemplateObject2 = function(cooked, raw) {
        return Object.defineProperty ? Object.defineProperty(cooked, "raw", { value: raw }) : cooked.raw = raw, cooked;
      };
      var __setModuleDefault = Object.create ? function(o2, v2) {
        Object.defineProperty(o2, "default", { enumerable: !0, value: v2 });
      } : function(o2, v2) {
        o2.default = v2;
      };
      __importStar2 = function(mod) {
        if (mod && mod.__esModule)
          return mod;
        var result = {};
        if (mod != null)
          for (var k3 in mod)
            k3 !== "default" && Object.prototype.hasOwnProperty.call(mod, k3) && __createBinding2(result, mod, k3);
        return __setModuleDefault(result, mod), result;
      }, __importDefault2 = function(mod) {
        return mod && mod.__esModule ? mod : { default: mod };
      }, __classPrivateFieldGet2 = function(receiver, state, kind, f2) {
        if (kind === "a" && !f2)
          throw new TypeError("Private accessor was defined without a getter");
        if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver))
          throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f2 : kind === "a" ? f2.call(receiver) : f2 ? f2.value : state.get(receiver);
      }, __classPrivateFieldSet2 = function(receiver, state, value, kind, f2) {
        if (kind === "m")
          throw new TypeError("Private method is not writable");
        if (kind === "a" && !f2)
          throw new TypeError("Private accessor was defined without a setter");
        if (typeof state == "function" ? receiver !== state || !f2 : !state.has(receiver))
          throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return kind === "a" ? f2.call(receiver, value) : f2 ? f2.value = value : state.set(receiver, value), value;
      }, __classPrivateFieldIn2 = function(state, receiver) {
        if (receiver === null || typeof receiver != "object" && typeof receiver != "function")
          throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state == "function" ? receiver === state : state.has(receiver);
      }, __addDisposableResource2 = function(env, value, async) {
        if (value != null) {
          if (typeof value != "object" && typeof value != "function")
            throw new TypeError("Object expected.");
          var dispose;
          if (async) {
            if (!Symbol.asyncDispose)
              throw new TypeError("Symbol.asyncDispose is not defined.");
            dispose = value[Symbol.asyncDispose];
          }
          if (dispose === void 0) {
            if (!Symbol.dispose)
              throw new TypeError("Symbol.dispose is not defined.");
            dispose = value[Symbol.dispose];
          }
          if (typeof dispose != "function")
            throw new TypeError("Object not disposable.");
          env.stack.push({ value, dispose, async });
        } else
          async && env.stack.push({ async: !0 });
        return value;
      };
      var _SuppressedError = typeof SuppressedError == "function" ? SuppressedError : function(error, suppressed, message) {
        var e3 = new Error(message);
        return e3.name = "SuppressedError", e3.error = error, e3.suppressed = suppressed, e3;
      };
      __disposeResources2 = function(env) {
        function fail(e3) {
          env.error = env.hasError ? new _SuppressedError(e3, env.error, "An error was suppressed during disposal.") : e3, env.hasError = !0;
        }
        function next() {
          for (; env.stack.length; ) {
            var rec = env.stack.pop();
            try {
              var result = rec.dispose && rec.dispose.call(rec.value);
              if (rec.async)
                return Promise.resolve(result).then(next, function(e3) {
                  return fail(e3), next();
                });
            } catch (e3) {
              fail(e3);
            }
          }
          if (env.hasError)
            throw env.error;
        }
        return next();
      }, exporter("__extends", __extends2), exporter("__assign", __assign2), exporter("__rest", __rest2), exporter("__decorate", __decorate2), exporter("__param", __param2), exporter("__esDecorate", __esDecorate2), exporter("__runInitializers", __runInitializers2), exporter("__propKey", __propKey2), exporter("__setFunctionName", __setFunctionName2), exporter("__metadata", __metadata2), exporter("__awaiter", __awaiter2), exporter("__generator", __generator2), exporter("__exportStar", __exportStar2), exporter("__createBinding", __createBinding2), exporter("__values", __values2), exporter("__read", __read2), exporter("__spread", __spread2), exporter("__spreadArrays", __spreadArrays2), exporter("__spreadArray", __spreadArray2), exporter("__await", __await2), exporter("__asyncGenerator", __asyncGenerator2), exporter("__asyncDelegator", __asyncDelegator2), exporter("__asyncValues", __asyncValues2), exporter("__makeTemplateObject", __makeTemplateObject2), exporter("__importStar", __importStar2), exporter("__importDefault", __importDefault2), exporter("__classPrivateFieldGet", __classPrivateFieldGet2), exporter("__classPrivateFieldSet", __classPrivateFieldSet2), exporter("__classPrivateFieldIn", __classPrivateFieldIn2), exporter("__addDisposableResource", __addDisposableResource2), exporter("__disposeResources", __disposeResources2);
    });
  }
});

// ../../node_modules/form-data/lib/browser.js
var require_browser = __commonJS({
  "../../node_modules/form-data/lib/browser.js"(exports, module) {
    module.exports = typeof self == "object" ? self.FormData : window.FormData;
  }
});

// ../../node_modules/proxy-from-env/index.js
var require_proxy_from_env = __commonJS({
  "../../node_modules/proxy-from-env/index.js"(exports) {
    "use strict";
    var parseUrl = __require("url").parse, DEFAULT_PORTS = {
      ftp: 21,
      gopher: 70,
      http: 80,
      https: 443,
      ws: 80,
      wss: 443
    }, stringEndsWith = String.prototype.endsWith || function(s4) {
      return s4.length <= this.length && this.indexOf(s4, this.length - s4.length) !== -1;
    };
    function getProxyForUrl2(url2) {
      var parsedUrl = typeof url2 == "string" ? parseUrl(url2) : url2 || {}, proto = parsedUrl.protocol, hostname = parsedUrl.host, port = parsedUrl.port;
      if (typeof hostname != "string" || !hostname || typeof proto != "string" || (proto = proto.split(":", 1)[0], hostname = hostname.replace(/:\d*$/, ""), port = parseInt(port) || DEFAULT_PORTS[proto] || 0, !shouldProxy(hostname, port)))
        return "";
      var proxy = getEnv("npm_config_" + proto + "_proxy") || getEnv(proto + "_proxy") || getEnv("npm_config_proxy") || getEnv("all_proxy");
      return proxy && proxy.indexOf("://") === -1 && (proxy = proto + "://" + proxy), proxy;
    }
    function shouldProxy(hostname, port) {
      var NO_PROXY = (getEnv("npm_config_no_proxy") || getEnv("no_proxy")).toLowerCase();
      return NO_PROXY ? NO_PROXY === "*" ? !1 : NO_PROXY.split(/[,\s]/).every(function(proxy) {
        if (!proxy)
          return !0;
        var parsedProxy = proxy.match(/^(.+):(\d+)$/), parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy, parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
        return parsedProxyPort && parsedProxyPort !== port ? !0 : /^[.*]/.test(parsedProxyHostname) ? (parsedProxyHostname.charAt(0) === "*" && (parsedProxyHostname = parsedProxyHostname.slice(1)), !stringEndsWith.call(hostname, parsedProxyHostname)) : hostname !== parsedProxyHostname;
      }) : !0;
    }
    function getEnv(key) {
      return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || "";
    }
    exports.getProxyForUrl = getProxyForUrl2;
  }
});

// ../../node_modules/ms/index.js
var require_ms = __commonJS({
  "../../node_modules/ms/index.js"(exports, module) {
    var s4 = 1e3, m4 = s4 * 60, h4 = m4 * 60, d4 = h4 * 24, w2 = d4 * 7, y4 = d4 * 365.25;
    module.exports = function(val, options) {
      options = options || {};
      var type = typeof val;
      if (type === "string" && val.length > 0)
        return parse3(val);
      if (type === "number" && isFinite(val))
        return options.long ? fmtLong(val) : fmtShort(val);
      throw new Error(
        "val is not a non-empty string or a valid number. val=" + JSON.stringify(val)
      );
    };
    function parse3(str) {
      if (str = String(str), !(str.length > 100)) {
        var match2 = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(
          str
        );
        if (match2) {
          var n2 = parseFloat(match2[1]), type = (match2[2] || "ms").toLowerCase();
          switch (type) {
            case "years":
            case "year":
            case "yrs":
            case "yr":
            case "y":
              return n2 * y4;
            case "weeks":
            case "week":
            case "w":
              return n2 * w2;
            case "days":
            case "day":
            case "d":
              return n2 * d4;
            case "hours":
            case "hour":
            case "hrs":
            case "hr":
            case "h":
              return n2 * h4;
            case "minutes":
            case "minute":
            case "mins":
            case "min":
            case "m":
              return n2 * m4;
            case "seconds":
            case "second":
            case "secs":
            case "sec":
            case "s":
              return n2 * s4;
            case "milliseconds":
            case "millisecond":
            case "msecs":
            case "msec":
            case "ms":
              return n2;
            default:
              return;
          }
        }
      }
    }
    function fmtShort(ms) {
      var msAbs = Math.abs(ms);
      return msAbs >= d4 ? Math.round(ms / d4) + "d" : msAbs >= h4 ? Math.round(ms / h4) + "h" : msAbs >= m4 ? Math.round(ms / m4) + "m" : msAbs >= s4 ? Math.round(ms / s4) + "s" : ms + "ms";
    }
    function fmtLong(ms) {
      var msAbs = Math.abs(ms);
      return msAbs >= d4 ? plural(ms, msAbs, d4, "day") : msAbs >= h4 ? plural(ms, msAbs, h4, "hour") : msAbs >= m4 ? plural(ms, msAbs, m4, "minute") : msAbs >= s4 ? plural(ms, msAbs, s4, "second") : ms + " ms";
    }
    function plural(ms, msAbs, n2, name) {
      var isPlural = msAbs >= n2 * 1.5;
      return Math.round(ms / n2) + " " + name + (isPlural ? "s" : "");
    }
  }
});

// ../../node_modules/debug/src/common.js
var require_common = __commonJS({
  "../../node_modules/debug/src/common.js"(exports, module) {
    function setup(env) {
      createDebug.debug = createDebug, createDebug.default = createDebug, createDebug.coerce = coerce2, createDebug.disable = disable, createDebug.enable = enable, createDebug.enabled = enabled, createDebug.humanize = require_ms(), createDebug.destroy = destroy, Object.keys(env).forEach((key) => {
        createDebug[key] = env[key];
      }), createDebug.names = [], createDebug.skips = [], createDebug.formatters = {};
      function selectColor(namespace) {
        let hash = 0;
        for (let i3 = 0; i3 < namespace.length; i3++)
          hash = (hash << 5) - hash + namespace.charCodeAt(i3), hash |= 0;
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
      }
      createDebug.selectColor = selectColor;
      function createDebug(namespace) {
        let prevTime, enableOverride = null, namespacesCache, enabledCache;
        function debug(...args) {
          if (!debug.enabled)
            return;
          let self2 = debug, curr = Number(/* @__PURE__ */ new Date()), ms = curr - (prevTime || curr);
          self2.diff = ms, self2.prev = prevTime, self2.curr = curr, prevTime = curr, args[0] = createDebug.coerce(args[0]), typeof args[0] != "string" && args.unshift("%O");
          let index3 = 0;
          args[0] = args[0].replace(/%([a-zA-Z%])/g, (match2, format2) => {
            if (match2 === "%%")
              return "%";
            index3++;
            let formatter = createDebug.formatters[format2];
            if (typeof formatter == "function") {
              let val = args[index3];
              match2 = formatter.call(self2, val), args.splice(index3, 1), index3--;
            }
            return match2;
          }), createDebug.formatArgs.call(self2, args), (self2.log || createDebug.log).apply(self2, args);
        }
        return debug.namespace = namespace, debug.useColors = createDebug.useColors(), debug.color = createDebug.selectColor(namespace), debug.extend = extend2, debug.destroy = createDebug.destroy, Object.defineProperty(debug, "enabled", {
          enumerable: !0,
          configurable: !1,
          get: () => enableOverride !== null ? enableOverride : (namespacesCache !== createDebug.namespaces && (namespacesCache = createDebug.namespaces, enabledCache = createDebug.enabled(namespace)), enabledCache),
          set: (v2) => {
            enableOverride = v2;
          }
        }), typeof createDebug.init == "function" && createDebug.init(debug), debug;
      }
      function extend2(namespace, delimiter) {
        let newDebug = createDebug(this.namespace + (typeof delimiter > "u" ? ":" : delimiter) + namespace);
        return newDebug.log = this.log, newDebug;
      }
      function enable(namespaces) {
        createDebug.save(namespaces), createDebug.namespaces = namespaces, createDebug.names = [], createDebug.skips = [];
        let i3, split = (typeof namespaces == "string" ? namespaces : "").split(/[\s,]+/), len = split.length;
        for (i3 = 0; i3 < len; i3++)
          split[i3] && (namespaces = split[i3].replace(/\*/g, ".*?"), namespaces[0] === "-" ? createDebug.skips.push(new RegExp("^" + namespaces.slice(1) + "$")) : createDebug.names.push(new RegExp("^" + namespaces + "$")));
      }
      function disable() {
        let namespaces = [
          ...createDebug.names.map(toNamespace),
          ...createDebug.skips.map(toNamespace).map((namespace) => "-" + namespace)
        ].join(",");
        return createDebug.enable(""), namespaces;
      }
      function enabled(name) {
        if (name[name.length - 1] === "*")
          return !0;
        let i3, len;
        for (i3 = 0, len = createDebug.skips.length; i3 < len; i3++)
          if (createDebug.skips[i3].test(name))
            return !1;
        for (i3 = 0, len = createDebug.names.length; i3 < len; i3++)
          if (createDebug.names[i3].test(name))
            return !0;
        return !1;
      }
      function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, "*");
      }
      function coerce2(val) {
        return val instanceof Error ? val.stack || val.message : val;
      }
      function destroy() {
        console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");
      }
      return createDebug.enable(createDebug.load()), createDebug;
    }
    module.exports = setup;
  }
});

// ../../node_modules/debug/src/browser.js
var require_browser2 = __commonJS({
  "../../node_modules/debug/src/browser.js"(exports, module) {
    exports.formatArgs = formatArgs;
    exports.save = save;
    exports.load = load;
    exports.useColors = useColors;
    exports.storage = localstorage();
    exports.destroy = (() => {
      let warned = !1;
      return () => {
        warned || (warned = !0, console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."));
      };
    })();
    exports.colors = [
      "#0000CC",
      "#0000FF",
      "#0033CC",
      "#0033FF",
      "#0066CC",
      "#0066FF",
      "#0099CC",
      "#0099FF",
      "#00CC00",
      "#00CC33",
      "#00CC66",
      "#00CC99",
      "#00CCCC",
      "#00CCFF",
      "#3300CC",
      "#3300FF",
      "#3333CC",
      "#3333FF",
      "#3366CC",
      "#3366FF",
      "#3399CC",
      "#3399FF",
      "#33CC00",
      "#33CC33",
      "#33CC66",
      "#33CC99",
      "#33CCCC",
      "#33CCFF",
      "#6600CC",
      "#6600FF",
      "#6633CC",
      "#6633FF",
      "#66CC00",
      "#66CC33",
      "#9900CC",
      "#9900FF",
      "#9933CC",
      "#9933FF",
      "#99CC00",
      "#99CC33",
      "#CC0000",
      "#CC0033",
      "#CC0066",
      "#CC0099",
      "#CC00CC",
      "#CC00FF",
      "#CC3300",
      "#CC3333",
      "#CC3366",
      "#CC3399",
      "#CC33CC",
      "#CC33FF",
      "#CC6600",
      "#CC6633",
      "#CC9900",
      "#CC9933",
      "#CCCC00",
      "#CCCC33",
      "#FF0000",
      "#FF0033",
      "#FF0066",
      "#FF0099",
      "#FF00CC",
      "#FF00FF",
      "#FF3300",
      "#FF3333",
      "#FF3366",
      "#FF3399",
      "#FF33CC",
      "#FF33FF",
      "#FF6600",
      "#FF6633",
      "#FF9900",
      "#FF9933",
      "#FFCC00",
      "#FFCC33"
    ];
    function useColors() {
      return typeof window < "u" && window.process && (window.process.type === "renderer" || window.process.__nwjs) ? !0 : typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/) ? !1 : typeof document < "u" && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
      typeof window < "u" && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
      // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
      typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
      typeof navigator < "u" && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
    }
    function formatArgs(args) {
      if (args[0] = (this.useColors ? "%c" : "") + this.namespace + (this.useColors ? " %c" : " ") + args[0] + (this.useColors ? "%c " : " ") + "+" + module.exports.humanize(this.diff), !this.useColors)
        return;
      let c3 = "color: " + this.color;
      args.splice(1, 0, c3, "color: inherit");
      let index3 = 0, lastC = 0;
      args[0].replace(/%[a-zA-Z%]/g, (match2) => {
        match2 !== "%%" && (index3++, match2 === "%c" && (lastC = index3));
      }), args.splice(lastC, 0, c3);
    }
    exports.log = console.debug || console.log || (() => {
    });
    function save(namespaces) {
      try {
        namespaces ? exports.storage.setItem("debug", namespaces) : exports.storage.removeItem("debug");
      } catch {
      }
    }
    function load() {
      let r3;
      try {
        r3 = exports.storage.getItem("debug");
      } catch {
      }
      return !r3 && typeof process < "u" && "env" in process && (r3 = process.env.DEBUG), r3;
    }
    function localstorage() {
      try {
        return localStorage;
      } catch {
      }
    }
    module.exports = require_common()(exports);
    var { formatters: formatters3 } = module.exports;
    formatters3.j = function(v2) {
      try {
        return JSON.stringify(v2);
      } catch (error) {
        return "[UnexpectedJSONParseError]: " + error.message;
      }
    };
  }
});

// ../../node_modules/follow-redirects/debug.js
var require_debug = __commonJS({
  "../../node_modules/follow-redirects/debug.js"(exports, module) {
    var debug;
    module.exports = function() {
      if (!debug) {
        try {
          debug = require_browser2()("follow-redirects");
        } catch {
        }
        typeof debug != "function" && (debug = function() {
        });
      }
      debug.apply(null, arguments);
    };
  }
});

// ../../node_modules/follow-redirects/index.js
var require_follow_redirects = __commonJS({
  "../../node_modules/follow-redirects/index.js"(exports, module) {
    var url2 = __require("url"), URL2 = url2.URL, http2 = __require("http"), https2 = __require("https"), Writable = __require("stream").Writable, assert = __require("assert"), debug = require_debug(), events = ["abort", "aborted", "connect", "error", "socket", "timeout"], eventHandlers = /* @__PURE__ */ Object.create(null);
    events.forEach(function(event) {
      eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
      };
    });
    var InvalidUrlError = createErrorType(
      "ERR_INVALID_URL",
      "Invalid URL",
      TypeError
    ), RedirectionError = createErrorType(
      "ERR_FR_REDIRECTION_FAILURE",
      "Redirected request failed"
    ), TooManyRedirectsError = createErrorType(
      "ERR_FR_TOO_MANY_REDIRECTS",
      "Maximum number of redirects exceeded"
    ), MaxBodyLengthExceededError = createErrorType(
      "ERR_FR_MAX_BODY_LENGTH_EXCEEDED",
      "Request body larger than maxBodyLength limit"
    ), WriteAfterEndError = createErrorType(
      "ERR_STREAM_WRITE_AFTER_END",
      "write after end"
    ), destroy = Writable.prototype.destroy || noop5;
    function RedirectableRequest(options, responseCallback) {
      Writable.call(this), this._sanitizeOptions(options), this._options = options, this._ended = !1, this._ending = !1, this._redirectCount = 0, this._redirects = [], this._requestBodyLength = 0, this._requestBodyBuffers = [], responseCallback && this.on("response", responseCallback);
      var self2 = this;
      this._onNativeResponse = function(response) {
        self2._processResponse(response);
      }, this._performRequest();
    }
    RedirectableRequest.prototype = Object.create(Writable.prototype);
    RedirectableRequest.prototype.abort = function() {
      destroyRequest(this._currentRequest), this._currentRequest.abort(), this.emit("abort");
    };
    RedirectableRequest.prototype.destroy = function(error) {
      return destroyRequest(this._currentRequest, error), destroy.call(this, error), this;
    };
    RedirectableRequest.prototype.write = function(data, encoding, callback) {
      if (this._ending)
        throw new WriteAfterEndError();
      if (!isString4(data) && !isBuffer2(data))
        throw new TypeError("data should be a string, Buffer or Uint8Array");
      if (isFunction3(encoding) && (callback = encoding, encoding = null), data.length === 0) {
        callback && callback();
        return;
      }
      this._requestBodyLength + data.length <= this._options.maxBodyLength ? (this._requestBodyLength += data.length, this._requestBodyBuffers.push({ data, encoding }), this._currentRequest.write(data, encoding, callback)) : (this.emit("error", new MaxBodyLengthExceededError()), this.abort());
    };
    RedirectableRequest.prototype.end = function(data, encoding, callback) {
      if (isFunction3(data) ? (callback = data, data = encoding = null) : isFunction3(encoding) && (callback = encoding, encoding = null), !data)
        this._ended = this._ending = !0, this._currentRequest.end(null, null, callback);
      else {
        var self2 = this, currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
          self2._ended = !0, currentRequest.end(null, null, callback);
        }), this._ending = !0;
      }
    };
    RedirectableRequest.prototype.setHeader = function(name, value) {
      this._options.headers[name] = value, this._currentRequest.setHeader(name, value);
    };
    RedirectableRequest.prototype.removeHeader = function(name) {
      delete this._options.headers[name], this._currentRequest.removeHeader(name);
    };
    RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
      var self2 = this;
      function destroyOnTimeout(socket) {
        socket.setTimeout(msecs), socket.removeListener("timeout", socket.destroy), socket.addListener("timeout", socket.destroy);
      }
      function startTimer(socket) {
        self2._timeout && clearTimeout(self2._timeout), self2._timeout = setTimeout(function() {
          self2.emit("timeout"), clearTimer();
        }, msecs), destroyOnTimeout(socket);
      }
      function clearTimer() {
        self2._timeout && (clearTimeout(self2._timeout), self2._timeout = null), self2.removeListener("abort", clearTimer), self2.removeListener("error", clearTimer), self2.removeListener("response", clearTimer), self2.removeListener("close", clearTimer), callback && self2.removeListener("timeout", callback), self2.socket || self2._currentRequest.removeListener("socket", startTimer);
      }
      return callback && this.on("timeout", callback), this.socket ? startTimer(this.socket) : this._currentRequest.once("socket", startTimer), this.on("socket", destroyOnTimeout), this.on("abort", clearTimer), this.on("error", clearTimer), this.on("response", clearTimer), this.on("close", clearTimer), this;
    };
    [
      "flushHeaders",
      "getHeader",
      "setNoDelay",
      "setSocketKeepAlive"
    ].forEach(function(method) {
      RedirectableRequest.prototype[method] = function(a4, b3) {
        return this._currentRequest[method](a4, b3);
      };
    });
    ["aborted", "connection", "socket"].forEach(function(property) {
      Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
          return this._currentRequest[property];
        }
      });
    });
    RedirectableRequest.prototype._sanitizeOptions = function(options) {
      if (options.headers || (options.headers = {}), options.host && (options.hostname || (options.hostname = options.host), delete options.host), !options.pathname && options.path) {
        var searchPos = options.path.indexOf("?");
        searchPos < 0 ? options.pathname = options.path : (options.pathname = options.path.substring(0, searchPos), options.search = options.path.substring(searchPos));
      }
    };
    RedirectableRequest.prototype._performRequest = function() {
      var protocol = this._options.protocol, nativeProtocol = this._options.nativeProtocols[protocol];
      if (!nativeProtocol) {
        this.emit("error", new TypeError("Unsupported protocol " + protocol));
        return;
      }
      if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
      }
      var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
      request._redirectable = this;
      for (var event of events)
        request.on(event, eventHandlers[event]);
      if (this._currentUrl = /^\//.test(this._options.path) ? url2.format(this._options) : (
        // When making a request to a proxy, […]
        // a client MUST send the target URI in absolute-form […].
        this._options.path
      ), this._isRedirect) {
        var i3 = 0, self2 = this, buffers = this._requestBodyBuffers;
        (function writeNext(error) {
          if (request === self2._currentRequest)
            if (error)
              self2.emit("error", error);
            else if (i3 < buffers.length) {
              var buffer = buffers[i3++];
              request.finished || request.write(buffer.data, buffer.encoding, writeNext);
            } else
              self2._ended && request.end();
        })();
      }
    };
    RedirectableRequest.prototype._processResponse = function(response) {
      var statusCode = response.statusCode;
      this._options.trackRedirects && this._redirects.push({
        url: this._currentUrl,
        headers: response.headers,
        statusCode
      });
      var location = response.headers.location;
      if (!location || this._options.followRedirects === !1 || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl, response.redirects = this._redirects, this.emit("response", response), this._requestBodyBuffers = [];
        return;
      }
      if (destroyRequest(this._currentRequest), response.destroy(), ++this._redirectCount > this._options.maxRedirects) {
        this.emit("error", new TooManyRedirectsError());
        return;
      }
      var requestHeaders, beforeRedirect = this._options.beforeRedirect;
      beforeRedirect && (requestHeaders = Object.assign({
        // The Host header was set by nativeProtocol.request
        Host: response.req.getHeader("host")
      }, this._options.headers));
      var method = this._options.method;
      ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
      // the server is redirecting the user agent to a different resource […]
      // A user agent can perform a retrieval request targeting that URI
      // (a GET or HEAD request if using HTTP) […]
      statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) && (this._options.method = "GET", this._requestBodyBuffers = [], removeMatchingHeaders(/^content-/i, this._options.headers));
      var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers), currentUrlParts = url2.parse(this._currentUrl), currentHost = currentHostHeader || currentUrlParts.host, currentUrl = /^\w+:/.test(location) ? this._currentUrl : url2.format(Object.assign(currentUrlParts, { host: currentHost })), redirectUrl;
      try {
        redirectUrl = url2.resolve(currentUrl, location);
      } catch (cause) {
        this.emit("error", new RedirectionError({ cause }));
        return;
      }
      debug("redirecting to", redirectUrl), this._isRedirect = !0;
      var redirectUrlParts = url2.parse(redirectUrl);
      if (Object.assign(this._options, redirectUrlParts), (redirectUrlParts.protocol !== currentUrlParts.protocol && redirectUrlParts.protocol !== "https:" || redirectUrlParts.host !== currentHost && !isSubdomain(redirectUrlParts.host, currentHost)) && removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers), isFunction3(beforeRedirect)) {
        var responseDetails = {
          headers: response.headers,
          statusCode
        }, requestDetails = {
          url: currentUrl,
          method,
          headers: requestHeaders
        };
        try {
          beforeRedirect(this._options, responseDetails, requestDetails);
        } catch (err) {
          this.emit("error", err);
          return;
        }
        this._sanitizeOptions(this._options);
      }
      try {
        this._performRequest();
      } catch (cause) {
        this.emit("error", new RedirectionError({ cause }));
      }
    };
    function wrap(protocols) {
      var exports2 = {
        maxRedirects: 21,
        maxBodyLength: 10485760
      }, nativeProtocols = {};
      return Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":", nativeProtocol = nativeProtocols[protocol] = protocols[scheme], wrappedProtocol = exports2[scheme] = Object.create(nativeProtocol);
        function request(input, options, callback) {
          if (isString4(input)) {
            var parsed;
            try {
              parsed = urlToOptions(new URL2(input));
            } catch {
              parsed = url2.parse(input);
            }
            if (!isString4(parsed.protocol))
              throw new InvalidUrlError({ input });
            input = parsed;
          } else
            URL2 && input instanceof URL2 ? input = urlToOptions(input) : (callback = options, options = input, input = { protocol });
          return isFunction3(options) && (callback = options, options = null), options = Object.assign({
            maxRedirects: exports2.maxRedirects,
            maxBodyLength: exports2.maxBodyLength
          }, input, options), options.nativeProtocols = nativeProtocols, !isString4(options.host) && !isString4(options.hostname) && (options.hostname = "::1"), assert.equal(options.protocol, protocol, "protocol mismatch"), debug("options", options), new RedirectableRequest(options, callback);
        }
        function get2(input, options, callback) {
          var wrappedRequest = wrappedProtocol.request(input, options, callback);
          return wrappedRequest.end(), wrappedRequest;
        }
        Object.defineProperties(wrappedProtocol, {
          request: { value: request, configurable: !0, enumerable: !0, writable: !0 },
          get: { value: get2, configurable: !0, enumerable: !0, writable: !0 }
        });
      }), exports2;
    }
    function noop5() {
    }
    function urlToOptions(urlObject) {
      var options = {
        protocol: urlObject.protocol,
        hostname: urlObject.hostname.startsWith("[") ? (
          /* istanbul ignore next */
          urlObject.hostname.slice(1, -1)
        ) : urlObject.hostname,
        hash: urlObject.hash,
        search: urlObject.search,
        pathname: urlObject.pathname,
        path: urlObject.pathname + urlObject.search,
        href: urlObject.href
      };
      return urlObject.port !== "" && (options.port = Number(urlObject.port)), options;
    }
    function removeMatchingHeaders(regex, headers) {
      var lastValue;
      for (var header in headers)
        regex.test(header) && (lastValue = headers[header], delete headers[header]);
      return lastValue === null || typeof lastValue > "u" ? void 0 : String(lastValue).trim();
    }
    function createErrorType(code, message, baseClass) {
      function CustomError(properties) {
        Error.captureStackTrace(this, this.constructor), Object.assign(this, properties || {}), this.code = code, this.message = this.cause ? message + ": " + this.cause.message : message;
      }
      return CustomError.prototype = new (baseClass || Error)(), CustomError.prototype.constructor = CustomError, CustomError.prototype.name = "Error [" + code + "]", CustomError;
    }
    function destroyRequest(request, error) {
      for (var event of events)
        request.removeListener(event, eventHandlers[event]);
      request.on("error", noop5), request.destroy(error);
    }
    function isSubdomain(subdomain, domain) {
      assert(isString4(subdomain) && isString4(domain));
      var dot = subdomain.length - domain.length - 1;
      return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
    }
    function isString4(value) {
      return typeof value == "string" || value instanceof String;
    }
    function isFunction3(value) {
      return typeof value == "function";
    }
    function isBuffer2(value) {
      return typeof value == "object" && "length" in value;
    }
    module.exports = wrap({ http: http2, https: https2 });
    module.exports.wrap = wrap;
  }
});

// ../../node_modules/@emotion/memoize/dist/memoize.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    return cache[arg] === void 0 && (cache[arg] = fn(arg)), cache[arg];
  };
}
var memoize_esm_default, init_memoize_esm = __esm({
  "../../node_modules/@emotion/memoize/dist/memoize.esm.js"() {
    memoize_esm_default = memoize;
  }
});

// ../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js
var is_prop_valid_esm_exports = {};
__export(is_prop_valid_esm_exports, {
  default: () => is_prop_valid_esm_default
});
var reactPropsRegex, index, is_prop_valid_esm_default, init_is_prop_valid_esm = __esm({
  "../../node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js"() {
    init_memoize_esm();
    reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|inert|itemProp|itemScope|itemType|itemID|itemRef|on|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/, index = memoize_esm_default(
      function(prop) {
        return reactPropsRegex.test(prop) || prop.charCodeAt(0) === 111 && prop.charCodeAt(1) === 110 && prop.charCodeAt(2) < 91;
      }
      /* Z+1 */
    ), is_prop_valid_esm_default = index;
  }
});

// ../../node_modules/command-score/index.js
var require_command_score = __commonJS({
  "../../node_modules/command-score/index.js"(exports, module) {
    var SCORE_CONTINUE_MATCH = 1, SCORE_WORD_JUMP = 0.9, SCORE_CHARACTER_JUMP = 0.3, SCORE_TRANSPOSITION = 0.1, SCORE_LONG_JUMP = 0, PENALTY_SKIPPED = 0.999, PENALTY_CASE_MISMATCH = 0.9999, PENALTY_NOT_COMPLETE = 0.99, IS_GAP_REGEXP = /[\\\/\-_+.# \t"@\[\(\{&]/, COUNT_GAPS_REGEXP = /[\\\/\-_+.# \t"@\[\(\{&]/g;
    function commandScoreInner(string, abbreviation, lowerString, lowerAbbreviation, stringIndex, abbreviationIndex) {
      if (abbreviationIndex === abbreviation.length)
        return stringIndex === string.length ? SCORE_CONTINUE_MATCH : PENALTY_NOT_COMPLETE;
      for (var abbreviationChar = lowerAbbreviation.charAt(abbreviationIndex), index3 = lowerString.indexOf(abbreviationChar, stringIndex), highScore = 0, score, transposedScore, wordBreaks; index3 >= 0; )
        score = commandScoreInner(string, abbreviation, lowerString, lowerAbbreviation, index3 + 1, abbreviationIndex + 1), score > highScore && (index3 === stringIndex ? score *= SCORE_CONTINUE_MATCH : IS_GAP_REGEXP.test(string.charAt(index3 - 1)) ? (score *= SCORE_WORD_JUMP, wordBreaks = string.slice(stringIndex, index3 - 1).match(COUNT_GAPS_REGEXP), wordBreaks && stringIndex > 0 && (score *= Math.pow(PENALTY_SKIPPED, wordBreaks.length))) : IS_GAP_REGEXP.test(string.slice(stringIndex, index3 - 1)) ? (score *= SCORE_LONG_JUMP, stringIndex > 0 && (score *= Math.pow(PENALTY_SKIPPED, index3 - stringIndex))) : (score *= SCORE_CHARACTER_JUMP, stringIndex > 0 && (score *= Math.pow(PENALTY_SKIPPED, index3 - stringIndex))), string.charAt(index3) !== abbreviation.charAt(abbreviationIndex) && (score *= PENALTY_CASE_MISMATCH)), score < SCORE_TRANSPOSITION && lowerString.charAt(index3 - 1) === lowerAbbreviation.charAt(abbreviationIndex + 1) && lowerString.charAt(index3 - 1) !== lowerAbbreviation.charAt(abbreviationIndex) && (transposedScore = commandScoreInner(string, abbreviation, lowerString, lowerAbbreviation, index3 + 1, abbreviationIndex + 2), transposedScore * SCORE_TRANSPOSITION > score && (score = transposedScore * SCORE_TRANSPOSITION)), score > highScore && (highScore = score), index3 = lowerString.indexOf(abbreviationChar, index3 + 1);
      return highScore;
    }
    function commandScore(string, abbreviation) {
      return commandScoreInner(string, abbreviation, string.toLowerCase(), abbreviation.toLowerCase(), 0, 0);
    }
    module.exports = commandScore;
  }
});

// ../../node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "../../node_modules/lodash.debounce/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function", NAN = NaN, symbolTag = "[object Symbol]", reTrim = /^\s+|\s+$/g, reIsBadHex = /^[-+]0x[0-9a-f]+$/i, reIsBinary = /^0b[01]+$/i, reIsOctal = /^0o[0-7]+$/i, freeParseInt = parseInt, freeGlobal = typeof globalThis == "object" && globalThis && globalThis.Object === Object && globalThis, freeSelf = typeof self == "object" && self && self.Object === Object && self, root = freeGlobal || freeSelf || Function("return this")(), objectProto = Object.prototype, objectToString = objectProto.toString, nativeMax = Math.max, nativeMin = Math.min, now = function() {
      return root.Date.now();
    };
    function debounce2(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = !1, maxing = !1, trailing = !0;
      if (typeof func != "function")
        throw new TypeError(FUNC_ERROR_TEXT);
      wait = toNumber(wait) || 0, isObject3(options) && (leading = !!options.leading, maxing = "maxWait" in options, maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait, trailing = "trailing" in options ? !!options.trailing : trailing);
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        return lastArgs = lastThis = void 0, lastInvokeTime = time, result = func.apply(thisArg, args), result;
      }
      function leadingEdge(time) {
        return lastInvokeTime = time, timerId = setTimeout(timerExpired, wait), leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time))
          return trailingEdge(time);
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        return timerId = void 0, trailing && lastArgs ? invokeFunc(time) : (lastArgs = lastThis = void 0, result);
      }
      function cancel() {
        timerId !== void 0 && clearTimeout(timerId), lastInvokeTime = 0, lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        if (lastArgs = arguments, lastThis = this, lastCallTime = time, isInvoking) {
          if (timerId === void 0)
            return leadingEdge(lastCallTime);
          if (maxing)
            return timerId = setTimeout(timerExpired, wait), invokeFunc(lastCallTime);
        }
        return timerId === void 0 && (timerId = setTimeout(timerExpired, wait)), result;
      }
      return debounced.cancel = cancel, debounced.flush = flush, debounced;
    }
    function isObject3(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number")
        return value;
      if (isSymbol(value))
        return NAN;
      if (isObject3(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject3(other) ? other + "" : other;
      }
      if (typeof value != "string")
        return value === 0 ? value : +value;
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = debounce2;
  }
});

// ../../node_modules/ua-parser-js/src/ua-parser.js
var require_ua_parser = __commonJS({
  "../../node_modules/ua-parser-js/src/ua-parser.js"(exports, module) {
    (function(window2, undefined2) {
      "use strict";
      var LIBVERSION = "1.0.37", EMPTY = "", UNKNOWN = "?", FUNC_TYPE = "function", UNDEF_TYPE = "undefined", OBJ_TYPE = "object", STR_TYPE = "string", MAJOR = "major", MODEL = "model", NAME = "name", TYPE = "type", VENDOR = "vendor", VERSION3 = "version", ARCHITECTURE = "architecture", CONSOLE = "console", MOBILE = "mobile", TABLET = "tablet", SMARTTV = "smarttv", WEARABLE = "wearable", EMBEDDED = "embedded", UA_MAX_LENGTH = 500, AMAZON = "Amazon", APPLE = "Apple", ASUS = "ASUS", BLACKBERRY = "BlackBerry", BROWSER = "Browser", CHROME = "Chrome", EDGE = "Edge", FIREFOX = "Firefox", GOOGLE = "Google", HUAWEI = "Huawei", LG = "LG", MICROSOFT = "Microsoft", MOTOROLA = "Motorola", OPERA = "Opera", SAMSUNG = "Samsung", SHARP = "Sharp", SONY = "Sony", XIAOMI = "Xiaomi", ZEBRA = "Zebra", FACEBOOK = "Facebook", CHROMIUM_OS = "Chromium OS", MAC_OS = "Mac OS", extend2 = function(regexes2, extensions) {
        var mergedRegexes = {};
        for (var i3 in regexes2)
          extensions[i3] && extensions[i3].length % 2 === 0 ? mergedRegexes[i3] = extensions[i3].concat(regexes2[i3]) : mergedRegexes[i3] = regexes2[i3];
        return mergedRegexes;
      }, enumerize = function(arr) {
        for (var enums = {}, i3 = 0; i3 < arr.length; i3++)
          enums[arr[i3].toUpperCase()] = arr[i3];
        return enums;
      }, has = function(str1, str2) {
        return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : !1;
      }, lowerize = function(str) {
        return str.toLowerCase();
      }, majorize = function(version) {
        return typeof version === STR_TYPE ? version.replace(/[^\d\.]/g, EMPTY).split(".")[0] : undefined2;
      }, trim2 = function(str, len) {
        if (typeof str === STR_TYPE)
          return str = str.replace(/^\s\s*/, EMPTY), typeof len === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);
      }, rgxMapper = function(ua, arrays) {
        for (var i3 = 0, j, k3, p2, q2, matches, match2; i3 < arrays.length && !matches; ) {
          var regex = arrays[i3], props = arrays[i3 + 1];
          for (j = k3 = 0; j < regex.length && !matches && regex[j]; )
            if (matches = regex[j++].exec(ua), matches)
              for (p2 = 0; p2 < props.length; p2++)
                match2 = matches[++k3], q2 = props[p2], typeof q2 === OBJ_TYPE && q2.length > 0 ? q2.length === 2 ? typeof q2[1] == FUNC_TYPE ? this[q2[0]] = q2[1].call(this, match2) : this[q2[0]] = q2[1] : q2.length === 3 ? typeof q2[1] === FUNC_TYPE && !(q2[1].exec && q2[1].test) ? this[q2[0]] = match2 ? q2[1].call(this, match2, q2[2]) : undefined2 : this[q2[0]] = match2 ? match2.replace(q2[1], q2[2]) : undefined2 : q2.length === 4 && (this[q2[0]] = match2 ? q2[3].call(this, match2.replace(q2[1], q2[2])) : undefined2) : this[q2] = match2 || undefined2;
          i3 += 2;
        }
      }, strMapper = function(str, map) {
        for (var i3 in map)
          if (typeof map[i3] === OBJ_TYPE && map[i3].length > 0) {
            for (var j = 0; j < map[i3].length; j++)
              if (has(map[i3][j], str))
                return i3 === UNKNOWN ? undefined2 : i3;
          } else if (has(map[i3], str))
            return i3 === UNKNOWN ? undefined2 : i3;
        return str;
      }, oldSafariMap = {
        "1.0": "/8",
        "1.2": "/1",
        "1.3": "/3",
        "2.0": "/412",
        "2.0.2": "/416",
        "2.0.3": "/417",
        "2.0.4": "/419",
        "?": "/"
      }, windowsVersionMap = {
        ME: "4.90",
        "NT 3.11": "NT3.51",
        "NT 4.0": "NT4.0",
        2e3: "NT 5.0",
        XP: ["NT 5.1", "NT 5.2"],
        Vista: "NT 6.0",
        7: "NT 6.1",
        8: "NT 6.2",
        "8.1": "NT 6.3",
        10: ["NT 6.4", "NT 10.0"],
        RT: "ARM"
      }, regexes = {
        browser: [
          [
            /\b(?:crmo|crios)\/([\w\.]+)/i
            // Chrome for Android/iOS
          ],
          [VERSION3, [NAME, "Chrome"]],
          [
            /edg(?:e|ios|a)?\/([\w\.]+)/i
            // Microsoft Edge
          ],
          [VERSION3, [NAME, "Edge"]],
          [
            // Presto based
            /(opera mini)\/([-\w\.]+)/i,
            // Opera Mini
            /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,
            // Opera Mobi/Tablet
            /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i
            // Opera
          ],
          [NAME, VERSION3],
          [
            /opios[\/ ]+([\w\.]+)/i
            // Opera mini on iphone >= 8.0
          ],
          [VERSION3, [NAME, OPERA + " Mini"]],
          [
            /\bopr\/([\w\.]+)/i
            // Opera Webkit
          ],
          [VERSION3, [NAME, OPERA]],
          [
            // Mixed
            /\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i
            // Baidu
          ],
          [VERSION3, [NAME, "Baidu"]],
          [
            /(kindle)\/([\w\.]+)/i,
            // Kindle
            /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i,
            // Lunascape/Maxthon/Netfront/Jasmine/Blazer
            // Trident based
            /(avant|iemobile|slim)\s?(?:browser)?[\/ ]?([\w\.]*)/i,
            // Avant/IEMobile/SlimBrowser
            /(?:ms|\()(ie) ([\w\.]+)/i,
            // Internet Explorer
            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon
            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i,
            // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ
            /(heytap|ovi)browser\/([\d\.]+)/i,
            // Heytap/Ovi
            /(weibo)__([\d\.]+)/i
            // Weibo
          ],
          [NAME, VERSION3],
          [
            /(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i
            // UCBrowser
          ],
          [VERSION3, [NAME, "UC" + BROWSER]],
          [
            /microm.+\bqbcore\/([\w\.]+)/i,
            // WeChat Desktop for Windows Built-in Browser
            /\bqbcore\/([\w\.]+).+microm/i,
            /micromessenger\/([\w\.]+)/i
            // WeChat
          ],
          [VERSION3, [NAME, "WeChat"]],
          [
            /konqueror\/([\w\.]+)/i
            // Konqueror
          ],
          [VERSION3, [NAME, "Konqueror"]],
          [
            /trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i
            // IE11
          ],
          [VERSION3, [NAME, "IE"]],
          [
            /ya(?:search)?browser\/([\w\.]+)/i
            // Yandex
          ],
          [VERSION3, [NAME, "Yandex"]],
          [
            /slbrowser\/([\w\.]+)/i
            // Smart Lenovo Browser
          ],
          [VERSION3, [NAME, "Smart Lenovo " + BROWSER]],
          [
            /(avast|avg)\/([\w\.]+)/i
            // Avast/AVG Secure Browser
          ],
          [[NAME, /(.+)/, "$1 Secure " + BROWSER], VERSION3],
          [
            /\bfocus\/([\w\.]+)/i
            // Firefox Focus
          ],
          [VERSION3, [NAME, FIREFOX + " Focus"]],
          [
            /\bopt\/([\w\.]+)/i
            // Opera Touch
          ],
          [VERSION3, [NAME, OPERA + " Touch"]],
          [
            /coc_coc\w+\/([\w\.]+)/i
            // Coc Coc Browser
          ],
          [VERSION3, [NAME, "Coc Coc"]],
          [
            /dolfin\/([\w\.]+)/i
            // Dolphin
          ],
          [VERSION3, [NAME, "Dolphin"]],
          [
            /coast\/([\w\.]+)/i
            // Opera Coast
          ],
          [VERSION3, [NAME, OPERA + " Coast"]],
          [
            /miuibrowser\/([\w\.]+)/i
            // MIUI Browser
          ],
          [VERSION3, [NAME, "MIUI " + BROWSER]],
          [
            /fxios\/([-\w\.]+)/i
            // Firefox for iOS
          ],
          [VERSION3, [NAME, FIREFOX]],
          [
            /\bqihu|(qi?ho?o?|360)browser/i
            // 360
          ],
          [[NAME, "360 " + BROWSER]],
          [
            /(oculus|sailfish|huawei|vivo)browser\/([\w\.]+)/i
          ],
          [[NAME, /(.+)/, "$1 " + BROWSER], VERSION3],
          [
            // Oculus/Sailfish/HuaweiBrowser/VivoBrowser
            /samsungbrowser\/([\w\.]+)/i
            // Samsung Internet
          ],
          [VERSION3, [NAME, SAMSUNG + " Internet"]],
          [
            /(comodo_dragon)\/([\w\.]+)/i
            // Comodo Dragon
          ],
          [[NAME, /_/g, " "], VERSION3],
          [
            /metasr[\/ ]?([\d\.]+)/i
            // Sogou Explorer
          ],
          [VERSION3, [NAME, "Sogou Explorer"]],
          [
            /(sogou)mo\w+\/([\d\.]+)/i
            // Sogou Mobile
          ],
          [[NAME, "Sogou Mobile"], VERSION3],
          [
            /(electron)\/([\w\.]+) safari/i,
            // Electron-based App
            /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,
            // Tesla
            /m?(qqbrowser|2345Explorer)[\/ ]?([\w\.]+)/i
            // QQBrowser/2345 Browser
          ],
          [NAME, VERSION3],
          [
            /(lbbrowser)/i,
            // LieBao Browser
            /\[(linkedin)app\]/i
            // LinkedIn App for iOS & Android
          ],
          [NAME],
          [
            // WebView
            /((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i
            // Facebook App for iOS & Android
          ],
          [[NAME, FACEBOOK], VERSION3],
          [
            /(Klarna)\/([\w\.]+)/i,
            // Klarna Shopping Browser for iOS & Android
            /(kakao(?:talk|story))[\/ ]([\w\.]+)/i,
            // Kakao App
            /(naver)\(.*?(\d+\.[\w\.]+).*\)/i,
            // Naver InApp
            /safari (line)\/([\w\.]+)/i,
            // Line App for iOS
            /\b(line)\/([\w\.]+)\/iab/i,
            // Line App for Android
            /(alipay)client\/([\w\.]+)/i,
            // Alipay
            /(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i
            // Chromium/Instagram/Snapchat
          ],
          [NAME, VERSION3],
          [
            /\bgsa\/([\w\.]+) .*safari\//i
            // Google Search Appliance on iOS
          ],
          [VERSION3, [NAME, "GSA"]],
          [
            /musical_ly(?:.+app_?version\/|_)([\w\.]+)/i
            // TikTok
          ],
          [VERSION3, [NAME, "TikTok"]],
          [
            /headlesschrome(?:\/([\w\.]+)| )/i
            // Chrome Headless
          ],
          [VERSION3, [NAME, CHROME + " Headless"]],
          [
            / wv\).+(chrome)\/([\w\.]+)/i
            // Chrome WebView
          ],
          [[NAME, CHROME + " WebView"], VERSION3],
          [
            /droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i
            // Android Browser
          ],
          [VERSION3, [NAME, "Android " + BROWSER]],
          [
            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i
            // Chrome/OmniWeb/Arora/Tizen/Nokia
          ],
          [NAME, VERSION3],
          [
            /version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i
            // Mobile Safari
          ],
          [VERSION3, [NAME, "Mobile Safari"]],
          [
            /version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i
            // Safari & Safari Mobile
          ],
          [VERSION3, NAME],
          [
            /webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i
            // Safari < 3.0
          ],
          [NAME, [VERSION3, strMapper, oldSafariMap]],
          [
            /(webkit|khtml)\/([\w\.]+)/i
          ],
          [NAME, VERSION3],
          [
            // Gecko based
            /(navigator|netscape\d?)\/([-\w\.]+)/i
            // Netscape
          ],
          [[NAME, "Netscape"], VERSION3],
          [
            /mobile vr; rv:([\w\.]+)\).+firefox/i
            // Firefox Reality
          ],
          [VERSION3, [NAME, FIREFOX + " Reality"]],
          [
            /ekiohf.+(flow)\/([\w\.]+)/i,
            // Flow
            /(swiftfox)/i,
            // Swiftfox
            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i,
            // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar
            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,
            // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix
            /(firefox)\/([\w\.]+)/i,
            // Other Firefox-based
            /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,
            // Mozilla
            // Other
            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,
            // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser
            /(links) \(([\w\.]+)/i,
            // Links
            /panasonic;(viera)/i
            // Panasonic Viera
          ],
          [NAME, VERSION3],
          [
            /(cobalt)\/([\w\.]+)/i
            // Cobalt
          ],
          [NAME, [VERSION3, /master.|lts./, ""]]
        ],
        cpu: [
          [
            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i
            // AMD64 (x64)
          ],
          [[ARCHITECTURE, "amd64"]],
          [
            /(ia32(?=;))/i
            // IA32 (quicktime)
          ],
          [[ARCHITECTURE, lowerize]],
          [
            /((?:i[346]|x)86)[;\)]/i
            // IA32 (x86)
          ],
          [[ARCHITECTURE, "ia32"]],
          [
            /\b(aarch64|arm(v?8e?l?|_?64))\b/i
            // ARM64
          ],
          [[ARCHITECTURE, "arm64"]],
          [
            /\b(arm(?:v[67])?ht?n?[fl]p?)\b/i
            // ARMHF
          ],
          [[ARCHITECTURE, "armhf"]],
          [
            // PocketPC mistakenly identified as PowerPC
            /windows (ce|mobile); ppc;/i
          ],
          [[ARCHITECTURE, "arm"]],
          [
            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i
            // PowerPC
          ],
          [[ARCHITECTURE, /ower/, EMPTY, lowerize]],
          [
            /(sun4\w)[;\)]/i
            // SPARC
          ],
          [[ARCHITECTURE, "sparc"]],
          [
            /((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i
            // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC
          ],
          [[ARCHITECTURE, lowerize]]
        ],
        device: [
          [
            //////////////////////////
            // MOBILES & TABLETS
            /////////////////////////
            // Samsung
            /\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i
          ],
          [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]],
          [
            /\b((?:s[cgp]h|gt|sm)-\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,
            /samsung[- ]([-\w]+)/i,
            /sec-(sgh\w+)/i
          ],
          [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]],
          [
            // Apple
            /(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i
            // iPod/iPhone
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]],
          [
            /\((ipad);[-\w\),; ]+apple/i,
            // iPad
            /applecoremedia\/[\w\.]+ \((ipad)/i,
            /\b(ipad)\d\d?,\d\d?[;\]].+ios/i
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, TABLET]],
          [
            /(macintosh);/i
          ],
          [MODEL, [VENDOR, APPLE]],
          [
            // Sharp
            /\b(sh-?[altvz]?\d\d[a-ekm]?)/i
          ],
          [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]],
          [
            // Huawei
            /\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i
          ],
          [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]],
          [
            /(?:huawei|honor)([-\w ]+)[;\)]/i,
            /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i
          ],
          [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]],
          [
            // Xiaomi
            /\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,
            // Xiaomi POCO
            /\b; (\w+) build\/hm\1/i,
            // Xiaomi Hongmi 'numeric' models
            /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,
            // Xiaomi Hongmi
            /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,
            // Xiaomi Redmi
            /oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,
            // Xiaomi Redmi 'numeric' models
            /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i
            // Xiaomi Mi
          ],
          [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, MOBILE]],
          [
            /oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,
            // Redmi Pad
            /\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i
            // Mi Pad tablets
          ],
          [[MODEL, /_/g, " "], [VENDOR, XIAOMI], [TYPE, TABLET]],
          [
            // OPPO
            /; (\w+) bui.+ oppo/i,
            /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i
          ],
          [MODEL, [VENDOR, "OPPO"], [TYPE, MOBILE]],
          [
            // Vivo
            /vivo (\w+)(?: bui|\))/i,
            /\b(v[12]\d{3}\w?[at])(?: bui|;)/i
          ],
          [MODEL, [VENDOR, "Vivo"], [TYPE, MOBILE]],
          [
            // Realme
            /\b(rmx[1-3]\d{3})(?: bui|;|\))/i
          ],
          [MODEL, [VENDOR, "Realme"], [TYPE, MOBILE]],
          [
            // Motorola
            /\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,
            /\bmot(?:orola)?[- ](\w*)/i,
            /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i
          ],
          [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]],
          [
            /\b(mz60\d|xoom[2 ]{0,2}) build\//i
          ],
          [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]],
          [
            // LG
            /((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i
          ],
          [MODEL, [VENDOR, LG], [TYPE, TABLET]],
          [
            /(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,
            /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,
            /\blg-?([\d\w]+) bui/i
          ],
          [MODEL, [VENDOR, LG], [TYPE, MOBILE]],
          [
            // Lenovo
            /(ideatab[-\w ]+)/i,
            /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i
          ],
          [MODEL, [VENDOR, "Lenovo"], [TYPE, TABLET]],
          [
            // Nokia
            /(?:maemo|nokia).*(n900|lumia \d+)/i,
            /nokia[-_ ]?([-\w\.]*)/i
          ],
          [[MODEL, /_/g, " "], [VENDOR, "Nokia"], [TYPE, MOBILE]],
          [
            // Google
            /(pixel c)\b/i
            // Google Pixel C
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]],
          [
            /droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i
            // Google Pixel
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]],
          [
            // Sony
            /droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i
          ],
          [MODEL, [VENDOR, SONY], [TYPE, MOBILE]],
          [
            /sony tablet [ps]/i,
            /\b(?:sony)?sgp\w+(?: bui|\))/i
          ],
          [[MODEL, "Xperia Tablet"], [VENDOR, SONY], [TYPE, TABLET]],
          [
            // OnePlus
            / (kb2005|in20[12]5|be20[12][59])\b/i,
            /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i
          ],
          [MODEL, [VENDOR, "OnePlus"], [TYPE, MOBILE]],
          [
            // Amazon
            /(alexa)webm/i,
            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\))/i,
            // Kindle Fire without Silk / Echo Show
            /(kf[a-z]+)( bui|\)).+silk\//i
            // Kindle Fire HD
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]],
          [
            /((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i
            // Fire Phone
          ],
          [[MODEL, /(.+)/g, "Fire Phone $1"], [VENDOR, AMAZON], [TYPE, MOBILE]],
          [
            // BlackBerry
            /(playbook);[-\w\),; ]+(rim)/i
            // BlackBerry PlayBook
          ],
          [MODEL, VENDOR, [TYPE, TABLET]],
          [
            /\b((?:bb[a-f]|st[hv])100-\d)/i,
            /\(bb10; (\w+)/i
            // BlackBerry 10
          ],
          [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]],
          [
            // Asus
            /(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i
          ],
          [MODEL, [VENDOR, ASUS], [TYPE, TABLET]],
          [
            / (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i
          ],
          [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]],
          [
            // HTC
            /(nexus 9)/i
            // HTC Nexus 9
          ],
          [MODEL, [VENDOR, "HTC"], [TYPE, TABLET]],
          [
            /(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,
            // HTC
            // ZTE
            /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,
            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i
            // Alcatel/GeeksPhone/Nexian/Panasonic/Sony
          ],
          [VENDOR, [MODEL, /_/g, " "], [TYPE, MOBILE]],
          [
            // Acer
            /droid.+; ([ab][1-7]-?[0178a]\d\d?)/i
          ],
          [MODEL, [VENDOR, "Acer"], [TYPE, TABLET]],
          [
            // Meizu
            /droid.+; (m[1-5] note) bui/i,
            /\bmz-([-\w]{2,})/i
          ],
          [MODEL, [VENDOR, "Meizu"], [TYPE, MOBILE]],
          [
            // Ulefone
            /; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i
          ],
          [MODEL, [VENDOR, "Ulefone"], [TYPE, MOBILE]],
          [
            // MIXED
            /(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno)[-_ ]?([-\w]*)/i,
            // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron
            /(hp) ([\w ]+\w)/i,
            // HP iPAQ
            /(asus)-?(\w+)/i,
            // Asus
            /(microsoft); (lumia[\w ]+)/i,
            // Microsoft Lumia
            /(lenovo)[-_ ]?([-\w]+)/i,
            // Lenovo
            /(jolla)/i,
            // Jolla
            /(oppo) ?([\w ]+) bui/i
            // OPPO
          ],
          [VENDOR, MODEL, [TYPE, MOBILE]],
          [
            /(kobo)\s(ereader|touch)/i,
            // Kobo
            /(archos) (gamepad2?)/i,
            // Archos
            /(hp).+(touchpad(?!.+tablet)|tablet)/i,
            // HP TouchPad
            /(kindle)\/([\w\.]+)/i,
            // Kindle
            /(nook)[\w ]+build\/(\w+)/i,
            // Nook
            /(dell) (strea[kpr\d ]*[\dko])/i,
            // Dell Streak
            /(le[- ]+pan)[- ]+(\w{1,9}) bui/i,
            // Le Pan Tablets
            /(trinity)[- ]*(t\d{3}) bui/i,
            // Trinity Tablets
            /(gigaset)[- ]+(q\w{1,9}) bui/i,
            // Gigaset Tablets
            /(vodafone) ([\w ]+)(?:\)| bui)/i
            // Vodafone
          ],
          [VENDOR, MODEL, [TYPE, TABLET]],
          [
            /(surface duo)/i
            // Surface Duo
          ],
          [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]],
          [
            /droid [\d\.]+; (fp\du?)(?: b|\))/i
            // Fairphone
          ],
          [MODEL, [VENDOR, "Fairphone"], [TYPE, MOBILE]],
          [
            /(u304aa)/i
            // AT&T
          ],
          [MODEL, [VENDOR, "AT&T"], [TYPE, MOBILE]],
          [
            /\bsie-(\w*)/i
            // Siemens
          ],
          [MODEL, [VENDOR, "Siemens"], [TYPE, MOBILE]],
          [
            /\b(rct\w+) b/i
            // RCA Tablets
          ],
          [MODEL, [VENDOR, "RCA"], [TYPE, TABLET]],
          [
            /\b(venue[\d ]{2,7}) b/i
            // Dell Venue Tablets
          ],
          [MODEL, [VENDOR, "Dell"], [TYPE, TABLET]],
          [
            /\b(q(?:mv|ta)\w+) b/i
            // Verizon Tablet
          ],
          [MODEL, [VENDOR, "Verizon"], [TYPE, TABLET]],
          [
            /\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i
            // Barnes & Noble Tablet
          ],
          [MODEL, [VENDOR, "Barnes & Noble"], [TYPE, TABLET]],
          [
            /\b(tm\d{3}\w+) b/i
          ],
          [MODEL, [VENDOR, "NuVision"], [TYPE, TABLET]],
          [
            /\b(k88) b/i
            // ZTE K Series Tablet
          ],
          [MODEL, [VENDOR, "ZTE"], [TYPE, TABLET]],
          [
            /\b(nx\d{3}j) b/i
            // ZTE Nubia
          ],
          [MODEL, [VENDOR, "ZTE"], [TYPE, MOBILE]],
          [
            /\b(gen\d{3}) b.+49h/i
            // Swiss GEN Mobile
          ],
          [MODEL, [VENDOR, "Swiss"], [TYPE, MOBILE]],
          [
            /\b(zur\d{3}) b/i
            // Swiss ZUR Tablet
          ],
          [MODEL, [VENDOR, "Swiss"], [TYPE, TABLET]],
          [
            /\b((zeki)?tb.*\b) b/i
            // Zeki Tablets
          ],
          [MODEL, [VENDOR, "Zeki"], [TYPE, TABLET]],
          [
            /\b([yr]\d{2}) b/i,
            /\b(dragon[- ]+touch |dt)(\w{5}) b/i
            // Dragon Touch Tablet
          ],
          [[VENDOR, "Dragon Touch"], MODEL, [TYPE, TABLET]],
          [
            /\b(ns-?\w{0,9}) b/i
            // Insignia Tablets
          ],
          [MODEL, [VENDOR, "Insignia"], [TYPE, TABLET]],
          [
            /\b((nxa|next)-?\w{0,9}) b/i
            // NextBook Tablets
          ],
          [MODEL, [VENDOR, "NextBook"], [TYPE, TABLET]],
          [
            /\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i
            // Voice Xtreme Phones
          ],
          [[VENDOR, "Voice"], MODEL, [TYPE, MOBILE]],
          [
            /\b(lvtel\-)?(v1[12]) b/i
            // LvTel Phones
          ],
          [[VENDOR, "LvTel"], MODEL, [TYPE, MOBILE]],
          [
            /\b(ph-1) /i
            // Essential PH-1
          ],
          [MODEL, [VENDOR, "Essential"], [TYPE, MOBILE]],
          [
            /\b(v(100md|700na|7011|917g).*\b) b/i
            // Envizen Tablets
          ],
          [MODEL, [VENDOR, "Envizen"], [TYPE, TABLET]],
          [
            /\b(trio[-\w\. ]+) b/i
            // MachSpeed Tablets
          ],
          [MODEL, [VENDOR, "MachSpeed"], [TYPE, TABLET]],
          [
            /\btu_(1491) b/i
            // Rotor Tablets
          ],
          [MODEL, [VENDOR, "Rotor"], [TYPE, TABLET]],
          [
            /(shield[\w ]+) b/i
            // Nvidia Shield Tablets
          ],
          [MODEL, [VENDOR, "Nvidia"], [TYPE, TABLET]],
          [
            /(sprint) (\w+)/i
            // Sprint Phones
          ],
          [VENDOR, MODEL, [TYPE, MOBILE]],
          [
            /(kin\.[onetw]{3})/i
            // Microsoft Kin
          ],
          [[MODEL, /\./g, " "], [VENDOR, MICROSOFT], [TYPE, MOBILE]],
          [
            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i
            // Zebra
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]],
          [
            /droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]],
          [
            ///////////////////
            // SMARTTVS
            ///////////////////
            /smart-tv.+(samsung)/i
            // Samsung
          ],
          [VENDOR, [TYPE, SMARTTV]],
          [
            /hbbtv.+maple;(\d+)/i
          ],
          [[MODEL, /^/, "SmartTV"], [VENDOR, SAMSUNG], [TYPE, SMARTTV]],
          [
            /(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i
            // LG SmartTV
          ],
          [[VENDOR, LG], [TYPE, SMARTTV]],
          [
            /(apple) ?tv/i
            // Apple TV
          ],
          [VENDOR, [MODEL, APPLE + " TV"], [TYPE, SMARTTV]],
          [
            /crkey/i
            // Google Chromecast
          ],
          [[MODEL, CHROME + "cast"], [VENDOR, GOOGLE], [TYPE, SMARTTV]],
          [
            /droid.+aft(\w+)( bui|\))/i
            // Fire TV
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]],
          [
            /\(dtv[\);].+(aquos)/i,
            /(aquos-tv[\w ]+)\)/i
            // Sharp
          ],
          [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],
          [
            /(bravia[\w ]+)( bui|\))/i
            // Sony
          ],
          [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]],
          [
            /(mitv-\w{5}) bui/i
            // Xiaomi
          ],
          [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]],
          [
            /Hbbtv.*(technisat) (.*);/i
            // TechniSAT
          ],
          [VENDOR, MODEL, [TYPE, SMARTTV]],
          [
            /\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,
            // Roku
            /hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i
            // HbbTV devices
          ],
          [[VENDOR, trim2], [MODEL, trim2], [TYPE, SMARTTV]],
          [
            /\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i
            // SmartTV from Unidentified Vendors
          ],
          [[TYPE, SMARTTV]],
          [
            ///////////////////
            // CONSOLES
            ///////////////////
            /(ouya)/i,
            // Ouya
            /(nintendo) ([wids3utch]+)/i
            // Nintendo
          ],
          [VENDOR, MODEL, [TYPE, CONSOLE]],
          [
            /droid.+; (shield) bui/i
            // Nvidia
          ],
          [MODEL, [VENDOR, "Nvidia"], [TYPE, CONSOLE]],
          [
            /(playstation [345portablevi]+)/i
            // Playstation
          ],
          [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]],
          [
            /\b(xbox(?: one)?(?!; xbox))[\); ]/i
            // Microsoft Xbox
          ],
          [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]],
          [
            ///////////////////
            // WEARABLES
            ///////////////////
            /((pebble))app/i
            // Pebble
          ],
          [VENDOR, MODEL, [TYPE, WEARABLE]],
          [
            /(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i
            // Apple Watch
          ],
          [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]],
          [
            /droid.+; (glass) \d/i
            // Google Glass
          ],
          [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]],
          [
            /droid.+; (wt63?0{2,3})\)/i
          ],
          [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]],
          [
            /(quest( 2| pro)?)/i
            // Oculus Quest
          ],
          [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]],
          [
            ///////////////////
            // EMBEDDED
            ///////////////////
            /(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i
            // Tesla
          ],
          [VENDOR, [TYPE, EMBEDDED]],
          [
            /(aeobc)\b/i
            // Echo Dot
          ],
          [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]],
          [
            ////////////////////
            // MIXED (GENERIC)
            ///////////////////
            /droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i
            // Android Phones from Unidentified Vendors
          ],
          [MODEL, [TYPE, MOBILE]],
          [
            /droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i
            // Android Tablets from Unidentified Vendors
          ],
          [MODEL, [TYPE, TABLET]],
          [
            /\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i
            // Unidentifiable Tablet
          ],
          [[TYPE, TABLET]],
          [
            /(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i
            // Unidentifiable Mobile
          ],
          [[TYPE, MOBILE]],
          [
            /(android[-\w\. ]{0,9});.+buil/i
            // Generic Android Device
          ],
          [MODEL, [VENDOR, "Generic"]]
        ],
        engine: [
          [
            /windows.+ edge\/([\w\.]+)/i
            // EdgeHTML
          ],
          [VERSION3, [NAME, EDGE + "HTML"]],
          [
            /webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i
            // Blink
          ],
          [VERSION3, [NAME, "Blink"]],
          [
            /(presto)\/([\w\.]+)/i,
            // Presto
            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i,
            // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna
            /ekioh(flow)\/([\w\.]+)/i,
            // Flow
            /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,
            // KHTML/Tasman/Links
            /(icab)[\/ ]([23]\.[\d\.]+)/i,
            // iCab
            /\b(libweb)/i
          ],
          [NAME, VERSION3],
          [
            /rv\:([\w\.]{1,9})\b.+(gecko)/i
            // Gecko
          ],
          [VERSION3, NAME]
        ],
        os: [
          [
            // Windows
            /microsoft (windows) (vista|xp)/i
            // Windows (iTunes)
          ],
          [NAME, VERSION3],
          [
            /(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i
            // Windows Phone
          ],
          [NAME, [VERSION3, strMapper, windowsVersionMap]],
          [
            /windows nt 6\.2; (arm)/i,
            // Windows RT
            /windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,
            /(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i
          ],
          [[VERSION3, strMapper, windowsVersionMap], [NAME, "Windows"]],
          [
            // iOS/macOS
            /ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,
            // iOS
            /(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,
            /cfnetwork\/.+darwin/i
          ],
          [[VERSION3, /_/g, "."], [NAME, "iOS"]],
          [
            /(mac os x) ?([\w\. ]*)/i,
            /(macintosh|mac_powerpc\b)(?!.+haiku)/i
            // Mac OS
          ],
          [[NAME, MAC_OS], [VERSION3, /_/g, "."]],
          [
            // Mobile OSes
            /droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i
            // Android-x86/HarmonyOS
          ],
          [VERSION3, NAME],
          [
            // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS
            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i,
            /(blackberry)\w*\/([\w\.]*)/i,
            // Blackberry
            /(tizen|kaios)[\/ ]([\w\.]+)/i,
            // Tizen/KaiOS
            /\((series40);/i
            // Series 40
          ],
          [NAME, VERSION3],
          [
            /\(bb(10);/i
            // BlackBerry 10
          ],
          [VERSION3, [NAME, BLACKBERRY]],
          [
            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i
            // Symbian
          ],
          [VERSION3, [NAME, "Symbian"]],
          [
            /mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i
            // Firefox OS
          ],
          [VERSION3, [NAME, FIREFOX + " OS"]],
          [
            /web0s;.+rt(tv)/i,
            /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i
            // WebOS
          ],
          [VERSION3, [NAME, "webOS"]],
          [
            /watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i
            // watchOS
          ],
          [VERSION3, [NAME, "watchOS"]],
          [
            // Google Chromecast
            /crkey\/([\d\.]+)/i
            // Google Chromecast
          ],
          [VERSION3, [NAME, CHROME + "cast"]],
          [
            /(cros) [\w]+(?:\)| ([\w\.]+)\b)/i
            // Chromium OS
          ],
          [[NAME, CHROMIUM_OS], VERSION3],
          [
            // Smart TVs
            /panasonic;(viera)/i,
            // Panasonic Viera
            /(netrange)mmh/i,
            // Netrange
            /(nettv)\/(\d+\.[\w\.]+)/i,
            // NetTV
            // Console
            /(nintendo|playstation) ([wids345portablevuch]+)/i,
            // Nintendo/Playstation
            /(xbox); +xbox ([^\);]+)/i,
            // Microsoft Xbox (360, One, X, S, Series X, Series S)
            // Other
            /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,
            // Joli/Palm
            /(mint)[\/\(\) ]?(\w*)/i,
            // Mint
            /(mageia|vectorlinux)[; ]/i,
            // Mageia/VectorLinux
            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,
            // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire
            /(hurd|linux) ?([\w\.]*)/i,
            // Hurd/Linux
            /(gnu) ?([\w\.]*)/i,
            // GNU
            /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,
            // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly
            /(haiku) (\w+)/i
            // Haiku
          ],
          [NAME, VERSION3],
          [
            /(sunos) ?([\w\.\d]*)/i
            // Solaris
          ],
          [[NAME, "Solaris"], VERSION3],
          [
            /((?:open)?solaris)[-\/ ]?([\w\.]*)/i,
            // Solaris
            /(aix) ((\d)(?=\.|\)| )[\w\.])*/i,
            // AIX
            /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,
            // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS
            /(unix) ?([\w\.]*)/i
            // UNIX
          ],
          [NAME, VERSION3]
        ]
      }, UAParser2 = function(ua, extensions) {
        if (typeof ua === OBJ_TYPE && (extensions = ua, ua = undefined2), !(this instanceof UAParser2))
          return new UAParser2(ua, extensions).getResult();
        var _navigator = typeof window2 !== UNDEF_TYPE && window2.navigator ? window2.navigator : undefined2, _ua = ua || (_navigator && _navigator.userAgent ? _navigator.userAgent : EMPTY), _uach = _navigator && _navigator.userAgentData ? _navigator.userAgentData : undefined2, _rgxmap = extensions ? extend2(regexes, extensions) : regexes, _isSelfNav = _navigator && _navigator.userAgent == _ua;
        return this.getBrowser = function() {
          var _browser = {};
          return _browser[NAME] = undefined2, _browser[VERSION3] = undefined2, rgxMapper.call(_browser, _ua, _rgxmap.browser), _browser[MAJOR] = majorize(_browser[VERSION3]), _isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE && (_browser[NAME] = "Brave"), _browser;
        }, this.getCPU = function() {
          var _cpu = {};
          return _cpu[ARCHITECTURE] = undefined2, rgxMapper.call(_cpu, _ua, _rgxmap.cpu), _cpu;
        }, this.getDevice = function() {
          var _device = {};
          return _device[VENDOR] = undefined2, _device[MODEL] = undefined2, _device[TYPE] = undefined2, rgxMapper.call(_device, _ua, _rgxmap.device), _isSelfNav && !_device[TYPE] && _uach && _uach.mobile && (_device[TYPE] = MOBILE), _isSelfNav && _device[MODEL] == "Macintosh" && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2 && (_device[MODEL] = "iPad", _device[TYPE] = TABLET), _device;
        }, this.getEngine = function() {
          var _engine = {};
          return _engine[NAME] = undefined2, _engine[VERSION3] = undefined2, rgxMapper.call(_engine, _ua, _rgxmap.engine), _engine;
        }, this.getOS = function() {
          var _os = {};
          return _os[NAME] = undefined2, _os[VERSION3] = undefined2, rgxMapper.call(_os, _ua, _rgxmap.os), _isSelfNav && !_os[NAME] && _uach && _uach.platform != "Unknown" && (_os[NAME] = _uach.platform.replace(/chrome os/i, CHROMIUM_OS).replace(/macos/i, MAC_OS)), _os;
        }, this.getResult = function() {
          return {
            ua: this.getUA(),
            browser: this.getBrowser(),
            engine: this.getEngine(),
            os: this.getOS(),
            device: this.getDevice(),
            cpu: this.getCPU()
          };
        }, this.getUA = function() {
          return _ua;
        }, this.setUA = function(ua2) {
          return _ua = typeof ua2 === STR_TYPE && ua2.length > UA_MAX_LENGTH ? trim2(ua2, UA_MAX_LENGTH) : ua2, this;
        }, this.setUA(_ua), this;
      };
      UAParser2.VERSION = LIBVERSION, UAParser2.BROWSER = enumerize([NAME, VERSION3, MAJOR]), UAParser2.CPU = enumerize([ARCHITECTURE]), UAParser2.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]), UAParser2.ENGINE = UAParser2.OS = enumerize([NAME, VERSION3]), typeof exports !== UNDEF_TYPE ? (typeof module !== UNDEF_TYPE && module.exports && (exports = module.exports = UAParser2), exports.UAParser = UAParser2) : typeof define === FUNC_TYPE && define.amd ? define(function() {
        return UAParser2;
      }) : typeof window2 !== UNDEF_TYPE && (window2.UAParser = UAParser2);
      var $2 = typeof window2 !== UNDEF_TYPE && (window2.jQuery || window2.Zepto);
      if ($2 && !$2.ua) {
        var parser = new UAParser2();
        $2.ua = parser.getResult(), $2.ua.get = function() {
          return parser.getUA();
        }, $2.ua.set = function(ua) {
          parser.setUA(ua);
          var result = parser.getResult();
          for (var prop in result)
            $2.ua[prop] = result[prop];
        };
      }
    })(typeof window == "object" ? window : exports);
  }
});

// ../../node_modules/use-timer/lib/state/reducer.js
var require_reducer = __commonJS({
  "../../node_modules/use-timer/lib/state/reducer.js"(exports) {
    "use strict";
    var __assign2 = exports && exports.__assign || function() {
      return __assign2 = Object.assign || function(t4) {
        for (var s4, i3 = 1, n2 = arguments.length; i3 < n2; i3++) {
          s4 = arguments[i3];
          for (var p2 in s4)
            Object.prototype.hasOwnProperty.call(s4, p2) && (t4[p2] = s4[p2]);
        }
        return t4;
      }, __assign2.apply(this, arguments);
    };
    Object.defineProperty(exports, "__esModule", { value: !0 });
    function reducer2(state, action) {
      switch (action.type) {
        case "advanceTime": {
          var timeToAdd = action.payload.timeToAdd;
          return __assign2(__assign2({}, state), { time: state.timerType === "DECREMENTAL" ? state.time - timeToAdd : state.time + timeToAdd });
        }
        case "pause":
          return __assign2(__assign2({}, state), { status: "PAUSED" });
        case "reset":
          return __assign2(__assign2({}, state), { status: "STOPPED", time: action.payload.initialTime });
        case "set":
          return __assign2(__assign2({}, state), { time: action.payload.newTime });
        case "start": {
          var initialTime = action.payload.initialTime;
          return __assign2(__assign2({}, state), { status: "RUNNING", time: state.status === "STOPPED" ? initialTime : state.time });
        }
        case "stop":
          return __assign2(__assign2({}, state), { status: "STOPPED" });
        default:
          return state;
      }
    }
    exports.default = reducer2;
  }
});

// ../../node_modules/use-timer/lib/useTimer.js
var require_useTimer = __commonJS({
  "../../node_modules/use-timer/lib/useTimer.js"(exports) {
    "use strict";
    var __importDefault2 = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { default: mod };
    };
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useTimer = void 0;
    var react_1 = require_react(), reducer_1 = __importDefault2(require_reducer());
    exports.useTimer = function(_a) {
      var _b = _a === void 0 ? {} : _a, _c = _b.autostart, autostart = _c === void 0 ? !1 : _c, endTime = _b.endTime, _d = _b.initialTime, initialTime = _d === void 0 ? 0 : _d, _e = _b.interval, interval = _e === void 0 ? 1e3 : _e, onTimeOver = _b.onTimeOver, onTimeUpdate = _b.onTimeUpdate, _f = _b.step, step = _f === void 0 ? 1 : _f, _g = _b.timerType, timerType = _g === void 0 ? "INCREMENTAL" : _g, _h = react_1.useReducer(reducer_1.default, {
        status: "STOPPED",
        time: initialTime,
        timerType
      }), state = _h[0], dispatch2 = _h[1], status = state.status, time = state.time, advanceTime = react_1.useCallback(function(timeToAdd) {
        dispatch2({ type: "advanceTime", payload: { timeToAdd } });
      }, []), pause = react_1.useCallback(function() {
        dispatch2({ type: "pause" });
      }, []), reset = react_1.useCallback(function() {
        dispatch2({ type: "reset", payload: { initialTime } });
      }, [initialTime]), start = react_1.useCallback(function() {
        dispatch2({ type: "start", payload: { initialTime } });
      }, []);
      return react_1.useEffect(function() {
        autostart && dispatch2({ type: "start", payload: { initialTime } });
      }, [autostart]), react_1.useEffect(function() {
        typeof onTimeUpdate == "function" && onTimeUpdate(time);
      }, [time]), react_1.useEffect(function() {
        status !== "STOPPED" && time === endTime && (dispatch2({ type: "stop" }), typeof onTimeOver == "function" && onTimeOver());
      }, [endTime, onTimeOver, time, status]), react_1.useEffect(function() {
        var intervalId = null;
        return status === "RUNNING" ? intervalId = setInterval(function() {
          dispatch2({
            type: "set",
            payload: {
              newTime: timerType === "DECREMENTAL" ? time - step : time + step
            }
          });
        }, interval) : intervalId && clearInterval(intervalId), function() {
          intervalId && clearInterval(intervalId);
        };
      }, [status, step, timerType, interval, time]), { advanceTime, pause, reset, start, status, time };
    };
  }
});

// ../../node_modules/use-timer/lib/index.js
var require_lib = __commonJS({
  "../../node_modules/use-timer/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: !0 });
    exports.useTimer = void 0;
    var useTimer_1 = require_useTimer();
    Object.defineProperty(exports, "useTimer", { enumerable: !0, get: function() {
      return useTimer_1.useTimer;
    } });
  }
});

// server.ts
var import_cloudflare5 = __toESM(require_dist(), 1);

// ../../node_modules/@remix-run/cloudflare-pages/dist/esm/worker.js
var import_cloudflare = __toESM(require_dist());
function createRequestHandler2({
  build,
  getLoadContext,
  mode: mode2
}) {
  let handleRequest2 = (0, import_cloudflare.createRequestHandler)(build, mode2);
  return async (context) => {
    let loadContext = await getLoadContext?.(context);
    return handleRequest2(context.request, loadContext);
  };
}
function createPagesFunctionHandler({
  build,
  getLoadContext,
  mode: mode2
}) {
  let handleRequest2 = createRequestHandler2({
    build,
    getLoadContext,
    mode: mode2
  }), handleFetch = async (context) => {
    let response;
    context.request.headers.delete("if-none-match");
    try {
      response = await context.env.ASSETS.fetch(context.request.url, context.request.clone()), response = response && response.status >= 200 && response.status < 400 ? new Response(response.body, response) : void 0;
    } catch {
    }
    return response || (response = await handleRequest2(context)), response;
  };
  return async (context) => {
    try {
      return await handleFetch(context);
    } catch {
      return new Response("Internal Error", {
        status: 500
      });
    }
  };
}

// server-entry-module:@remix-run/dev/server-build
var server_build_exports = {};
__export(server_build_exports, {
  assets: () => assets_manifest_default,
  assetsBuildDirectory: () => assetsBuildDirectory,
  entry: () => entry,
  future: () => future,
  mode: () => mode,
  publicPath: () => publicPath,
  routes: () => routes
});

// app/entry.server.tsx
var entry_server_exports = {};
__export(entry_server_exports, {
  default: () => handleRequest
});

// ../../node_modules/@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js
function _extends5() {
  return _extends5 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends5.apply(this, arguments);
}

// ../../node_modules/@remix-run/react/dist/esm/components.js
var React3 = __toESM(require_react());
init_dist2();

// ../../node_modules/@remix-run/react/dist/esm/invariant.js
function invariant4(value, message) {
  if (value === !1 || value === null || typeof value > "u")
    throw new Error(message);
}

// ../../node_modules/@remix-run/react/dist/esm/links.js
init_dist2();

// ../../node_modules/@remix-run/react/dist/esm/routeModules.js
async function loadRouteModule(route, routeModulesCache) {
  if (route.id in routeModulesCache)
    return routeModulesCache[route.id];
  try {
    let routeModule = await import(
      /* webpackIgnore: true */
      route.module
    );
    return routeModulesCache[route.id] = routeModule, routeModule;
  } catch {
    return window.location.reload(), new Promise(() => {
    });
  }
}

// ../../node_modules/@remix-run/react/dist/esm/links.js
function getKeyedLinksForMatches(matches, routeModules, manifest) {
  let descriptors2 = matches.map((match2) => {
    var _module$links;
    let module = routeModules[match2.route.id], route = manifest.routes[match2.route.id];
    return [route.css ? route.css.map((href) => ({
      rel: "stylesheet",
      href
    })) : [], ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || []];
  }).flat(2), preloads = getCurrentPageModulePreloadHrefs(matches, manifest);
  return dedupeLinkDescriptors(descriptors2, preloads);
}
function isPageLinkDescriptor(object) {
  return object != null && typeof object.page == "string";
}
function isHtmlLinkDescriptor(object) {
  return object == null ? !1 : object.href == null ? object.rel === "preload" && typeof object.imageSrcSet == "string" && typeof object.imageSizes == "string" : typeof object.rel == "string" && typeof object.href == "string";
}
async function getKeyedPrefetchLinks(matches, manifest, routeModules) {
  let links2 = await Promise.all(matches.map(async (match2) => {
    let mod = await loadRouteModule(manifest.routes[match2.route.id], routeModules);
    return mod.links ? mod.links() : [];
  }));
  return dedupeLinkDescriptors(links2.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === "stylesheet" || link.rel === "preload").map((link) => link.rel === "stylesheet" ? {
    ...link,
    rel: "prefetch",
    as: "style"
  } : {
    ...link,
    rel: "prefetch"
  }));
}
function getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode2) {
  let path = parsePathPatch(page), isNew = (match2, index3) => currentMatches[index3] ? match2.route.id !== currentMatches[index3].route.id : !0, matchPathChanged = (match2, index3) => {
    var _currentMatches$index;
    return (
      // param change, /users/123 -> /users/456
      currentMatches[index3].pathname !== match2.pathname || // splat param changed, which is not present in match.path
      // e.g. /files/images/avatar.jpg -> files/finances.xls
      ((_currentMatches$index = currentMatches[index3].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith("*")) && currentMatches[index3].params["*"] !== match2.params["*"]
    );
  };
  return mode2 === "data" && location.search !== path.search ? (
    // this is really similar to stuff in transition.ts, maybe somebody smarter
    // than me (or in less of a hurry) can share some of it. You're the best.
    nextMatches.filter((match2, index3) => {
      if (!manifest.routes[match2.route.id].hasLoader)
        return !1;
      if (isNew(match2, index3) || matchPathChanged(match2, index3))
        return !0;
      if (match2.route.shouldRevalidate) {
        var _currentMatches$;
        let routeChoice = match2.route.shouldRevalidate({
          currentUrl: new URL(location.pathname + location.search + location.hash, window.origin),
          currentParams: ((_currentMatches$ = currentMatches[0]) === null || _currentMatches$ === void 0 ? void 0 : _currentMatches$.params) || {},
          nextUrl: new URL(page, window.origin),
          nextParams: match2.params,
          defaultShouldRevalidate: !0
        });
        if (typeof routeChoice == "boolean")
          return routeChoice;
      }
      return !0;
    })
  ) : nextMatches.filter((match2, index3) => {
    let manifestRoute = manifest.routes[match2.route.id];
    return (mode2 === "assets" || manifestRoute.hasLoader) && (isNew(match2, index3) || matchPathChanged(match2, index3));
  });
}
function getDataLinkHrefs(page, matches, manifest) {
  let path = parsePathPatch(page);
  return dedupeHrefs(matches.filter((match2) => manifest.routes[match2.route.id].hasLoader).map((match2) => {
    let {
      pathname,
      search
    } = path, searchParams = new URLSearchParams(search);
    return searchParams.set("_data", match2.route.id), `${pathname}?${searchParams}`;
  }));
}
function getModuleLinkHrefs(matches, manifestPatch) {
  return dedupeHrefs(matches.map((match2) => {
    let route = manifestPatch.routes[match2.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function getCurrentPageModulePreloadHrefs(matches, manifest) {
  return dedupeHrefs(matches.map((match2) => {
    let route = manifest.routes[match2.route.id], hrefs = [route.module];
    return route.imports && (hrefs = hrefs.concat(route.imports)), hrefs;
  }).flat(1));
}
function dedupeHrefs(hrefs) {
  return [...new Set(hrefs)];
}
function sortKeys(obj) {
  let sorted = {}, keys = Object.keys(obj).sort();
  for (let key of keys)
    sorted[key] = obj[key];
  return sorted;
}
function dedupeLinkDescriptors(descriptors2, preloads) {
  let set2 = /* @__PURE__ */ new Set(), preloadsSet = new Set(preloads);
  return descriptors2.reduce((deduped, descriptor) => {
    if (preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === "script" && descriptor.href && preloadsSet.has(descriptor.href))
      return deduped;
    let key = JSON.stringify(sortKeys(descriptor));
    return set2.has(key) || (set2.add(key), deduped.push({
      key,
      link: descriptor
    })), deduped;
  }, []);
}
function parsePathPatch(href) {
  let path = parsePath2(href);
  return path.search === void 0 && (path.search = ""), path;
}

// ../../node_modules/@remix-run/react/dist/esm/markup.js
var ESCAPE_LOOKUP2 = {
  "&": "\\u0026",
  ">": "\\u003e",
  "<": "\\u003c",
  "\u2028": "\\u2028",
  "\u2029": "\\u2029"
}, ESCAPE_REGEX2 = /[&><\u2028\u2029]/g;
function escapeHtml2(html) {
  return html.replace(ESCAPE_REGEX2, (match2) => ESCAPE_LOOKUP2[match2]);
}
function createHtml(html) {
  return {
    __html: html
  };
}

// ../../node_modules/@remix-run/react/dist/esm/components.js
function useDataRouterContext3() {
  let context = React3.useContext(DataRouterContext);
  return invariant4(context, "You must render this element inside a <DataRouterContext.Provider> element"), context;
}
function useDataRouterStateContext() {
  let context = React3.useContext(DataRouterStateContext);
  return invariant4(context, "You must render this element inside a <DataRouterStateContext.Provider> element"), context;
}
var RemixContext = /* @__PURE__ */ React3.createContext(void 0);
RemixContext.displayName = "Remix";
function useRemixContext() {
  let context = React3.useContext(RemixContext);
  return invariant4(context, "You must render this element inside a <Remix> element"), context;
}
function usePrefetchBehavior(prefetch, theirElementProps) {
  let [maybePrefetch, setMaybePrefetch] = React3.useState(!1), [shouldPrefetch, setShouldPrefetch] = React3.useState(!1), {
    onFocus,
    onBlur,
    onMouseEnter,
    onMouseLeave,
    onTouchStart
  } = theirElementProps, ref = React3.useRef(null);
  React3.useEffect(() => {
    if (prefetch === "render" && setShouldPrefetch(!0), prefetch === "viewport") {
      let callback = (entries) => {
        entries.forEach((entry2) => {
          setShouldPrefetch(entry2.isIntersecting);
        });
      }, observer = new IntersectionObserver(callback, {
        threshold: 0.5
      });
      return ref.current && observer.observe(ref.current), () => {
        observer.disconnect();
      };
    }
  }, [prefetch]);
  let setIntent = () => {
    prefetch === "intent" && setMaybePrefetch(!0);
  }, cancelIntent = () => {
    prefetch === "intent" && (setMaybePrefetch(!1), setShouldPrefetch(!1));
  };
  return React3.useEffect(() => {
    if (maybePrefetch) {
      let id3 = setTimeout(() => {
        setShouldPrefetch(!0);
      }, 100);
      return () => {
        clearTimeout(id3);
      };
    }
  }, [maybePrefetch]), [shouldPrefetch, ref, {
    onFocus: composeEventHandlers(onFocus, setIntent),
    onBlur: composeEventHandlers(onBlur, cancelIntent),
    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),
    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),
    onTouchStart: composeEventHandlers(onTouchStart, setIntent)
  }];
}
var ABSOLUTE_URL_REGEX4 = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i, NavLink2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX4.test(to), href = useHref(to), [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(NavLink, _extends5({}, props, prefetchHandlers, {
    ref: mergeRefs(forwardedRef, ref),
    to
  })), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
NavLink2.displayName = "NavLink";
var Link2 = /* @__PURE__ */ React3.forwardRef(({
  to,
  prefetch = "none",
  ...props
}, forwardedRef) => {
  let isAbsolute = typeof to == "string" && ABSOLUTE_URL_REGEX4.test(to), href = useHref(to), [shouldPrefetch, ref, prefetchHandlers] = usePrefetchBehavior(prefetch, props);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(Link, _extends5({}, props, prefetchHandlers, {
    ref: mergeRefs(forwardedRef, ref),
    to
  })), shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, {
    page: href
  }) : null);
});
Link2.displayName = "Link";
function composeEventHandlers(theirHandler, ourHandler) {
  return (event) => {
    theirHandler && theirHandler(event), event.defaultPrevented || ourHandler(event);
  };
}
function Links() {
  let {
    manifest,
    routeModules,
    criticalCss
  } = useRemixContext(), {
    errors,
    matches: routerMatches
  } = useDataRouterStateContext(), matches = errors ? routerMatches.slice(0, routerMatches.findIndex((m4) => errors[m4.route.id]) + 1) : routerMatches, keyedLinks = React3.useMemo(() => getKeyedLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, criticalCss ? /* @__PURE__ */ React3.createElement("style", {
    dangerouslySetInnerHTML: {
      __html: criticalCss
    }
  }) : null, keyedLinks.map(({
    key,
    link
  }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React3.createElement(PrefetchPageLinks, _extends5({
    key
  }, link)) : /* @__PURE__ */ React3.createElement("link", _extends5({
    key
  }, link))));
}
function PrefetchPageLinks({
  page,
  ...dataLinkProps
}) {
  let {
    router
  } = useDataRouterContext3(), matches = React3.useMemo(() => matchRoutes2(router.routes, page), [router.routes, page]);
  return matches ? /* @__PURE__ */ React3.createElement(PrefetchPageLinksImpl, _extends5({
    page,
    matches
  }, dataLinkProps)) : (console.warn(`Tried to prefetch ${page} but no routes matched.`), null);
}
function useKeyedPrefetchLinks(matches) {
  let {
    manifest,
    routeModules
  } = useRemixContext(), [keyedPrefetchLinks, setKeyedPrefetchLinks] = React3.useState([]);
  return React3.useEffect(() => {
    let interrupted = !1;
    return getKeyedPrefetchLinks(matches, manifest, routeModules).then((links2) => {
      interrupted || setKeyedPrefetchLinks(links2);
    }), () => {
      interrupted = !0;
    };
  }, [matches, manifest, routeModules]), keyedPrefetchLinks;
}
function PrefetchPageLinksImpl({
  page,
  matches: nextMatches,
  ...linkProps
}) {
  let location = useLocation(), {
    manifest
  } = useRemixContext(), {
    matches
  } = useDataRouterStateContext(), newMatchesForData = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "data"), [page, nextMatches, matches, manifest, location]), newMatchesForAssets = React3.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, manifest, location, "assets"), [page, nextMatches, matches, manifest, location]), dataHrefs = React3.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]), moduleHrefs = React3.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]), keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, dataHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends5({
    key: href,
    rel: "prefetch",
    as: "fetch",
    href
  }, linkProps))), moduleHrefs.map((href) => /* @__PURE__ */ React3.createElement("link", _extends5({
    key: href,
    rel: "modulepreload",
    href
  }, linkProps))), keyedPrefetchLinks.map(({
    key,
    link
  }) => (
    // these don't spread `linkProps` because they are full link descriptors
    // already with their own props
    /* @__PURE__ */ React3.createElement("link", _extends5({
      key
    }, link))
  )));
}
function Meta() {
  let {
    routeModules
  } = useRemixContext(), {
    errors,
    matches: routerMatches,
    loaderData
  } = useDataRouterStateContext(), location = useLocation(), _matches = routerMatches, error = null;
  if (errors) {
    let errorIdx = routerMatches.findIndex((m4) => errors[m4.route.id]);
    _matches = routerMatches.slice(0, errorIdx + 1), error = errors[routerMatches[errorIdx].route.id];
  }
  let meta2 = [], leafMeta = null, matches = [];
  for (let i3 = 0; i3 < _matches.length; i3++) {
    let _match = _matches[i3], routeId = _match.route.id, data = loaderData[routeId], params = _match.params, routeModule = routeModules[routeId], routeMeta = [], match2 = {
      id: routeId,
      data,
      meta: [],
      params: _match.params,
      pathname: _match.pathname,
      handle: _match.route.handle,
      error
    };
    if (matches[i3] = match2, routeModule != null && routeModule.meta ? routeMeta = typeof routeModule.meta == "function" ? routeModule.meta({
      data,
      params,
      location,
      matches,
      error
    }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta : leafMeta && (routeMeta = [...leafMeta]), routeMeta = routeMeta || [], !Array.isArray(routeMeta))
      throw new Error("The route at " + _match.route.path + ` returns an invalid value. All route meta functions must return an array of meta objects.

To reference the meta function API, see https://remix.run/route/meta`);
    match2.meta = routeMeta, matches[i3] = match2, meta2 = [...routeMeta], leafMeta = meta2;
  }
  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, meta2.flat().map((metaProps) => {
    if (!metaProps)
      return null;
    if ("tagName" in metaProps) {
      let {
        tagName,
        ...rest
      } = metaProps;
      return isValidMetaTag(tagName) ? /* @__PURE__ */ React3.createElement(tagName, _extends5({
        key: JSON.stringify(rest)
      }, rest)) : (console.warn(`A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`), null);
    }
    if ("title" in metaProps)
      return /* @__PURE__ */ React3.createElement("title", {
        key: "title"
      }, String(metaProps.title));
    if ("charset" in metaProps && (metaProps.charSet ??= metaProps.charset, delete metaProps.charset), "charSet" in metaProps && metaProps.charSet != null)
      return typeof metaProps.charSet == "string" ? /* @__PURE__ */ React3.createElement("meta", {
        key: "charSet",
        charSet: metaProps.charSet
      }) : null;
    if ("script:ld+json" in metaProps)
      try {
        let json8 = JSON.stringify(metaProps["script:ld+json"]);
        return /* @__PURE__ */ React3.createElement("script", {
          key: `script:ld+json:${json8}`,
          type: "application/ld+json",
          dangerouslySetInnerHTML: {
            __html: json8
          }
        });
      } catch {
        return null;
      }
    return /* @__PURE__ */ React3.createElement("meta", _extends5({
      key: JSON.stringify(metaProps)
    }, metaProps));
  }));
}
function isValidMetaTag(tagName) {
  return typeof tagName == "string" && /^(meta|link)$/.test(tagName);
}
function Await2(props) {
  return /* @__PURE__ */ React3.createElement(Await, props);
}
var isHydrated = !1;
function Scripts(props) {
  let {
    manifest,
    serverHandoffString,
    abortDelay,
    serializeError: serializeError2
  } = useRemixContext(), {
    router,
    static: isStatic,
    staticContext
  } = useDataRouterContext3(), {
    matches
  } = useDataRouterStateContext(), navigation = useNavigation();
  React3.useEffect(() => {
    isHydrated = !0;
  }, []);
  let serializePreResolvedErrorImp = (key, error) => {
    let toSerialize;
    return serializeError2 && error instanceof Error ? toSerialize = serializeError2(error) : toSerialize = error, `${JSON.stringify(key)}:__remixContext.p(!1, ${escapeHtml2(JSON.stringify(toSerialize))})`;
  }, serializePreresolvedDataImp = (routeId, key, data) => {
    let serializedData;
    try {
      serializedData = JSON.stringify(data);
    } catch (error) {
      return serializePreResolvedErrorImp(key, error);
    }
    return `${JSON.stringify(key)}:__remixContext.p(${escapeHtml2(serializedData)})`;
  }, serializeErrorImp = (routeId, key, error) => {
    let toSerialize;
    return serializeError2 && error instanceof Error ? toSerialize = serializeError2(error) : toSerialize = error, `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, !1, ${escapeHtml2(JSON.stringify(toSerialize))})`;
  }, serializeDataImp = (routeId, key, data) => {
    let serializedData;
    try {
      serializedData = JSON.stringify(data);
    } catch (error) {
      return serializeErrorImp(routeId, key, error);
    }
    return `__remixContext.r(${JSON.stringify(routeId)}, ${JSON.stringify(key)}, ${escapeHtml2(serializedData)})`;
  }, deferredScripts = [], initialScripts = React3.useMemo(() => {
    var _manifest$hmr;
    let contextScript = staticContext ? `window.__remixContext = ${serverHandoffString};` : " ", activeDeferreds = staticContext?.activeDeferreds;
    contextScript += activeDeferreds ? ["__remixContext.p = function(v,e,p,x) {", "  if (typeof e !== 'undefined') {", `    x=new Error("Unexpected Server Error");
    x.stack=undefined;`, "    p=Promise.reject(x);", "  } else {", "    p=Promise.resolve(v);", "  }", "  return p;", "};", "__remixContext.n = function(i,k) {", "  __remixContext.t = __remixContext.t || {};", "  __remixContext.t[i] = __remixContext.t[i] || {};", "  let p = new Promise((r, e) => {__remixContext.t[i][k] = {r:(v)=>{r(v);},e:(v)=>{e(v);}};});", typeof abortDelay == "number" ? `setTimeout(() => {if(typeof p._error !== "undefined" || typeof p._data !== "undefined"){return;} __remixContext.t[i][k].e(new Error("Server timeout."))}, ${abortDelay});` : "", "  return p;", "};", "__remixContext.r = function(i,k,v,e,p,x) {", "  p = __remixContext.t[i][k];", "  if (typeof e !== 'undefined') {", `    x=new Error("Unexpected Server Error");
    x.stack=undefined;`, "    p.e(x);", "  } else {", "    p.r(v);", "  }", "};"].join(`
`) + Object.entries(activeDeferreds).map(([routeId, deferredData]) => {
      let pendingKeys = new Set(deferredData.pendingKeys), promiseKeyValues = deferredData.deferredKeys.map((key) => {
        if (pendingKeys.has(key))
          return deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
            key: `${routeId} | ${key}`,
            deferredData,
            routeId,
            dataKey: key,
            scriptProps: props,
            serializeData: serializeDataImp,
            serializeError: serializeErrorImp
          })), `${JSON.stringify(key)}:__remixContext.n(${JSON.stringify(routeId)}, ${JSON.stringify(key)})`;
        {
          let trackedPromise = deferredData.data[key];
          return typeof trackedPromise._error < "u" ? serializePreResolvedErrorImp(key, trackedPromise._error) : serializePreresolvedDataImp(routeId, key, trackedPromise._data);
        }
      }).join(`,
`);
      return `Object.assign(__remixContext.state.loaderData[${JSON.stringify(routeId)}], {${promiseKeyValues}});`;
    }).join(`
`) + (deferredScripts.length > 0 ? `__remixContext.a=${deferredScripts.length};` : "") : "";
    let routeModulesScript = isStatic ? `${(_manifest$hmr = manifest.hmr) !== null && _manifest$hmr !== void 0 && _manifest$hmr.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : ""}import ${JSON.stringify(manifest.url)};
${matches.map((match2, index3) => `import * as route${index3} from ${JSON.stringify(manifest.routes[match2.route.id].module)};`).join(`
`)}
window.__remixRouteModules = {${matches.map((match2, index3) => `${JSON.stringify(match2.route.id)}:route${index3}`).join(",")}};

import(${JSON.stringify(manifest.entry.module)});` : " ";
    return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("script", _extends5({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(contextScript),
      type: void 0
    })), /* @__PURE__ */ React3.createElement("script", _extends5({}, props, {
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: createHtml(routeModulesScript),
      type: "module",
      async: !0
    })));
  }, []);
  if (!isStatic && typeof __remixContext == "object" && __remixContext.a)
    for (let i3 = 0; i3 < __remixContext.a; i3++)
      deferredScripts.push(/* @__PURE__ */ React3.createElement(DeferredHydrationScript, {
        key: i3,
        scriptProps: props,
        serializeData: serializeDataImp,
        serializeError: serializeErrorImp
      }));
  let nextMatches = React3.useMemo(() => {
    if (navigation.location) {
      let matches2 = matchRoutes2(router.routes, navigation.location);
      return invariant4(matches2, `No routes match path "${navigation.location.pathname}"`), matches2;
    }
    return [];
  }, [navigation.location, router.routes]), routePreloads = matches.concat(nextMatches).map((match2) => {
    let route = manifest.routes[match2.route.id];
    return (route.imports || []).concat([route.module]);
  }).flat(1), preloads = isHydrated ? [] : manifest.entry.imports.concat(routePreloads);
  return isHydrated ? null : /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement("link", {
    rel: "modulepreload",
    href: manifest.url,
    crossOrigin: props.crossOrigin
  }), /* @__PURE__ */ React3.createElement("link", {
    rel: "modulepreload",
    href: manifest.entry.module,
    crossOrigin: props.crossOrigin
  }), dedupe(preloads).map((path) => /* @__PURE__ */ React3.createElement("link", {
    key: path,
    rel: "modulepreload",
    href: path,
    crossOrigin: props.crossOrigin
  })), initialScripts, deferredScripts);
}
function DeferredHydrationScript({
  dataKey,
  deferredData,
  routeId,
  scriptProps,
  serializeData,
  serializeError: serializeError2
}) {
  return typeof document > "u" && deferredData && dataKey && routeId && invariant4(deferredData.pendingKeys.includes(dataKey), `Deferred data for route ${routeId} with key ${dataKey} was not pending but tried to render a script for it.`), /* @__PURE__ */ React3.createElement(React3.Suspense, {
    fallback: (
      // This makes absolutely no sense. The server renders null as a fallback,
      // but when hydrating, we need to render a script tag to avoid a hydration issue.
      // To reproduce a hydration mismatch, just render null as a fallback.
      typeof document > "u" && deferredData && dataKey && routeId ? null : /* @__PURE__ */ React3.createElement("script", _extends5({}, scriptProps, {
        async: !0,
        suppressHydrationWarning: !0,
        dangerouslySetInnerHTML: {
          __html: " "
        }
      }))
    )
  }, typeof document > "u" && deferredData && dataKey && routeId ? /* @__PURE__ */ React3.createElement(Await2, {
    resolve: deferredData.data[dataKey],
    errorElement: /* @__PURE__ */ React3.createElement(ErrorDeferredHydrationScript, {
      dataKey,
      routeId,
      scriptProps,
      serializeError: serializeError2
    }),
    children: (data) => /* @__PURE__ */ React3.createElement("script", _extends5({}, scriptProps, {
      async: !0,
      suppressHydrationWarning: !0,
      dangerouslySetInnerHTML: {
        __html: serializeData(routeId, dataKey, data)
      }
    }))
  }) : /* @__PURE__ */ React3.createElement("script", _extends5({}, scriptProps, {
    async: !0,
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: " "
    }
  })));
}
function ErrorDeferredHydrationScript({
  dataKey,
  routeId,
  scriptProps,
  serializeError: serializeError2
}) {
  let error = useAsyncError();
  return /* @__PURE__ */ React3.createElement("script", _extends5({}, scriptProps, {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: serializeError2(routeId, dataKey, error)
    }
  }));
}
function dedupe(array) {
  return [...new Set(array)];
}
function useLoaderData2() {
  return useLoaderData();
}
var LiveReload = () => null;
function mergeRefs(...refs) {
  return (value) => {
    refs.forEach((ref) => {
      typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
    });
  };
}

// ../../node_modules/@remix-run/react/dist/esm/errorBoundaries.js
var React4 = __toESM(require_react());
init_dist2();
var RemixErrorBoundary = class extends React4.Component {
  constructor(props) {
    super(props), this.state = {
      error: props.error || null,
      location: props.location
    };
  }
  static getDerivedStateFromError(error) {
    return {
      error
    };
  }
  static getDerivedStateFromProps(props, state) {
    return state.location !== props.location ? {
      error: props.error || null,
      location: props.location
    } : {
      error: props.error || state.error,
      location: state.location
    };
  }
  render() {
    return this.state.error ? /* @__PURE__ */ React4.createElement(RemixRootDefaultErrorBoundary, {
      error: this.state.error
    }) : this.props.children;
  }
};
function RemixRootDefaultErrorBoundary({
  error
}) {
  if (console.error(error), isRouteErrorResponse2(error))
    return /* @__PURE__ */ React4.createElement(BoundaryShell, {
      title: "Unhandled Thrown Response!"
    }, /* @__PURE__ */ React4.createElement("h1", {
      style: {
        fontFamily: "system-ui, sans-serif",
        padding: "2rem"
      }
    }, error.status, " ", error.statusText));
  let errorInstance;
  if (error instanceof Error)
    errorInstance = error;
  else {
    let errorString = error == null ? "Unknown Error" : typeof error == "object" && "toString" in error ? error.toString() : JSON.stringify(error);
    errorInstance = new Error(errorString);
  }
  return /* @__PURE__ */ React4.createElement(BoundaryShell, {
    title: "Application Error!"
  }, /* @__PURE__ */ React4.createElement("main", {
    style: {
      fontFamily: "system-ui, sans-serif",
      padding: "2rem"
    }
  }, /* @__PURE__ */ React4.createElement("h1", {
    style: {
      fontSize: "24px"
    }
  }, "Application Error"), /* @__PURE__ */ React4.createElement("pre", {
    style: {
      padding: "2rem",
      background: "hsla(10, 50%, 50%, 0.1)",
      color: "red",
      overflow: "auto"
    }
  }, errorInstance.stack)));
}
function BoundaryShell({
  title,
  children
}) {
  return /* @__PURE__ */ React4.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ React4.createElement("head", null, /* @__PURE__ */ React4.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ React4.createElement("meta", {
    name: "viewport",
    content: "width=device-width,initial-scale=1,viewport-fit=cover"
  }), /* @__PURE__ */ React4.createElement("title", null, title)), /* @__PURE__ */ React4.createElement("body", null, children, /* @__PURE__ */ React4.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information."
              );
            `
    }
  })));
}

// ../../node_modules/@remix-run/react/dist/esm/routes.js
var React6 = __toESM(require_react());
init_dist2();

// ../../node_modules/@remix-run/react/dist/esm/fallback.js
var React5 = __toESM(require_react());
function RemixRootDefaultHydrateFallback() {
  return /* @__PURE__ */ React5.createElement("html", {
    lang: "en"
  }, /* @__PURE__ */ React5.createElement("head", null, /* @__PURE__ */ React5.createElement("meta", {
    charSet: "utf-8"
  }), /* @__PURE__ */ React5.createElement("meta", {
    name: "viewport",
    content: "width=device-width,initial-scale=1,viewport-fit=cover"
  })), /* @__PURE__ */ React5.createElement("body", null, /* @__PURE__ */ React5.createElement(Scripts, null), /* @__PURE__ */ React5.createElement("script", {
    dangerouslySetInnerHTML: {
      __html: `
              console.log(
                "\u{1F4BF} Hey developer \u{1F44B}. You can provide a way better UX than this " +
                "when your app is running \`clientLoader\` functions on hydration. " +
                "Check out https://remix.run/route/hydrate-fallback for more information."
              );
            `
    }
  }), " "));
}

// ../../node_modules/@remix-run/react/dist/esm/routes.js
function groupRoutesByParentId2(manifest) {
  let routes2 = {};
  return Object.values(manifest).forEach((route) => {
    let parentId = route.parentId || "";
    routes2[parentId] || (routes2[parentId] = []), routes2[parentId].push(route);
  }), routes2;
}
function createServerRoutes(manifest, routeModules, future2, parentId = "", routesByParentId = groupRoutesByParentId2(manifest)) {
  return (routesByParentId[parentId] || []).map((route) => {
    let routeModule = routeModules[route.id], dataRoute = {
      caseSensitive: route.caseSensitive,
      Component: getRouteModuleComponent(routeModule),
      HydrateFallback: routeModule.HydrateFallback ? routeModule.HydrateFallback : route.id === "root" ? RemixRootDefaultHydrateFallback : void 0,
      ErrorBoundary: routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === "root" ? () => /* @__PURE__ */ React6.createElement(RemixRootDefaultErrorBoundary, {
        error: useRouteError()
      }) : void 0,
      id: route.id,
      index: route.index,
      path: route.path,
      handle: routeModules[route.id].handle,
      // For partial hydration rendering, we need to indicate when the route
      // has a loader/clientLoader, but it won't ever be called during the static
      // render, so just give it a no-op function so we can render down to the
      // proper fallback
      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0
      // We don't need action/shouldRevalidate on these routes since they're
      // for a static render
    }, children = createServerRoutes(manifest, routeModules, future2, route.id, routesByParentId);
    return children.length > 0 && (dataRoute.children = children), dataRoute;
  });
}
function getRouteModuleComponent(routeModule) {
  if (routeModule.default == null)
    return;
  if (!(typeof routeModule.default == "object" && Object.keys(routeModule.default).length === 0))
    return routeModule.default;
}
function shouldHydrateRouteLoader(route, routeModule) {
  return routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === !0 || route.hasLoader !== !0);
}

// ../../node_modules/@remix-run/react/dist/esm/index.js
init_dist2();

// ../../node_modules/@remix-run/react/dist/esm/scroll-restoration.js
var React7 = __toESM(require_react());
init_dist2();
var STORAGE_KEY = "positions";
function ScrollRestoration2({
  getKey,
  ...props
}) {
  let location = useLocation(), matches = useMatches();
  useScrollRestoration({
    getKey,
    storageKey: STORAGE_KEY
  });
  let key = React7.useMemo(
    () => {
      if (!getKey)
        return null;
      let userKey = getKey(location, matches);
      return userKey !== location.key ? userKey : null;
    },
    // Nah, we only need this the first time for the SSR render
    // eslint-disable-next-line react-hooks/exhaustive-deps
    []
  ), restoreScroll = ((STORAGE_KEY2, restoreKey) => {
    if (!window.history.state || !window.history.state.key) {
      let key2 = Math.random().toString(32).slice(2);
      window.history.replaceState({
        key: key2
      }, "");
    }
    try {
      let storedY = JSON.parse(sessionStorage.getItem(STORAGE_KEY2) || "{}")[restoreKey || window.history.state.key];
      typeof storedY == "number" && window.scrollTo(0, storedY);
    } catch (error) {
      console.error(error), sessionStorage.removeItem(STORAGE_KEY2);
    }
  }).toString();
  return /* @__PURE__ */ React7.createElement("script", _extends5({}, props, {
    suppressHydrationWarning: !0,
    dangerouslySetInnerHTML: {
      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)}, ${JSON.stringify(key)})`
    }
  }));
}

// ../../node_modules/@remix-run/react/dist/esm/server.js
var React8 = __toESM(require_react()), import_server2 = __toESM(require_server());
function RemixServer({
  context,
  url: url2,
  abortDelay
}) {
  typeof url2 == "string" && (url2 = new URL(url2));
  let {
    manifest,
    routeModules,
    criticalCss,
    serverHandoffString
  } = context, routes2 = createServerRoutes(manifest.routes, routeModules, context.future);
  context.staticHandlerContext.loaderData = {
    ...context.staticHandlerContext.loaderData
  };
  for (let match2 of context.staticHandlerContext.matches) {
    let routeId = match2.route.id, route = routeModules[routeId], manifestRoute = context.manifest.routes[routeId];
    route && shouldHydrateRouteLoader(manifestRoute, route) && (route.HydrateFallback || !manifestRoute.hasLoader) && (context.staticHandlerContext.loaderData[routeId] = void 0);
  }
  let router = (0, import_server2.createStaticRouter)(routes2, context.staticHandlerContext, {
    future: {
      v7_partialHydration: !0,
      v7_relativeSplatPath: context.future.v3_relativeSplatPath
    }
  });
  return /* @__PURE__ */ React8.createElement(RemixContext.Provider, {
    value: {
      manifest,
      routeModules,
      criticalCss,
      serverHandoffString,
      future: context.future,
      serializeError: context.serializeError,
      abortDelay
    }
  }, /* @__PURE__ */ React8.createElement(RemixErrorBoundary, {
    location: router.state.location
  }, /* @__PURE__ */ React8.createElement(import_server2.StaticRouterProvider, {
    router,
    context: context.staticHandlerContext,
    hydrate: !1
  })));
}

// ../../node_modules/isbot/index.mjs
function _iterableToArrayLimit(r3, l2) {
  var t4 = r3 == null ? null : typeof Symbol < "u" && r3[Symbol.iterator] || r3["@@iterator"];
  if (t4 != null) {
    var e3, n2, i3, u3, a4 = [], f2 = !0, o2 = !1;
    try {
      if (i3 = (t4 = t4.call(r3)).next, l2 === 0) {
        if (Object(t4) !== t4)
          return;
        f2 = !1;
      } else
        for (; !(f2 = (e3 = i3.call(t4)).done) && (a4.push(e3.value), a4.length !== l2); f2 = !0)
          ;
    } catch (r4) {
      o2 = !0, n2 = r4;
    } finally {
      try {
        if (!f2 && t4.return != null && (u3 = t4.return(), Object(u3) !== u3))
          return;
      } finally {
        if (o2)
          throw n2;
      }
    }
    return a4;
  }
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i3 = 0; i3 < props.length; i3++) {
    var descriptor = props[i3];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Object.defineProperty(Constructor, "prototype", {
    writable: !1
  }), Constructor;
}
function _defineProperty(obj, key, value) {
  return key = _toPropertyKey(key), key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _slicedToArray(arr, i3) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i3) || _unsupportedIterableToArray(arr, i3) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _unsupportedIterableToArray(o2, minLen) {
  if (o2) {
    if (typeof o2 == "string")
      return _arrayLikeToArray(o2, minLen);
    var n2 = Object.prototype.toString.call(o2).slice(8, -1);
    if (n2 === "Object" && o2.constructor && (n2 = o2.constructor.name), n2 === "Map" || n2 === "Set")
      return Array.from(o2);
    if (n2 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n2))
      return _arrayLikeToArray(o2, minLen);
  }
}
function _arrayLikeToArray(arr, len) {
  (len == null || len > arr.length) && (len = arr.length);
  for (var i3 = 0, arr2 = new Array(len); i3 < len; i3++)
    arr2[i3] = arr[i3];
  return arr2;
}
function _nonIterableRest() {
  throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
}
function _toPrimitive(input, hint) {
  if (typeof input != "object" || input === null)
    return input;
  var prim = input[Symbol.toPrimitive];
  if (prim !== void 0) {
    var res = prim.call(input, hint || "default");
    if (typeof res != "object")
      return res;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return (hint === "string" ? String : Number)(input);
}
function _toPropertyKey(arg) {
  var key = _toPrimitive(arg, "string");
  return typeof key == "symbol" ? key : String(key);
}
function _classPrivateFieldGet(receiver, privateMap) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "get");
  return _classApplyDescriptorGet(receiver, descriptor);
}
function _classPrivateFieldSet(receiver, privateMap, value) {
  var descriptor = _classExtractFieldDescriptor(receiver, privateMap, "set");
  return _classApplyDescriptorSet(receiver, descriptor, value), value;
}
function _classExtractFieldDescriptor(receiver, privateMap, action) {
  if (!privateMap.has(receiver))
    throw new TypeError("attempted to " + action + " private field on non-instance");
  return privateMap.get(receiver);
}
function _classApplyDescriptorGet(receiver, descriptor) {
  return descriptor.get ? descriptor.get.call(receiver) : descriptor.value;
}
function _classApplyDescriptorSet(receiver, descriptor, value) {
  if (descriptor.set)
    descriptor.set.call(receiver, value);
  else {
    if (!descriptor.writable)
      throw new TypeError("attempted to set read only private field");
    descriptor.value = value;
  }
}
function _classPrivateMethodGet(receiver, privateSet, fn) {
  if (!privateSet.has(receiver))
    throw new TypeError("attempted to get private field on non-instance");
  return fn;
}
function _checkPrivateRedeclaration(obj, privateCollection) {
  if (privateCollection.has(obj))
    throw new TypeError("Cannot initialize the same private elements twice on an object");
}
function _classPrivateFieldInitSpec(obj, privateMap, value) {
  _checkPrivateRedeclaration(obj, privateMap), privateMap.set(obj, value);
}
function _classPrivateMethodInitSpec(obj, privateSet) {
  _checkPrivateRedeclaration(obj, privateSet), privateSet.add(obj);
}
var list = [
  " daum[ /]",
  " deusu/",
  " yadirectfetcher",
  "(?:^| )site",
  "(?:^|[^g])news",
  "@[a-z]",
  "\\(at\\)[a-z]",
  "\\(github\\.com/",
  "\\[at\\][a-z]",
  "^12345",
  "^<",
  "^[\\w \\.\\-\\(\\)]+(/v?\\d+(\\.\\d+)?(\\.\\d{1,10})?)?$",
  "^[^ ]{50,}$",
  "^active",
  "^ad muncher",
  "^amaya",
  "^anglesharp/",
  "^anonymous",
  "^avsdevicesdk/",
  "^axios/",
  "^bidtellect/",
  "^biglotron",
  "^btwebclient/",
  "^castro",
  "^clamav[ /]",
  "^client/",
  "^cobweb/",
  "^coccoc",
  "^custom",
  "^ddg[_-]android",
  "^discourse",
  "^dispatch/\\d",
  "^downcast/",
  "^duckduckgo",
  "^facebook",
  "^fdm[ /]\\d",
  "^getright/",
  "^gozilla/",
  "^hatena",
  "^hobbit",
  "^hotzonu",
  "^hwcdn/",
  "^jeode/",
  "^jetty/",
  "^jigsaw",
  "^linkdex",
  "^lwp[-: ]",
  "^metauri",
  "^microsoft bits",
  "^movabletype",
  "^mozilla/\\d\\.\\d \\(compatible;?\\)$",
  "^mozilla/\\d\\.\\d \\w*$",
  "^navermailapp",
  "^netsurf",
  "^offline explorer",
  "^php",
  "^postman",
  "^postrank",
  "^python",
  "^read",
  "^reed",
  "^restsharp/",
  "^snapchat",
  "^space bison",
  "^svn",
  "^swcd ",
  "^taringa",
  "^test certificate info",
  "^thumbor/",
  "^tumblr/",
  "^user-agent:mozilla",
  "^valid",
  "^venus/fedoraplanet",
  "^w3c",
  "^webbandit/",
  "^webcopier",
  "^wget",
  "^whatsapp",
  "^xenu link sleuth",
  "^yahoo",
  "^yandex",
  "^zdm/\\d",
  "^zoom marketplace/",
  "^{{.*}}$",
  "adbeat\\.com",
  "appinsights",
  "archive",
  "ask jeeves/teoma",
  "bit\\.ly/",
  "bluecoat drtr",
  "bot",
  "browsex",
  "burpcollaborator",
  "capture",
  "catch",
  "check",
  "chrome-lighthouse",
  "chromeframe",
  "cloud",
  "crawl",
  "cryptoapi",
  "dareboost",
  "datanyze",
  "dataprovider",
  "dejaclick",
  "dmbrowser",
  "download",
  "evc-batch/",
  "feed",
  "firephp",
  "freesafeip",
  "gomezagent",
  "google",
  "headlesschrome/",
  "http",
  "httrack",
  "hubspot marketing grader",
  "hydra",
  "ibisbrowser",
  "images",
  "inspect",
  "iplabel",
  "ips-agent",
  "java",
  "library",
  "mail\\.ru/",
  "manager",
  "monitor",
  "morningscore/",
  "neustar wpm",
  "nutch",
  "offbyone",
  "optimize",
  "pageburst",
  "pagespeed",
  "perl",
  "phantom",
  "pingdom",
  "powermarks",
  "preview",
  "proxy",
  "ptst[ /]\\d",
  "reader",
  "rexx;",
  "rigor",
  "rss",
  "scan",
  "scrape",
  "search",
  "serp ?reputation ?management",
  "server",
  "sogou",
  "sparkler/",
  "speedcurve",
  "spider",
  "splash",
  "statuscake",
  "stumbleupon\\.com",
  "supercleaner",
  "synapse",
  "synthetic",
  "torrent",
  "tracemyfile",
  "transcoder",
  "trendsmapresolver",
  "twingly recon",
  "url",
  "virtuoso",
  "wappalyzer",
  "webglance",
  "webkit2png",
  "websitemetadataretriever",
  "whatcms/",
  "wordpress",
  "zgrab"
];
function amend(list2) {
  try {
    new RegExp("(?<! cu)bot").test("dangerbot");
  } catch {
    return list2;
  }
  return [
    // Addresses: Cubot device
    ["bot", "(?<! cu)bot"],
    // Addresses: Android webview
    ["google", "(?<! (?:channel/|google/))google(?!(app|/google| pixel))"],
    // Addresses: libhttp browser
    ["http", "(?<!(?:lib))http"],
    // Addresses: java based browsers
    ["java", "java(?!;)"],
    // Addresses: Yandex Search App
    ["search", "(?<! ya(?:yandex)?)search"]
  ].forEach(function(_ref) {
    var _ref2 = _slicedToArray(_ref, 2), search = _ref2[0], replace = _ref2[1], index3 = list2.lastIndexOf(search);
    ~index3 && list2.splice(index3, 1, replace);
  }), list2;
}
amend(list);
var flags = "i", _list = /* @__PURE__ */ new WeakMap(), _pattern = /* @__PURE__ */ new WeakMap(), _update = /* @__PURE__ */ new WeakSet(), _index = /* @__PURE__ */ new WeakSet(), Isbot = /* @__PURE__ */ function() {
  function Isbot2(patterns2) {
    var _this = this;
    _classCallCheck(this, Isbot2), _classPrivateMethodInitSpec(this, _index), _classPrivateMethodInitSpec(this, _update), _classPrivateFieldInitSpec(this, _list, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldInitSpec(this, _pattern, {
      writable: !0,
      value: void 0
    }), _classPrivateFieldSet(this, _list, patterns2 || list.slice()), _classPrivateMethodGet(this, _update, _update2).call(this);
    var isbot2 = function(ua) {
      return _this.test(ua);
    };
    return Object.defineProperties(isbot2, Object.entries(Object.getOwnPropertyDescriptors(Isbot2.prototype)).reduce(function(accumulator, _ref) {
      var _ref2 = _slicedToArray(_ref, 2), prop = _ref2[0], descriptor = _ref2[1];
      return typeof descriptor.value == "function" && Object.assign(accumulator, _defineProperty({}, prop, {
        value: _this[prop].bind(_this)
      })), typeof descriptor.get == "function" && Object.assign(accumulator, _defineProperty({}, prop, {
        get: function() {
          return _this[prop];
        }
      })), accumulator;
    }, {}));
  }
  return _createClass(Isbot2, [{
    key: "pattern",
    get: (
      /**
       * Get a clone of the pattern
       * @type RegExp
       */
      function() {
        return new RegExp(_classPrivateFieldGet(this, _pattern));
      }
    )
    /**
     * Match given string against out pattern
     * @param  {string} ua User Agent string
     * @returns {boolean}
     */
  }, {
    key: "test",
    value: function(ua) {
      return Boolean(ua) && _classPrivateFieldGet(this, _pattern).test(ua);
    }
    /**
     * Get the match for strings' known crawler pattern
     * @param  {string} ua User Agent string
     * @returns {string|null}
     */
  }, {
    key: "find",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", match2 = ua.match(_classPrivateFieldGet(this, _pattern));
      return match2 && match2[0];
    }
    /**
     * Get the patterns that match user agent string if any
     * @param  {string} ua User Agent string
     * @returns {string[]}
     */
  }, {
    key: "matches",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      return _classPrivateFieldGet(this, _list).filter(function(entry2) {
        return new RegExp(entry2, flags).test(ua);
      });
    }
    /**
     * Clear all patterns that match user agent
     * @param  {string} ua User Agent string
     * @returns {void}
     */
  }, {
    key: "clear",
    value: function() {
      var ua = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
      this.exclude(this.matches(ua));
    }
    /**
     * Extent patterns for known crawlers
     * @param  {string[]} filters
     * @returns {void}
     */
  }, {
    key: "extend",
    value: function() {
      var _this2 = this, filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];
      [].push.apply(_classPrivateFieldGet(this, _list), filters.filter(function(rule) {
        return _classPrivateMethodGet(_this2, _index, _index2).call(_this2, rule) === -1;
      }).map(function(filter3) {
        return filter3.toLowerCase();
      })), _classPrivateMethodGet(this, _update, _update2).call(this);
    }
    /**
     * Exclude patterns from bot pattern rule
     * @param  {string[]} filters
     * @returns {void}
     */
  }, {
    key: "exclude",
    value: function() {
      for (var filters = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], length = filters.length; length--; ) {
        var index3 = _classPrivateMethodGet(this, _index, _index2).call(this, filters[length]);
        index3 > -1 && _classPrivateFieldGet(this, _list).splice(index3, 1);
      }
      _classPrivateMethodGet(this, _update, _update2).call(this);
    }
    /**
     * Create a new Isbot instance using given list or self's list
     * @param  {string[]} [list]
     * @returns {Isbot}
     */
  }, {
    key: "spawn",
    value: function(list2) {
      return new Isbot2(list2 || _classPrivateFieldGet(this, _list));
    }
  }]), Isbot2;
}();
function _update2() {
  _classPrivateFieldSet(this, _pattern, new RegExp(_classPrivateFieldGet(this, _list).join("|"), flags));
}
function _index2(rule) {
  return _classPrivateFieldGet(this, _list).indexOf(rule.toLowerCase());
}
var isbot = new Isbot();

// app/entry.server.tsx
var import_server4 = __toESM(require_server_browser(), 1), import_jsx_runtime = (
  // @ts-ignore
  __toESM(require_jsx_runtime(), 1)
);
async function handleRequest(request, responseStatusCode, responseHeaders, remixContext, loadContext) {
  let body = await (0, import_server4.renderToReadableStream)(
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(RemixServer, { context: remixContext, url: request.url }),
    {
      signal: request.signal,
      onError(error) {
        console.error(error), responseStatusCode = 500;
      }
    }
  );
  return isbot(request.headers.get("user-agent")) && await body.allReady, responseHeaders.set("Content-Type", "text/html"), new Response(body, {
    headers: responseHeaders,
    status: responseStatusCode
  });
}

// app/root.tsx
var root_exports = {};
__export(root_exports, {
  default: () => App,
  links: () => links,
  loader: () => loader
});
var import_react28 = __toESM(require_react(), 1);
var import_cloudflare2 = __toESM(require_dist(), 1);

// ../../node_modules/@tanstack/query-core/build/modern/subscribable.js
var Subscribable = class {
  constructor() {
    this.listeners = /* @__PURE__ */ new Set(), this.subscribe = this.subscribe.bind(this);
  }
  subscribe(listener) {
    return this.listeners.add(listener), this.onSubscribe(), () => {
      this.listeners.delete(listener), this.onUnsubscribe();
    };
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {
  }
  onUnsubscribe() {
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/utils.js
var isServer = typeof window > "u" || "Deno" in window;
function noop() {
}
function functionalUpdate(updater, input) {
  return typeof updater == "function" ? updater(input) : updater;
}
function isValidTimeout(value) {
  return typeof value == "number" && value >= 0 && value !== 1 / 0;
}
function timeUntilStale(updatedAt, staleTime) {
  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);
}
function matchQuery(filters, query) {
  let {
    type = "all",
    exact,
    fetchStatus,
    predicate,
    queryKey,
    stale
  } = filters;
  if (queryKey) {
    if (exact) {
      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options))
        return !1;
    } else if (!partialMatchKey(query.queryKey, queryKey))
      return !1;
  }
  if (type !== "all") {
    let isActive = query.isActive();
    if (type === "active" && !isActive || type === "inactive" && isActive)
      return !1;
  }
  return !(typeof stale == "boolean" && query.isStale() !== stale || typeof fetchStatus < "u" && fetchStatus !== query.state.fetchStatus || predicate && !predicate(query));
}
function matchMutation(filters, mutation) {
  let { exact, status, predicate, mutationKey } = filters;
  if (mutationKey) {
    if (!mutation.options.mutationKey)
      return !1;
    if (exact) {
      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey))
        return !1;
    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey))
      return !1;
  }
  return !(status && mutation.state.status !== status || predicate && !predicate(mutation));
}
function hashQueryKeyByOptions(queryKey, options) {
  return (options?.queryKeyHashFn || hashKey)(queryKey);
}
function hashKey(queryKey) {
  return JSON.stringify(
    queryKey,
    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => (result[key] = val[key], result), {}) : val
  );
}
function partialMatchKey(a4, b3) {
  return a4 === b3 ? !0 : typeof a4 != typeof b3 ? !1 : a4 && b3 && typeof a4 == "object" && typeof b3 == "object" ? !Object.keys(b3).some((key) => !partialMatchKey(a4[key], b3[key])) : !1;
}
function replaceEqualDeep(a4, b3) {
  if (a4 === b3)
    return a4;
  let array = isPlainArray(a4) && isPlainArray(b3);
  if (array || isPlainObject(a4) && isPlainObject(b3)) {
    let aSize = array ? a4.length : Object.keys(a4).length, bItems = array ? b3 : Object.keys(b3), bSize = bItems.length, copy = array ? [] : {}, equalItems = 0;
    for (let i3 = 0; i3 < bSize; i3++) {
      let key = array ? i3 : bItems[i3];
      copy[key] = replaceEqualDeep(a4[key], b3[key]), copy[key] === a4[key] && equalItems++;
    }
    return aSize === bSize && equalItems === aSize ? a4 : copy;
  }
  return b3;
}
function shallowEqualObjects(a4, b3) {
  if (a4 && !b3 || b3 && !a4)
    return !1;
  for (let key in a4)
    if (a4[key] !== b3[key])
      return !1;
  return !0;
}
function isPlainArray(value) {
  return Array.isArray(value) && value.length === Object.keys(value).length;
}
function isPlainObject(o2) {
  if (!hasObjectPrototype(o2))
    return !1;
  let ctor = o2.constructor;
  if (typeof ctor > "u")
    return !0;
  let prot = ctor.prototype;
  return !(!hasObjectPrototype(prot) || !prot.hasOwnProperty("isPrototypeOf"));
}
function hasObjectPrototype(o2) {
  return Object.prototype.toString.call(o2) === "[object Object]";
}
function sleep(ms) {
  return new Promise((resolve) => {
    setTimeout(resolve, ms);
  });
}
function scheduleMicrotask(callback) {
  sleep(0).then(callback);
}
function replaceData(prevData, data, options) {
  return typeof options.structuralSharing == "function" ? options.structuralSharing(prevData, data) : options.structuralSharing !== !1 ? replaceEqualDeep(prevData, data) : data;
}
function addToEnd(items, item, max2 = 0) {
  let newItems = [...items, item];
  return max2 && newItems.length > max2 ? newItems.slice(1) : newItems;
}
function addToStart(items, item, max2 = 0) {
  let newItems = [item, ...items];
  return max2 && newItems.length > max2 ? newItems.slice(0, -1) : newItems;
}

// ../../node_modules/@tanstack/query-core/build/modern/focusManager.js
var FocusManager = class extends Subscribable {
  #focused;
  #cleanup;
  #setup;
  constructor() {
    super(), this.#setup = (onFocus) => {
      if (!isServer && window.addEventListener) {
        let listener = () => onFocus();
        return window.addEventListener("visibilitychange", listener, !1), () => {
          window.removeEventListener("visibilitychange", listener);
        };
      }
    };
  }
  onSubscribe() {
    this.#cleanup || this.setEventListener(this.#setup);
  }
  onUnsubscribe() {
    this.hasListeners() || (this.#cleanup?.(), this.#cleanup = void 0);
  }
  setEventListener(setup) {
    this.#setup = setup, this.#cleanup?.(), this.#cleanup = setup((focused) => {
      typeof focused == "boolean" ? this.setFocused(focused) : this.onFocus();
    });
  }
  setFocused(focused) {
    this.#focused !== focused && (this.#focused = focused, this.onFocus());
  }
  onFocus() {
    this.listeners.forEach((listener) => {
      listener();
    });
  }
  isFocused() {
    return typeof this.#focused == "boolean" ? this.#focused : globalThis.document?.visibilityState !== "hidden";
  }
}, focusManager = new FocusManager();

// ../../node_modules/@tanstack/query-core/build/modern/onlineManager.js
var OnlineManager = class extends Subscribable {
  #online = !0;
  #cleanup;
  #setup;
  constructor() {
    super(), this.#setup = (onOnline) => {
      if (!isServer && window.addEventListener) {
        let onlineListener = () => onOnline(!0), offlineListener = () => onOnline(!1);
        return window.addEventListener("online", onlineListener, !1), window.addEventListener("offline", offlineListener, !1), () => {
          window.removeEventListener("online", onlineListener), window.removeEventListener("offline", offlineListener);
        };
      }
    };
  }
  onSubscribe() {
    this.#cleanup || this.setEventListener(this.#setup);
  }
  onUnsubscribe() {
    this.hasListeners() || (this.#cleanup?.(), this.#cleanup = void 0);
  }
  setEventListener(setup) {
    this.#setup = setup, this.#cleanup?.(), this.#cleanup = setup(this.setOnline.bind(this));
  }
  setOnline(online) {
    this.#online !== online && (this.#online = online, this.listeners.forEach((listener) => {
      listener(online);
    }));
  }
  isOnline() {
    return this.#online;
  }
}, onlineManager = new OnlineManager();

// ../../node_modules/@tanstack/query-core/build/modern/retryer.js
function defaultRetryDelay(failureCount) {
  return Math.min(1e3 * 2 ** failureCount, 3e4);
}
function canFetch(networkMode) {
  return (networkMode ?? "online") === "online" ? onlineManager.isOnline() : !0;
}
var CancelledError = class {
  constructor(options) {
    this.revert = options?.revert, this.silent = options?.silent;
  }
};
function isCancelledError(value) {
  return value instanceof CancelledError;
}
function createRetryer(config) {
  let isRetryCancelled = !1, failureCount = 0, isResolved = !1, continueFn, promiseResolve, promiseReject, promise = new Promise((outerResolve, outerReject) => {
    promiseResolve = outerResolve, promiseReject = outerReject;
  }), cancel = (cancelOptions) => {
    isResolved || (reject(new CancelledError(cancelOptions)), config.abort?.());
  }, cancelRetry = () => {
    isRetryCancelled = !0;
  }, continueRetry = () => {
    isRetryCancelled = !1;
  }, shouldPause = () => !focusManager.isFocused() || config.networkMode !== "always" && !onlineManager.isOnline(), resolve = (value) => {
    isResolved || (isResolved = !0, config.onSuccess?.(value), continueFn?.(), promiseResolve(value));
  }, reject = (value) => {
    isResolved || (isResolved = !0, config.onError?.(value), continueFn?.(), promiseReject(value));
  }, pause = () => new Promise((continueResolve) => {
    continueFn = (value) => {
      let canContinue = isResolved || !shouldPause();
      return canContinue && continueResolve(value), canContinue;
    }, config.onPause?.();
  }).then(() => {
    continueFn = void 0, isResolved || config.onContinue?.();
  }), run = () => {
    if (isResolved)
      return;
    let promiseOrValue;
    try {
      promiseOrValue = config.fn();
    } catch (error) {
      promiseOrValue = Promise.reject(error);
    }
    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {
      if (isResolved)
        return;
      let retry = config.retry ?? (isServer ? 0 : 3), retryDelay = config.retryDelay ?? defaultRetryDelay, delay2 = typeof retryDelay == "function" ? retryDelay(failureCount, error) : retryDelay, shouldRetry = retry === !0 || typeof retry == "number" && failureCount < retry || typeof retry == "function" && retry(failureCount, error);
      if (isRetryCancelled || !shouldRetry) {
        reject(error);
        return;
      }
      failureCount++, config.onFail?.(failureCount, error), sleep(delay2).then(() => {
        if (shouldPause())
          return pause();
      }).then(() => {
        isRetryCancelled ? reject(error) : run();
      });
    });
  };
  return canFetch(config.networkMode) ? run() : pause().then(run), {
    promise,
    cancel,
    continue: () => continueFn?.() ? promise : Promise.resolve(),
    cancelRetry,
    continueRetry
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/notifyManager.js
function createNotifyManager() {
  let queue = [], transactions = 0, notifyFn = (callback) => {
    callback();
  }, batchNotifyFn = (callback) => {
    callback();
  }, batch = (callback) => {
    let result;
    transactions++;
    try {
      result = callback();
    } finally {
      transactions--, transactions || flush();
    }
    return result;
  }, schedule = (callback) => {
    transactions ? queue.push(callback) : scheduleMicrotask(() => {
      notifyFn(callback);
    });
  }, batchCalls = (callback) => (...args) => {
    schedule(() => {
      callback(...args);
    });
  }, flush = () => {
    let originalQueue = queue;
    queue = [], originalQueue.length && scheduleMicrotask(() => {
      batchNotifyFn(() => {
        originalQueue.forEach((callback) => {
          notifyFn(callback);
        });
      });
    });
  };
  return {
    batch,
    batchCalls,
    schedule,
    setNotifyFunction: (fn) => {
      notifyFn = fn;
    },
    setBatchNotifyFunction: (fn) => {
      batchNotifyFn = fn;
    }
  };
}
var notifyManager = createNotifyManager();

// ../../node_modules/@tanstack/query-core/build/modern/removable.js
var Removable = class {
  #gcTimeout;
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(), isValidTimeout(this.gcTime) && (this.#gcTimeout = setTimeout(() => {
      this.optionalRemove();
    }, this.gcTime));
  }
  updateGcTime(newGcTime) {
    this.gcTime = Math.max(
      this.gcTime || 0,
      newGcTime ?? (isServer ? 1 / 0 : 5 * 60 * 1e3)
    );
  }
  clearGcTimeout() {
    this.#gcTimeout && (clearTimeout(this.#gcTimeout), this.#gcTimeout = void 0);
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/query.js
var Query = class extends Removable {
  constructor(config) {
    super(), this.#abortSignalConsumed = !1, this.#defaultOptions = config.defaultOptions, this.#setOptions(config.options), this.#observers = [], this.#cache = config.cache, this.queryKey = config.queryKey, this.queryHash = config.queryHash, this.#initialState = config.state || getDefaultState(this.options), this.state = this.#initialState, this.scheduleGc();
  }
  #initialState;
  #revertState;
  #cache;
  #promise;
  #retryer;
  #observers;
  #defaultOptions;
  #abortSignalConsumed;
  get meta() {
    return this.options.meta;
  }
  #setOptions(options) {
    this.options = { ...this.#defaultOptions, ...options }, this.updateGcTime(this.options.gcTime);
  }
  optionalRemove() {
    !this.#observers.length && this.state.fetchStatus === "idle" && this.#cache.remove(this);
  }
  setData(newData, options) {
    let data = replaceData(this.state.data, newData, this.options);
    return this.#dispatch({
      data,
      type: "success",
      dataUpdatedAt: options?.updatedAt,
      manual: options?.manual
    }), data;
  }
  setState(state, setStateOptions) {
    this.#dispatch({ type: "setState", state, setStateOptions });
  }
  cancel(options) {
    let promise = this.#promise;
    return this.#retryer?.cancel(options), promise ? promise.then(noop).catch(noop) : Promise.resolve();
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(this.#initialState);
  }
  isActive() {
    return this.#observers.some(
      (observer) => observer.options.enabled !== !1
    );
  }
  isDisabled() {
    return this.getObserversCount() > 0 && !this.isActive();
  }
  isStale() {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || this.#observers.some((observer) => observer.getCurrentResult().isStale);
  }
  isStaleByTime(staleTime = 0) {
    return this.state.isInvalidated || !this.state.dataUpdatedAt || !timeUntilStale(this.state.dataUpdatedAt, staleTime);
  }
  onFocus() {
    this.#observers.find((x3) => x3.shouldFetchOnWindowFocus())?.refetch({ cancelRefetch: !1 }), this.#retryer?.continue();
  }
  onOnline() {
    this.#observers.find((x3) => x3.shouldFetchOnReconnect())?.refetch({ cancelRefetch: !1 }), this.#retryer?.continue();
  }
  addObserver(observer) {
    this.#observers.includes(observer) || (this.#observers.push(observer), this.clearGcTimeout(), this.#cache.notify({ type: "observerAdded", query: this, observer }));
  }
  removeObserver(observer) {
    this.#observers.includes(observer) && (this.#observers = this.#observers.filter((x3) => x3 !== observer), this.#observers.length || (this.#retryer && (this.#abortSignalConsumed ? this.#retryer.cancel({ revert: !0 }) : this.#retryer.cancelRetry()), this.scheduleGc()), this.#cache.notify({ type: "observerRemoved", query: this, observer }));
  }
  getObserversCount() {
    return this.#observers.length;
  }
  invalidate() {
    this.state.isInvalidated || this.#dispatch({ type: "invalidate" });
  }
  fetch(options, fetchOptions) {
    if (this.state.fetchStatus !== "idle") {
      if (this.state.dataUpdatedAt && fetchOptions?.cancelRefetch)
        this.cancel({ silent: !0 });
      else if (this.#promise)
        return this.#retryer?.continueRetry(), this.#promise;
    }
    if (options && this.#setOptions(options), !this.options.queryFn) {
      let observer = this.#observers.find((x3) => x3.options.queryFn);
      observer && this.#setOptions(observer.options);
    }
    let abortController = new AbortController(), queryFnContext = {
      queryKey: this.queryKey,
      meta: this.meta
    }, addSignalProperty = (object) => {
      Object.defineProperty(object, "signal", {
        enumerable: !0,
        get: () => (this.#abortSignalConsumed = !0, abortController.signal)
      });
    };
    addSignalProperty(queryFnContext);
    let fetchFn = () => this.options.queryFn ? (this.#abortSignalConsumed = !1, this.options.persister ? this.options.persister(
      this.options.queryFn,
      queryFnContext,
      this
    ) : this.options.queryFn(
      queryFnContext
    )) : Promise.reject(
      new Error(`Missing queryFn: '${this.options.queryHash}'`)
    ), context = {
      fetchOptions,
      options: this.options,
      queryKey: this.queryKey,
      state: this.state,
      fetchFn
    };
    addSignalProperty(context), this.options.behavior?.onFetch(
      context,
      this
    ), this.#revertState = this.state, (this.state.fetchStatus === "idle" || this.state.fetchMeta !== context.fetchOptions?.meta) && this.#dispatch({ type: "fetch", meta: context.fetchOptions?.meta });
    let onError = (error) => {
      isCancelledError(error) && error.silent || this.#dispatch({
        type: "error",
        error
      }), isCancelledError(error) || (this.#cache.config.onError?.(
        error,
        this
      ), this.#cache.config.onSettled?.(
        this.state.data,
        error,
        this
      )), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1;
    };
    return this.#retryer = createRetryer({
      fn: context.fetchFn,
      abort: abortController.abort.bind(abortController),
      onSuccess: (data) => {
        if (typeof data > "u") {
          onError(new Error(`${this.queryHash} data is undefined`));
          return;
        }
        this.setData(data), this.#cache.config.onSuccess?.(data, this), this.#cache.config.onSettled?.(
          data,
          this.state.error,
          this
        ), this.isFetchingOptimistic || this.scheduleGc(), this.isFetchingOptimistic = !1;
      },
      onError,
      onFail: (failureCount, error) => {
        this.#dispatch({ type: "failed", failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: "pause" });
      },
      onContinue: () => {
        this.#dispatch({ type: "continue" });
      },
      retry: context.options.retry,
      retryDelay: context.options.retryDelay,
      networkMode: context.options.networkMode
    }), this.#promise = this.#retryer.promise, this.#promise;
  }
  #dispatch(action) {
    let reducer2 = (state) => {
      switch (action.type) {
        case "failed":
          return {
            ...state,
            fetchFailureCount: action.failureCount,
            fetchFailureReason: action.error
          };
        case "pause":
          return {
            ...state,
            fetchStatus: "paused"
          };
        case "continue":
          return {
            ...state,
            fetchStatus: "fetching"
          };
        case "fetch":
          return {
            ...state,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: action.meta ?? null,
            fetchStatus: canFetch(this.options.networkMode) ? "fetching" : "paused",
            ...!state.dataUpdatedAt && {
              error: null,
              status: "pending"
            }
          };
        case "success":
          return {
            ...state,
            data: action.data,
            dataUpdateCount: state.dataUpdateCount + 1,
            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),
            error: null,
            isInvalidated: !1,
            status: "success",
            ...!action.manual && {
              fetchStatus: "idle",
              fetchFailureCount: 0,
              fetchFailureReason: null
            }
          };
        case "error":
          let error = action.error;
          return isCancelledError(error) && error.revert && this.#revertState ? { ...this.#revertState, fetchStatus: "idle" } : {
            ...state,
            error,
            errorUpdateCount: state.errorUpdateCount + 1,
            errorUpdatedAt: Date.now(),
            fetchFailureCount: state.fetchFailureCount + 1,
            fetchFailureReason: error,
            fetchStatus: "idle",
            status: "error"
          };
        case "invalidate":
          return {
            ...state,
            isInvalidated: !0
          };
        case "setState":
          return {
            ...state,
            ...action.state
          };
      }
    };
    this.state = reducer2(this.state), notifyManager.batch(() => {
      this.#observers.forEach((observer) => {
        observer.onQueryUpdate();
      }), this.#cache.notify({ query: this, type: "updated", action });
    });
  }
};
function getDefaultState(options) {
  let data = typeof options.initialData == "function" ? options.initialData() : options.initialData, hasData = typeof data < "u", initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt == "function" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;
  return {
    data,
    dataUpdateCount: 0,
    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: hasData ? "success" : "pending",
    fetchStatus: "idle"
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/queryCache.js
var QueryCache = class extends Subscribable {
  constructor(config = {}) {
    super(), this.config = config, this.#queries = /* @__PURE__ */ new Map();
  }
  #queries;
  build(client, options, state) {
    let queryKey = options.queryKey, queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options), query = this.get(queryHash);
    return query || (query = new Query({
      cache: this,
      queryKey,
      queryHash,
      options: client.defaultQueryOptions(options),
      state,
      defaultOptions: client.getQueryDefaults(queryKey)
    }), this.add(query)), query;
  }
  add(query) {
    this.#queries.has(query.queryHash) || (this.#queries.set(query.queryHash, query), this.notify({
      type: "added",
      query
    }));
  }
  remove(query) {
    let queryInMap = this.#queries.get(query.queryHash);
    queryInMap && (query.destroy(), queryInMap === query && this.#queries.delete(query.queryHash), this.notify({ type: "removed", query }));
  }
  clear() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        this.remove(query);
      });
    });
  }
  get(queryHash) {
    return this.#queries.get(queryHash);
  }
  getAll() {
    return [...this.#queries.values()];
  }
  find(filters) {
    let defaultedFilters = { exact: !0, ...filters };
    return this.getAll().find(
      (query) => matchQuery(defaultedFilters, query)
    );
  }
  findAll(filters = {}) {
    let queries = this.getAll();
    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  onFocus() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onFocus();
      });
    });
  }
  onOnline() {
    notifyManager.batch(() => {
      this.getAll().forEach((query) => {
        query.onOnline();
      });
    });
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/mutation.js
var Mutation = class extends Removable {
  constructor(config) {
    super(), this.mutationId = config.mutationId, this.#defaultOptions = config.defaultOptions, this.#mutationCache = config.mutationCache, this.#observers = [], this.state = config.state || getDefaultState2(), this.setOptions(config.options), this.scheduleGc();
  }
  #observers;
  #defaultOptions;
  #mutationCache;
  #retryer;
  setOptions(options) {
    this.options = { ...this.#defaultOptions, ...options }, this.updateGcTime(this.options.gcTime);
  }
  get meta() {
    return this.options.meta;
  }
  addObserver(observer) {
    this.#observers.includes(observer) || (this.#observers.push(observer), this.clearGcTimeout(), this.#mutationCache.notify({
      type: "observerAdded",
      mutation: this,
      observer
    }));
  }
  removeObserver(observer) {
    this.#observers = this.#observers.filter((x3) => x3 !== observer), this.scheduleGc(), this.#mutationCache.notify({
      type: "observerRemoved",
      mutation: this,
      observer
    });
  }
  optionalRemove() {
    this.#observers.length || (this.state.status === "pending" ? this.scheduleGc() : this.#mutationCache.remove(this));
  }
  continue() {
    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before
    this.execute(this.state.variables);
  }
  async execute(variables) {
    let executeMutation = () => (this.#retryer = createRetryer({
      fn: () => this.options.mutationFn ? this.options.mutationFn(variables) : Promise.reject(new Error("No mutationFn found")),
      onFail: (failureCount, error) => {
        this.#dispatch({ type: "failed", failureCount, error });
      },
      onPause: () => {
        this.#dispatch({ type: "pause" });
      },
      onContinue: () => {
        this.#dispatch({ type: "continue" });
      },
      retry: this.options.retry ?? 0,
      retryDelay: this.options.retryDelay,
      networkMode: this.options.networkMode
    }), this.#retryer.promise), restored = this.state.status === "pending";
    try {
      if (!restored) {
        this.#dispatch({ type: "pending", variables }), await this.#mutationCache.config.onMutate?.(
          variables,
          this
        );
        let context = await this.options.onMutate?.(variables);
        context !== this.state.context && this.#dispatch({
          type: "pending",
          context,
          variables
        });
      }
      let data = await executeMutation();
      return await this.#mutationCache.config.onSuccess?.(
        data,
        variables,
        this.state.context,
        this
      ), await this.options.onSuccess?.(data, variables, this.state.context), await this.#mutationCache.config.onSettled?.(
        data,
        null,
        this.state.variables,
        this.state.context,
        this
      ), await this.options.onSettled?.(data, null, variables, this.state.context), this.#dispatch({ type: "success", data }), data;
    } catch (error) {
      try {
        throw await this.#mutationCache.config.onError?.(
          error,
          variables,
          this.state.context,
          this
        ), await this.options.onError?.(
          error,
          variables,
          this.state.context
        ), await this.#mutationCache.config.onSettled?.(
          void 0,
          error,
          this.state.variables,
          this.state.context,
          this
        ), await this.options.onSettled?.(
          void 0,
          error,
          variables,
          this.state.context
        ), error;
      } finally {
        this.#dispatch({ type: "error", error });
      }
    }
  }
  #dispatch(action) {
    let reducer2 = (state) => {
      switch (action.type) {
        case "failed":
          return {
            ...state,
            failureCount: action.failureCount,
            failureReason: action.error
          };
        case "pause":
          return {
            ...state,
            isPaused: !0
          };
        case "continue":
          return {
            ...state,
            isPaused: !1
          };
        case "pending":
          return {
            ...state,
            context: action.context,
            data: void 0,
            failureCount: 0,
            failureReason: null,
            error: null,
            isPaused: !canFetch(this.options.networkMode),
            status: "pending",
            variables: action.variables,
            submittedAt: Date.now()
          };
        case "success":
          return {
            ...state,
            data: action.data,
            failureCount: 0,
            failureReason: null,
            error: null,
            status: "success",
            isPaused: !1
          };
        case "error":
          return {
            ...state,
            data: void 0,
            error: action.error,
            failureCount: state.failureCount + 1,
            failureReason: action.error,
            isPaused: !1,
            status: "error"
          };
      }
    };
    this.state = reducer2(this.state), notifyManager.batch(() => {
      this.#observers.forEach((observer) => {
        observer.onMutationUpdate(action);
      }), this.#mutationCache.notify({
        mutation: this,
        type: "updated",
        action
      });
    });
  }
};
function getDefaultState2() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
    submittedAt: 0
  };
}

// ../../node_modules/@tanstack/query-core/build/modern/mutationCache.js
var MutationCache = class extends Subscribable {
  constructor(config = {}) {
    super(), this.config = config, this.#mutations = [], this.#mutationId = 0;
  }
  #mutations;
  #mutationId;
  #resuming;
  build(client, options, state) {
    let mutation = new Mutation({
      mutationCache: this,
      mutationId: ++this.#mutationId,
      options: client.defaultMutationOptions(options),
      state
    });
    return this.add(mutation), mutation;
  }
  add(mutation) {
    this.#mutations.push(mutation), this.notify({ type: "added", mutation });
  }
  remove(mutation) {
    this.#mutations = this.#mutations.filter((x3) => x3 !== mutation), this.notify({ type: "removed", mutation });
  }
  clear() {
    notifyManager.batch(() => {
      this.#mutations.forEach((mutation) => {
        this.remove(mutation);
      });
    });
  }
  getAll() {
    return this.#mutations;
  }
  find(filters) {
    let defaultedFilters = { exact: !0, ...filters };
    return this.#mutations.find(
      (mutation) => matchMutation(defaultedFilters, mutation)
    );
  }
  findAll(filters = {}) {
    return this.#mutations.filter(
      (mutation) => matchMutation(filters, mutation)
    );
  }
  notify(event) {
    notifyManager.batch(() => {
      this.listeners.forEach((listener) => {
        listener(event);
      });
    });
  }
  resumePausedMutations() {
    return this.#resuming = (this.#resuming ?? Promise.resolve()).then(() => {
      let pausedMutations = this.#mutations.filter((x3) => x3.state.isPaused);
      return notifyManager.batch(
        () => pausedMutations.reduce(
          (promise, mutation) => promise.then(() => mutation.continue().catch(noop)),
          Promise.resolve()
        )
      );
    }).then(() => {
      this.#resuming = void 0;
    }), this.#resuming;
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js
function infiniteQueryBehavior(pages) {
  return {
    onFetch: (context, query) => {
      let fetchFn = async () => {
        let options = context.options, direction = context.fetchOptions?.meta?.fetchMore?.direction, oldPages = context.state.data?.pages || [], oldPageParams = context.state.data?.pageParams || [], empty = { pages: [], pageParams: [] }, cancelled = !1, addSignalProperty = (object) => {
          Object.defineProperty(object, "signal", {
            enumerable: !0,
            get: () => (context.signal.aborted ? cancelled = !0 : context.signal.addEventListener("abort", () => {
              cancelled = !0;
            }), context.signal)
          });
        }, queryFn = context.options.queryFn || (() => Promise.reject(
          new Error(`Missing queryFn: '${context.options.queryHash}'`)
        )), fetchPage = async (data, param, previous) => {
          if (cancelled)
            return Promise.reject();
          if (param == null && data.pages.length)
            return Promise.resolve(data);
          let queryFnContext = {
            queryKey: context.queryKey,
            pageParam: param,
            direction: previous ? "backward" : "forward",
            meta: context.options.meta
          };
          addSignalProperty(queryFnContext);
          let page = await queryFn(
            queryFnContext
          ), { maxPages } = context.options, addTo = previous ? addToStart : addToEnd;
          return {
            pages: addTo(data.pages, page, maxPages),
            pageParams: addTo(data.pageParams, param, maxPages)
          };
        }, result;
        if (direction && oldPages.length) {
          let previous = direction === "backward", pageParamFn = previous ? getPreviousPageParam : getNextPageParam, oldData = {
            pages: oldPages,
            pageParams: oldPageParams
          }, param = pageParamFn(options, oldData);
          result = await fetchPage(oldData, param, previous);
        } else {
          result = await fetchPage(
            empty,
            oldPageParams[0] ?? options.initialPageParam
          );
          let remainingPages = pages ?? oldPages.length;
          for (let i3 = 1; i3 < remainingPages; i3++) {
            let param = getNextPageParam(options, result);
            result = await fetchPage(result, param);
          }
        }
        return result;
      };
      context.options.persister ? context.fetchFn = () => context.options.persister?.(
        fetchFn,
        {
          queryKey: context.queryKey,
          meta: context.options.meta,
          signal: context.signal
        },
        query
      ) : context.fetchFn = fetchFn;
    }
  };
}
function getNextPageParam(options, { pages, pageParams }) {
  let lastIndex = pages.length - 1;
  return options.getNextPageParam(
    pages[lastIndex],
    pages,
    pageParams[lastIndex],
    pageParams
  );
}
function getPreviousPageParam(options, { pages, pageParams }) {
  return options.getPreviousPageParam?.(
    pages[0],
    pages,
    pageParams[0],
    pageParams
  );
}
function hasNextPage(options, data) {
  return data ? getNextPageParam(options, data) != null : !1;
}
function hasPreviousPage(options, data) {
  return !data || !options.getPreviousPageParam ? !1 : getPreviousPageParam(options, data) != null;
}

// ../../node_modules/@tanstack/query-core/build/modern/queryClient.js
var QueryClient = class {
  #queryCache;
  #mutationCache;
  #defaultOptions;
  #queryDefaults;
  #mutationDefaults;
  #mountCount;
  #unsubscribeFocus;
  #unsubscribeOnline;
  constructor(config = {}) {
    this.#queryCache = config.queryCache || new QueryCache(), this.#mutationCache = config.mutationCache || new MutationCache(), this.#defaultOptions = config.defaultOptions || {}, this.#queryDefaults = /* @__PURE__ */ new Map(), this.#mutationDefaults = /* @__PURE__ */ new Map(), this.#mountCount = 0;
  }
  mount() {
    this.#mountCount++, this.#mountCount === 1 && (this.#unsubscribeFocus = focusManager.subscribe(() => {
      focusManager.isFocused() && (this.resumePausedMutations(), this.#queryCache.onFocus());
    }), this.#unsubscribeOnline = onlineManager.subscribe(() => {
      onlineManager.isOnline() && (this.resumePausedMutations(), this.#queryCache.onOnline());
    }));
  }
  unmount() {
    this.#mountCount--, this.#mountCount === 0 && (this.#unsubscribeFocus?.(), this.#unsubscribeFocus = void 0, this.#unsubscribeOnline?.(), this.#unsubscribeOnline = void 0);
  }
  isFetching(filters) {
    return this.#queryCache.findAll({ ...filters, fetchStatus: "fetching" }).length;
  }
  isMutating(filters) {
    return this.#mutationCache.findAll({ ...filters, status: "pending" }).length;
  }
  getQueryData(queryKey) {
    return this.#queryCache.find({ queryKey })?.state.data;
  }
  ensureQueryData(options) {
    let cachedData = this.getQueryData(options.queryKey);
    return cachedData !== void 0 ? Promise.resolve(cachedData) : this.fetchQuery(options);
  }
  getQueriesData(filters) {
    return this.getQueryCache().findAll(filters).map(({ queryKey, state }) => {
      let data = state.data;
      return [queryKey, data];
    });
  }
  setQueryData(queryKey, updater, options) {
    let prevData = this.#queryCache.find({ queryKey })?.state.data, data = functionalUpdate(updater, prevData);
    if (typeof data > "u")
      return;
    let defaultedOptions = this.defaultQueryOptions({ queryKey });
    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: !0 });
  }
  setQueriesData(filters, updater, options) {
    return notifyManager.batch(
      () => this.getQueryCache().findAll(filters).map(({ queryKey }) => [
        queryKey,
        this.setQueryData(queryKey, updater, options)
      ])
    );
  }
  getQueryState(queryKey) {
    return this.#queryCache.find({ queryKey })?.state;
  }
  removeQueries(filters) {
    let queryCache = this.#queryCache;
    notifyManager.batch(() => {
      queryCache.findAll(filters).forEach((query) => {
        queryCache.remove(query);
      });
    });
  }
  resetQueries(filters, options) {
    let queryCache = this.#queryCache, refetchFilters = {
      type: "active",
      ...filters
    };
    return notifyManager.batch(() => (queryCache.findAll(filters).forEach((query) => {
      query.reset();
    }), this.refetchQueries(refetchFilters, options)));
  }
  cancelQueries(filters = {}, cancelOptions = {}) {
    let defaultedCancelOptions = { revert: !0, ...cancelOptions }, promises = notifyManager.batch(
      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))
    );
    return Promise.all(promises).then(noop).catch(noop);
  }
  invalidateQueries(filters = {}, options = {}) {
    return notifyManager.batch(() => {
      if (this.#queryCache.findAll(filters).forEach((query) => {
        query.invalidate();
      }), filters.refetchType === "none")
        return Promise.resolve();
      let refetchFilters = {
        ...filters,
        type: filters.refetchType ?? filters.type ?? "active"
      };
      return this.refetchQueries(refetchFilters, options);
    });
  }
  refetchQueries(filters = {}, options) {
    let fetchOptions = {
      ...options,
      cancelRefetch: options?.cancelRefetch ?? !0
    }, promises = notifyManager.batch(
      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled()).map((query) => {
        let promise = query.fetch(void 0, fetchOptions);
        return fetchOptions.throwOnError || (promise = promise.catch(noop)), query.state.fetchStatus === "paused" ? Promise.resolve() : promise;
      })
    );
    return Promise.all(promises).then(noop);
  }
  fetchQuery(options) {
    let defaultedOptions = this.defaultQueryOptions(options);
    typeof defaultedOptions.retry > "u" && (defaultedOptions.retry = !1);
    let query = this.#queryCache.build(this, defaultedOptions);
    return query.isStaleByTime(defaultedOptions.staleTime) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);
  }
  prefetchQuery(options) {
    return this.fetchQuery(options).then(noop).catch(noop);
  }
  fetchInfiniteQuery(options) {
    return options.behavior = infiniteQueryBehavior(options.pages), this.fetchQuery(options);
  }
  prefetchInfiniteQuery(options) {
    return this.fetchInfiniteQuery(options).then(noop).catch(noop);
  }
  resumePausedMutations() {
    return this.#mutationCache.resumePausedMutations();
  }
  getQueryCache() {
    return this.#queryCache;
  }
  getMutationCache() {
    return this.#mutationCache;
  }
  getDefaultOptions() {
    return this.#defaultOptions;
  }
  setDefaultOptions(options) {
    this.#defaultOptions = options;
  }
  setQueryDefaults(queryKey, options) {
    this.#queryDefaults.set(hashKey(queryKey), {
      queryKey,
      defaultOptions: options
    });
  }
  getQueryDefaults(queryKey) {
    let defaults2 = [...this.#queryDefaults.values()], result = {};
    return defaults2.forEach((queryDefault) => {
      partialMatchKey(queryKey, queryDefault.queryKey) && (result = { ...result, ...queryDefault.defaultOptions });
    }), result;
  }
  setMutationDefaults(mutationKey, options) {
    this.#mutationDefaults.set(hashKey(mutationKey), {
      mutationKey,
      defaultOptions: options
    });
  }
  getMutationDefaults(mutationKey) {
    let defaults2 = [...this.#mutationDefaults.values()], result = {};
    return defaults2.forEach((queryDefault) => {
      partialMatchKey(mutationKey, queryDefault.mutationKey) && (result = { ...result, ...queryDefault.defaultOptions });
    }), result;
  }
  defaultQueryOptions(options) {
    if (options?._defaulted)
      return options;
    let defaultedOptions = {
      ...this.#defaultOptions.queries,
      ...options?.queryKey && this.getQueryDefaults(options.queryKey),
      ...options,
      _defaulted: !0
    };
    return defaultedOptions.queryHash || (defaultedOptions.queryHash = hashQueryKeyByOptions(
      defaultedOptions.queryKey,
      defaultedOptions
    )), typeof defaultedOptions.refetchOnReconnect > "u" && (defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== "always"), typeof defaultedOptions.throwOnError > "u" && (defaultedOptions.throwOnError = !!defaultedOptions.suspense), typeof defaultedOptions.networkMode > "u" && defaultedOptions.persister && (defaultedOptions.networkMode = "offlineFirst"), defaultedOptions;
  }
  defaultMutationOptions(options) {
    return options?._defaulted ? options : {
      ...this.#defaultOptions.mutations,
      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),
      ...options,
      _defaulted: !0
    };
  }
  clear() {
    this.#queryCache.clear(), this.#mutationCache.clear();
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/queryObserver.js
var QueryObserver = class extends Subscribable {
  constructor(client, options) {
    super(), this.#currentQuery = void 0, this.#currentQueryInitialState = void 0, this.#currentResult = void 0, this.#trackedProps = /* @__PURE__ */ new Set(), this.#client = client, this.options = options, this.#selectError = null, this.bindMethods(), this.setOptions(options);
  }
  #client;
  #currentQuery;
  #currentQueryInitialState;
  #currentResult;
  #currentResultState;
  #currentResultOptions;
  #selectError;
  #selectFn;
  #selectResult;
  // This property keeps track of the last query with defined data.
  // It will be used to pass the previous data and query to the placeholder function between renders.
  #lastQueryWithDefinedData;
  #staleTimeoutId;
  #refetchIntervalId;
  #currentRefetchInterval;
  #trackedProps;
  bindMethods() {
    this.refetch = this.refetch.bind(this);
  }
  onSubscribe() {
    this.listeners.size === 1 && (this.#currentQuery.addObserver(this), shouldFetchOnMount(this.#currentQuery, this.options) ? this.#executeFetch() : this.updateResult(), this.#updateTimers());
  }
  onUnsubscribe() {
    this.hasListeners() || this.destroy();
  }
  shouldFetchOnReconnect() {
    return shouldFetchOn(
      this.#currentQuery,
      this.options,
      this.options.refetchOnReconnect
    );
  }
  shouldFetchOnWindowFocus() {
    return shouldFetchOn(
      this.#currentQuery,
      this.options,
      this.options.refetchOnWindowFocus
    );
  }
  destroy() {
    this.listeners = /* @__PURE__ */ new Set(), this.#clearStaleTimeout(), this.#clearRefetchInterval(), this.#currentQuery.removeObserver(this);
  }
  setOptions(options, notifyOptions) {
    let prevOptions = this.options, prevQuery = this.#currentQuery;
    if (this.options = this.#client.defaultQueryOptions(options), shallowEqualObjects(prevOptions, this.options) || this.#client.getQueryCache().notify({
      type: "observerOptionsUpdated",
      query: this.#currentQuery,
      observer: this
    }), typeof this.options.enabled < "u" && typeof this.options.enabled != "boolean")
      throw new Error("Expected enabled to be a boolean");
    this.options.queryKey || (this.options.queryKey = prevOptions.queryKey), this.#updateQuery();
    let mounted = this.hasListeners();
    mounted && shouldFetchOptionally(
      this.#currentQuery,
      prevQuery,
      this.options,
      prevOptions
    ) && this.#executeFetch(), this.updateResult(notifyOptions), mounted && (this.#currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || this.options.staleTime !== prevOptions.staleTime) && this.#updateStaleTimeout();
    let nextRefetchInterval = this.#computeRefetchInterval();
    mounted && (this.#currentQuery !== prevQuery || this.options.enabled !== prevOptions.enabled || nextRefetchInterval !== this.#currentRefetchInterval) && this.#updateRefetchInterval(nextRefetchInterval);
  }
  getOptimisticResult(options) {
    let query = this.#client.getQueryCache().build(this.#client, options), result = this.createResult(query, options);
    return shouldAssignObserverCurrentProperties(this, result) && (this.#currentResult = result, this.#currentResultOptions = this.options, this.#currentResultState = this.#currentQuery.state), result;
  }
  getCurrentResult() {
    return this.#currentResult;
  }
  trackResult(result) {
    let trackedResult = {};
    return Object.keys(result).forEach((key) => {
      Object.defineProperty(trackedResult, key, {
        configurable: !1,
        enumerable: !0,
        get: () => (this.#trackedProps.add(key), result[key])
      });
    }), trackedResult;
  }
  getCurrentQuery() {
    return this.#currentQuery;
  }
  refetch({ ...options } = {}) {
    return this.fetch({
      ...options
    });
  }
  fetchOptimistic(options) {
    let defaultedOptions = this.#client.defaultQueryOptions(options), query = this.#client.getQueryCache().build(this.#client, defaultedOptions);
    return query.isFetchingOptimistic = !0, query.fetch().then(() => this.createResult(query, defaultedOptions));
  }
  fetch(fetchOptions) {
    return this.#executeFetch({
      ...fetchOptions,
      cancelRefetch: fetchOptions.cancelRefetch ?? !0
    }).then(() => (this.updateResult(), this.#currentResult));
  }
  #executeFetch(fetchOptions) {
    this.#updateQuery();
    let promise = this.#currentQuery.fetch(
      this.options,
      fetchOptions
    );
    return fetchOptions?.throwOnError || (promise = promise.catch(noop)), promise;
  }
  #updateStaleTimeout() {
    if (this.#clearStaleTimeout(), isServer || this.#currentResult.isStale || !isValidTimeout(this.options.staleTime))
      return;
    let timeout = timeUntilStale(
      this.#currentResult.dataUpdatedAt,
      this.options.staleTime
    ) + 1;
    this.#staleTimeoutId = setTimeout(() => {
      this.#currentResult.isStale || this.updateResult();
    }, timeout);
  }
  #computeRefetchInterval() {
    return (typeof this.options.refetchInterval == "function" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? !1;
  }
  #updateRefetchInterval(nextInterval) {
    this.#clearRefetchInterval(), this.#currentRefetchInterval = nextInterval, !(isServer || this.options.enabled === !1 || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) && (this.#refetchIntervalId = setInterval(() => {
      (this.options.refetchIntervalInBackground || focusManager.isFocused()) && this.#executeFetch();
    }, this.#currentRefetchInterval));
  }
  #updateTimers() {
    this.#updateStaleTimeout(), this.#updateRefetchInterval(this.#computeRefetchInterval());
  }
  #clearStaleTimeout() {
    this.#staleTimeoutId && (clearTimeout(this.#staleTimeoutId), this.#staleTimeoutId = void 0);
  }
  #clearRefetchInterval() {
    this.#refetchIntervalId && (clearInterval(this.#refetchIntervalId), this.#refetchIntervalId = void 0);
  }
  createResult(query, options) {
    let prevQuery = this.#currentQuery, prevOptions = this.options, prevResult = this.#currentResult, prevResultState = this.#currentResultState, prevResultOptions = this.#currentResultOptions, queryInitialState = query !== prevQuery ? query.state : this.#currentQueryInitialState, { state } = query, { error, errorUpdatedAt, fetchStatus, status } = state, isPlaceholderData = !1, data;
    if (options._optimisticResults) {
      let mounted = this.hasListeners(), fetchOnMount = !mounted && shouldFetchOnMount(query, options), fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);
      (fetchOnMount || fetchOptionally) && (fetchStatus = canFetch(query.options.networkMode) ? "fetching" : "paused", state.dataUpdatedAt || (status = "pending")), options._optimisticResults === "isRestoring" && (fetchStatus = "idle");
    }
    if (options.select && typeof state.data < "u")
      if (prevResult && state.data === prevResultState?.data && options.select === this.#selectFn)
        data = this.#selectResult;
      else
        try {
          this.#selectFn = options.select, data = options.select(state.data), data = replaceData(prevResult?.data, data, options), this.#selectResult = data, this.#selectError = null;
        } catch (selectError) {
          this.#selectError = selectError;
        }
    else
      data = state.data;
    if (typeof options.placeholderData < "u" && typeof data > "u" && status === "pending") {
      let placeholderData;
      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData)
        placeholderData = prevResult.data;
      else if (placeholderData = typeof options.placeholderData == "function" ? options.placeholderData(
        this.#lastQueryWithDefinedData?.state.data,
        this.#lastQueryWithDefinedData
      ) : options.placeholderData, options.select && typeof placeholderData < "u")
        try {
          placeholderData = options.select(placeholderData), this.#selectError = null;
        } catch (selectError) {
          this.#selectError = selectError;
        }
      typeof placeholderData < "u" && (status = "success", data = replaceData(
        prevResult?.data,
        placeholderData,
        options
      ), isPlaceholderData = !0);
    }
    this.#selectError && (error = this.#selectError, data = this.#selectResult, errorUpdatedAt = Date.now(), status = "error");
    let isFetching = fetchStatus === "fetching", isPending = status === "pending", isError = status === "error", isLoading = isPending && isFetching;
    return {
      status,
      fetchStatus,
      isPending,
      isSuccess: status === "success",
      isError,
      isInitialLoading: isLoading,
      isLoading,
      data,
      dataUpdatedAt: state.dataUpdatedAt,
      error,
      errorUpdatedAt,
      failureCount: state.fetchFailureCount,
      failureReason: state.fetchFailureReason,
      errorUpdateCount: state.errorUpdateCount,
      isFetched: state.dataUpdateCount > 0 || state.errorUpdateCount > 0,
      isFetchedAfterMount: state.dataUpdateCount > queryInitialState.dataUpdateCount || state.errorUpdateCount > queryInitialState.errorUpdateCount,
      isFetching,
      isRefetching: isFetching && !isPending,
      isLoadingError: isError && state.dataUpdatedAt === 0,
      isPaused: fetchStatus === "paused",
      isPlaceholderData,
      isRefetchError: isError && state.dataUpdatedAt !== 0,
      isStale: isStale(query, options),
      refetch: this.refetch
    };
  }
  updateResult(notifyOptions) {
    let prevResult = this.#currentResult, nextResult = this.createResult(this.#currentQuery, this.options);
    if (this.#currentResultState = this.#currentQuery.state, this.#currentResultOptions = this.options, this.#currentResultState.data !== void 0 && (this.#lastQueryWithDefinedData = this.#currentQuery), shallowEqualObjects(nextResult, prevResult))
      return;
    this.#currentResult = nextResult;
    let defaultNotifyOptions = {}, shouldNotifyListeners = () => {
      if (!prevResult)
        return !0;
      let { notifyOnChangeProps } = this.options, notifyOnChangePropsValue = typeof notifyOnChangeProps == "function" ? notifyOnChangeProps() : notifyOnChangeProps;
      if (notifyOnChangePropsValue === "all" || !notifyOnChangePropsValue && !this.#trackedProps.size)
        return !0;
      let includedProps = new Set(
        notifyOnChangePropsValue ?? this.#trackedProps
      );
      return this.options.throwOnError && includedProps.add("error"), Object.keys(this.#currentResult).some((key) => {
        let typedKey = key;
        return this.#currentResult[typedKey] !== prevResult[typedKey] && includedProps.has(typedKey);
      });
    };
    notifyOptions?.listeners !== !1 && shouldNotifyListeners() && (defaultNotifyOptions.listeners = !0), this.#notify({ ...defaultNotifyOptions, ...notifyOptions });
  }
  #updateQuery() {
    let query = this.#client.getQueryCache().build(this.#client, this.options);
    if (query === this.#currentQuery)
      return;
    let prevQuery = this.#currentQuery;
    this.#currentQuery = query, this.#currentQueryInitialState = query.state, this.hasListeners() && (prevQuery?.removeObserver(this), query.addObserver(this));
  }
  onQueryUpdate() {
    this.updateResult(), this.hasListeners() && this.#updateTimers();
  }
  #notify(notifyOptions) {
    notifyManager.batch(() => {
      notifyOptions.listeners && this.listeners.forEach((listener) => {
        listener(this.#currentResult);
      }), this.#client.getQueryCache().notify({
        query: this.#currentQuery,
        type: "observerResultsUpdated"
      });
    });
  }
};
function shouldLoadOnMount(query, options) {
  return options.enabled !== !1 && !query.state.dataUpdatedAt && !(query.state.status === "error" && options.retryOnMount === !1);
}
function shouldFetchOnMount(query, options) {
  return shouldLoadOnMount(query, options) || query.state.dataUpdatedAt > 0 && shouldFetchOn(query, options, options.refetchOnMount);
}
function shouldFetchOn(query, options, field) {
  if (options.enabled !== !1) {
    let value = typeof field == "function" ? field(query) : field;
    return value === "always" || value !== !1 && isStale(query, options);
  }
  return !1;
}
function shouldFetchOptionally(query, prevQuery, options, prevOptions) {
  return options.enabled !== !1 && (query !== prevQuery || prevOptions.enabled === !1) && (!options.suspense || query.state.status !== "error") && isStale(query, options);
}
function isStale(query, options) {
  return query.isStaleByTime(options.staleTime);
}
function shouldAssignObserverCurrentProperties(observer, optimisticResult) {
  return !shallowEqualObjects(observer.getCurrentResult(), optimisticResult);
}

// ../../node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js
var InfiniteQueryObserver = class extends QueryObserver {
  // eslint-disable-next-line @typescript-eslint/no-useless-constructor
  constructor(client, options) {
    super(client, options);
  }
  bindMethods() {
    super.bindMethods(), this.fetchNextPage = this.fetchNextPage.bind(this), this.fetchPreviousPage = this.fetchPreviousPage.bind(this);
  }
  setOptions(options, notifyOptions) {
    super.setOptions(
      {
        ...options,
        behavior: infiniteQueryBehavior()
      },
      notifyOptions
    );
  }
  getOptimisticResult(options) {
    return options.behavior = infiniteQueryBehavior(), super.getOptimisticResult(options);
  }
  fetchNextPage(options) {
    return this.fetch({
      ...options,
      meta: {
        fetchMore: { direction: "forward" }
      }
    });
  }
  fetchPreviousPage(options) {
    return this.fetch({
      ...options,
      meta: {
        fetchMore: { direction: "backward" }
      }
    });
  }
  createResult(query, options) {
    let { state } = query, result = super.createResult(query, options), { isFetching, isRefetching } = result, isFetchingNextPage = isFetching && state.fetchMeta?.fetchMore?.direction === "forward", isFetchingPreviousPage = isFetching && state.fetchMeta?.fetchMore?.direction === "backward";
    return {
      ...result,
      fetchNextPage: this.fetchNextPage,
      fetchPreviousPage: this.fetchPreviousPage,
      hasNextPage: hasNextPage(options, state.data),
      hasPreviousPage: hasPreviousPage(options, state.data),
      isFetchingNextPage,
      isFetchingPreviousPage,
      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage
    };
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/mutationObserver.js
var MutationObserver2 = class extends Subscribable {
  constructor(client, options) {
    super(), this.#currentResult = void 0, this.#client = client, this.setOptions(options), this.bindMethods(), this.#updateResult();
  }
  #client;
  #currentResult;
  #currentMutation;
  #mutateOptions;
  bindMethods() {
    this.mutate = this.mutate.bind(this), this.reset = this.reset.bind(this);
  }
  setOptions(options) {
    let prevOptions = this.options;
    this.options = this.#client.defaultMutationOptions(options), shallowEqualObjects(prevOptions, this.options) || this.#client.getMutationCache().notify({
      type: "observerOptionsUpdated",
      mutation: this.#currentMutation,
      observer: this
    }), this.#currentMutation?.setOptions(this.options), prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey) && this.reset();
  }
  onUnsubscribe() {
    this.hasListeners() || this.#currentMutation?.removeObserver(this);
  }
  onMutationUpdate(action) {
    this.#updateResult(), this.#notify(action);
  }
  getCurrentResult() {
    return this.#currentResult;
  }
  reset() {
    this.#currentMutation?.removeObserver(this), this.#currentMutation = void 0, this.#updateResult(), this.#notify();
  }
  mutate(variables, options) {
    return this.#mutateOptions = options, this.#currentMutation?.removeObserver(this), this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options), this.#currentMutation.addObserver(this), this.#currentMutation.execute(variables);
  }
  #updateResult() {
    let state = this.#currentMutation?.state ?? getDefaultState2();
    this.#currentResult = {
      ...state,
      isPending: state.status === "pending",
      isSuccess: state.status === "success",
      isError: state.status === "error",
      isIdle: state.status === "idle",
      mutate: this.mutate,
      reset: this.reset
    };
  }
  #notify(action) {
    notifyManager.batch(() => {
      if (this.#mutateOptions && this.hasListeners()) {
        let variables = this.#currentResult.variables, context = this.#currentResult.context;
        action?.type === "success" ? (this.#mutateOptions.onSuccess?.(action.data, variables, context), this.#mutateOptions.onSettled?.(action.data, null, variables, context)) : action?.type === "error" && (this.#mutateOptions.onError?.(action.error, variables, context), this.#mutateOptions.onSettled?.(
          void 0,
          action.error,
          variables,
          context
        ));
      }
      this.listeners.forEach((listener) => {
        listener(this.#currentResult);
      });
    });
  }
};

// ../../node_modules/@tanstack/query-core/build/modern/hydration.js
function dehydrateMutation(mutation) {
  return {
    mutationKey: mutation.options.mutationKey,
    state: mutation.state,
    ...mutation.meta && { meta: mutation.meta }
  };
}
function dehydrateQuery(query) {
  return {
    state: query.state,
    queryKey: query.queryKey,
    queryHash: query.queryHash,
    ...query.meta && { meta: query.meta }
  };
}
function defaultShouldDehydrateMutation(mutation) {
  return mutation.state.isPaused;
}
function defaultShouldDehydrateQuery(query) {
  return query.state.status === "success";
}
function dehydrate(client, options = {}) {
  let filterMutation = options.shouldDehydrateMutation ?? defaultShouldDehydrateMutation, mutations = client.getMutationCache().getAll().flatMap(
    (mutation) => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []
  ), filterQuery = options.shouldDehydrateQuery ?? defaultShouldDehydrateQuery, queries = client.getQueryCache().getAll().flatMap((query) => filterQuery(query) ? [dehydrateQuery(query)] : []);
  return { mutations, queries };
}
function hydrate(client, dehydratedState, options) {
  if (typeof dehydratedState != "object" || dehydratedState === null)
    return;
  let mutationCache = client.getMutationCache(), queryCache = client.getQueryCache(), mutations = dehydratedState.mutations || [], queries = dehydratedState.queries || [];
  mutations.forEach((dehydratedMutation) => {
    mutationCache.build(
      client,
      {
        ...options?.defaultOptions?.mutations,
        mutationKey: dehydratedMutation.mutationKey,
        meta: dehydratedMutation.meta
      },
      dehydratedMutation.state
    );
  }), queries.forEach(({ queryKey, state, queryHash, meta: meta2 }) => {
    let query = queryCache.get(queryHash);
    if (query) {
      if (query.state.dataUpdatedAt < state.dataUpdatedAt) {
        let { fetchStatus: _ignored, ...dehydratedQueryState } = state;
        query.setState(dehydratedQueryState);
      }
      return;
    }
    queryCache.build(
      client,
      {
        ...options?.defaultOptions?.queries,
        queryKey,
        queryHash,
        meta: meta2
      },
      // Reset fetch status to idle to avoid
      // query being stuck in fetching state upon hydration
      {
        ...state,
        fetchStatus: "idle"
      }
    );
  });
}

// ../../node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js
var React9 = __toESM(require_react(), 1), QueryClientContext = React9.createContext(
  void 0
), useQueryClient = (queryClient) => {
  let client = React9.useContext(QueryClientContext);
  if (queryClient)
    return queryClient;
  if (!client)
    throw new Error("No QueryClient set, use QueryClientProvider to set one");
  return client;
}, QueryClientProvider = ({
  client,
  children
}) => (React9.useEffect(() => (client.mount(), () => {
  client.unmount();
}), [client]), /* @__PURE__ */ React9.createElement(QueryClientContext.Provider, { value: client }, children));

// ../../node_modules/@tanstack/react-query/build/modern/isRestoring.js
var React10 = __toESM(require_react(), 1), IsRestoringContext = React10.createContext(!1), useIsRestoring = () => React10.useContext(IsRestoringContext), IsRestoringProvider = IsRestoringContext.Provider;

// ../../node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js
var React11 = __toESM(require_react(), 1);
function createValue() {
  let isReset = !1;
  return {
    clearReset: () => {
      isReset = !1;
    },
    reset: () => {
      isReset = !0;
    },
    isReset: () => isReset
  };
}
var QueryErrorResetBoundaryContext = React11.createContext(createValue()), useQueryErrorResetBoundary = () => React11.useContext(QueryErrorResetBoundaryContext);

// ../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js
var React12 = __toESM(require_react(), 1);

// ../../node_modules/@tanstack/react-query/build/modern/utils.js
function shouldThrowError(throwError, params) {
  return typeof throwError == "function" ? throwError(...params) : !!throwError;
}

// ../../node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js
var ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {
  (options.suspense || options.throwOnError) && (errorResetBoundary.isReset() || (options.retryOnMount = !1));
}, useClearResetErrorBoundary = (errorResetBoundary) => {
  React12.useEffect(() => {
    errorResetBoundary.clearReset();
  }, [errorResetBoundary]);
}, getHasError = ({
  result,
  errorResetBoundary,
  throwOnError,
  query
}) => result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(throwOnError, [result.error, query]);

// ../../node_modules/@tanstack/react-query/build/modern/suspense.js
var ensureStaleTime = (defaultedOptions) => {
  defaultedOptions.suspense && typeof defaultedOptions.staleTime != "number" && (defaultedOptions.staleTime = 1e3);
};
var shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending, fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {
  errorResetBoundary.clearReset();
});

// ../../node_modules/@tanstack/react-query/build/modern/useBaseQuery.js
var React13 = __toESM(require_react(), 1);
function useBaseQuery(options, Observer, queryClient) {
  let client = useQueryClient(queryClient), isRestoring = useIsRestoring(), errorResetBoundary = useQueryErrorResetBoundary(), defaultedOptions = client.defaultQueryOptions(options);
  defaultedOptions._optimisticResults = isRestoring ? "isRestoring" : "optimistic", ensureStaleTime(defaultedOptions), ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary), useClearResetErrorBoundary(errorResetBoundary);
  let [observer] = React13.useState(
    () => new Observer(
      client,
      defaultedOptions
    )
  ), result = observer.getOptimisticResult(defaultedOptions);
  if (React13.useSyncExternalStore(
    React13.useCallback(
      (onStoreChange) => {
        let unsubscribe = isRestoring ? () => {
        } : observer.subscribe(notifyManager.batchCalls(onStoreChange));
        return observer.updateResult(), unsubscribe;
      },
      [observer, isRestoring]
    ),
    () => observer.getCurrentResult(),
    () => observer.getCurrentResult()
  ), React13.useEffect(() => {
    observer.setOptions(defaultedOptions, { listeners: !1 });
  }, [defaultedOptions, observer]), shouldSuspend(defaultedOptions, result))
    throw observer.setOptions(defaultedOptions, { listeners: !1 }), fetchOptimistic(defaultedOptions, observer, errorResetBoundary);
  if (getHasError({
    result,
    errorResetBoundary,
    throwOnError: defaultedOptions.throwOnError,
    query: observer.getCurrentQuery()
  }))
    throw result.error;
  return defaultedOptions.notifyOnChangeProps ? result : observer.trackResult(result);
}

// ../../node_modules/@tanstack/react-query/build/modern/useQuery.js
function useQuery(options, queryClient) {
  return useBaseQuery(options, QueryObserver, queryClient);
}

// ../../node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js
var React14 = __toESM(require_react(), 1);
var HydrationBoundary = ({
  children,
  options = {},
  state,
  queryClient
}) => {
  let client = useQueryClient(queryClient), [hydrationQueue, setHydrationQueue] = React14.useState(), optionsRef = React14.useRef(options);
  return optionsRef.current = options, React14.useMemo(() => {
    if (state) {
      if (typeof state != "object")
        return;
      let queryCache = client.getQueryCache(), queries = state.queries || [], newQueries = [], existingQueries = [];
      for (let dehydratedQuery of queries) {
        let existingQuery = queryCache.get(dehydratedQuery.queryHash);
        if (!existingQuery)
          newQueries.push(dehydratedQuery);
        else {
          let hydrationIsNewer = dehydratedQuery.state.dataUpdatedAt > existingQuery.state.dataUpdatedAt, queryAlreadyQueued = hydrationQueue?.find(
            (query) => query.queryHash === dehydratedQuery.queryHash
          );
          hydrationIsNewer && (!queryAlreadyQueued || dehydratedQuery.state.dataUpdatedAt > queryAlreadyQueued.state.dataUpdatedAt) && existingQueries.push(dehydratedQuery);
        }
      }
      newQueries.length > 0 && hydrate(client, { queries: newQueries }, optionsRef.current), existingQueries.length > 0 && setHydrationQueue(
        (prev) => prev ? [...prev, ...existingQueries] : existingQueries
      );
    }
  }, [client, hydrationQueue, state]), React14.useEffect(() => {
    hydrationQueue && (hydrate(client, { queries: hydrationQueue }, optionsRef.current), setHydrationQueue(void 0));
  }, [client, hydrationQueue]), children;
};

// ../../node_modules/@tanstack/react-query/build/modern/useMutation.js
var React15 = __toESM(require_react(), 1);
function useMutation(options, queryClient) {
  let client = useQueryClient(queryClient), [observer] = React15.useState(
    () => new MutationObserver2(
      client,
      options
    )
  );
  React15.useEffect(() => {
    observer.setOptions(options);
  }, [observer, options]);
  let result = React15.useSyncExternalStore(
    React15.useCallback(
      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),
      [observer]
    ),
    () => observer.getCurrentResult(),
    () => observer.getCurrentResult()
  ), mutate = React15.useCallback(
    (variables, mutateOptions) => {
      observer.mutate(variables, mutateOptions).catch(noop2);
    },
    [observer]
  );
  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error]))
    throw result.error;
  return { ...result, mutate, mutateAsync: result.mutate };
}
function noop2() {
}

// ../../node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js
function useInfiniteQuery(options, queryClient) {
  return useBaseQuery(
    options,
    // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion
    InfiniteQueryObserver,
    queryClient
  );
}

// ../../node_modules/@tanstack/react-query-devtools/build/modern/index.js
var ReactQueryDevtools2 = function() {
  return null;
};

// ../../node_modules/@react-oauth/google/dist/index.esm.js
var import_react2 = __toESM(require_react());
function useLoadGsiScript(options = {}) {
  let { nonce, onScriptLoadSuccess, onScriptLoadError } = options, [scriptLoadedSuccessfully, setScriptLoadedSuccessfully] = (0, import_react2.useState)(!1), onScriptLoadSuccessRef = (0, import_react2.useRef)(onScriptLoadSuccess);
  onScriptLoadSuccessRef.current = onScriptLoadSuccess;
  let onScriptLoadErrorRef = (0, import_react2.useRef)(onScriptLoadError);
  return onScriptLoadErrorRef.current = onScriptLoadError, (0, import_react2.useEffect)(() => {
    let scriptTag = document.createElement("script");
    return scriptTag.src = "https://accounts.google.com/gsi/client", scriptTag.async = !0, scriptTag.defer = !0, scriptTag.nonce = nonce, scriptTag.onload = () => {
      var _a;
      setScriptLoadedSuccessfully(!0), (_a = onScriptLoadSuccessRef.current) === null || _a === void 0 || _a.call(onScriptLoadSuccessRef);
    }, scriptTag.onerror = () => {
      var _a;
      setScriptLoadedSuccessfully(!1), (_a = onScriptLoadErrorRef.current) === null || _a === void 0 || _a.call(onScriptLoadErrorRef);
    }, document.body.appendChild(scriptTag), () => {
      document.body.removeChild(scriptTag);
    };
  }, [nonce]), scriptLoadedSuccessfully;
}
var GoogleOAuthContext = (0, import_react2.createContext)(null);
function GoogleOAuthProvider({ clientId, nonce, onScriptLoadSuccess, onScriptLoadError, children }) {
  let scriptLoadedSuccessfully = useLoadGsiScript({
    nonce,
    onScriptLoadSuccess,
    onScriptLoadError
  }), contextValue = (0, import_react2.useMemo)(() => ({
    clientId,
    scriptLoadedSuccessfully
  }), [clientId, scriptLoadedSuccessfully]);
  return import_react2.default.createElement(GoogleOAuthContext.Provider, { value: contextValue }, children);
}
function useGoogleOAuth() {
  let context = (0, import_react2.useContext)(GoogleOAuthContext);
  if (!context)
    throw new Error("Google OAuth components must be used within GoogleOAuthProvider");
  return context;
}
function extractClientId(credentialResponse) {
  var _a;
  return (_a = credentialResponse?.clientId) !== null && _a !== void 0 ? _a : credentialResponse?.client_id;
}
var containerHeightMap = { large: 40, medium: 32, small: 20 };
function GoogleLogin({ onSuccess, onError, useOneTap, promptMomentNotification, type = "standard", theme = "outline", size: size2 = "large", text, shape, logo_alignment, width, locale: locale2, click_listener, containerProps, ...props }) {
  let btnContainerRef = (0, import_react2.useRef)(null), { clientId, scriptLoadedSuccessfully } = useGoogleOAuth(), onSuccessRef = (0, import_react2.useRef)(onSuccess);
  onSuccessRef.current = onSuccess;
  let onErrorRef = (0, import_react2.useRef)(onError);
  onErrorRef.current = onError;
  let promptMomentNotificationRef = (0, import_react2.useRef)(promptMomentNotification);
  return promptMomentNotificationRef.current = promptMomentNotification, (0, import_react2.useEffect)(() => {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j;
    if (scriptLoadedSuccessfully)
      return (_c = (_b = (_a = window?.google) === null || _a === void 0 ? void 0 : _a.accounts) === null || _b === void 0 ? void 0 : _b.id) === null || _c === void 0 || _c.initialize({
        client_id: clientId,
        callback: (credentialResponse) => {
          var _a2;
          if (!credentialResponse?.credential)
            return (_a2 = onErrorRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(onErrorRef);
          let { credential, select_by } = credentialResponse;
          onSuccessRef.current({
            credential,
            clientId: extractClientId(credentialResponse),
            select_by
          });
        },
        ...props
      }), (_f = (_e = (_d = window?.google) === null || _d === void 0 ? void 0 : _d.accounts) === null || _e === void 0 ? void 0 : _e.id) === null || _f === void 0 || _f.renderButton(btnContainerRef.current, {
        type,
        theme,
        size: size2,
        text,
        shape,
        logo_alignment,
        width,
        locale: locale2,
        click_listener
      }), useOneTap && ((_j = (_h = (_g = window?.google) === null || _g === void 0 ? void 0 : _g.accounts) === null || _h === void 0 ? void 0 : _h.id) === null || _j === void 0 || _j.prompt(promptMomentNotificationRef.current)), () => {
        var _a2, _b2, _c2;
        useOneTap && ((_c2 = (_b2 = (_a2 = window?.google) === null || _a2 === void 0 ? void 0 : _a2.accounts) === null || _b2 === void 0 ? void 0 : _b2.id) === null || _c2 === void 0 || _c2.cancel());
      };
  }, [
    clientId,
    scriptLoadedSuccessfully,
    useOneTap,
    type,
    theme,
    size2,
    text,
    shape,
    logo_alignment,
    width,
    locale2
  ]), import_react2.default.createElement("div", { ...containerProps, ref: btnContainerRef, style: { height: containerHeightMap[size2], ...containerProps?.style } });
}

// ../../node_modules/next-themes/dist/index.module.js
var import_react3 = __toESM(require_react()), c = ["light", "dark"], i = "(prefers-color-scheme: dark)", d = typeof window > "u", u = /* @__PURE__ */ (0, import_react3.createContext)(void 0), h = { setTheme: (e3) => {
}, themes: [] }, y = () => {
  var e3;
  return (e3 = (0, import_react3.useContext)(u)) !== null && e3 !== void 0 ? e3 : h;
}, $ = (r3) => (0, import_react3.useContext)(u) ? /* @__PURE__ */ import_react3.default.createElement(import_react3.Fragment, null, r3.children) : /* @__PURE__ */ import_react3.default.createElement(f, r3), v = ["light", "dark"], f = ({ forcedTheme: t4, disableTransitionOnChange: n2 = !1, enableSystem: l2 = !0, enableColorScheme: m4 = !0, storageKey: d4 = "theme", themes: h4 = v, defaultTheme: y4 = l2 ? "system" : "light", attribute: $2 = "data-theme", value: f2, children: w2, nonce: T3 }) => {
  let [E2, k3] = (0, import_react3.useState)(() => S(d4, y4)), [C, L3] = (0, import_react3.useState)(() => S(d4)), x3 = f2 ? Object.values(f2) : h4, I2 = (0, import_react3.useCallback)((e3) => {
    let t5 = e3;
    if (!t5)
      return;
    e3 === "system" && l2 && (t5 = p());
    let r3 = f2 ? f2[t5] : t5, o2 = n2 ? b() : null, a4 = document.documentElement;
    if ($2 === "class" ? (a4.classList.remove(...x3), r3 && a4.classList.add(r3)) : r3 ? a4.setAttribute($2, r3) : a4.removeAttribute($2), m4) {
      let e4 = c.includes(y4) ? y4 : null, n3 = c.includes(t5) ? t5 : e4;
      a4.style.colorScheme = n3;
    }
    o2?.();
  }, []), O2 = (0, import_react3.useCallback)((e3) => {
    k3(e3);
    try {
      localStorage.setItem(d4, e3);
    } catch {
    }
  }, [t4]), M4 = (0, import_react3.useCallback)((e3) => {
    let n3 = p(e3);
    L3(n3), E2 === "system" && l2 && !t4 && I2("system");
  }, [E2, t4]);
  (0, import_react3.useEffect)(() => {
    let e3 = window.matchMedia(i);
    return e3.addListener(M4), M4(e3), () => e3.removeListener(M4);
  }, [M4]), (0, import_react3.useEffect)(() => {
    let e3 = (e4) => {
      e4.key === d4 && O2(e4.newValue || y4);
    };
    return window.addEventListener("storage", e3), () => window.removeEventListener("storage", e3);
  }, [O2]), (0, import_react3.useEffect)(() => {
    I2(t4 ?? E2);
  }, [t4, E2]);
  let A = (0, import_react3.useMemo)(() => ({ theme: E2, setTheme: O2, forcedTheme: t4, resolvedTheme: E2 === "system" ? C : E2, themes: l2 ? [...h4, "system"] : h4, systemTheme: l2 ? C : void 0 }), [E2, O2, t4, C, l2, h4]);
  return import_react3.default.createElement(u.Provider, { value: A }, /* @__PURE__ */ import_react3.default.createElement(g, { forcedTheme: t4, disableTransitionOnChange: n2, enableSystem: l2, enableColorScheme: m4, storageKey: d4, themes: h4, defaultTheme: y4, attribute: $2, value: f2, children: w2, attrs: x3, nonce: T3 }), w2);
}, g = /* @__PURE__ */ (0, import_react3.memo)(({ forcedTheme: t4, storageKey: n2, attribute: r3, enableSystem: o2, enableColorScheme: a4, defaultTheme: s4, value: l2, attrs: m4, nonce: d4 }) => {
  let u3 = s4 === "system", h4 = r3 === "class" ? `var d=document.documentElement,c=d.classList;c.remove(${m4.map((e3) => `'${e3}'`).join(",")});` : `var d=document.documentElement,n='${r3}',s='setAttribute';`, y4 = a4 ? c.includes(s4) && s4 ? `if(e==='light'||e==='dark'||!e)d.style.colorScheme=e||'${s4}'` : "if(e==='light'||e==='dark')d.style.colorScheme=e" : "", $2 = (e3, t5 = !1, n3 = !0) => {
    let o3 = l2 ? l2[e3] : e3, s5 = t5 ? e3 + "|| ''" : `'${o3}'`, m5 = "";
    return a4 && n3 && !t5 && c.includes(e3) && (m5 += `d.style.colorScheme = '${e3}';`), r3 === "class" ? m5 += t5 || o3 ? `c.add(${s5})` : "null" : o3 && (m5 += `d[s](n,${s5})`), m5;
  }, v2 = t4 ? `!function(){${h4}${$2(t4)}}()` : o2 ? `!function(){try{${h4}var e=localStorage.getItem('${n2}');if('system'===e||(!e&&${u3})){var t='${i}',m=window.matchMedia(t);if(m.media!==t||m.matches){${$2("dark")}}else{${$2("light")}}}else if(e){${l2 ? `var x=${JSON.stringify(l2)};` : ""}${$2(l2 ? "x[e]" : "e", !0)}}${u3 ? "" : "else{" + $2(s4, !1, !1) + "}"}${y4}}catch(e){}}()` : `!function(){try{${h4}var e=localStorage.getItem('${n2}');if(e){${l2 ? `var x=${JSON.stringify(l2)};` : ""}${$2(l2 ? "x[e]" : "e", !0)}}else{${$2(s4, !1, !1)};}${y4}}catch(t){}}();`;
  return import_react3.default.createElement("script", { nonce: d4, dangerouslySetInnerHTML: { __html: v2 } });
}, () => !0), S = (e3, t4) => {
  if (d)
    return;
  let n2;
  try {
    n2 = localStorage.getItem(e3) || void 0;
  } catch {
  }
  return n2 || t4;
}, b = () => {
  let e3 = document.createElement("style");
  return e3.appendChild(document.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")), document.head.appendChild(e3), () => {
    window.getComputedStyle(document.body), setTimeout(() => {
      document.head.removeChild(e3);
    }, 1);
  };
}, p = (e3) => (e3 || (e3 = window.matchMedia(i)), e3.matches ? "dark" : "light");

// app/components/theme-provider.tsx
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
function ThemeProvider({ children, ...props }) {
  return /* @__PURE__ */ (0, import_jsx_runtime2.jsx)($, { ...props, children });
}

// app/components/ui/toast.tsx
var React17 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-icons/dist/react-icons.esm.js
var import_react4 = __toESM(require_react());
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {}, sourceKeys = Object.keys(source), key, i3;
  for (i3 = 0; i3 < sourceKeys.length; i3++)
    key = sourceKeys[i3], !(excluded.indexOf(key) >= 0) && (target[key] = source[key]);
  return target;
}
var _excluded$e = ["color"], ArrowDownIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$e);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.5 2C7.77614 2 8 2.22386 8 2.5L8 11.2929L11.1464 8.14645C11.3417 7.95118 11.6583 7.95118 11.8536 8.14645C12.0488 8.34171 12.0488 8.65829 11.8536 8.85355L7.85355 12.8536C7.75979 12.9473 7.63261 13 7.5 13C7.36739 13 7.24021 12.9473 7.14645 12.8536L3.14645 8.85355C2.95118 8.65829 2.95118 8.34171 3.14645 8.14645C3.34171 7.95118 3.65829 7.95118 3.85355 8.14645L7 11.2929L7 2.5C7 2.22386 7.22386 2 7.5 2Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$j = ["color"], ArrowUpIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$j);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.14645 2.14645C7.34171 1.95118 7.65829 1.95118 7.85355 2.14645L11.8536 6.14645C12.0488 6.34171 12.0488 6.65829 11.8536 6.85355C11.6583 7.04882 11.3417 7.04882 11.1464 6.85355L8 3.70711L8 12.5C8 12.7761 7.77614 13 7.5 13C7.22386 13 7 12.7761 7 12.5L7 3.70711L3.85355 6.85355C3.65829 7.04882 3.34171 7.04882 3.14645 6.85355C2.95118 6.65829 2.95118 6.34171 3.14645 6.14645L7.14645 2.14645Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Q = ["color"], CaretSortIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$Q);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$S = ["color"], ChatBubbleIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$S);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M12.5 3L2.5 3.00002C1.67157 3.00002 1 3.6716 1 4.50002V9.50003C1 10.3285 1.67157 11 2.5 11H7.50003C7.63264 11 7.75982 11.0527 7.85358 11.1465L10 13.2929V11.5C10 11.2239 10.2239 11 10.5 11H12.5C13.3284 11 14 10.3285 14 9.50003V4.5C14 3.67157 13.3284 3 12.5 3ZM2.49999 2.00002L12.5 2C13.8807 2 15 3.11929 15 4.5V9.50003C15 10.8807 13.8807 12 12.5 12H11V14.5C11 14.7022 10.8782 14.8845 10.6913 14.9619C10.5045 15.0393 10.2894 14.9965 10.1464 14.8536L7.29292 12H2.5C1.11929 12 0 10.8807 0 9.50003V4.50002C0 3.11931 1.11928 2.00003 2.49999 2.00002Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}), _excluded$T = ["color"], CheckIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$T);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M11.4669 3.72684C11.7558 3.91574 11.8369 4.30308 11.648 4.59198L7.39799 11.092C7.29783 11.2452 7.13556 11.3467 6.95402 11.3699C6.77247 11.3931 6.58989 11.3355 6.45446 11.2124L3.70446 8.71241C3.44905 8.48022 3.43023 8.08494 3.66242 7.82953C3.89461 7.57412 4.28989 7.55529 4.5453 7.78749L6.75292 9.79441L10.6018 3.90792C10.7907 3.61902 11.178 3.53795 11.4669 3.72684Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$W = ["color"], ChevronDownIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$W);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3.13523 6.15803C3.3241 5.95657 3.64052 5.94637 3.84197 6.13523L7.5 9.56464L11.158 6.13523C11.3595 5.94637 11.6759 5.95657 11.8648 6.15803C12.0536 6.35949 12.0434 6.67591 11.842 6.86477L7.84197 10.6148C7.64964 10.7951 7.35036 10.7951 7.15803 10.6148L3.15803 6.86477C2.95657 6.67591 2.94637 6.35949 3.13523 6.15803Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$Y = ["color"], ChevronRightIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$Y);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M6.1584 3.13508C6.35985 2.94621 6.67627 2.95642 6.86514 3.15788L10.6151 7.15788C10.7954 7.3502 10.7954 7.64949 10.6151 7.84182L6.86514 11.8418C6.67627 12.0433 6.35985 12.0535 6.1584 11.8646C5.95694 11.6757 5.94673 11.3593 6.1356 11.1579L9.565 7.49985L6.1356 3.84182C5.94673 3.64036 5.95694 3.32394 6.1584 3.13508Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}), _excluded$Z = ["color"], ChevronUpIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$Z);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3.13523 8.84197C3.3241 9.04343 3.64052 9.05363 3.84197 8.86477L7.5 5.43536L11.158 8.86477C11.3595 9.05363 11.6759 9.04343 11.8648 8.84197C12.0536 8.64051 12.0434 8.32409 11.842 8.13523L7.84197 4.38523C7.64964 4.20492 7.35036 4.20492 7.15803 4.38523L3.15803 8.13523C2.95657 8.32409 2.94637 8.64051 3.13523 8.84197Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1h = ["color"], CopyIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1h);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M1 9.50006C1 10.3285 1.67157 11.0001 2.5 11.0001H4L4 10.0001H2.5C2.22386 10.0001 2 9.7762 2 9.50006L2 2.50006C2 2.22392 2.22386 2.00006 2.5 2.00006L9.5 2.00006C9.77614 2.00006 10 2.22392 10 2.50006V4.00002H5.5C4.67158 4.00002 4 4.67159 4 5.50002V12.5C4 13.3284 4.67158 14 5.5 14H12.5C13.3284 14 14 13.3284 14 12.5V5.50002C14 4.67159 13.3284 4.00002 12.5 4.00002H11V2.50006C11 1.67163 10.3284 1.00006 9.5 1.00006H2.5C1.67157 1.00006 1 1.67163 1 2.50006V9.50006ZM5 5.50002C5 5.22388 5.22386 5.00002 5.5 5.00002H12.5C12.7761 5.00002 13 5.22388 13 5.50002V12.5C13 12.7762 12.7761 13 12.5 13H5.5C5.22386 13 5 12.7762 5 12.5V5.50002Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1r = ["color"], Cross2Icon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1r);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1w = ["color"], CubeIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1w);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.28856 0.796908C7.42258 0.734364 7.57742 0.734364 7.71144 0.796908L13.7114 3.59691C13.8875 3.67906 14 3.85574 14 4.05V10.95C14 11.1443 13.8875 11.3209 13.7114 11.4031L7.71144 14.2031C7.57742 14.2656 7.42258 14.2656 7.28856 14.2031L1.28856 11.4031C1.11252 11.3209 1 11.1443 1 10.95V4.05C1 3.85574 1.11252 3.67906 1.28856 3.59691L7.28856 0.796908ZM2 4.80578L7 6.93078V12.9649L2 10.6316V4.80578ZM8 12.9649L13 10.6316V4.80578L8 6.93078V12.9649ZM7.5 6.05672L12.2719 4.02866L7.5 1.80176L2.72809 4.02866L7.5 6.05672Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1B = ["color"], DesktopIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1B);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M1 3.25C1 3.11193 1.11193 3 1.25 3H13.75C13.8881 3 14 3.11193 14 3.25V10.75C14 10.8881 13.8881 11 13.75 11H1.25C1.11193 11 1 10.8881 1 10.75V3.25ZM1.25 2C0.559643 2 0 2.55964 0 3.25V10.75C0 11.4404 0.559644 12 1.25 12H5.07341L4.82991 13.2986C4.76645 13.6371 5.02612 13.95 5.37049 13.95H9.62951C9.97389 13.95 10.2336 13.6371 10.1701 13.2986L9.92659 12H13.75C14.4404 12 15 11.4404 15 10.75V3.25C15 2.55964 14.4404 2 13.75 2H1.25ZM9.01091 12H5.98909L5.79222 13.05H9.20778L9.01091 12Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$1H = ["color"], DotIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1H);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.5 9.125C8.39746 9.125 9.125 8.39746 9.125 7.5C9.125 6.60254 8.39746 5.875 7.5 5.875C6.60254 5.875 5.875 6.60254 5.875 7.5C5.875 8.39746 6.60254 9.125 7.5 9.125ZM7.5 10.125C8.94975 10.125 10.125 8.94975 10.125 7.5C10.125 6.05025 8.94975 4.875 7.5 4.875C6.05025 4.875 4.875 6.05025 4.875 7.5C4.875 8.94975 6.05025 10.125 7.5 10.125Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
}), _excluded$1I = ["color"], DotFilledIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1I);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M9.875 7.5C9.875 8.81168 8.81168 9.875 7.5 9.875C6.18832 9.875 5.125 8.81168 5.125 7.5C5.125 6.18832 6.18832 5.125 7.5 5.125C8.81168 5.125 9.875 6.18832 9.875 7.5Z",
    fill: color2
  }));
}), _excluded$1J = ["color"], DotsHorizontalIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$1J);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3.625 7.5C3.625 8.12132 3.12132 8.625 2.5 8.625C1.87868 8.625 1.375 8.12132 1.375 7.5C1.375 6.87868 1.87868 6.375 2.5 6.375C3.12132 6.375 3.625 6.87868 3.625 7.5ZM8.625 7.5C8.625 8.12132 8.12132 8.625 7.5 8.625C6.87868 8.625 6.375 8.12132 6.375 7.5C6.375 6.87868 6.87868 6.375 7.5 6.375C8.12132 6.375 8.625 6.87868 8.625 7.5ZM12.5 8.625C13.1213 8.625 13.625 8.12132 13.625 7.5C13.625 6.87868 13.1213 6.375 12.5 6.375C11.8787 6.375 11.375 6.87868 11.375 7.5C11.375 8.12132 11.8787 8.625 12.5 8.625Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$21 = ["color"], ExitIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$21);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3 1C2.44771 1 2 1.44772 2 2V13C2 13.5523 2.44772 14 3 14H10.5C10.7761 14 11 13.7761 11 13.5C11 13.2239 10.7761 13 10.5 13H3V2L10.5 2C10.7761 2 11 1.77614 11 1.5C11 1.22386 10.7761 1 10.5 1H3ZM12.6036 4.89645C12.4083 4.70118 12.0917 4.70118 11.8964 4.89645C11.7012 5.09171 11.7012 5.40829 11.8964 5.60355L13.2929 7H6.5C6.22386 7 6 7.22386 6 7.5C6 7.77614 6.22386 8 6.5 8H13.2929L11.8964 9.39645C11.7012 9.59171 11.7012 9.90829 11.8964 10.1036C12.0917 10.2988 12.4083 10.2988 12.6036 10.1036L14.8536 7.85355C15.0488 7.65829 15.0488 7.34171 14.8536 7.14645L12.6036 4.89645Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$23 = ["color"], ExternalLinkIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$23);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3 2C2.44772 2 2 2.44772 2 3V12C2 12.5523 2.44772 13 3 13H12C12.5523 13 13 12.5523 13 12V8.5C13 8.22386 12.7761 8 12.5 8C12.2239 8 12 8.22386 12 8.5V12H3V3L6.5 3C6.77614 3 7 2.77614 7 2.5C7 2.22386 6.77614 2 6.5 2H3ZM12.8536 2.14645C12.9015 2.19439 12.9377 2.24964 12.9621 2.30861C12.9861 2.36669 12.9996 2.4303 13 2.497L13 2.5V2.50049V5.5C13 5.77614 12.7761 6 12.5 6C12.2239 6 12 5.77614 12 5.5V3.70711L6.85355 8.85355C6.65829 9.04882 6.34171 9.04882 6.14645 8.85355C5.95118 8.65829 5.95118 8.34171 6.14645 8.14645L11.2929 3H9.5C9.22386 3 9 2.77614 9 2.5C9 2.22386 9.22386 2 9.5 2H12.4999H12.5C12.5678 2 12.6324 2.01349 12.6914 2.03794C12.7504 2.06234 12.8056 2.09851 12.8536 2.14645Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$29 = ["color"], FileIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$29);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M3.5 2C3.22386 2 3 2.22386 3 2.5V12.5C3 12.7761 3.22386 13 3.5 13H11.5C11.7761 13 12 12.7761 12 12.5V6H8.5C8.22386 6 8 5.77614 8 5.5V2H3.5ZM9 2.70711L11.2929 5H9V2.70711ZM2 2.5C2 1.67157 2.67157 1 3.5 1H8.5C8.63261 1 8.75979 1.05268 8.85355 1.14645L12.8536 5.14645C12.9473 5.24021 13 5.36739 13 5.5V12.5C13 13.3284 12.3284 14 11.5 14H3.5C2.67157 14 2 13.3284 2 12.5V2.5Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2l = ["color"], GearIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2l);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.07095 0.650238C6.67391 0.650238 6.32977 0.925096 6.24198 1.31231L6.0039 2.36247C5.6249 2.47269 5.26335 2.62363 4.92436 2.81013L4.01335 2.23585C3.67748 2.02413 3.23978 2.07312 2.95903 2.35386L2.35294 2.95996C2.0722 3.2407 2.0232 3.6784 2.23493 4.01427L2.80942 4.92561C2.62307 5.2645 2.47227 5.62594 2.36216 6.00481L1.31209 6.24287C0.924883 6.33065 0.650024 6.6748 0.650024 7.07183V7.92897C0.650024 8.32601 0.924883 8.67015 1.31209 8.75794L2.36228 8.99603C2.47246 9.375 2.62335 9.73652 2.80979 10.0755L2.2354 10.9867C2.02367 11.3225 2.07267 11.7602 2.35341 12.041L2.95951 12.6471C3.24025 12.9278 3.67795 12.9768 4.01382 12.7651L4.92506 12.1907C5.26384 12.377 5.62516 12.5278 6.0039 12.6379L6.24198 13.6881C6.32977 14.0753 6.67391 14.3502 7.07095 14.3502H7.92809C8.32512 14.3502 8.66927 14.0753 8.75705 13.6881L8.99505 12.6383C9.37411 12.5282 9.73573 12.3773 10.0748 12.1909L10.986 12.7653C11.3218 12.977 11.7595 12.928 12.0403 12.6473L12.6464 12.0412C12.9271 11.7604 12.9761 11.3227 12.7644 10.9869L12.1902 10.076C12.3768 9.73688 12.5278 9.37515 12.638 8.99596L13.6879 8.75794C14.0751 8.67015 14.35 8.32601 14.35 7.92897V7.07183C14.35 6.6748 14.0751 6.33065 13.6879 6.24287L12.6381 6.00488C12.528 5.62578 12.3771 5.26414 12.1906 4.92507L12.7648 4.01407C12.9766 3.6782 12.9276 3.2405 12.6468 2.95975L12.0407 2.35366C11.76 2.07292 11.3223 2.02392 10.9864 2.23565L10.0755 2.80989C9.73622 2.62328 9.37437 2.47229 8.99505 2.36209L8.75705 1.31231C8.66927 0.925096 8.32512 0.650238 7.92809 0.650238H7.07095ZM4.92053 3.81251C5.44724 3.44339 6.05665 3.18424 6.71543 3.06839L7.07095 1.50024H7.92809L8.28355 3.06816C8.94267 3.18387 9.5524 3.44302 10.0794 3.81224L11.4397 2.9547L12.0458 3.56079L11.1882 4.92117C11.5573 5.44798 11.8164 6.0575 11.9321 6.71638L13.5 7.07183V7.92897L11.932 8.28444C11.8162 8.94342 11.557 9.55301 11.1878 10.0798L12.0453 11.4402L11.4392 12.0462L10.0787 11.1886C9.55192 11.5576 8.94241 11.8166 8.28355 11.9323L7.92809 13.5002H7.07095L6.71543 11.932C6.0569 11.8162 5.44772 11.5572 4.92116 11.1883L3.56055 12.046L2.95445 11.4399L3.81213 10.0794C3.4431 9.55266 3.18403 8.94326 3.06825 8.2845L1.50002 7.92897V7.07183L3.06818 6.71632C3.18388 6.05765 3.44283 5.44833 3.81171 4.92165L2.95398 3.561L3.56008 2.95491L4.92053 3.81251ZM9.02496 7.50008C9.02496 8.34226 8.34223 9.02499 7.50005 9.02499C6.65786 9.02499 5.97513 8.34226 5.97513 7.50008C5.97513 6.65789 6.65786 5.97516 7.50005 5.97516C8.34223 5.97516 9.02496 6.65789 9.02496 7.50008ZM9.92496 7.50008C9.92496 8.83932 8.83929 9.92499 7.50005 9.92499C6.1608 9.92499 5.07513 8.83932 5.07513 7.50008C5.07513 6.16084 6.1608 5.07516 7.50005 5.07516C8.83929 5.07516 9.92496 6.16084 9.92496 7.50008Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$2n = ["color"], GlobeIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$2n);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.49996 1.80002C4.35194 1.80002 1.79996 4.352 1.79996 7.50002C1.79996 10.648 4.35194 13.2 7.49996 13.2C10.648 13.2 13.2 10.648 13.2 7.50002C13.2 4.352 10.648 1.80002 7.49996 1.80002ZM0.899963 7.50002C0.899963 3.85494 3.85488 0.900024 7.49996 0.900024C11.145 0.900024 14.1 3.85494 14.1 7.50002C14.1 11.1451 11.145 14.1 7.49996 14.1C3.85488 14.1 0.899963 11.1451 0.899963 7.50002Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react4.createElement)("path", {
    d: "M13.4999 7.89998H1.49994V7.09998H13.4999V7.89998Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react4.createElement)("path", {
    d: "M7.09991 13.5V1.5H7.89991V13.5H7.09991zM10.375 7.49998C10.375 5.32724 9.59364 3.17778 8.06183 1.75656L8.53793 1.24341C10.2396 2.82218 11.075 5.17273 11.075 7.49998 11.075 9.82724 10.2396 12.1778 8.53793 13.7566L8.06183 13.2434C9.59364 11.8222 10.375 9.67273 10.375 7.49998zM3.99969 7.5C3.99969 5.17611 4.80786 2.82678 6.45768 1.24719L6.94177 1.75281C5.4582 3.17323 4.69969 5.32389 4.69969 7.5 4.6997 9.67611 5.45822 11.8268 6.94179 13.2472L6.45769 13.7528C4.80788 12.1732 3.9997 9.8239 3.99969 7.5z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }), (0, import_react4.createElement)("path", {
    d: "M7.49996 3.95801C9.66928 3.95801 11.8753 4.35915 13.3706 5.19448 13.5394 5.28875 13.5998 5.50197 13.5055 5.67073 13.4113 5.83948 13.198 5.89987 13.0293 5.8056 11.6794 5.05155 9.60799 4.65801 7.49996 4.65801 5.39192 4.65801 3.32052 5.05155 1.97064 5.8056 1.80188 5.89987 1.58866 5.83948 1.49439 5.67073 1.40013 5.50197 1.46051 5.28875 1.62927 5.19448 3.12466 4.35915 5.33063 3.95801 7.49996 3.95801zM7.49996 10.85C9.66928 10.85 11.8753 10.4488 13.3706 9.6135 13.5394 9.51924 13.5998 9.30601 13.5055 9.13726 13.4113 8.9685 13.198 8.90812 13.0293 9.00238 11.6794 9.75643 9.60799 10.15 7.49996 10.15 5.39192 10.15 3.32052 9.75643 1.97064 9.00239 1.80188 8.90812 1.58866 8.9685 1.49439 9.13726 1.40013 9.30601 1.46051 9.51924 1.62927 9.6135 3.12466 10.4488 5.33063 10.85 7.49996 10.85z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$33 = ["color"], MagnifyingGlassIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$33);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M10 6.5C10 8.433 8.433 10 6.5 10C4.567 10 3 8.433 3 6.5C3 4.567 4.567 3 6.5 3C8.433 3 10 4.567 10 6.5ZM9.30884 10.0159C8.53901 10.6318 7.56251 11 6.5 11C4.01472 11 2 8.98528 2 6.5C2 4.01472 4.01472 2 6.5 2C8.98528 2 11 4.01472 11 6.5C11 7.56251 10.6318 8.53901 10.0159 9.30884L12.8536 12.1464C13.0488 12.3417 13.0488 12.6583 12.8536 12.8536C12.6583 13.0488 12.3417 13.0488 12.1464 12.8536L9.30884 10.0159Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3a = ["color"], MixerHorizontalIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3a);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M5.5 3C4.67157 3 4 3.67157 4 4.5C4 5.32843 4.67157 6 5.5 6C6.32843 6 7 5.32843 7 4.5C7 3.67157 6.32843 3 5.5 3ZM3 5C3.01671 5 3.03323 4.99918 3.04952 4.99758C3.28022 6.1399 4.28967 7 5.5 7C6.71033 7 7.71978 6.1399 7.95048 4.99758C7.96677 4.99918 7.98329 5 8 5H13.5C13.7761 5 14 4.77614 14 4.5C14 4.22386 13.7761 4 13.5 4H8C7.98329 4 7.96677 4.00082 7.95048 4.00242C7.71978 2.86009 6.71033 2 5.5 2C4.28967 2 3.28022 2.86009 3.04952 4.00242C3.03323 4.00082 3.01671 4 3 4H1.5C1.22386 4 1 4.22386 1 4.5C1 4.77614 1.22386 5 1.5 5H3ZM11.9505 10.9976C11.7198 12.1399 10.7103 13 9.5 13C8.28967 13 7.28022 12.1399 7.04952 10.9976C7.03323 10.9992 7.01671 11 7 11H1.5C1.22386 11 1 10.7761 1 10.5C1 10.2239 1.22386 10 1.5 10H7C7.01671 10 7.03323 10.0008 7.04952 10.0024C7.28022 8.8601 8.28967 8 9.5 8C10.7103 8 11.7198 8.8601 11.9505 10.0024C11.9668 10.0008 11.9833 10 12 10H13.5C13.7761 10 14 10.2239 14 10.5C14 10.7761 13.7761 11 13.5 11H12C11.9833 11 11.9668 10.9992 11.9505 10.9976ZM8 10.5C8 9.67157 8.67157 9 9.5 9C10.3284 9 11 9.67157 11 10.5C11 11.3284 10.3284 12 9.5 12C8.67157 12 8 11.3284 8 10.5Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3e = ["color"], MoonIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3e);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M2.89998 0.499976C2.89998 0.279062 2.72089 0.0999756 2.49998 0.0999756C2.27906 0.0999756 2.09998 0.279062 2.09998 0.499976V1.09998H1.49998C1.27906 1.09998 1.09998 1.27906 1.09998 1.49998C1.09998 1.72089 1.27906 1.89998 1.49998 1.89998H2.09998V2.49998C2.09998 2.72089 2.27906 2.89998 2.49998 2.89998C2.72089 2.89998 2.89998 2.72089 2.89998 2.49998V1.89998H3.49998C3.72089 1.89998 3.89998 1.72089 3.89998 1.49998C3.89998 1.27906 3.72089 1.09998 3.49998 1.09998H2.89998V0.499976ZM5.89998 3.49998C5.89998 3.27906 5.72089 3.09998 5.49998 3.09998C5.27906 3.09998 5.09998 3.27906 5.09998 3.49998V4.09998H4.49998C4.27906 4.09998 4.09998 4.27906 4.09998 4.49998C4.09998 4.72089 4.27906 4.89998 4.49998 4.89998H5.09998V5.49998C5.09998 5.72089 5.27906 5.89998 5.49998 5.89998C5.72089 5.89998 5.89998 5.72089 5.89998 5.49998V4.89998H6.49998C6.72089 4.89998 6.89998 4.72089 6.89998 4.49998C6.89998 4.27906 6.72089 4.09998 6.49998 4.09998H5.89998V3.49998ZM1.89998 6.49998C1.89998 6.27906 1.72089 6.09998 1.49998 6.09998C1.27906 6.09998 1.09998 6.27906 1.09998 6.49998V7.09998H0.499976C0.279062 7.09998 0.0999756 7.27906 0.0999756 7.49998C0.0999756 7.72089 0.279062 7.89998 0.499976 7.89998H1.09998V8.49998C1.09998 8.72089 1.27906 8.89997 1.49998 8.89997C1.72089 8.89997 1.89998 8.72089 1.89998 8.49998V7.89998H2.49998C2.72089 7.89998 2.89998 7.72089 2.89998 7.49998C2.89998 7.27906 2.72089 7.09998 2.49998 7.09998H1.89998V6.49998ZM8.54406 0.98184L8.24618 0.941586C8.03275 0.917676 7.90692 1.1655 8.02936 1.34194C8.17013 1.54479 8.29981 1.75592 8.41754 1.97445C8.91878 2.90485 9.20322 3.96932 9.20322 5.10022C9.20322 8.37201 6.82247 11.0878 3.69887 11.6097C3.45736 11.65 3.20988 11.6772 2.96008 11.6906C2.74563 11.702 2.62729 11.9535 2.77721 12.1072C2.84551 12.1773 2.91535 12.2458 2.98667 12.3128L3.05883 12.3795L3.31883 12.6045L3.50684 12.7532L3.62796 12.8433L3.81491 12.9742L3.99079 13.089C4.11175 13.1651 4.23536 13.2375 4.36157 13.3059L4.62496 13.4412L4.88553 13.5607L5.18837 13.6828L5.43169 13.7686C5.56564 13.8128 5.70149 13.8529 5.83857 13.8885C5.94262 13.9155 6.04767 13.9401 6.15405 13.9622C6.27993 13.9883 6.40713 14.0109 6.53544 14.0298L6.85241 14.0685L7.11934 14.0892C7.24637 14.0965 7.37436 14.1002 7.50322 14.1002C11.1483 14.1002 14.1032 11.1453 14.1032 7.50023C14.1032 7.25044 14.0893 7.00389 14.0623 6.76131L14.0255 6.48407C13.991 6.26083 13.9453 6.04129 13.8891 5.82642C13.8213 5.56709 13.7382 5.31398 13.6409 5.06881L13.5279 4.80132L13.4507 4.63542L13.3766 4.48666C13.2178 4.17773 13.0353 3.88295 12.8312 3.60423L12.6782 3.40352L12.4793 3.16432L12.3157 2.98361L12.1961 2.85951L12.0355 2.70246L11.8134 2.50184L11.4925 2.24191L11.2483 2.06498L10.9562 1.87446L10.6346 1.68894L10.3073 1.52378L10.1938 1.47176L9.95488 1.3706L9.67791 1.2669L9.42566 1.1846L9.10075 1.09489L8.83599 1.03486L8.54406 0.98184ZM10.4032 5.30023C10.4032 4.27588 10.2002 3.29829 9.83244 2.40604C11.7623 3.28995 13.1032 5.23862 13.1032 7.50023C13.1032 10.593 10.596 13.1002 7.50322 13.1002C6.63646 13.1002 5.81597 12.9036 5.08355 12.5522C6.5419 12.0941 7.81081 11.2082 8.74322 10.0416C8.87963 10.2284 9.10028 10.3497 9.34928 10.3497C9.76349 10.3497 10.0993 10.0139 10.0993 9.59971C10.0993 9.24256 9.84965 8.94373 9.51535 8.86816C9.57741 8.75165 9.63653 8.63334 9.6926 8.51332C9.88358 8.63163 10.1088 8.69993 10.35 8.69993C11.0403 8.69993 11.6 8.14028 11.6 7.44993C11.6 6.75976 11.0406 6.20024 10.3505 6.19993C10.3853 5.90487 10.4032 5.60464 10.4032 5.30023Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3p = ["color"], PersonIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3p);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.5 0.875C5.49797 0.875 3.875 2.49797 3.875 4.5C3.875 6.15288 4.98124 7.54738 6.49373 7.98351C5.2997 8.12901 4.27557 8.55134 3.50407 9.31167C2.52216 10.2794 2.02502 11.72 2.02502 13.5999C2.02502 13.8623 2.23769 14.0749 2.50002 14.0749C2.76236 14.0749 2.97502 13.8623 2.97502 13.5999C2.97502 11.8799 3.42786 10.7206 4.17091 9.9883C4.91536 9.25463 6.02674 8.87499 7.49995 8.87499C8.97317 8.87499 10.0846 9.25463 10.8291 9.98831C11.5721 10.7206 12.025 11.8799 12.025 13.5999C12.025 13.8623 12.2376 14.0749 12.5 14.0749C12.7623 14.075 12.975 13.8623 12.975 13.6C12.975 11.72 12.4778 10.2794 11.4959 9.31166C10.7244 8.55135 9.70025 8.12903 8.50625 7.98352C10.0187 7.5474 11.125 6.15289 11.125 4.5C11.125 2.49797 9.50203 0.875 7.5 0.875ZM4.825 4.5C4.825 3.02264 6.02264 1.825 7.5 1.825C8.97736 1.825 10.175 3.02264 10.175 4.5C10.175 5.97736 8.97736 7.175 7.5 7.175C6.02264 7.175 4.825 5.97736 4.825 4.5Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3y = ["color"], PlusCircledIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3y);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.49991 0.876892C3.84222 0.876892 0.877075 3.84204 0.877075 7.49972C0.877075 11.1574 3.84222 14.1226 7.49991 14.1226C11.1576 14.1226 14.1227 11.1574 14.1227 7.49972C14.1227 3.84204 11.1576 0.876892 7.49991 0.876892ZM1.82707 7.49972C1.82707 4.36671 4.36689 1.82689 7.49991 1.82689C10.6329 1.82689 13.1727 4.36671 13.1727 7.49972C13.1727 10.6327 10.6329 13.1726 7.49991 13.1726C4.36689 13.1726 1.82707 10.6327 1.82707 7.49972ZM7.50003 4C7.77617 4 8.00003 4.22386 8.00003 4.5V7H10.5C10.7762 7 11 7.22386 11 7.5C11 7.77614 10.7762 8 10.5 8H8.00003V10.5C8.00003 10.7761 7.77617 11 7.50003 11C7.22389 11 7.00003 10.7761 7.00003 10.5V8H4.50003C4.22389 8 4.00003 7.77614 4.00003 7.5C4.00003 7.22386 4.22389 7 4.50003 7H7.00003V4.5C7.00003 4.22386 7.22389 4 7.50003 4Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3Y = ["color"], SizeIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3Y);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M11.5 3.04999C11.7485 3.04999 11.95 3.25146 11.95 3.49999V7.49999C11.95 7.74852 11.7485 7.94999 11.5 7.94999C11.2515 7.94999 11.05 7.74852 11.05 7.49999V4.58639L4.58638 11.05H7.49999C7.74852 11.05 7.94999 11.2515 7.94999 11.5C7.94999 11.7485 7.74852 11.95 7.49999 11.95L3.49999 11.95C3.38064 11.95 3.26618 11.9026 3.18179 11.8182C3.0974 11.7338 3.04999 11.6193 3.04999 11.5L3.04999 7.49999C3.04999 7.25146 3.25146 7.04999 3.49999 7.04999C3.74852 7.04999 3.94999 7.25146 3.94999 7.49999L3.94999 10.4136L10.4136 3.94999L7.49999 3.94999C7.25146 3.94999 7.04999 3.74852 7.04999 3.49999C7.04999 3.25146 7.25146 3.04999 7.49999 3.04999L11.5 3.04999Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$3_ = ["color"], SlashIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$3_);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M4.10876 14L9.46582 1H10.8178L5.46074 14H4.10876Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});
var _excluded$4i = ["color"], SunIcon = /* @__PURE__ */ (0, import_react4.forwardRef)(function(_ref, forwardedRef) {
  var _ref$color = _ref.color, color2 = _ref$color === void 0 ? "currentColor" : _ref$color, props = _objectWithoutPropertiesLoose2(_ref, _excluded$4i);
  return (0, import_react4.createElement)("svg", Object.assign({
    width: "15",
    height: "15",
    viewBox: "0 0 15 15",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg"
  }, props, {
    ref: forwardedRef
  }), (0, import_react4.createElement)("path", {
    d: "M7.5 0C7.77614 0 8 0.223858 8 0.5V2.5C8 2.77614 7.77614 3 7.5 3C7.22386 3 7 2.77614 7 2.5V0.5C7 0.223858 7.22386 0 7.5 0ZM2.1967 2.1967C2.39196 2.00144 2.70854 2.00144 2.90381 2.1967L4.31802 3.61091C4.51328 3.80617 4.51328 4.12276 4.31802 4.31802C4.12276 4.51328 3.80617 4.51328 3.61091 4.31802L2.1967 2.90381C2.00144 2.70854 2.00144 2.39196 2.1967 2.1967ZM0.5 7C0.223858 7 0 7.22386 0 7.5C0 7.77614 0.223858 8 0.5 8H2.5C2.77614 8 3 7.77614 3 7.5C3 7.22386 2.77614 7 2.5 7H0.5ZM2.1967 12.8033C2.00144 12.608 2.00144 12.2915 2.1967 12.0962L3.61091 10.682C3.80617 10.4867 4.12276 10.4867 4.31802 10.682C4.51328 10.8772 4.51328 11.1938 4.31802 11.3891L2.90381 12.8033C2.70854 12.9986 2.39196 12.9986 2.1967 12.8033ZM12.5 7C12.2239 7 12 7.22386 12 7.5C12 7.77614 12.2239 8 12.5 8H14.5C14.7761 8 15 7.77614 15 7.5C15 7.22386 14.7761 7 14.5 7H12.5ZM10.682 4.31802C10.4867 4.12276 10.4867 3.80617 10.682 3.61091L12.0962 2.1967C12.2915 2.00144 12.608 2.00144 12.8033 2.1967C12.9986 2.39196 12.9986 2.70854 12.8033 2.90381L11.3891 4.31802C11.1938 4.51328 10.8772 4.51328 10.682 4.31802ZM8 12.5C8 12.2239 7.77614 12 7.5 12C7.22386 12 7 12.2239 7 12.5V14.5C7 14.7761 7.22386 15 7.5 15C7.77614 15 8 14.7761 8 14.5V12.5ZM10.682 10.682C10.8772 10.4867 11.1938 10.4867 11.3891 10.682L12.8033 12.0962C12.9986 12.2915 12.9986 12.608 12.8033 12.8033C12.608 12.9986 12.2915 12.9986 12.0962 12.8033L10.682 11.3891C10.4867 11.1938 10.4867 10.8772 10.682 10.682ZM5.5 7.5C5.5 6.39543 6.39543 5.5 7.5 5.5C8.60457 5.5 9.5 6.39543 9.5 7.5C9.5 8.60457 8.60457 9.5 7.5 9.5C6.39543 9.5 5.5 8.60457 5.5 7.5ZM7.5 4.5C5.84315 4.5 4.5 5.84315 4.5 7.5C4.5 9.15685 5.84315 10.5 7.5 10.5C9.15685 10.5 10.5 9.15685 10.5 7.5C10.5 5.84315 9.15685 4.5 7.5 4.5Z",
    fill: color2,
    fillRule: "evenodd",
    clipRule: "evenodd"
  }));
});

// ../../node_modules/@babel/runtime/helpers/esm/extends.js
function _extends6() {
  return _extends6 = Object.assign ? Object.assign.bind() : function(target) {
    for (var i3 = 1; i3 < arguments.length; i3++) {
      var source = arguments[i3];
      for (var key in source)
        Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
    }
    return target;
  }, _extends6.apply(this, arguments);
}

// ../../node_modules/@radix-ui/react-toast/dist/index.mjs
var import_react18 = __toESM(require_react(), 1), import_react_dom4 = __toESM(require_react_dom(), 1);

// ../../node_modules/@radix-ui/primitive/dist/index.mjs
function $e42e1063c40fb3ef$export$b9ecd428b558ff10(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = !0 } = {}) {
  return function(event) {
    if (originalEventHandler?.(event), checkForDefaultPrevented === !1 || !event.defaultPrevented)
      return ourEventHandler?.(event);
  };
}

// ../../node_modules/@radix-ui/react-compose-refs/dist/index.mjs
var import_react5 = __toESM(require_react(), 1);
function $6ed0406888f73fc4$var$setRef(ref, value) {
  typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
}
function $6ed0406888f73fc4$export$43e446d32b3d21af(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d05(...refs) {
  return (0, import_react5.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af(...refs), refs);
}

// ../../node_modules/@radix-ui/react-collection/dist/index.mjs
var import_react8 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-context/dist/index.mjs
var import_react6 = __toESM(require_react(), 1);
function $c512c27ab02ef895$export$fd42f52fd3ae1109(rootComponentName, defaultContext) {
  let Context = /* @__PURE__ */ (0, import_react6.createContext)(defaultContext);
  function Provider(props) {
    let { children, ...context } = props, value = (0, import_react6.useMemo)(
      () => context,
      Object.values(context)
    );
    return /* @__PURE__ */ (0, import_react6.createElement)(Context.Provider, {
      value
    }, children);
  }
  function useContext18(consumerName) {
    let context = (0, import_react6.useContext)(Context);
    if (context)
      return context;
    if (defaultContext !== void 0)
      return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  return Provider.displayName = rootComponentName + "Provider", [
    Provider,
    useContext18
  ];
}
function $c512c27ab02ef895$export$50c7b4e9d9f19c1(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae11093(rootComponentName, defaultContext) {
    let BaseContext = /* @__PURE__ */ (0, import_react6.createContext)(defaultContext), index3 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider(props) {
      let { scope, children, ...context } = props, Context = scope?.[scopeName][index3] || BaseContext, value = (0, import_react6.useMemo)(
        () => context,
        Object.values(context)
      );
      return /* @__PURE__ */ (0, import_react6.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext18(consumerName, scope) {
      let Context = scope?.[scopeName][index3] || BaseContext, context = (0, import_react6.useContext)(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return Provider.displayName = rootComponentName + "Provider", [
      Provider,
      useContext18
    ];
  }
  let createScope = () => {
    let scopeContexts = defaultContexts.map((defaultContext) => /* @__PURE__ */ (0, import_react6.createContext)(defaultContext));
    return function(scope) {
      let contexts = scope?.[scopeName] || scopeContexts;
      return (0, import_react6.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  return createScope.scopeName = scopeName, [
    $c512c27ab02ef895$export$fd42f52fd3ae11093,
    $c512c27ab02ef895$var$composeContextScopes(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes(...scopes) {
  let baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  let createScope1 = () => {
    let scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function(overrideScopes) {
      let nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        let currentScope = useScope(overrideScopes)[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react6.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  return createScope1.scopeName = baseScope.scopeName, createScope1;
}

// ../../node_modules/@radix-ui/react-slot/dist/index.mjs
var import_react7 = __toESM(require_react(), 1);
var $5e63c961fc1ce211$export$8c6ed5c666ac1360 = /* @__PURE__ */ (0, import_react7.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props, childrenArray = import_react7.Children.toArray(children), slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable);
  if (slottable) {
    let newElement = slottable.props.children, newChildren = childrenArray.map((child) => child === slottable ? import_react7.Children.count(newElement) > 1 ? import_react7.Children.only(null) : /* @__PURE__ */ (0, import_react7.isValidElement)(newElement) ? newElement.props.children : null : child);
    return /* @__PURE__ */ (0, import_react7.createElement)($5e63c961fc1ce211$var$SlotClone, _extends6({}, slotProps, {
      ref: forwardedRef
    }), /* @__PURE__ */ (0, import_react7.isValidElement)(newElement) ? /* @__PURE__ */ (0, import_react7.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return /* @__PURE__ */ (0, import_react7.createElement)($5e63c961fc1ce211$var$SlotClone, _extends6({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac1360.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone = /* @__PURE__ */ (0, import_react7.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props;
  return /* @__PURE__ */ (0, import_react7.isValidElement)(children) ? /* @__PURE__ */ (0, import_react7.cloneElement)(children, {
    ...$5e63c961fc1ce211$var$mergeProps(slotProps, children.props),
    ref: forwardedRef ? $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, children.ref) : children.ref
  }) : import_react7.Children.count(children) > 1 ? import_react7.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d45 = ({ children }) => /* @__PURE__ */ (0, import_react7.createElement)(import_react7.Fragment, null, children);
function $5e63c961fc1ce211$var$isSlottable(child) {
  return /* @__PURE__ */ (0, import_react7.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d45;
}
function $5e63c961fc1ce211$var$mergeProps(slotProps, childProps) {
  let overrideProps = {
    ...childProps
  };
  for (let propName in childProps) {
    let slotPropValue = slotProps[propName], childPropValue = childProps[propName];
    /^on[A-Z]/.test(propName) ? slotPropValue && childPropValue ? overrideProps[propName] = (...args) => {
      childPropValue(...args), slotPropValue(...args);
    } : slotPropValue && (overrideProps[propName] = slotPropValue) : propName === "style" ? overrideProps[propName] = {
      ...slotPropValue,
      ...childPropValue
    } : propName === "className" && (overrideProps[propName] = [
      slotPropValue,
      childPropValue
    ].filter(Boolean).join(" "));
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// ../../node_modules/@radix-ui/react-collection/dist/index.mjs
function $e02a7d9cb1dc128c$export$c74125a8e3af6bb2(name) {
  let PROVIDER_NAME = name + "CollectionProvider", [createCollectionContext, createCollectionScope] = $c512c27ab02ef895$export$50c7b4e9d9f19c1(PROVIDER_NAME), [CollectionProviderImpl, useCollectionContext] = createCollectionContext(PROVIDER_NAME, {
    collectionRef: {
      current: null
    },
    itemMap: /* @__PURE__ */ new Map()
  }), CollectionProvider = (props) => {
    let { scope, children } = props, ref = import_react8.default.useRef(null), itemMap = import_react8.default.useRef(/* @__PURE__ */ new Map()).current;
    return /* @__PURE__ */ import_react8.default.createElement(CollectionProviderImpl, {
      scope,
      itemMap,
      collectionRef: ref
    }, children);
  }, COLLECTION_SLOT_NAME = name + "CollectionSlot", CollectionSlot = /* @__PURE__ */ import_react8.default.forwardRef((props, forwardedRef) => {
    let { scope, children } = props, context = useCollectionContext(COLLECTION_SLOT_NAME, scope), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.collectionRef);
    return /* @__PURE__ */ import_react8.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      ref: composedRefs
    }, children);
  }), ITEM_SLOT_NAME = name + "CollectionItemSlot", ITEM_DATA_ATTR = "data-radix-collection-item", CollectionItemSlot = /* @__PURE__ */ import_react8.default.forwardRef((props, forwardedRef) => {
    let { scope, children, ...itemData } = props, ref = import_react8.default.useRef(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), context = useCollectionContext(ITEM_SLOT_NAME, scope);
    return import_react8.default.useEffect(() => (context.itemMap.set(ref, {
      ref,
      ...itemData
    }), () => void context.itemMap.delete(ref))), /* @__PURE__ */ import_react8.default.createElement($5e63c961fc1ce211$export$8c6ed5c666ac1360, {
      [ITEM_DATA_ATTR]: "",
      ref: composedRefs
    }, children);
  });
  function useCollection(scope) {
    let context = useCollectionContext(name + "CollectionConsumer", scope);
    return import_react8.default.useCallback(() => {
      let collectionNode = context.collectionRef.current;
      if (!collectionNode)
        return [];
      let orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));
      return Array.from(context.itemMap.values()).sort(
        (a4, b3) => orderedNodes.indexOf(a4.ref.current) - orderedNodes.indexOf(b3.ref.current)
      );
    }, [
      context.collectionRef,
      context.itemMap
    ]);
  }
  return [
    {
      Provider: CollectionProvider,
      Slot: CollectionSlot,
      ItemSlot: CollectionItemSlot
    },
    useCollection,
    createCollectionScope
  ];
}

// ../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var import_react12 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-primitive/dist/index.mjs
var import_react9 = __toESM(require_react(), 1), import_react_dom = __toESM(require_react_dom(), 1);
var $8927f6f2acc4f386$var$NODES = [
  "a",
  "button",
  "div",
  "form",
  "h2",
  "h3",
  "img",
  "input",
  "label",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
], $8927f6f2acc4f386$export$250ffa63cdc0d034 = $8927f6f2acc4f386$var$NODES.reduce((primitive, node) => {
  let Node2 = /* @__PURE__ */ (0, import_react9.forwardRef)((props, forwardedRef) => {
    let { asChild, ...primitiveProps } = props, Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : node;
    return (0, import_react9.useEffect)(() => {
      window[Symbol.for("radix-ui")] = !0;
    }, []), /* @__PURE__ */ (0, import_react9.createElement)(Comp, _extends6({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  return Node2.displayName = `Primitive.${node}`, {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) {
  target && (0, import_react_dom.flushSync)(
    () => target.dispatchEvent(event)
  );
}

// ../../node_modules/@radix-ui/react-use-callback-ref/dist/index.mjs
var import_react10 = __toESM(require_react(), 1);
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback) {
  let callbackRef = (0, import_react10.useRef)(callback);
  return (0, import_react10.useEffect)(() => {
    callbackRef.current = callback;
  }), (0, import_react10.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// ../../node_modules/@radix-ui/react-use-escape-keydown/dist/index.mjs
var import_react11 = __toESM(require_react(), 1);
function $addc16e1bbe58fd0$export$3a72a57244d6e765(onEscapeKeyDownProp, ownerDocument = globalThis?.document) {
  let onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEscapeKeyDownProp);
  (0, import_react11.useEffect)(() => {
    let handleKeyDown = (event) => {
      event.key === "Escape" && onEscapeKeyDown(event);
    };
    return ownerDocument.addEventListener("keydown", handleKeyDown), () => ownerDocument.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown,
    ownerDocument
  ]);
}

// ../../node_modules/@radix-ui/react-dismissable-layer/dist/index.mjs
var $5cb92bef7577960e$var$CONTEXT_UPDATE = "dismissableLayer.update", $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE = "dismissableLayer.pointerDownOutside", $5cb92bef7577960e$var$FOCUS_OUTSIDE = "dismissableLayer.focusOutside", $5cb92bef7577960e$var$originalBodyPointerEvents, $5cb92bef7577960e$var$DismissableLayerContext = /* @__PURE__ */ (0, import_react12.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), $5cb92bef7577960e$export$177fb62ff3ec1f22 = /* @__PURE__ */ (0, import_react12.forwardRef)((props, forwardedRef) => {
  var _node$ownerDocument;
  let { disableOutsidePointerEvents = !1, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props, context = (0, import_react12.useContext)($5cb92bef7577960e$var$DismissableLayerContext), [node1, setNode] = (0, import_react12.useState)(null), ownerDocument = (_node$ownerDocument = node1?.ownerDocument) !== null && _node$ownerDocument !== void 0 ? _node$ownerDocument : globalThis?.document, [, force] = (0, import_react12.useState)({}), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  ), layers = Array.from(context.layers), [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1), highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled), index3 = node1 ? layers.indexOf(node1) : -1, isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0, isPointerEventsEnabled = index3 >= highestLayerWithOutsidePointerEventsDisabledIndex, pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside((event) => {
    let target = event.target, isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    !isPointerEventsEnabled || isPointerDownOnBranch || (onPointerDownOutside?.(event), onInteractOutside?.(event), event.defaultPrevented || onDismiss?.());
  }, ownerDocument), focusOutside = $5cb92bef7577960e$var$useFocusOutside((event) => {
    let target = event.target;
    [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    ) || (onFocusOutside?.(event), onInteractOutside?.(event), event.defaultPrevented || onDismiss?.());
  }, ownerDocument);
  return $addc16e1bbe58fd0$export$3a72a57244d6e765((event) => {
    index3 === context.layers.size - 1 && (onEscapeKeyDown?.(event), !event.defaultPrevented && onDismiss && (event.preventDefault(), onDismiss()));
  }, ownerDocument), (0, import_react12.useEffect)(() => {
    if (node1)
      return disableOutsidePointerEvents && (context.layersWithOutsidePointerEventsDisabled.size === 0 && ($5cb92bef7577960e$var$originalBodyPointerEvents = ownerDocument.body.style.pointerEvents, ownerDocument.body.style.pointerEvents = "none"), context.layersWithOutsidePointerEventsDisabled.add(node1)), context.layers.add(node1), $5cb92bef7577960e$var$dispatchUpdate(), () => {
        disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1 && (ownerDocument.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents);
      };
  }, [
    node1,
    ownerDocument,
    disableOutsidePointerEvents,
    context
  ]), (0, import_react12.useEffect)(() => () => {
    node1 && (context.layers.delete(node1), context.layersWithOutsidePointerEventsDisabled.delete(node1), $5cb92bef7577960e$var$dispatchUpdate());
  }, [
    node1,
    context
  ]), (0, import_react12.useEffect)(() => {
    let handleUpdate = () => force({});
    return document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate), () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE, handleUpdate);
  }, []), /* @__PURE__ */ (0, import_react12.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
var $5cb92bef7577960e$export$4d5eb2109db14228 = /* @__PURE__ */ (0, import_react12.forwardRef)((props, forwardedRef) => {
  let context = (0, import_react12.useContext)($5cb92bef7577960e$var$DismissableLayerContext), ref = (0, import_react12.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react12.useEffect)(() => {
    let node = ref.current;
    if (node)
      return context.branches.add(node), () => {
        context.branches.delete(node);
      };
  }, [
    context.branches
  ]), /* @__PURE__ */ (0, import_react12.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, props, {
    ref: composedRefs
  }));
});
function $5cb92bef7577960e$var$usePointerDownOutside(onPointerDownOutside, ownerDocument = globalThis?.document) {
  let handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPointerDownOutside), isPointerInsideReactTreeRef = (0, import_react12.useRef)(!1), handleClickRef = (0, import_react12.useRef)(() => {
  });
  return (0, import_react12.useEffect)(() => {
    let handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE, handlePointerDownOutside, eventDetail, {
            discrete: !0
          });
        }, eventDetail = {
          originalEvent: event
        };
        event.pointerType === "touch" ? (ownerDocument.removeEventListener("click", handleClickRef.current), handleClickRef.current = handleAndDispatchPointerDownOutsideEvent, ownerDocument.addEventListener("click", handleClickRef.current, {
          once: !0
        })) : handleAndDispatchPointerDownOutsideEvent();
      } else
        ownerDocument.removeEventListener("click", handleClickRef.current);
      isPointerInsideReactTreeRef.current = !1;
    }, timerId = window.setTimeout(() => {
      ownerDocument.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId), ownerDocument.removeEventListener("pointerdown", handlePointerDown), ownerDocument.removeEventListener("click", handleClickRef.current);
    };
  }, [
    ownerDocument,
    handlePointerDownOutside
  ]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = !0
  };
}
function $5cb92bef7577960e$var$useFocusOutside(onFocusOutside, ownerDocument = globalThis?.document) {
  let handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onFocusOutside), isFocusInsideReactTreeRef = (0, import_react12.useRef)(!1);
  return (0, import_react12.useEffect)(() => {
    let handleFocus = (event) => {
      event.target && !isFocusInsideReactTreeRef.current && $5cb92bef7577960e$var$handleAndDispatchCustomEvent($5cb92bef7577960e$var$FOCUS_OUTSIDE, handleFocusOutside, {
        originalEvent: event
      }, {
        discrete: !1
      });
    };
    return ownerDocument.addEventListener("focusin", handleFocus), () => ownerDocument.removeEventListener("focusin", handleFocus);
  }, [
    ownerDocument,
    handleFocusOutside
  ]), {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = !0,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = !1
  };
}
function $5cb92bef7577960e$var$dispatchUpdate() {
  let event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  let target = detail.originalEvent.target, event = new CustomEvent(name, {
    bubbles: !1,
    cancelable: !0,
    detail
  });
  handler && target.addEventListener(name, handler, {
    once: !0
  }), discrete ? $8927f6f2acc4f386$export$6d1a0317bde7de7f(target, event) : target.dispatchEvent(event);
}
var $5cb92bef7577960e$export$be92b6f5f03c0fe9 = $5cb92bef7577960e$export$177fb62ff3ec1f22, $5cb92bef7577960e$export$aecb2ddcb55c95be = $5cb92bef7577960e$export$4d5eb2109db14228;

// ../../node_modules/@radix-ui/react-portal/dist/index.mjs
var import_react13 = __toESM(require_react(), 1), import_react_dom2 = __toESM(require_react_dom(), 1);
var $f1701beae083dbae$export$602eac185826482c = /* @__PURE__ */ (0, import_react13.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  let { container = globalThis == null || (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? /* @__PURE__ */ import_react_dom2.default.createPortal(/* @__PURE__ */ (0, import_react13.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});

// ../../node_modules/@radix-ui/react-presence/dist/index.mjs
var import_react15 = __toESM(require_react(), 1), import_react_dom3 = __toESM(require_react_dom(), 1);

// ../../node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs
var import_react14 = __toESM(require_react(), 1), $9f79659886946c16$export$e5c5a5f917a5871c = Boolean(globalThis?.document) ? import_react14.useLayoutEffect : () => {
};

// ../../node_modules/@radix-ui/react-presence/dist/index.mjs
function $fe963b355347cc68$export$3e6543de14f8614f(initialState, machine) {
  return (0, import_react15.useReducer)((state, event) => {
    let nextState = machine[state][event];
    return nextState ?? state;
  }, initialState);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b = (props) => {
  let { present, children } = props, presence = $921a889cee6df7e8$var$usePresence(present), child = typeof children == "function" ? children({
    present: presence.isPresent
  }) : import_react15.Children.only(children), ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(presence.ref, child.ref);
  return typeof children == "function" || presence.isPresent ? /* @__PURE__ */ (0, import_react15.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence(present) {
  let [node1, setNode] = (0, import_react15.useState)(), stylesRef = (0, import_react15.useRef)({}), prevPresentRef = (0, import_react15.useRef)(present), prevAnimationNameRef = (0, import_react15.useRef)("none"), initialState = present ? "mounted" : "unmounted", [state, send] = $fe963b355347cc68$export$3e6543de14f8614f(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return (0, import_react15.useEffect)(() => {
    let currentAnimationName = $921a889cee6df7e8$var$getAnimationName(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let styles = stylesRef.current, wasPresent = prevPresentRef.current;
    if (wasPresent !== present) {
      let prevAnimationName = prevAnimationNameRef.current, currentAnimationName = $921a889cee6df7e8$var$getAnimationName(styles);
      present ? send("MOUNT") : currentAnimationName === "none" || styles?.display === "none" ? send("UNMOUNT") : send(wasPresent && prevAnimationName !== currentAnimationName ? "ANIMATION_OUT" : "UNMOUNT"), prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (node1) {
      let handleAnimationEnd = (event) => {
        let isCurrentAnimation = $921a889cee6df7e8$var$getAnimationName(stylesRef.current).includes(event.animationName);
        event.target === node1 && isCurrentAnimation && (0, import_react_dom3.flushSync)(
          () => send("ANIMATION_END")
        );
      }, handleAnimationStart = (event) => {
        event.target === node1 && (prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName(stylesRef.current));
      };
      return node1.addEventListener("animationstart", handleAnimationStart), node1.addEventListener("animationcancel", handleAnimationEnd), node1.addEventListener("animationend", handleAnimationEnd), () => {
        node1.removeEventListener("animationstart", handleAnimationStart), node1.removeEventListener("animationcancel", handleAnimationEnd), node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]), {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react15.useCallback)((node) => {
      node && (stylesRef.current = getComputedStyle(node)), setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName(styles) {
  return styles?.animationName || "none";
}

// ../../node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs
var import_react16 = __toESM(require_react(), 1);
function $71cd76cc60e0454e$export$6f32135080cb4c3({ prop, defaultProp, onChange = () => {
} }) {
  let [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState({
    defaultProp,
    onChange
  }), isControlled = prop !== void 0, value1 = isControlled ? prop : uncontrolledProp, handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange), setValue = (0, import_react16.useCallback)((nextValue) => {
    if (isControlled) {
      let value = typeof nextValue == "function" ? nextValue(prop) : nextValue;
      value !== prop && handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState({ defaultProp, onChange }) {
  let uncontrolledState = (0, import_react16.useState)(defaultProp), [value] = uncontrolledState, prevValueRef = (0, import_react16.useRef)(value), handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onChange);
  return (0, import_react16.useEffect)(() => {
    prevValueRef.current !== value && (handleChange(value), prevValueRef.current = value);
  }, [
    value,
    prevValueRef,
    handleChange
  ]), uncontrolledState;
}

// ../../node_modules/@radix-ui/react-visually-hidden/dist/index.mjs
var import_react17 = __toESM(require_react(), 1);
var $ea1ef594cf570d83$export$439d29a4e110a164 = /* @__PURE__ */ (0, import_react17.forwardRef)((props, forwardedRef) => /* @__PURE__ */ (0, import_react17.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({}, props, {
  ref: forwardedRef,
  style: {
    // See: https://github.com/twbs/bootstrap/blob/master/scss/mixins/_screen-reader.scss
    position: "absolute",
    border: 0,
    width: 1,
    height: 1,
    padding: 0,
    margin: -1,
    overflow: "hidden",
    clip: "rect(0, 0, 0, 0)",
    whiteSpace: "nowrap",
    wordWrap: "normal",
    ...props.style
  }
}))), $ea1ef594cf570d83$export$be92b6f5f03c0fe9 = $ea1ef594cf570d83$export$439d29a4e110a164;

// ../../node_modules/@radix-ui/react-toast/dist/index.mjs
var $054eb8030ebde76e$var$PROVIDER_NAME = "ToastProvider", [$054eb8030ebde76e$var$Collection, $054eb8030ebde76e$var$useCollection, $054eb8030ebde76e$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2("Toast"), [$054eb8030ebde76e$var$createToastContext, $054eb8030ebde76e$export$8a359da18fbc9073] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Toast", [
  $054eb8030ebde76e$var$createCollectionScope
]), [$054eb8030ebde76e$var$ToastProviderProvider, $054eb8030ebde76e$var$useToastProviderContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$PROVIDER_NAME), $054eb8030ebde76e$export$f5d03d415824e0e = (props) => {
  let { __scopeToast, label = "Notification", duration = 5e3, swipeDirection = "right", swipeThreshold = 50, children } = props, [viewport, setViewport] = (0, import_react18.useState)(null), [toastCount, setToastCount] = (0, import_react18.useState)(0), isFocusedToastEscapeKeyDownRef = (0, import_react18.useRef)(!1), isClosePausedRef = (0, import_react18.useRef)(!1);
  return /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$Collection.Provider, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastProviderProvider, {
    scope: __scopeToast,
    label,
    duration,
    swipeDirection,
    swipeThreshold,
    toastCount,
    viewport,
    onViewportChange: setViewport,
    onToastAdd: (0, import_react18.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onToastRemove: (0, import_react18.useCallback)(
      () => setToastCount(
        (prevCount) => prevCount - 1
      ),
      []
    ),
    isFocusedToastEscapeKeyDownRef,
    isClosePausedRef
  }, children));
};
$054eb8030ebde76e$export$f5d03d415824e0e.propTypes = {
  label(props) {
    if (props.label && typeof props.label == "string" && !props.label.trim()) {
      let error = `Invalid prop \`label\` supplied to \`${$054eb8030ebde76e$var$PROVIDER_NAME}\`. Expected non-empty \`string\`.`;
      return new Error(error);
    }
    return null;
  }
};
var $054eb8030ebde76e$var$VIEWPORT_NAME = "ToastViewport", $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY = [
  "F8"
], $054eb8030ebde76e$var$VIEWPORT_PAUSE = "toast.viewportPause", $054eb8030ebde76e$var$VIEWPORT_RESUME = "toast.viewportResume", $054eb8030ebde76e$export$6192c2425ecfd989 = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, hotkey = $054eb8030ebde76e$var$VIEWPORT_DEFAULT_HOTKEY, label = "Notifications ({hotkey})", ...viewportProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$VIEWPORT_NAME, __scopeToast), getItems = $054eb8030ebde76e$var$useCollection(__scopeToast), wrapperRef = (0, import_react18.useRef)(null), headFocusProxyRef = (0, import_react18.useRef)(null), tailFocusProxyRef = (0, import_react18.useRef)(null), ref = (0, import_react18.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onViewportChange), hotkeyLabel = hotkey.join("+").replace(/Key/g, "").replace(/Digit/g, ""), hasToasts = context.toastCount > 0;
  (0, import_react18.useEffect)(() => {
    let handleKeyDown = (event) => {
      var _ref$current;
      hotkey.every(
        (key) => event[key] || event.code === key
      ) && ((_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus());
    };
    return document.addEventListener("keydown", handleKeyDown), () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    hotkey
  ]), (0, import_react18.useEffect)(() => {
    let wrapper = wrapperRef.current, viewport = ref.current;
    if (hasToasts && wrapper && viewport) {
      let handlePause = () => {
        if (!context.isClosePausedRef.current) {
          let pauseEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_PAUSE);
          viewport.dispatchEvent(pauseEvent), context.isClosePausedRef.current = !0;
        }
      }, handleResume = () => {
        if (context.isClosePausedRef.current) {
          let resumeEvent = new CustomEvent($054eb8030ebde76e$var$VIEWPORT_RESUME);
          viewport.dispatchEvent(resumeEvent), context.isClosePausedRef.current = !1;
        }
      }, handleFocusOutResume = (event) => {
        !wrapper.contains(event.relatedTarget) && handleResume();
      }, handlePointerLeaveResume = () => {
        wrapper.contains(document.activeElement) || handleResume();
      };
      return wrapper.addEventListener("focusin", handlePause), wrapper.addEventListener("focusout", handleFocusOutResume), wrapper.addEventListener("pointermove", handlePause), wrapper.addEventListener("pointerleave", handlePointerLeaveResume), window.addEventListener("blur", handlePause), window.addEventListener("focus", handleResume), () => {
        wrapper.removeEventListener("focusin", handlePause), wrapper.removeEventListener("focusout", handleFocusOutResume), wrapper.removeEventListener("pointermove", handlePause), wrapper.removeEventListener("pointerleave", handlePointerLeaveResume), window.removeEventListener("blur", handlePause), window.removeEventListener("focus", handleResume);
      };
    }
  }, [
    hasToasts,
    context.isClosePausedRef
  ]);
  let getSortedTabbableCandidates = (0, import_react18.useCallback)(({ tabbingDirection }) => {
    let tabbableCandidates = getItems().map((toastItem) => {
      let toastNode = toastItem.ref.current, toastTabbableCandidates = [
        toastNode,
        ...$054eb8030ebde76e$var$getTabbableCandidates(toastNode)
      ];
      return tabbingDirection === "forwards" ? toastTabbableCandidates : toastTabbableCandidates.reverse();
    });
    return (tabbingDirection === "forwards" ? tabbableCandidates.reverse() : tabbableCandidates).flat();
  }, [
    getItems
  ]);
  return (0, import_react18.useEffect)(() => {
    let viewport = ref.current;
    if (viewport) {
      let handleKeyDown = (event) => {
        let isMetaKey = event.altKey || event.ctrlKey || event.metaKey;
        if (event.key === "Tab" && !isMetaKey) {
          let focusedElement = document.activeElement, isTabbingBackwards = event.shiftKey;
          if (event.target === viewport && isTabbingBackwards) {
            var _headFocusProxyRef$cu;
            (_headFocusProxyRef$cu = headFocusProxyRef.current) === null || _headFocusProxyRef$cu === void 0 || _headFocusProxyRef$cu.focus();
            return;
          }
          let sortedCandidates = getSortedTabbableCandidates({
            tabbingDirection: isTabbingBackwards ? "backwards" : "forwards"
          }), index3 = sortedCandidates.findIndex(
            (candidate) => candidate === focusedElement
          );
          if ($054eb8030ebde76e$var$focusFirst(sortedCandidates.slice(index3 + 1)))
            event.preventDefault();
          else {
            var _headFocusProxyRef$cu2, _tailFocusProxyRef$cu;
            isTabbingBackwards ? (_headFocusProxyRef$cu2 = headFocusProxyRef.current) === null || _headFocusProxyRef$cu2 === void 0 || _headFocusProxyRef$cu2.focus() : (_tailFocusProxyRef$cu = tailFocusProxyRef.current) === null || _tailFocusProxyRef$cu === void 0 || _tailFocusProxyRef$cu.focus();
          }
        }
      };
      return viewport.addEventListener("keydown", handleKeyDown), () => viewport.removeEventListener("keydown", handleKeyDown);
    }
  }, [
    getItems,
    getSortedTabbableCandidates
  ]), /* @__PURE__ */ (0, import_react18.createElement)($5cb92bef7577960e$export$aecb2ddcb55c95be, {
    ref: wrapperRef,
    role: "region",
    "aria-label": label.replace("{hotkey}", hotkeyLabel),
    tabIndex: -1,
    style: {
      pointerEvents: hasToasts ? void 0 : "none"
    }
  }, hasToasts && /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: headFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      let tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "forwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }), /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$Collection.Slot, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.ol, _extends6({
    tabIndex: -1
  }, viewportProps, {
    ref: composedRefs
  }))), hasToasts && /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$FocusProxy, {
    ref: tailFocusProxyRef,
    onFocusFromOutsideViewport: () => {
      let tabbableCandidates = getSortedTabbableCandidates({
        tabbingDirection: "backwards"
      });
      $054eb8030ebde76e$var$focusFirst(tabbableCandidates);
    }
  }));
}), $054eb8030ebde76e$var$FOCUS_PROXY_NAME = "ToastFocusProxy", $054eb8030ebde76e$var$FocusProxy = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$FOCUS_PROXY_NAME, __scopeToast);
  return /* @__PURE__ */ (0, import_react18.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, _extends6({
    "aria-hidden": !0,
    tabIndex: 0
  }, proxyProps, {
    ref: forwardedRef,
    style: {
      position: "fixed"
    },
    onFocus: (event) => {
      var _context$viewport;
      let prevFocusedElement = event.relatedTarget;
      !((_context$viewport = context.viewport) !== null && _context$viewport !== void 0 && _context$viewport.contains(prevFocusedElement)) && onFocusFromOutsideViewport();
    }
  }));
}), $054eb8030ebde76e$var$TOAST_NAME = "Toast", $054eb8030ebde76e$var$TOAST_SWIPE_START = "toast.swipeStart", $054eb8030ebde76e$var$TOAST_SWIPE_MOVE = "toast.swipeMove", $054eb8030ebde76e$var$TOAST_SWIPE_CANCEL = "toast.swipeCancel", $054eb8030ebde76e$var$TOAST_SWIPE_END = "toast.swipeEnd", $054eb8030ebde76e$export$8d8dc7d5f743331b = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props, [open = !0, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react18.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || open
  }, /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastImpl, _extends6({
    open
  }, toastProps, {
    ref: forwardedRef,
    onClose: () => setOpen(!1),
    onPause: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onPause),
    onResume: $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(props.onResume),
    onSwipeStart: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeStart, (event) => {
      event.currentTarget.setAttribute("data-swipe", "start");
    }),
    onSwipeMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeMove, (event) => {
      let { x: x3, y: y4 } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "move"), event.currentTarget.style.setProperty("--radix-toast-swipe-move-x", `${x3}px`), event.currentTarget.style.setProperty("--radix-toast-swipe-move-y", `${y4}px`);
    }),
    onSwipeCancel: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeCancel, (event) => {
      event.currentTarget.setAttribute("data-swipe", "cancel"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"), event.currentTarget.style.removeProperty("--radix-toast-swipe-end-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-end-y");
    }),
    onSwipeEnd: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onSwipeEnd, (event) => {
      let { x: x3, y: y4 } = event.detail.delta;
      event.currentTarget.setAttribute("data-swipe", "end"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-x"), event.currentTarget.style.removeProperty("--radix-toast-swipe-move-y"), event.currentTarget.style.setProperty("--radix-toast-swipe-end-x", `${x3}px`), event.currentTarget.style.setProperty("--radix-toast-swipe-end-y", `${y4}px`), setOpen(!1);
    })
  })));
}), [$054eb8030ebde76e$var$ToastInteractiveProvider, $054eb8030ebde76e$var$useToastInteractiveContext] = $054eb8030ebde76e$var$createToastContext($054eb8030ebde76e$var$TOAST_NAME, {
  onClose() {
  }
}), $054eb8030ebde76e$var$ToastImpl = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, type = "foreground", duration: durationProp, open, onClose, onEscapeKeyDown, onPause, onResume, onSwipeStart, onSwipeMove, onSwipeCancel, onSwipeEnd, ...toastProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast), [node1, setNode] = (0, import_react18.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setNode(node)
  ), pointerStartRef = (0, import_react18.useRef)(null), swipeDeltaRef = (0, import_react18.useRef)(null), duration1 = durationProp || context.duration, closeTimerStartTimeRef = (0, import_react18.useRef)(0), closeTimerRemainingTimeRef = (0, import_react18.useRef)(duration1), closeTimerRef = (0, import_react18.useRef)(0), { onToastAdd, onToastRemove } = context, handleClose = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(() => {
    var _context$viewport2;
    node1?.contains(document.activeElement) && ((_context$viewport2 = context.viewport) === null || _context$viewport2 === void 0 || _context$viewport2.focus()), onClose();
  }), startTimer = (0, import_react18.useCallback)((duration) => {
    !duration || duration === 1 / 0 || (window.clearTimeout(closeTimerRef.current), closeTimerStartTimeRef.current = (/* @__PURE__ */ new Date()).getTime(), closeTimerRef.current = window.setTimeout(handleClose, duration));
  }, [
    handleClose
  ]);
  (0, import_react18.useEffect)(() => {
    let viewport = context.viewport;
    if (viewport) {
      let handleResume = () => {
        startTimer(closeTimerRemainingTimeRef.current), onResume?.();
      }, handlePause = () => {
        let elapsedTime = (/* @__PURE__ */ new Date()).getTime() - closeTimerStartTimeRef.current;
        closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime, window.clearTimeout(closeTimerRef.current), onPause?.();
      };
      return viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause), viewport.addEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume), () => {
        viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_PAUSE, handlePause), viewport.removeEventListener($054eb8030ebde76e$var$VIEWPORT_RESUME, handleResume);
      };
    }
  }, [
    context.viewport,
    duration1,
    onPause,
    onResume,
    startTimer
  ]), (0, import_react18.useEffect)(() => {
    open && !context.isClosePausedRef.current && startTimer(duration1);
  }, [
    open,
    duration1,
    context.isClosePausedRef,
    startTimer
  ]), (0, import_react18.useEffect)(() => (onToastAdd(), () => onToastRemove()), [
    onToastAdd,
    onToastRemove
  ]);
  let announceTextContent = (0, import_react18.useMemo)(() => node1 ? $054eb8030ebde76e$var$getAnnounceTextContent(node1) : null, [
    node1
  ]);
  return context.viewport ? /* @__PURE__ */ (0, import_react18.createElement)(import_react18.Fragment, null, announceTextContent && /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastAnnounce, {
    __scopeToast,
    role: "status",
    "aria-live": type === "foreground" ? "assertive" : "polite",
    "aria-atomic": !0
  }, announceTextContent), /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastInteractiveProvider, {
    scope: __scopeToast,
    onClose: handleClose
  }, /* @__PURE__ */ (0, import_react_dom4.createPortal)(/* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$Collection.ItemSlot, {
    scope: __scopeToast
  }, /* @__PURE__ */ (0, import_react18.createElement)($5cb92bef7577960e$export$be92b6f5f03c0fe9, {
    asChild: !0,
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEscapeKeyDown, () => {
      context.isFocusedToastEscapeKeyDownRef.current || handleClose(), context.isFocusedToastEscapeKeyDownRef.current = !1;
    })
  }, /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.li, _extends6({
    // Ensure toasts are announced as status list or status when focused
    role: "status",
    "aria-live": "off",
    "aria-atomic": !0,
    tabIndex: 0,
    "data-state": open ? "open" : "closed",
    "data-swipe-direction": context.swipeDirection
  }, toastProps, {
    ref: composedRefs,
    style: {
      userSelect: "none",
      touchAction: "none",
      ...props.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      event.key === "Escape" && (onEscapeKeyDown?.(event.nativeEvent), event.nativeEvent.defaultPrevented || (context.isFocusedToastEscapeKeyDownRef.current = !0, handleClose()));
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      event.button === 0 && (pointerStartRef.current = {
        x: event.clientX,
        y: event.clientY
      });
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      if (!pointerStartRef.current)
        return;
      let x3 = event.clientX - pointerStartRef.current.x, y4 = event.clientY - pointerStartRef.current.y, hasSwipeMoveStarted = Boolean(swipeDeltaRef.current), isHorizontalSwipe = [
        "left",
        "right"
      ].includes(context.swipeDirection), clamp3 = [
        "left",
        "up"
      ].includes(context.swipeDirection) ? Math.min : Math.max, clampedX = isHorizontalSwipe ? clamp3(0, x3) : 0, clampedY = isHorizontalSwipe ? 0 : clamp3(0, y4), moveStartBuffer = event.pointerType === "touch" ? 10 : 2, delta = {
        x: clampedX,
        y: clampedY
      }, eventDetail = {
        originalEvent: event,
        delta
      };
      hasSwipeMoveStarted ? (swipeDeltaRef.current = delta, $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {
        discrete: !1
      })) : $054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer) ? (swipeDeltaRef.current = delta, $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_START, onSwipeStart, eventDetail, {
        discrete: !1
      }), event.target.setPointerCapture(event.pointerId)) : (Math.abs(x3) > moveStartBuffer || Math.abs(y4) > moveStartBuffer) && (pointerStartRef.current = null);
    }),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event1) => {
      let delta = swipeDeltaRef.current, target = event1.target;
      if (target.hasPointerCapture(event1.pointerId) && target.releasePointerCapture(event1.pointerId), swipeDeltaRef.current = null, pointerStartRef.current = null, delta) {
        let toast2 = event1.currentTarget, eventDetail = {
          originalEvent: event1,
          delta
        };
        $054eb8030ebde76e$var$isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold) ? $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_END, onSwipeEnd, eventDetail, {
          discrete: !0
        }) : $054eb8030ebde76e$var$handleAndDispatchCustomEvent($054eb8030ebde76e$var$TOAST_SWIPE_CANCEL, onSwipeCancel, eventDetail, {
          discrete: !0
        }), toast2.addEventListener(
          "click",
          (event) => event.preventDefault(),
          {
            once: !0
          }
        );
      }
    })
  })))), context.viewport))) : null;
});
$054eb8030ebde76e$var$ToastImpl.propTypes = {
  type(props) {
    if (props.type && ![
      "foreground",
      "background"
    ].includes(props.type)) {
      let error = `Invalid prop \`type\` supplied to \`${$054eb8030ebde76e$var$TOAST_NAME}\`. Expected \`foreground | background\`.`;
      return new Error(error);
    }
    return null;
  }
};
var $054eb8030ebde76e$var$ToastAnnounce = (props) => {
  let { __scopeToast, children, ...announceProps } = props, context = $054eb8030ebde76e$var$useToastProviderContext($054eb8030ebde76e$var$TOAST_NAME, __scopeToast), [renderAnnounceText, setRenderAnnounceText] = (0, import_react18.useState)(!1), [isAnnounced, setIsAnnounced] = (0, import_react18.useState)(!1);
  return $054eb8030ebde76e$var$useNextFrame(
    () => setRenderAnnounceText(!0)
  ), (0, import_react18.useEffect)(() => {
    let timer = window.setTimeout(
      () => setIsAnnounced(!0),
      1e3
    );
    return () => window.clearTimeout(timer);
  }, []), isAnnounced ? null : /* @__PURE__ */ (0, import_react18.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: !0
  }, /* @__PURE__ */ (0, import_react18.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, announceProps, renderAnnounceText && /* @__PURE__ */ (0, import_react18.createElement)(import_react18.Fragment, null, context.label, " ", children)));
};
var $054eb8030ebde76e$export$16d42d7c29b95a4 = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, ...titleProps } = props;
  return /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, titleProps, {
    ref: forwardedRef
  }));
});
var $054eb8030ebde76e$export$ecddd96c53621d9a = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, ...descriptionProps } = props;
  return /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, descriptionProps, {
    ref: forwardedRef
  }));
}), $054eb8030ebde76e$var$ACTION_NAME = "ToastAction", $054eb8030ebde76e$export$3019feecfda683d2 = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { altText, ...actionProps } = props;
  return altText ? /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    altText,
    asChild: !0
  }, /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$export$811e70f61c205839, _extends6({}, actionProps, {
    ref: forwardedRef
  }))) : null;
});
$054eb8030ebde76e$export$3019feecfda683d2.propTypes = {
  altText(props) {
    return props.altText ? null : new Error(`Missing prop \`altText\` expected on \`${$054eb8030ebde76e$var$ACTION_NAME}\``);
  }
};
var $054eb8030ebde76e$var$CLOSE_NAME = "ToastClose", $054eb8030ebde76e$export$811e70f61c205839 = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, ...closeProps } = props, interactiveContext = $054eb8030ebde76e$var$useToastInteractiveContext($054eb8030ebde76e$var$CLOSE_NAME, __scopeToast);
  return /* @__PURE__ */ (0, import_react18.createElement)($054eb8030ebde76e$var$ToastAnnounceExclude, {
    asChild: !0
  }, /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, interactiveContext.onClose)
  })));
}), $054eb8030ebde76e$var$ToastAnnounceExclude = /* @__PURE__ */ (0, import_react18.forwardRef)((props, forwardedRef) => {
  let { __scopeToast, altText, ...announceExcludeProps } = props;
  return /* @__PURE__ */ (0, import_react18.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-radix-toast-announce-exclude": "",
    "data-radix-toast-announce-alt": altText || void 0
  }, announceExcludeProps, {
    ref: forwardedRef
  }));
});
function $054eb8030ebde76e$var$getAnnounceTextContent(container) {
  let textContent = [];
  return Array.from(container.childNodes).forEach((node) => {
    if (node.nodeType === node.TEXT_NODE && node.textContent && textContent.push(node.textContent), $054eb8030ebde76e$var$isHTMLElement(node)) {
      let isHidden = node.ariaHidden || node.hidden || node.style.display === "none", isExcluded = node.dataset.radixToastAnnounceExclude === "";
      if (!isHidden)
        if (isExcluded) {
          let altText = node.dataset.radixToastAnnounceAlt;
          altText && textContent.push(altText);
        } else
          textContent.push(...$054eb8030ebde76e$var$getAnnounceTextContent(node));
    }
  }), textContent;
}
function $054eb8030ebde76e$var$handleAndDispatchCustomEvent(name, handler, detail, { discrete }) {
  let currentTarget = detail.originalEvent.currentTarget, event = new CustomEvent(name, {
    bubbles: !0,
    cancelable: !0,
    detail
  });
  handler && currentTarget.addEventListener(name, handler, {
    once: !0
  }), discrete ? $8927f6f2acc4f386$export$6d1a0317bde7de7f(currentTarget, event) : currentTarget.dispatchEvent(event);
}
var $054eb8030ebde76e$var$isDeltaInDirection = (delta, direction, threshold = 0) => {
  let deltaX = Math.abs(delta.x), deltaY = Math.abs(delta.y), isDeltaX = deltaX > deltaY;
  return direction === "left" || direction === "right" ? isDeltaX && deltaX > threshold : !isDeltaX && deltaY > threshold;
};
function $054eb8030ebde76e$var$useNextFrame(callback = () => {
}) {
  let fn = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(callback);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let raf1 = 0, raf2 = 0;
    return raf1 = window.requestAnimationFrame(
      () => raf2 = window.requestAnimationFrame(fn)
    ), () => {
      window.cancelAnimationFrame(raf1), window.cancelAnimationFrame(raf2);
    };
  }, [
    fn
  ]);
}
function $054eb8030ebde76e$var$isHTMLElement(node) {
  return node.nodeType === node.ELEMENT_NODE;
}
function $054eb8030ebde76e$var$getTabbableCandidates(container) {
  let nodes = [], walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      let isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      return node.disabled || node.hidden || isHiddenInput ? NodeFilter.FILTER_SKIP : node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; walker.nextNode(); )
    nodes.push(walker.currentNode);
  return nodes;
}
function $054eb8030ebde76e$var$focusFirst(candidates) {
  let previouslyFocusedElement = document.activeElement;
  return candidates.some((candidate) => candidate === previouslyFocusedElement ? !0 : (candidate.focus(), document.activeElement !== previouslyFocusedElement));
}
var $054eb8030ebde76e$export$2881499e37b75b9a = $054eb8030ebde76e$export$f5d03d415824e0e, $054eb8030ebde76e$export$d5c6c08dc2d3ca7 = $054eb8030ebde76e$export$6192c2425ecfd989, $054eb8030ebde76e$export$be92b6f5f03c0fe9 = $054eb8030ebde76e$export$8d8dc7d5f743331b, $054eb8030ebde76e$export$f99233281efd08a0 = $054eb8030ebde76e$export$16d42d7c29b95a4, $054eb8030ebde76e$export$393edc798c47379d = $054eb8030ebde76e$export$ecddd96c53621d9a, $054eb8030ebde76e$export$e19cd5f9376f8cee = $054eb8030ebde76e$export$3019feecfda683d2, $054eb8030ebde76e$export$f39c2d165cd861fe = $054eb8030ebde76e$export$811e70f61c205839;

// ../../node_modules/clsx/dist/clsx.mjs
function r2(e3) {
  var t4, f2, n2 = "";
  if (typeof e3 == "string" || typeof e3 == "number")
    n2 += e3;
  else if (typeof e3 == "object")
    if (Array.isArray(e3))
      for (t4 = 0; t4 < e3.length; t4++)
        e3[t4] && (f2 = r2(e3[t4])) && (n2 && (n2 += " "), n2 += f2);
    else
      for (t4 in e3)
        e3[t4] && (n2 && (n2 += " "), n2 += t4);
  return n2;
}
function clsx() {
  for (var e3, t4, f2 = 0, n2 = ""; f2 < arguments.length; )
    (e3 = arguments[f2++]) && (t4 = r2(e3)) && (n2 && (n2 += " "), n2 += t4);
  return n2;
}

// ../../node_modules/class-variance-authority/dist/index.mjs
var falsyToString = (value) => typeof value == "boolean" ? "".concat(value) : value === 0 ? "0" : value, cx = clsx, cva = (base, config) => (props) => {
  var ref;
  if (config?.variants == null)
    return cx(base, props?.class, props?.className);
  let { variants, defaultVariants } = config, getVariantClassNames = Object.keys(variants).map((variant) => {
    let variantProp = props?.[variant], defaultVariantProp = defaultVariants?.[variant];
    if (variantProp === null)
      return null;
    let variantKey = falsyToString(variantProp) || falsyToString(defaultVariantProp);
    return variants[variant][variantKey];
  }), propsWithoutUndefined = props && Object.entries(props).reduce((acc, param) => {
    let [key, value] = param;
    return value === void 0 || (acc[key] = value), acc;
  }, {}), getCompoundVariantClassNames = config == null || (ref = config.compoundVariants) === null || ref === void 0 ? void 0 : ref.reduce((acc, param1) => {
    let { class: cvClass, className: cvClassName, ...compoundVariantOptions } = param1;
    return Object.entries(compoundVariantOptions).every((param) => {
      let [key, value] = param;
      return Array.isArray(value) ? value.includes({
        ...defaultVariants,
        ...propsWithoutUndefined
      }[key]) : {
        ...defaultVariants,
        ...propsWithoutUndefined
      }[key] === value;
    }) ? [
      ...acc,
      cvClass,
      cvClassName
    ] : acc;
  }, []);
  return cx(base, getVariantClassNames, getCompoundVariantClassNames, props?.class, props?.className);
};

// ../../node_modules/@babel/runtime/helpers/esm/typeof.js
function _typeof(o2) {
  return _typeof = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(o3) {
    return typeof o3;
  } : function(o3) {
    return o3 && typeof Symbol == "function" && o3.constructor === Symbol && o3 !== Symbol.prototype ? "symbol" : typeof o3;
  }, _typeof(o2);
}

// ../../node_modules/date-fns/esm/_lib/toInteger/index.js
function toInteger(dirtyNumber) {
  if (dirtyNumber === null || dirtyNumber === !0 || dirtyNumber === !1)
    return NaN;
  var number2 = Number(dirtyNumber);
  return isNaN(number2) ? number2 : number2 < 0 ? Math.ceil(number2) : Math.floor(number2);
}

// ../../node_modules/date-fns/esm/_lib/requiredArgs/index.js
function requiredArgs(required, args) {
  if (args.length < required)
    throw new TypeError(required + " argument" + (required > 1 ? "s" : "") + " required, but only " + args.length + " present");
}

// ../../node_modules/date-fns/esm/toDate/index.js
function toDate(argument) {
  requiredArgs(1, arguments);
  var argStr = Object.prototype.toString.call(argument);
  return argument instanceof Date || _typeof(argument) === "object" && argStr === "[object Date]" ? new Date(argument.getTime()) : typeof argument == "number" || argStr === "[object Number]" ? new Date(argument) : ((typeof argument == "string" || argStr === "[object String]") && typeof console < "u" && (console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#string-arguments"), console.warn(new Error().stack)), /* @__PURE__ */ new Date(NaN));
}

// ../../node_modules/date-fns/esm/addMilliseconds/index.js
function addMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var timestamp = toDate(dirtyDate).getTime(), amount = toInteger(dirtyAmount);
  return new Date(timestamp + amount);
}

// ../../node_modules/date-fns/esm/_lib/defaultOptions/index.js
var defaultOptions = {};
function getDefaultOptions() {
  return defaultOptions;
}

// ../../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js
function getTimezoneOffsetInMilliseconds(date) {
  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
  return utcDate.setUTCFullYear(date.getFullYear()), date.getTime() - utcDate.getTime();
}

// ../../node_modules/date-fns/esm/startOfDay/index.js
function startOfDay(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate);
  return date.setHours(0, 0, 0, 0), date;
}

// ../../node_modules/date-fns/esm/differenceInCalendarDays/index.js
var MILLISECONDS_IN_DAY = 864e5;
function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var startOfDayLeft = startOfDay(dirtyDateLeft), startOfDayRight = startOfDay(dirtyDateRight), timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft), timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight);
  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);
}

// ../../node_modules/date-fns/esm/compareAsc/index.js
function compareAsc(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft), dateRight = toDate(dirtyDateRight), diff = dateLeft.getTime() - dateRight.getTime();
  return diff < 0 ? -1 : diff > 0 ? 1 : diff;
}

// ../../node_modules/date-fns/esm/constants/index.js
var daysInYear = 365.2425, maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1e3, millisecondsInMinute = 6e4, millisecondsInHour = 36e5;
var minTime = -maxTime;
var secondsInHour = 3600;
var secondsInDay = secondsInHour * 24, secondsInWeek = secondsInDay * 7, secondsInYear = secondsInDay * daysInYear, secondsInMonth = secondsInYear / 12, secondsInQuarter = secondsInMonth * 3;

// ../../node_modules/date-fns/esm/isSameDay/index.js
function isSameDay(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeftStartOfDay = startOfDay(dirtyDateLeft), dateRightStartOfDay = startOfDay(dirtyDateRight);
  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();
}

// ../../node_modules/date-fns/esm/isDate/index.js
function isDate(value) {
  return requiredArgs(1, arguments), value instanceof Date || _typeof(value) === "object" && Object.prototype.toString.call(value) === "[object Date]";
}

// ../../node_modules/date-fns/esm/isValid/index.js
function isValid(dirtyDate) {
  if (requiredArgs(1, arguments), !isDate(dirtyDate) && typeof dirtyDate != "number")
    return !1;
  var date = toDate(dirtyDate);
  return !isNaN(Number(date));
}

// ../../node_modules/date-fns/esm/differenceInDays/index.js
function compareLocalAsc(dateLeft, dateRight) {
  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();
  return diff < 0 ? -1 : diff > 0 ? 1 : diff;
}
function differenceInDays(dirtyDateLeft, dirtyDateRight) {
  requiredArgs(2, arguments);
  var dateLeft = toDate(dirtyDateLeft), dateRight = toDate(dirtyDateRight), sign = compareLocalAsc(dateLeft, dateRight), difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));
  dateLeft.setDate(dateLeft.getDate() - sign * difference);
  var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign), result = sign * (difference - isLastDayNotFull);
  return result === 0 ? 0 : result;
}

// ../../node_modules/date-fns/esm/subMilliseconds/index.js
function subMilliseconds(dirtyDate, dirtyAmount) {
  requiredArgs(2, arguments);
  var amount = toInteger(dirtyAmount);
  return addMilliseconds(dirtyDate, -amount);
}

// ../../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js
var MILLISECONDS_IN_DAY2 = 864e5;
function getUTCDayOfYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate), timestamp = date.getTime();
  date.setUTCMonth(0, 1), date.setUTCHours(0, 0, 0, 0);
  var startOfYearTimestamp = date.getTime(), difference = timestamp - startOfYearTimestamp;
  return Math.floor(difference / MILLISECONDS_IN_DAY2) + 1;
}

// ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js
function startOfUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var weekStartsOn = 1, date = toDate(dirtyDate), day = date.getUTCDay(), diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  return date.setUTCDate(date.getUTCDate() - diff), date.setUTCHours(0, 0, 0, 0), date;
}

// ../../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js
function getUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate), year = date.getUTCFullYear(), fourthOfJanuaryOfNextYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4), fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear), fourthOfJanuaryOfThisYear = /* @__PURE__ */ new Date(0);
  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4), fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);
  return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
}

// ../../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js
function startOfUTCISOWeekYear(dirtyDate) {
  requiredArgs(1, arguments);
  var year = getUTCISOWeekYear(dirtyDate), fourthOfJanuary = /* @__PURE__ */ new Date(0);
  fourthOfJanuary.setUTCFullYear(year, 0, 4), fourthOfJanuary.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCISOWeek(fourthOfJanuary);
  return date;
}

// ../../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js
var MILLISECONDS_IN_WEEK = 6048e5;
function getUTCISOWeek(dirtyDate) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate), diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
}

// ../../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js
function startOfUTCWeek(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$weekStartsOn, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions3 = getDefaultOptions(), weekStartsOn = toInteger((_ref = (_ref2 = (_ref3 = (_options$weekStartsOn = options?.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options == null || (_options$locale = options.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.weekStartsOn) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.weekStartsOn) !== null && _ref !== void 0 ? _ref : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  var date = toDate(dirtyDate), day = date.getUTCDay(), diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
  return date.setUTCDate(date.getUTCDate() - diff), date.setUTCHours(0, 0, 0, 0), date;
}

// ../../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js
function getUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate), year = date.getUTCFullYear(), defaultOptions3 = getDefaultOptions(), firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options?.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options == null || (_options$locale = options.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  var firstWeekOfNextYear = /* @__PURE__ */ new Date(0);
  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate), firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, options), firstWeekOfThisYear = /* @__PURE__ */ new Date(0);
  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate), firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, options);
  return date.getTime() >= startOfNextYear.getTime() ? year + 1 : date.getTime() >= startOfThisYear.getTime() ? year : year - 1;
}

// ../../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js
function startOfUTCWeekYear(dirtyDate, options) {
  var _ref, _ref2, _ref3, _options$firstWeekCon, _options$locale, _options$locale$optio, _defaultOptions$local, _defaultOptions$local2;
  requiredArgs(1, arguments);
  var defaultOptions3 = getDefaultOptions(), firstWeekContainsDate = toInteger((_ref = (_ref2 = (_ref3 = (_options$firstWeekCon = options?.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options == null || (_options$locale = options.locale) === null || _options$locale === void 0 || (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : defaultOptions3.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref !== void 0 ? _ref : 1), year = getUTCWeekYear(dirtyDate, options), firstWeek = /* @__PURE__ */ new Date(0);
  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate), firstWeek.setUTCHours(0, 0, 0, 0);
  var date = startOfUTCWeek(firstWeek, options);
  return date;
}

// ../../node_modules/date-fns/esm/_lib/getUTCWeek/index.js
var MILLISECONDS_IN_WEEK2 = 6048e5;
function getUTCWeek(dirtyDate, options) {
  requiredArgs(1, arguments);
  var date = toDate(dirtyDate), diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime();
  return Math.round(diff / MILLISECONDS_IN_WEEK2) + 1;
}

// ../../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js
function addLeadingZeros(number2, targetLength) {
  for (var sign = number2 < 0 ? "-" : "", output = Math.abs(number2).toString(); output.length < targetLength; )
    output = "0" + output;
  return sign + output;
}

// ../../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js
var formatters = {
  // Year
  y: function(date, token) {
    var signedYear = date.getUTCFullYear(), year = signedYear > 0 ? signedYear : 1 - signedYear;
    return addLeadingZeros(token === "yy" ? year % 100 : year, token.length);
  },
  // Month
  M: function(date, token) {
    var month = date.getUTCMonth();
    return token === "M" ? String(month + 1) : addLeadingZeros(month + 1, 2);
  },
  // Day of the month
  d: function(date, token) {
    return addLeadingZeros(date.getUTCDate(), token.length);
  },
  // AM or PM
  a: function(date, token) {
    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return dayPeriodEnumValue.toUpperCase();
      case "aaa":
        return dayPeriodEnumValue;
      case "aaaaa":
        return dayPeriodEnumValue[0];
      case "aaaa":
      default:
        return dayPeriodEnumValue === "am" ? "a.m." : "p.m.";
    }
  },
  // Hour [1-12]
  h: function(date, token) {
    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
  },
  // Hour [0-23]
  H: function(date, token) {
    return addLeadingZeros(date.getUTCHours(), token.length);
  },
  // Minute
  m: function(date, token) {
    return addLeadingZeros(date.getUTCMinutes(), token.length);
  },
  // Second
  s: function(date, token) {
    return addLeadingZeros(date.getUTCSeconds(), token.length);
  },
  // Fraction of second
  S: function(date, token) {
    var numberOfDigits = token.length, milliseconds = date.getUTCMilliseconds(), fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
    return addLeadingZeros(fractionalSeconds, token.length);
  }
}, lightFormatters_default = formatters;

// ../../node_modules/date-fns/esm/_lib/format/formatters/index.js
var dayPeriodEnum = {
  am: "am",
  pm: "pm",
  midnight: "midnight",
  noon: "noon",
  morning: "morning",
  afternoon: "afternoon",
  evening: "evening",
  night: "night"
}, formatters2 = {
  // Era
  G: function(date, token, localize2) {
    var era = date.getUTCFullYear() > 0 ? 1 : 0;
    switch (token) {
      case "G":
      case "GG":
      case "GGG":
        return localize2.era(era, {
          width: "abbreviated"
        });
      case "GGGGG":
        return localize2.era(era, {
          width: "narrow"
        });
      case "GGGG":
      default:
        return localize2.era(era, {
          width: "wide"
        });
    }
  },
  // Year
  y: function(date, token, localize2) {
    if (token === "yo") {
      var signedYear = date.getUTCFullYear(), year = signedYear > 0 ? signedYear : 1 - signedYear;
      return localize2.ordinalNumber(year, {
        unit: "year"
      });
    }
    return lightFormatters_default.y(date, token);
  },
  // Local week-numbering year
  Y: function(date, token, localize2, options) {
    var signedWeekYear = getUTCWeekYear(date, options), weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear;
    if (token === "YY") {
      var twoDigitYear = weekYear % 100;
      return addLeadingZeros(twoDigitYear, 2);
    }
    return token === "Yo" ? localize2.ordinalNumber(weekYear, {
      unit: "year"
    }) : addLeadingZeros(weekYear, token.length);
  },
  // ISO week-numbering year
  R: function(date, token) {
    var isoWeekYear = getUTCISOWeekYear(date);
    return addLeadingZeros(isoWeekYear, token.length);
  },
  // Extended year. This is a single number designating the year of this calendar system.
  // The main difference between `y` and `u` localizers are B.C. years:
  // | Year | `y` | `u` |
  // |------|-----|-----|
  // | AC 1 |   1 |   1 |
  // | BC 1 |   1 |   0 |
  // | BC 2 |   2 |  -1 |
  // Also `yy` always returns the last two digits of a year,
  // while `uu` pads single digit years to 2 characters and returns other years unchanged.
  u: function(date, token) {
    var year = date.getUTCFullYear();
    return addLeadingZeros(year, token.length);
  },
  // Quarter
  Q: function(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "Q":
        return String(quarter);
      case "QQ":
        return addLeadingZeros(quarter, 2);
      case "Qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "QQQ":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "formatting"
        });
      case "QQQQQ":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "formatting"
        });
      case "QQQQ":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone quarter
  q: function(date, token, localize2) {
    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);
    switch (token) {
      case "q":
        return String(quarter);
      case "qq":
        return addLeadingZeros(quarter, 2);
      case "qo":
        return localize2.ordinalNumber(quarter, {
          unit: "quarter"
        });
      case "qqq":
        return localize2.quarter(quarter, {
          width: "abbreviated",
          context: "standalone"
        });
      case "qqqqq":
        return localize2.quarter(quarter, {
          width: "narrow",
          context: "standalone"
        });
      case "qqqq":
      default:
        return localize2.quarter(quarter, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Month
  M: function(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "M":
      case "MM":
        return lightFormatters_default.M(date, token);
      case "Mo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "MMM":
        return localize2.month(month, {
          width: "abbreviated",
          context: "formatting"
        });
      case "MMMMM":
        return localize2.month(month, {
          width: "narrow",
          context: "formatting"
        });
      case "MMMM":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone month
  L: function(date, token, localize2) {
    var month = date.getUTCMonth();
    switch (token) {
      case "L":
        return String(month + 1);
      case "LL":
        return addLeadingZeros(month + 1, 2);
      case "Lo":
        return localize2.ordinalNumber(month + 1, {
          unit: "month"
        });
      case "LLL":
        return localize2.month(month, {
          width: "abbreviated",
          context: "standalone"
        });
      case "LLLLL":
        return localize2.month(month, {
          width: "narrow",
          context: "standalone"
        });
      case "LLLL":
      default:
        return localize2.month(month, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // Local week of year
  w: function(date, token, localize2, options) {
    var week = getUTCWeek(date, options);
    return token === "wo" ? localize2.ordinalNumber(week, {
      unit: "week"
    }) : addLeadingZeros(week, token.length);
  },
  // ISO week of year
  I: function(date, token, localize2) {
    var isoWeek = getUTCISOWeek(date);
    return token === "Io" ? localize2.ordinalNumber(isoWeek, {
      unit: "week"
    }) : addLeadingZeros(isoWeek, token.length);
  },
  // Day of the month
  d: function(date, token, localize2) {
    return token === "do" ? localize2.ordinalNumber(date.getUTCDate(), {
      unit: "date"
    }) : lightFormatters_default.d(date, token);
  },
  // Day of year
  D: function(date, token, localize2) {
    var dayOfYear = getUTCDayOfYear(date);
    return token === "Do" ? localize2.ordinalNumber(dayOfYear, {
      unit: "dayOfYear"
    }) : addLeadingZeros(dayOfYear, token.length);
  },
  // Day of week
  E: function(date, token, localize2) {
    var dayOfWeek = date.getUTCDay();
    switch (token) {
      case "E":
      case "EE":
      case "EEE":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "EEEEE":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "EEEEEE":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "EEEE":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Local day of week
  e: function(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay(), localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "e":
        return String(localDayOfWeek);
      case "ee":
        return addLeadingZeros(localDayOfWeek, 2);
      case "eo":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "eee":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "eeeee":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "eeeeee":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "eeee":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Stand-alone local day of week
  c: function(date, token, localize2, options) {
    var dayOfWeek = date.getUTCDay(), localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;
    switch (token) {
      case "c":
        return String(localDayOfWeek);
      case "cc":
        return addLeadingZeros(localDayOfWeek, token.length);
      case "co":
        return localize2.ordinalNumber(localDayOfWeek, {
          unit: "day"
        });
      case "ccc":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "standalone"
        });
      case "ccccc":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "standalone"
        });
      case "cccccc":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "standalone"
        });
      case "cccc":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "standalone"
        });
    }
  },
  // ISO day of week
  i: function(date, token, localize2) {
    var dayOfWeek = date.getUTCDay(), isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;
    switch (token) {
      case "i":
        return String(isoDayOfWeek);
      case "ii":
        return addLeadingZeros(isoDayOfWeek, token.length);
      case "io":
        return localize2.ordinalNumber(isoDayOfWeek, {
          unit: "day"
        });
      case "iii":
        return localize2.day(dayOfWeek, {
          width: "abbreviated",
          context: "formatting"
        });
      case "iiiii":
        return localize2.day(dayOfWeek, {
          width: "narrow",
          context: "formatting"
        });
      case "iiiiii":
        return localize2.day(dayOfWeek, {
          width: "short",
          context: "formatting"
        });
      case "iiii":
      default:
        return localize2.day(dayOfWeek, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM or PM
  a: function(date, token, localize2) {
    var hours = date.getUTCHours(), dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am";
    switch (token) {
      case "a":
      case "aa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "aaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "aaaaa":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "aaaa":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // AM, PM, midnight, noon
  b: function(date, token, localize2) {
    var hours = date.getUTCHours(), dayPeriodEnumValue;
    switch (hours === 12 ? dayPeriodEnumValue = dayPeriodEnum.noon : hours === 0 ? dayPeriodEnumValue = dayPeriodEnum.midnight : dayPeriodEnumValue = hours / 12 >= 1 ? "pm" : "am", token) {
      case "b":
      case "bb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "bbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        }).toLowerCase();
      case "bbbbb":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "bbbb":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // in the morning, in the afternoon, in the evening, at night
  B: function(date, token, localize2) {
    var hours = date.getUTCHours(), dayPeriodEnumValue;
    switch (hours >= 17 ? dayPeriodEnumValue = dayPeriodEnum.evening : hours >= 12 ? dayPeriodEnumValue = dayPeriodEnum.afternoon : hours >= 4 ? dayPeriodEnumValue = dayPeriodEnum.morning : dayPeriodEnumValue = dayPeriodEnum.night, token) {
      case "B":
      case "BB":
      case "BBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "abbreviated",
          context: "formatting"
        });
      case "BBBBB":
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "narrow",
          context: "formatting"
        });
      case "BBBB":
      default:
        return localize2.dayPeriod(dayPeriodEnumValue, {
          width: "wide",
          context: "formatting"
        });
    }
  },
  // Hour [1-12]
  h: function(date, token, localize2) {
    if (token === "ho") {
      var hours = date.getUTCHours() % 12;
      return hours === 0 && (hours = 12), localize2.ordinalNumber(hours, {
        unit: "hour"
      });
    }
    return lightFormatters_default.h(date, token);
  },
  // Hour [0-23]
  H: function(date, token, localize2) {
    return token === "Ho" ? localize2.ordinalNumber(date.getUTCHours(), {
      unit: "hour"
    }) : lightFormatters_default.H(date, token);
  },
  // Hour [0-11]
  K: function(date, token, localize2) {
    var hours = date.getUTCHours() % 12;
    return token === "Ko" ? localize2.ordinalNumber(hours, {
      unit: "hour"
    }) : addLeadingZeros(hours, token.length);
  },
  // Hour [1-24]
  k: function(date, token, localize2) {
    var hours = date.getUTCHours();
    return hours === 0 && (hours = 24), token === "ko" ? localize2.ordinalNumber(hours, {
      unit: "hour"
    }) : addLeadingZeros(hours, token.length);
  },
  // Minute
  m: function(date, token, localize2) {
    return token === "mo" ? localize2.ordinalNumber(date.getUTCMinutes(), {
      unit: "minute"
    }) : lightFormatters_default.m(date, token);
  },
  // Second
  s: function(date, token, localize2) {
    return token === "so" ? localize2.ordinalNumber(date.getUTCSeconds(), {
      unit: "second"
    }) : lightFormatters_default.s(date, token);
  },
  // Fraction of second
  S: function(date, token) {
    return lightFormatters_default.S(date, token);
  },
  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
  X: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
    if (timezoneOffset === 0)
      return "Z";
    switch (token) {
      case "X":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "XXXX":
      case "XX":
        return formatTimezone(timezoneOffset);
      case "XXXXX":
      case "XXX":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
  x: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "x":
        return formatTimezoneWithOptionalMinutes(timezoneOffset);
      case "xxxx":
      case "xx":
        return formatTimezone(timezoneOffset);
      case "xxxxx":
      case "xxx":
      default:
        return formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (GMT)
  O: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "O":
      case "OO":
      case "OOO":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "OOOO":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Timezone (specific non-location)
  z: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timezoneOffset = originalDate.getTimezoneOffset();
    switch (token) {
      case "z":
      case "zz":
      case "zzz":
        return "GMT" + formatTimezoneShort(timezoneOffset, ":");
      case "zzzz":
      default:
        return "GMT" + formatTimezone(timezoneOffset, ":");
    }
  },
  // Seconds timestamp
  t: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timestamp = Math.floor(originalDate.getTime() / 1e3);
    return addLeadingZeros(timestamp, token.length);
  },
  // Milliseconds timestamp
  T: function(date, token, _localize, options) {
    var originalDate = options._originalDate || date, timestamp = originalDate.getTime();
    return addLeadingZeros(timestamp, token.length);
  }
};
function formatTimezoneShort(offset2, dirtyDelimiter) {
  var sign = offset2 > 0 ? "-" : "+", absOffset = Math.abs(offset2), hours = Math.floor(absOffset / 60), minutes = absOffset % 60;
  if (minutes === 0)
    return sign + String(hours);
  var delimiter = dirtyDelimiter || "";
  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
}
function formatTimezoneWithOptionalMinutes(offset2, dirtyDelimiter) {
  if (offset2 % 60 === 0) {
    var sign = offset2 > 0 ? "-" : "+";
    return sign + addLeadingZeros(Math.abs(offset2) / 60, 2);
  }
  return formatTimezone(offset2, dirtyDelimiter);
}
function formatTimezone(offset2, dirtyDelimiter) {
  var delimiter = dirtyDelimiter || "", sign = offset2 > 0 ? "-" : "+", absOffset = Math.abs(offset2), hours = addLeadingZeros(Math.floor(absOffset / 60), 2), minutes = addLeadingZeros(absOffset % 60, 2);
  return sign + hours + delimiter + minutes;
}
var formatters_default = formatters2;

// ../../node_modules/date-fns/esm/_lib/format/longFormatters/index.js
var dateLongFormatter = function(pattern, formatLong2) {
  switch (pattern) {
    case "P":
      return formatLong2.date({
        width: "short"
      });
    case "PP":
      return formatLong2.date({
        width: "medium"
      });
    case "PPP":
      return formatLong2.date({
        width: "long"
      });
    case "PPPP":
    default:
      return formatLong2.date({
        width: "full"
      });
  }
}, timeLongFormatter = function(pattern, formatLong2) {
  switch (pattern) {
    case "p":
      return formatLong2.time({
        width: "short"
      });
    case "pp":
      return formatLong2.time({
        width: "medium"
      });
    case "ppp":
      return formatLong2.time({
        width: "long"
      });
    case "pppp":
    default:
      return formatLong2.time({
        width: "full"
      });
  }
}, dateTimeLongFormatter = function(pattern, formatLong2) {
  var matchResult = pattern.match(/(P+)(p+)?/) || [], datePattern = matchResult[1], timePattern = matchResult[2];
  if (!timePattern)
    return dateLongFormatter(pattern, formatLong2);
  var dateTimeFormat;
  switch (datePattern) {
    case "P":
      dateTimeFormat = formatLong2.dateTime({
        width: "short"
      });
      break;
    case "PP":
      dateTimeFormat = formatLong2.dateTime({
        width: "medium"
      });
      break;
    case "PPP":
      dateTimeFormat = formatLong2.dateTime({
        width: "long"
      });
      break;
    case "PPPP":
    default:
      dateTimeFormat = formatLong2.dateTime({
        width: "full"
      });
      break;
  }
  return dateTimeFormat.replace("{{date}}", dateLongFormatter(datePattern, formatLong2)).replace("{{time}}", timeLongFormatter(timePattern, formatLong2));
}, longFormatters = {
  p: timeLongFormatter,
  P: dateTimeLongFormatter
}, longFormatters_default = longFormatters;

// ../../node_modules/date-fns/esm/_lib/protectedTokens/index.js
var protectedDayOfYearTokens = ["D", "DD"], protectedWeekYearTokens = ["YY", "YYYY"];
function isProtectedDayOfYearToken(token) {
  return protectedDayOfYearTokens.indexOf(token) !== -1;
}
function isProtectedWeekYearToken(token) {
  return protectedWeekYearTokens.indexOf(token) !== -1;
}
function throwProtectedError(token, format2, input) {
  if (token === "YYYY")
    throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  if (token === "YY")
    throw new RangeError("Use `yy` instead of `YY` (in `".concat(format2, "`) for formatting years to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  if (token === "D")
    throw new RangeError("Use `d` instead of `D` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
  if (token === "DD")
    throw new RangeError("Use `dd` instead of `DD` (in `".concat(format2, "`) for formatting days of the month to the input `").concat(input, "`; see: https://github.com/date-fns/date-fns/blob/master/docs/unicodeTokens.md"));
}

// ../../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js
var formatDistanceLocale = {
  lessThanXSeconds: {
    one: "less than a second",
    other: "less than {{count}} seconds"
  },
  xSeconds: {
    one: "1 second",
    other: "{{count}} seconds"
  },
  halfAMinute: "half a minute",
  lessThanXMinutes: {
    one: "less than a minute",
    other: "less than {{count}} minutes"
  },
  xMinutes: {
    one: "1 minute",
    other: "{{count}} minutes"
  },
  aboutXHours: {
    one: "about 1 hour",
    other: "about {{count}} hours"
  },
  xHours: {
    one: "1 hour",
    other: "{{count}} hours"
  },
  xDays: {
    one: "1 day",
    other: "{{count}} days"
  },
  aboutXWeeks: {
    one: "about 1 week",
    other: "about {{count}} weeks"
  },
  xWeeks: {
    one: "1 week",
    other: "{{count}} weeks"
  },
  aboutXMonths: {
    one: "about 1 month",
    other: "about {{count}} months"
  },
  xMonths: {
    one: "1 month",
    other: "{{count}} months"
  },
  aboutXYears: {
    one: "about 1 year",
    other: "about {{count}} years"
  },
  xYears: {
    one: "1 year",
    other: "{{count}} years"
  },
  overXYears: {
    one: "over 1 year",
    other: "over {{count}} years"
  },
  almostXYears: {
    one: "almost 1 year",
    other: "almost {{count}} years"
  }
}, formatDistance = function(token, count2, options) {
  var result, tokenValue = formatDistanceLocale[token];
  return typeof tokenValue == "string" ? result = tokenValue : count2 === 1 ? result = tokenValue.one : result = tokenValue.other.replace("{{count}}", count2.toString()), options != null && options.addSuffix ? options.comparison && options.comparison > 0 ? "in " + result : result + " ago" : result;
}, formatDistance_default = formatDistance;

// ../../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js
function buildFormatLongFn(args) {
  return function() {
    var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, width = options.width ? String(options.width) : args.defaultWidth, format2 = args.formats[width] || args.formats[args.defaultWidth];
    return format2;
  };
}

// ../../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js
var dateFormats = {
  full: "EEEE, MMMM do, y",
  long: "MMMM do, y",
  medium: "MMM d, y",
  short: "MM/dd/yyyy"
}, timeFormats = {
  full: "h:mm:ss a zzzz",
  long: "h:mm:ss a z",
  medium: "h:mm:ss a",
  short: "h:mm a"
}, dateTimeFormats = {
  full: "{{date}} 'at' {{time}}",
  long: "{{date}} 'at' {{time}}",
  medium: "{{date}}, {{time}}",
  short: "{{date}}, {{time}}"
}, formatLong = {
  date: buildFormatLongFn({
    formats: dateFormats,
    defaultWidth: "full"
  }),
  time: buildFormatLongFn({
    formats: timeFormats,
    defaultWidth: "full"
  }),
  dateTime: buildFormatLongFn({
    formats: dateTimeFormats,
    defaultWidth: "full"
  })
}, formatLong_default = formatLong;

// ../../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js
var formatRelativeLocale = {
  lastWeek: "'last' eeee 'at' p",
  yesterday: "'yesterday at' p",
  today: "'today at' p",
  tomorrow: "'tomorrow at' p",
  nextWeek: "eeee 'at' p",
  other: "P"
}, formatRelative = function(token, _date, _baseDate, _options) {
  return formatRelativeLocale[token];
}, formatRelative_default = formatRelative;

// ../../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js
function buildLocalizeFn(args) {
  return function(dirtyIndex, options) {
    var context = options != null && options.context ? String(options.context) : "standalone", valuesArray;
    if (context === "formatting" && args.formattingValues) {
      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth, width = options != null && options.width ? String(options.width) : defaultWidth;
      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
    } else {
      var _defaultWidth = args.defaultWidth, _width = options != null && options.width ? String(options.width) : args.defaultWidth;
      valuesArray = args.values[_width] || args.values[_defaultWidth];
    }
    var index3 = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;
    return valuesArray[index3];
  };
}

// ../../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js
var eraValues = {
  narrow: ["B", "A"],
  abbreviated: ["BC", "AD"],
  wide: ["Before Christ", "Anno Domini"]
}, quarterValues = {
  narrow: ["1", "2", "3", "4"],
  abbreviated: ["Q1", "Q2", "Q3", "Q4"],
  wide: ["1st quarter", "2nd quarter", "3rd quarter", "4th quarter"]
}, monthValues = {
  narrow: ["J", "F", "M", "A", "M", "J", "J", "A", "S", "O", "N", "D"],
  abbreviated: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
  wide: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
}, dayValues = {
  narrow: ["S", "M", "T", "W", "T", "F", "S"],
  short: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
  abbreviated: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  wide: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
}, dayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "morning",
    afternoon: "afternoon",
    evening: "evening",
    night: "night"
  }
}, formattingDayPeriodValues = {
  narrow: {
    am: "a",
    pm: "p",
    midnight: "mi",
    noon: "n",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  abbreviated: {
    am: "AM",
    pm: "PM",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  },
  wide: {
    am: "a.m.",
    pm: "p.m.",
    midnight: "midnight",
    noon: "noon",
    morning: "in the morning",
    afternoon: "in the afternoon",
    evening: "in the evening",
    night: "at night"
  }
}, ordinalNumber = function(dirtyNumber, _options) {
  var number2 = Number(dirtyNumber), rem100 = number2 % 100;
  if (rem100 > 20 || rem100 < 10)
    switch (rem100 % 10) {
      case 1:
        return number2 + "st";
      case 2:
        return number2 + "nd";
      case 3:
        return number2 + "rd";
    }
  return number2 + "th";
}, localize = {
  ordinalNumber,
  era: buildLocalizeFn({
    values: eraValues,
    defaultWidth: "wide"
  }),
  quarter: buildLocalizeFn({
    values: quarterValues,
    defaultWidth: "wide",
    argumentCallback: function(quarter) {
      return quarter - 1;
    }
  }),
  month: buildLocalizeFn({
    values: monthValues,
    defaultWidth: "wide"
  }),
  day: buildLocalizeFn({
    values: dayValues,
    defaultWidth: "wide"
  }),
  dayPeriod: buildLocalizeFn({
    values: dayPeriodValues,
    defaultWidth: "wide",
    formattingValues: formattingDayPeriodValues,
    defaultFormattingWidth: "wide"
  })
}, localize_default = localize;

// ../../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js
function buildMatchFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, width = options.width, matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth], matchResult = string.match(matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0], parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth], key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }) : findKey(parsePatterns, function(pattern) {
      return pattern.test(matchedString);
    }), value;
    value = args.valueCallback ? args.valueCallback(key) : key, value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}
function findKey(object, predicate) {
  for (var key in object)
    if (object.hasOwnProperty(key) && predicate(object[key]))
      return key;
}
function findIndex(array, predicate) {
  for (var key = 0; key < array.length; key++)
    if (predicate(array[key]))
      return key;
}

// ../../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js
function buildMatchPatternFn(args) {
  return function(string) {
    var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, matchResult = string.match(args.matchPattern);
    if (!matchResult)
      return null;
    var matchedString = matchResult[0], parseResult = string.match(args.parsePattern);
    if (!parseResult)
      return null;
    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
    value = options.valueCallback ? options.valueCallback(value) : value;
    var rest = string.slice(matchedString.length);
    return {
      value,
      rest
    };
  };
}

// ../../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js
var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i, parseOrdinalNumberPattern = /\d+/i, matchEraPatterns = {
  narrow: /^(b|a)/i,
  abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
  wide: /^(before christ|before common era|anno domini|common era)/i
}, parseEraPatterns = {
  any: [/^b/i, /^(a|c)/i]
}, matchQuarterPatterns = {
  narrow: /^[1234]/i,
  abbreviated: /^q[1234]/i,
  wide: /^[1234](th|st|nd|rd)? quarter/i
}, parseQuarterPatterns = {
  any: [/1/i, /2/i, /3/i, /4/i]
}, matchMonthPatterns = {
  narrow: /^[jfmasond]/i,
  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
}, parseMonthPatterns = {
  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
}, matchDayPatterns = {
  narrow: /^[smtwf]/i,
  short: /^(su|mo|tu|we|th|fr|sa)/i,
  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
}, parseDayPatterns = {
  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
}, matchDayPeriodPatterns = {
  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
  any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
}, parseDayPeriodPatterns = {
  any: {
    am: /^a/i,
    pm: /^p/i,
    midnight: /^mi/i,
    noon: /^no/i,
    morning: /morning/i,
    afternoon: /afternoon/i,
    evening: /evening/i,
    night: /night/i
  }
}, match = {
  ordinalNumber: buildMatchPatternFn({
    matchPattern: matchOrdinalNumberPattern,
    parsePattern: parseOrdinalNumberPattern,
    valueCallback: function(value) {
      return parseInt(value, 10);
    }
  }),
  era: buildMatchFn({
    matchPatterns: matchEraPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseEraPatterns,
    defaultParseWidth: "any"
  }),
  quarter: buildMatchFn({
    matchPatterns: matchQuarterPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseQuarterPatterns,
    defaultParseWidth: "any",
    valueCallback: function(index3) {
      return index3 + 1;
    }
  }),
  month: buildMatchFn({
    matchPatterns: matchMonthPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseMonthPatterns,
    defaultParseWidth: "any"
  }),
  day: buildMatchFn({
    matchPatterns: matchDayPatterns,
    defaultMatchWidth: "wide",
    parsePatterns: parseDayPatterns,
    defaultParseWidth: "any"
  }),
  dayPeriod: buildMatchFn({
    matchPatterns: matchDayPeriodPatterns,
    defaultMatchWidth: "any",
    parsePatterns: parseDayPeriodPatterns,
    defaultParseWidth: "any"
  })
}, match_default = match;

// ../../node_modules/date-fns/esm/locale/en-US/index.js
var locale = {
  code: "en-US",
  formatDistance: formatDistance_default,
  formatLong: formatLong_default,
  formatRelative: formatRelative_default,
  localize: localize_default,
  match: match_default,
  options: {
    weekStartsOn: 0,
    firstWeekContainsDate: 1
  }
}, en_US_default = locale;

// ../../node_modules/date-fns/esm/_lib/defaultLocale/index.js
var defaultLocale_default = en_US_default;

// ../../node_modules/date-fns/esm/format/index.js
var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g, longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g, escapedStringRegExp = /^'([^]*?)'?$/, doubleQuoteRegExp = /''/g, unescapedLatinCharacterRegExp = /[a-zA-Z]/;
function format(dirtyDate, dirtyFormatStr, options) {
  var _ref, _options$locale, _ref2, _ref3, _ref4, _options$firstWeekCon, _options$locale2, _options$locale2$opti, _defaultOptions$local, _defaultOptions$local2, _ref5, _ref6, _ref7, _options$weekStartsOn, _options$locale3, _options$locale3$opti, _defaultOptions$local3, _defaultOptions$local4;
  requiredArgs(2, arguments);
  var formatStr = String(dirtyFormatStr), defaultOptions3 = getDefaultOptions(), locale2 = (_ref = (_options$locale = options?.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions3.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default, firstWeekContainsDate = toInteger((_ref2 = (_ref3 = (_ref4 = (_options$firstWeekCon = options?.firstWeekContainsDate) !== null && _options$firstWeekCon !== void 0 ? _options$firstWeekCon : options == null || (_options$locale2 = options.locale) === null || _options$locale2 === void 0 || (_options$locale2$opti = _options$locale2.options) === null || _options$locale2$opti === void 0 ? void 0 : _options$locale2$opti.firstWeekContainsDate) !== null && _ref4 !== void 0 ? _ref4 : defaultOptions3.firstWeekContainsDate) !== null && _ref3 !== void 0 ? _ref3 : (_defaultOptions$local = defaultOptions3.locale) === null || _defaultOptions$local === void 0 || (_defaultOptions$local2 = _defaultOptions$local.options) === null || _defaultOptions$local2 === void 0 ? void 0 : _defaultOptions$local2.firstWeekContainsDate) !== null && _ref2 !== void 0 ? _ref2 : 1);
  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7))
    throw new RangeError("firstWeekContainsDate must be between 1 and 7 inclusively");
  var weekStartsOn = toInteger((_ref5 = (_ref6 = (_ref7 = (_options$weekStartsOn = options?.weekStartsOn) !== null && _options$weekStartsOn !== void 0 ? _options$weekStartsOn : options == null || (_options$locale3 = options.locale) === null || _options$locale3 === void 0 || (_options$locale3$opti = _options$locale3.options) === null || _options$locale3$opti === void 0 ? void 0 : _options$locale3$opti.weekStartsOn) !== null && _ref7 !== void 0 ? _ref7 : defaultOptions3.weekStartsOn) !== null && _ref6 !== void 0 ? _ref6 : (_defaultOptions$local3 = defaultOptions3.locale) === null || _defaultOptions$local3 === void 0 || (_defaultOptions$local4 = _defaultOptions$local3.options) === null || _defaultOptions$local4 === void 0 ? void 0 : _defaultOptions$local4.weekStartsOn) !== null && _ref5 !== void 0 ? _ref5 : 0);
  if (!(weekStartsOn >= 0 && weekStartsOn <= 6))
    throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");
  if (!locale2.localize)
    throw new RangeError("locale must contain localize property");
  if (!locale2.formatLong)
    throw new RangeError("locale must contain formatLong property");
  var originalDate = toDate(dirtyDate);
  if (!isValid(originalDate))
    throw new RangeError("Invalid time value");
  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate), utcDate = subMilliseconds(originalDate, timezoneOffset), formatterOptions = {
    firstWeekContainsDate,
    weekStartsOn,
    locale: locale2,
    _originalDate: originalDate
  }, result = formatStr.match(longFormattingTokensRegExp).map(function(substring) {
    var firstCharacter = substring[0];
    if (firstCharacter === "p" || firstCharacter === "P") {
      var longFormatter = longFormatters_default[firstCharacter];
      return longFormatter(substring, locale2.formatLong);
    }
    return substring;
  }).join("").match(formattingTokensRegExp).map(function(substring) {
    if (substring === "''")
      return "'";
    var firstCharacter = substring[0];
    if (firstCharacter === "'")
      return cleanEscapedString(substring);
    var formatter = formatters_default[firstCharacter];
    if (formatter)
      return !(options != null && options.useAdditionalWeekYearTokens) && isProtectedWeekYearToken(substring) && throwProtectedError(substring, dirtyFormatStr, String(dirtyDate)), !(options != null && options.useAdditionalDayOfYearTokens) && isProtectedDayOfYearToken(substring) && throwProtectedError(substring, dirtyFormatStr, String(dirtyDate)), formatter(utcDate, substring, locale2.localize, formatterOptions);
    if (firstCharacter.match(unescapedLatinCharacterRegExp))
      throw new RangeError("Format string contains an unescaped latin alphabet character `" + firstCharacter + "`");
    return substring;
  }).join("");
  return result;
}
function cleanEscapedString(input) {
  var matched = input.match(escapedStringRegExp);
  return matched ? matched[1].replace(doubleQuoteRegExp, "'") : input;
}

// ../../node_modules/date-fns/esm/_lib/assign/index.js
function assign(target, object) {
  if (target == null)
    throw new TypeError("assign requires that input parameter not be null or undefined");
  for (var property in object)
    Object.prototype.hasOwnProperty.call(object, property) && (target[property] = object[property]);
  return target;
}

// ../../node_modules/date-fns/esm/_lib/cloneObject/index.js
function cloneObject(object) {
  return assign({}, object);
}

// ../../node_modules/date-fns/esm/formatDistanceStrict/index.js
var MILLISECONDS_IN_MINUTE = 1e3 * 60, MINUTES_IN_DAY = 60 * 24, MINUTES_IN_MONTH = MINUTES_IN_DAY * 30, MINUTES_IN_YEAR = MINUTES_IN_DAY * 365;
function formatDistanceStrict(dirtyDate, dirtyBaseDate, options) {
  var _ref, _options$locale, _options$roundingMeth;
  requiredArgs(2, arguments);
  var defaultOptions3 = getDefaultOptions(), locale2 = (_ref = (_options$locale = options?.locale) !== null && _options$locale !== void 0 ? _options$locale : defaultOptions3.locale) !== null && _ref !== void 0 ? _ref : defaultLocale_default;
  if (!locale2.formatDistance)
    throw new RangeError("locale must contain localize.formatDistance property");
  var comparison = compareAsc(dirtyDate, dirtyBaseDate);
  if (isNaN(comparison))
    throw new RangeError("Invalid time value");
  var localizeOptions = assign(cloneObject(options), {
    addSuffix: Boolean(options?.addSuffix),
    comparison
  }), dateLeft, dateRight;
  comparison > 0 ? (dateLeft = toDate(dirtyBaseDate), dateRight = toDate(dirtyDate)) : (dateLeft = toDate(dirtyDate), dateRight = toDate(dirtyBaseDate));
  var roundingMethod = String((_options$roundingMeth = options?.roundingMethod) !== null && _options$roundingMeth !== void 0 ? _options$roundingMeth : "round"), roundingMethodFn;
  if (roundingMethod === "floor")
    roundingMethodFn = Math.floor;
  else if (roundingMethod === "ceil")
    roundingMethodFn = Math.ceil;
  else if (roundingMethod === "round")
    roundingMethodFn = Math.round;
  else
    throw new RangeError("roundingMethod must be 'floor', 'ceil' or 'round'");
  var milliseconds = dateRight.getTime() - dateLeft.getTime(), minutes = milliseconds / MILLISECONDS_IN_MINUTE, timezoneOffset = getTimezoneOffsetInMilliseconds(dateRight) - getTimezoneOffsetInMilliseconds(dateLeft), dstNormalizedMinutes = (milliseconds - timezoneOffset) / MILLISECONDS_IN_MINUTE, defaultUnit = options?.unit, unit;
  if (defaultUnit ? unit = String(defaultUnit) : minutes < 1 ? unit = "second" : minutes < 60 ? unit = "minute" : minutes < MINUTES_IN_DAY ? unit = "hour" : dstNormalizedMinutes < MINUTES_IN_MONTH ? unit = "day" : dstNormalizedMinutes < MINUTES_IN_YEAR ? unit = "month" : unit = "year", unit === "second") {
    var seconds = roundingMethodFn(milliseconds / 1e3);
    return locale2.formatDistance("xSeconds", seconds, localizeOptions);
  } else if (unit === "minute") {
    var roundedMinutes = roundingMethodFn(minutes);
    return locale2.formatDistance("xMinutes", roundedMinutes, localizeOptions);
  } else if (unit === "hour") {
    var hours = roundingMethodFn(minutes / 60);
    return locale2.formatDistance("xHours", hours, localizeOptions);
  } else if (unit === "day") {
    var days = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_DAY);
    return locale2.formatDistance("xDays", days, localizeOptions);
  } else if (unit === "month") {
    var months = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_MONTH);
    return months === 12 && defaultUnit !== "month" ? locale2.formatDistance("xYears", 1, localizeOptions) : locale2.formatDistance("xMonths", months, localizeOptions);
  } else if (unit === "year") {
    var years = roundingMethodFn(dstNormalizedMinutes / MINUTES_IN_YEAR);
    return locale2.formatDistance("xYears", years, localizeOptions);
  }
  throw new RangeError("unit must be 'second', 'minute', 'hour', 'day', 'month' or 'year'");
}

// ../../node_modules/date-fns/esm/formatDistanceToNowStrict/index.js
function formatDistanceToNowStrict(dirtyDate, options) {
  return requiredArgs(1, arguments), formatDistanceStrict(dirtyDate, Date.now(), options);
}

// ../../node_modules/date-fns/esm/isToday/index.js
function isToday(dirtyDate) {
  return requiredArgs(1, arguments), isSameDay(dirtyDate, Date.now());
}

// ../../node_modules/date-fns/esm/parseISO/index.js
function parseISO(argument, options) {
  var _options$additionalDi;
  requiredArgs(1, arguments);
  var additionalDigits = toInteger((_options$additionalDi = options?.additionalDigits) !== null && _options$additionalDi !== void 0 ? _options$additionalDi : 2);
  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (!(typeof argument == "string" || Object.prototype.toString.call(argument) === "[object String]"))
    return /* @__PURE__ */ new Date(NaN);
  var dateStrings = splitDateString(argument), date;
  if (dateStrings.date) {
    var parseYearResult = parseYear(dateStrings.date, additionalDigits);
    date = parseDate(parseYearResult.restDateString, parseYearResult.year);
  }
  if (!date || isNaN(date.getTime()))
    return /* @__PURE__ */ new Date(NaN);
  var timestamp = date.getTime(), time = 0, offset2;
  if (dateStrings.time && (time = parseTime(dateStrings.time), isNaN(time)))
    return /* @__PURE__ */ new Date(NaN);
  if (dateStrings.timezone) {
    if (offset2 = parseTimezone(dateStrings.timezone), isNaN(offset2))
      return /* @__PURE__ */ new Date(NaN);
  } else {
    var dirtyDate = new Date(timestamp + time), result = /* @__PURE__ */ new Date(0);
    return result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate()), result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds()), result;
  }
  return new Date(timestamp + time + offset2);
}
var patterns = {
  dateTimeDelimiter: /[T ]/,
  timeZoneDelimiter: /[Z ]/i,
  timezone: /([Z+-].*)$/
}, dateRegex = /^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/, timeRegex = /^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/, timezoneRegex = /^([+-])(\d{2})(?::?(\d{2}))?$/;
function splitDateString(dateString) {
  var dateStrings = {}, array = dateString.split(patterns.dateTimeDelimiter), timeString;
  if (array.length > 2)
    return dateStrings;
  if (/:/.test(array[0]) ? timeString = array[0] : (dateStrings.date = array[0], timeString = array[1], patterns.timeZoneDelimiter.test(dateStrings.date) && (dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0], timeString = dateString.substr(dateStrings.date.length, dateString.length))), timeString) {
    var token = patterns.timezone.exec(timeString);
    token ? (dateStrings.time = timeString.replace(token[1], ""), dateStrings.timezone = token[1]) : dateStrings.time = timeString;
  }
  return dateStrings;
}
function parseYear(dateString, additionalDigits) {
  var regex = new RegExp("^(?:(\\d{4}|[+-]\\d{" + (4 + additionalDigits) + "})|(\\d{2}|[+-]\\d{" + (2 + additionalDigits) + "})$)"), captures = dateString.match(regex);
  if (!captures)
    return {
      year: NaN,
      restDateString: ""
    };
  var year = captures[1] ? parseInt(captures[1]) : null, century = captures[2] ? parseInt(captures[2]) : null;
  return {
    year: century === null ? year : century * 100,
    restDateString: dateString.slice((captures[1] || captures[2]).length)
  };
}
function parseDate(dateString, year) {
  if (year === null)
    return /* @__PURE__ */ new Date(NaN);
  var captures = dateString.match(dateRegex);
  if (!captures)
    return /* @__PURE__ */ new Date(NaN);
  var isWeekDate = !!captures[4], dayOfYear = parseDateUnit(captures[1]), month = parseDateUnit(captures[2]) - 1, day = parseDateUnit(captures[3]), week = parseDateUnit(captures[4]), dayOfWeek = parseDateUnit(captures[5]) - 1;
  if (isWeekDate)
    return validateWeekDate(year, week, dayOfWeek) ? dayOfISOWeekYear(year, week, dayOfWeek) : /* @__PURE__ */ new Date(NaN);
  var date = /* @__PURE__ */ new Date(0);
  return !validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear) ? /* @__PURE__ */ new Date(NaN) : (date.setUTCFullYear(year, month, Math.max(dayOfYear, day)), date);
}
function parseDateUnit(value) {
  return value ? parseInt(value) : 1;
}
function parseTime(timeString) {
  var captures = timeString.match(timeRegex);
  if (!captures)
    return NaN;
  var hours = parseTimeUnit(captures[1]), minutes = parseTimeUnit(captures[2]), seconds = parseTimeUnit(captures[3]);
  return validateTime(hours, minutes, seconds) ? hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1e3 : NaN;
}
function parseTimeUnit(value) {
  return value && parseFloat(value.replace(",", ".")) || 0;
}
function parseTimezone(timezoneString) {
  if (timezoneString === "Z")
    return 0;
  var captures = timezoneString.match(timezoneRegex);
  if (!captures)
    return 0;
  var sign = captures[1] === "+" ? -1 : 1, hours = parseInt(captures[2]), minutes = captures[3] && parseInt(captures[3]) || 0;
  return validateTimezone(hours, minutes) ? sign * (hours * millisecondsInHour + minutes * millisecondsInMinute) : NaN;
}
function dayOfISOWeekYear(isoWeekYear, week, day) {
  var date = /* @__PURE__ */ new Date(0);
  date.setUTCFullYear(isoWeekYear, 0, 4);
  var fourthOfJanuaryDay = date.getUTCDay() || 7, diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;
  return date.setUTCDate(date.getUTCDate() + diff), date;
}
var daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function isLeapYearIndex(year) {
  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;
}
function validateDate(year, month, date) {
  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));
}
function validateDayOfYearDate(year, dayOfYear) {
  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);
}
function validateWeekDate(_year, week, day) {
  return week >= 1 && week <= 53 && day >= 0 && day <= 6;
}
function validateTime(hours, minutes, seconds) {
  return hours === 24 ? minutes === 0 && seconds === 0 : seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;
}
function validateTimezone(_hours, minutes) {
  return minutes >= 0 && minutes <= 59;
}

// ../../node_modules/tailwind-merge/dist/bundle-mjs.mjs
var CLASS_PART_SEPARATOR = "-";
function createClassUtils(config) {
  let classMap = createClassMap(config), {
    conflictingClassGroups,
    conflictingClassGroupModifiers
  } = config;
  function getClassGroupId(className) {
    let classParts = className.split(CLASS_PART_SEPARATOR);
    return classParts[0] === "" && classParts.length !== 1 && classParts.shift(), getGroupRecursive(classParts, classMap) || getGroupIdForArbitraryProperty(className);
  }
  function getConflictingClassGroupIds(classGroupId, hasPostfixModifier) {
    let conflicts = conflictingClassGroups[classGroupId] || [];
    return hasPostfixModifier && conflictingClassGroupModifiers[classGroupId] ? [...conflicts, ...conflictingClassGroupModifiers[classGroupId]] : conflicts;
  }
  return {
    getClassGroupId,
    getConflictingClassGroupIds
  };
}
function getGroupRecursive(classParts, classPartObject) {
  if (classParts.length === 0)
    return classPartObject.classGroupId;
  let currentClassPart = classParts[0], nextClassPartObject = classPartObject.nextPart.get(currentClassPart), classGroupFromNextClassPart = nextClassPartObject ? getGroupRecursive(classParts.slice(1), nextClassPartObject) : void 0;
  if (classGroupFromNextClassPart)
    return classGroupFromNextClassPart;
  if (classPartObject.validators.length === 0)
    return;
  let classRest = classParts.join(CLASS_PART_SEPARATOR);
  return classPartObject.validators.find(({
    validator
  }) => validator(classRest))?.classGroupId;
}
var arbitraryPropertyRegex = /^\[(.+)\]$/;
function getGroupIdForArbitraryProperty(className) {
  if (arbitraryPropertyRegex.test(className)) {
    let arbitraryPropertyClassName = arbitraryPropertyRegex.exec(className)[1], property = arbitraryPropertyClassName?.substring(0, arbitraryPropertyClassName.indexOf(":"));
    if (property)
      return "arbitrary.." + property;
  }
}
function createClassMap(config) {
  let {
    theme,
    prefix
  } = config, classMap = {
    nextPart: /* @__PURE__ */ new Map(),
    validators: []
  };
  return getPrefixedClassGroupEntries(Object.entries(config.classGroups), prefix).forEach(([classGroupId, classGroup]) => {
    processClassesRecursively(classGroup, classMap, classGroupId, theme);
  }), classMap;
}
function processClassesRecursively(classGroup, classPartObject, classGroupId, theme) {
  classGroup.forEach((classDefinition) => {
    if (typeof classDefinition == "string") {
      let classPartObjectToEdit = classDefinition === "" ? classPartObject : getPart(classPartObject, classDefinition);
      classPartObjectToEdit.classGroupId = classGroupId;
      return;
    }
    if (typeof classDefinition == "function") {
      if (isThemeGetter(classDefinition)) {
        processClassesRecursively(classDefinition(theme), classPartObject, classGroupId, theme);
        return;
      }
      classPartObject.validators.push({
        validator: classDefinition,
        classGroupId
      });
      return;
    }
    Object.entries(classDefinition).forEach(([key, classGroup2]) => {
      processClassesRecursively(classGroup2, getPart(classPartObject, key), classGroupId, theme);
    });
  });
}
function getPart(classPartObject, path) {
  let currentClassPartObject = classPartObject;
  return path.split(CLASS_PART_SEPARATOR).forEach((pathPart) => {
    currentClassPartObject.nextPart.has(pathPart) || currentClassPartObject.nextPart.set(pathPart, {
      nextPart: /* @__PURE__ */ new Map(),
      validators: []
    }), currentClassPartObject = currentClassPartObject.nextPart.get(pathPart);
  }), currentClassPartObject;
}
function isThemeGetter(func) {
  return func.isThemeGetter;
}
function getPrefixedClassGroupEntries(classGroupEntries, prefix) {
  return prefix ? classGroupEntries.map(([classGroupId, classGroup]) => {
    let prefixedClassGroup = classGroup.map((classDefinition) => typeof classDefinition == "string" ? prefix + classDefinition : typeof classDefinition == "object" ? Object.fromEntries(Object.entries(classDefinition).map(([key, value]) => [prefix + key, value])) : classDefinition);
    return [classGroupId, prefixedClassGroup];
  }) : classGroupEntries;
}
function createLruCache(maxCacheSize) {
  if (maxCacheSize < 1)
    return {
      get: () => {
      },
      set: () => {
      }
    };
  let cacheSize = 0, cache = /* @__PURE__ */ new Map(), previousCache = /* @__PURE__ */ new Map();
  function update(key, value) {
    cache.set(key, value), cacheSize++, cacheSize > maxCacheSize && (cacheSize = 0, previousCache = cache, cache = /* @__PURE__ */ new Map());
  }
  return {
    get(key) {
      let value = cache.get(key);
      if (value !== void 0)
        return value;
      if ((value = previousCache.get(key)) !== void 0)
        return update(key, value), value;
    },
    set(key, value) {
      cache.has(key) ? cache.set(key, value) : update(key, value);
    }
  };
}
var IMPORTANT_MODIFIER = "!";
function createSplitModifiers(config) {
  let separator = config.separator, isSeparatorSingleCharacter = separator.length === 1, firstSeparatorCharacter = separator[0], separatorLength = separator.length;
  return function(className) {
    let modifiers = [], bracketDepth = 0, modifierStart = 0, postfixModifierPosition;
    for (let index3 = 0; index3 < className.length; index3++) {
      let currentCharacter = className[index3];
      if (bracketDepth === 0) {
        if (currentCharacter === firstSeparatorCharacter && (isSeparatorSingleCharacter || className.slice(index3, index3 + separatorLength) === separator)) {
          modifiers.push(className.slice(modifierStart, index3)), modifierStart = index3 + separatorLength;
          continue;
        }
        if (currentCharacter === "/") {
          postfixModifierPosition = index3;
          continue;
        }
      }
      currentCharacter === "[" ? bracketDepth++ : currentCharacter === "]" && bracketDepth--;
    }
    let baseClassNameWithImportantModifier = modifiers.length === 0 ? className : className.substring(modifierStart), hasImportantModifier = baseClassNameWithImportantModifier.startsWith(IMPORTANT_MODIFIER), baseClassName = hasImportantModifier ? baseClassNameWithImportantModifier.substring(1) : baseClassNameWithImportantModifier, maybePostfixModifierPosition = postfixModifierPosition && postfixModifierPosition > modifierStart ? postfixModifierPosition - modifierStart : void 0;
    return {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    };
  };
}
function sortModifiers(modifiers) {
  if (modifiers.length <= 1)
    return modifiers;
  let sortedModifiers = [], unsortedModifiers = [];
  return modifiers.forEach((modifier) => {
    modifier[0] === "[" ? (sortedModifiers.push(...unsortedModifiers.sort(), modifier), unsortedModifiers = []) : unsortedModifiers.push(modifier);
  }), sortedModifiers.push(...unsortedModifiers.sort()), sortedModifiers;
}
function createConfigUtils(config) {
  return {
    cache: createLruCache(config.cacheSize),
    splitModifiers: createSplitModifiers(config),
    ...createClassUtils(config)
  };
}
var SPLIT_CLASSES_REGEX = /\s+/;
function mergeClassList(classList, configUtils) {
  let {
    splitModifiers,
    getClassGroupId,
    getConflictingClassGroupIds
  } = configUtils, classGroupsInConflict = /* @__PURE__ */ new Set();
  return classList.trim().split(SPLIT_CLASSES_REGEX).map((originalClassName) => {
    let {
      modifiers,
      hasImportantModifier,
      baseClassName,
      maybePostfixModifierPosition
    } = splitModifiers(originalClassName), classGroupId = getClassGroupId(maybePostfixModifierPosition ? baseClassName.substring(0, maybePostfixModifierPosition) : baseClassName), hasPostfixModifier = Boolean(maybePostfixModifierPosition);
    if (!classGroupId) {
      if (!maybePostfixModifierPosition)
        return {
          isTailwindClass: !1,
          originalClassName
        };
      if (classGroupId = getClassGroupId(baseClassName), !classGroupId)
        return {
          isTailwindClass: !1,
          originalClassName
        };
      hasPostfixModifier = !1;
    }
    let variantModifier = sortModifiers(modifiers).join(":");
    return {
      isTailwindClass: !0,
      modifierId: hasImportantModifier ? variantModifier + IMPORTANT_MODIFIER : variantModifier,
      classGroupId,
      originalClassName,
      hasPostfixModifier
    };
  }).reverse().filter((parsed) => {
    if (!parsed.isTailwindClass)
      return !0;
    let {
      modifierId,
      classGroupId,
      hasPostfixModifier
    } = parsed, classId = modifierId + classGroupId;
    return classGroupsInConflict.has(classId) ? !1 : (classGroupsInConflict.add(classId), getConflictingClassGroupIds(classGroupId, hasPostfixModifier).forEach((group) => classGroupsInConflict.add(modifierId + group)), !0);
  }).reverse().map((parsed) => parsed.originalClassName).join(" ");
}
function twJoin() {
  let index3 = 0, argument, resolvedValue, string = "";
  for (; index3 < arguments.length; )
    (argument = arguments[index3++]) && (resolvedValue = toValue(argument)) && (string && (string += " "), string += resolvedValue);
  return string;
}
function toValue(mix2) {
  if (typeof mix2 == "string")
    return mix2;
  let resolvedValue, string = "";
  for (let k3 = 0; k3 < mix2.length; k3++)
    mix2[k3] && (resolvedValue = toValue(mix2[k3])) && (string && (string += " "), string += resolvedValue);
  return string;
}
function createTailwindMerge(createConfigFirst, ...createConfigRest) {
  let configUtils, cacheGet, cacheSet, functionToCall = initTailwindMerge;
  function initTailwindMerge(classList) {
    let config = createConfigRest.reduce((previousConfig, createConfigCurrent) => createConfigCurrent(previousConfig), createConfigFirst());
    return configUtils = createConfigUtils(config), cacheGet = configUtils.cache.get, cacheSet = configUtils.cache.set, functionToCall = tailwindMerge, tailwindMerge(classList);
  }
  function tailwindMerge(classList) {
    let cachedResult = cacheGet(classList);
    if (cachedResult)
      return cachedResult;
    let result = mergeClassList(classList, configUtils);
    return cacheSet(classList, result), result;
  }
  return function() {
    return functionToCall(twJoin.apply(null, arguments));
  };
}
function fromTheme(key) {
  let themeGetter = (theme) => theme[key] || [];
  return themeGetter.isThemeGetter = !0, themeGetter;
}
var arbitraryValueRegex = /^\[(?:([a-z-]+):)?(.+)\]$/i, fractionRegex = /^\d+\/\d+$/, stringLengths = /* @__PURE__ */ new Set(["px", "full", "screen"]), tshirtUnitRegex = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/, lengthUnitRegex = /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/, shadowRegex = /^-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/, imageRegex = /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/;
function isLength(value) {
  return isNumber(value) || stringLengths.has(value) || fractionRegex.test(value);
}
function isArbitraryLength(value) {
  return getIsArbitraryValue(value, "length", isLengthOnly);
}
function isNumber(value) {
  return Boolean(value) && !Number.isNaN(Number(value));
}
function isArbitraryNumber(value) {
  return getIsArbitraryValue(value, "number", isNumber);
}
function isInteger(value) {
  return Boolean(value) && Number.isInteger(Number(value));
}
function isPercent(value) {
  return value.endsWith("%") && isNumber(value.slice(0, -1));
}
function isArbitraryValue(value) {
  return arbitraryValueRegex.test(value);
}
function isTshirtSize(value) {
  return tshirtUnitRegex.test(value);
}
var sizeLabels = /* @__PURE__ */ new Set(["length", "size", "percentage"]);
function isArbitrarySize(value) {
  return getIsArbitraryValue(value, sizeLabels, isNever);
}
function isArbitraryPosition(value) {
  return getIsArbitraryValue(value, "position", isNever);
}
var imageLabels = /* @__PURE__ */ new Set(["image", "url"]);
function isArbitraryImage(value) {
  return getIsArbitraryValue(value, imageLabels, isImage);
}
function isArbitraryShadow(value) {
  return getIsArbitraryValue(value, "", isShadow);
}
function isAny() {
  return !0;
}
function getIsArbitraryValue(value, label, testValue) {
  let result = arbitraryValueRegex.exec(value);
  return result ? result[1] ? typeof label == "string" ? result[1] === label : label.has(result[1]) : testValue(result[2]) : !1;
}
function isLengthOnly(value) {
  return lengthUnitRegex.test(value);
}
function isNever() {
  return !1;
}
function isShadow(value) {
  return shadowRegex.test(value);
}
function isImage(value) {
  return imageRegex.test(value);
}
function getDefaultConfig() {
  let colors = fromTheme("colors"), spacing = fromTheme("spacing"), blur = fromTheme("blur"), brightness = fromTheme("brightness"), borderColor = fromTheme("borderColor"), borderRadius = fromTheme("borderRadius"), borderSpacing = fromTheme("borderSpacing"), borderWidth = fromTheme("borderWidth"), contrast = fromTheme("contrast"), grayscale = fromTheme("grayscale"), hueRotate = fromTheme("hueRotate"), invert = fromTheme("invert"), gap = fromTheme("gap"), gradientColorStops = fromTheme("gradientColorStops"), gradientColorStopPositions = fromTheme("gradientColorStopPositions"), inset = fromTheme("inset"), margin = fromTheme("margin"), opacity = fromTheme("opacity"), padding = fromTheme("padding"), saturate = fromTheme("saturate"), scale2 = fromTheme("scale"), sepia = fromTheme("sepia"), skew = fromTheme("skew"), space = fromTheme("space"), translate = fromTheme("translate"), getOverscroll = () => ["auto", "contain", "none"], getOverflow = () => ["auto", "hidden", "clip", "visible", "scroll"], getSpacingWithAutoAndArbitrary = () => ["auto", isArbitraryValue, spacing], getSpacingWithArbitrary = () => [isArbitraryValue, spacing], getLengthWithEmptyAndArbitrary = () => ["", isLength, isArbitraryLength], getNumberWithAutoAndArbitrary = () => ["auto", isNumber, isArbitraryValue], getPositions = () => ["bottom", "center", "left", "left-bottom", "left-top", "right", "right-bottom", "right-top", "top"], getLineStyles = () => ["solid", "dashed", "dotted", "double", "none"], getBlendModes = () => ["normal", "multiply", "screen", "overlay", "darken", "lighten", "color-dodge", "color-burn", "hard-light", "soft-light", "difference", "exclusion", "hue", "saturation", "color", "luminosity", "plus-lighter"], getAlign = () => ["start", "end", "center", "between", "around", "evenly", "stretch"], getZeroAndEmpty = () => ["", "0", isArbitraryValue], getBreaks = () => ["auto", "avoid", "all", "avoid-page", "page", "left", "right", "column"], getNumber = () => [isNumber, isArbitraryNumber], getNumberAndArbitrary = () => [isNumber, isArbitraryValue];
  return {
    cacheSize: 500,
    separator: ":",
    theme: {
      colors: [isAny],
      spacing: [isLength, isArbitraryLength],
      blur: ["none", "", isTshirtSize, isArbitraryValue],
      brightness: getNumber(),
      borderColor: [colors],
      borderRadius: ["none", "", "full", isTshirtSize, isArbitraryValue],
      borderSpacing: getSpacingWithArbitrary(),
      borderWidth: getLengthWithEmptyAndArbitrary(),
      contrast: getNumber(),
      grayscale: getZeroAndEmpty(),
      hueRotate: getNumberAndArbitrary(),
      invert: getZeroAndEmpty(),
      gap: getSpacingWithArbitrary(),
      gradientColorStops: [colors],
      gradientColorStopPositions: [isPercent, isArbitraryLength],
      inset: getSpacingWithAutoAndArbitrary(),
      margin: getSpacingWithAutoAndArbitrary(),
      opacity: getNumber(),
      padding: getSpacingWithArbitrary(),
      saturate: getNumber(),
      scale: getNumber(),
      sepia: getZeroAndEmpty(),
      skew: getNumberAndArbitrary(),
      space: getSpacingWithArbitrary(),
      translate: getSpacingWithArbitrary()
    },
    classGroups: {
      // Layout
      /**
       * Aspect Ratio
       * @see https://tailwindcss.com/docs/aspect-ratio
       */
      aspect: [{
        aspect: ["auto", "square", "video", isArbitraryValue]
      }],
      /**
       * Container
       * @see https://tailwindcss.com/docs/container
       */
      container: ["container"],
      /**
       * Columns
       * @see https://tailwindcss.com/docs/columns
       */
      columns: [{
        columns: [isTshirtSize]
      }],
      /**
       * Break After
       * @see https://tailwindcss.com/docs/break-after
       */
      "break-after": [{
        "break-after": getBreaks()
      }],
      /**
       * Break Before
       * @see https://tailwindcss.com/docs/break-before
       */
      "break-before": [{
        "break-before": getBreaks()
      }],
      /**
       * Break Inside
       * @see https://tailwindcss.com/docs/break-inside
       */
      "break-inside": [{
        "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"]
      }],
      /**
       * Box Decoration Break
       * @see https://tailwindcss.com/docs/box-decoration-break
       */
      "box-decoration": [{
        "box-decoration": ["slice", "clone"]
      }],
      /**
       * Box Sizing
       * @see https://tailwindcss.com/docs/box-sizing
       */
      box: [{
        box: ["border", "content"]
      }],
      /**
       * Display
       * @see https://tailwindcss.com/docs/display
       */
      display: ["block", "inline-block", "inline", "flex", "inline-flex", "table", "inline-table", "table-caption", "table-cell", "table-column", "table-column-group", "table-footer-group", "table-header-group", "table-row-group", "table-row", "flow-root", "grid", "inline-grid", "contents", "list-item", "hidden"],
      /**
       * Floats
       * @see https://tailwindcss.com/docs/float
       */
      float: [{
        float: ["right", "left", "none"]
      }],
      /**
       * Clear
       * @see https://tailwindcss.com/docs/clear
       */
      clear: [{
        clear: ["left", "right", "both", "none"]
      }],
      /**
       * Isolation
       * @see https://tailwindcss.com/docs/isolation
       */
      isolation: ["isolate", "isolation-auto"],
      /**
       * Object Fit
       * @see https://tailwindcss.com/docs/object-fit
       */
      "object-fit": [{
        object: ["contain", "cover", "fill", "none", "scale-down"]
      }],
      /**
       * Object Position
       * @see https://tailwindcss.com/docs/object-position
       */
      "object-position": [{
        object: [...getPositions(), isArbitraryValue]
      }],
      /**
       * Overflow
       * @see https://tailwindcss.com/docs/overflow
       */
      overflow: [{
        overflow: getOverflow()
      }],
      /**
       * Overflow X
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-x": [{
        "overflow-x": getOverflow()
      }],
      /**
       * Overflow Y
       * @see https://tailwindcss.com/docs/overflow
       */
      "overflow-y": [{
        "overflow-y": getOverflow()
      }],
      /**
       * Overscroll Behavior
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      overscroll: [{
        overscroll: getOverscroll()
      }],
      /**
       * Overscroll Behavior X
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-x": [{
        "overscroll-x": getOverscroll()
      }],
      /**
       * Overscroll Behavior Y
       * @see https://tailwindcss.com/docs/overscroll-behavior
       */
      "overscroll-y": [{
        "overscroll-y": getOverscroll()
      }],
      /**
       * Position
       * @see https://tailwindcss.com/docs/position
       */
      position: ["static", "fixed", "absolute", "relative", "sticky"],
      /**
       * Top / Right / Bottom / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      inset: [{
        inset: [inset]
      }],
      /**
       * Right / Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-x": [{
        "inset-x": [inset]
      }],
      /**
       * Top / Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      "inset-y": [{
        "inset-y": [inset]
      }],
      /**
       * Start
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      start: [{
        start: [inset]
      }],
      /**
       * End
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      end: [{
        end: [inset]
      }],
      /**
       * Top
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      top: [{
        top: [inset]
      }],
      /**
       * Right
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      right: [{
        right: [inset]
      }],
      /**
       * Bottom
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      bottom: [{
        bottom: [inset]
      }],
      /**
       * Left
       * @see https://tailwindcss.com/docs/top-right-bottom-left
       */
      left: [{
        left: [inset]
      }],
      /**
       * Visibility
       * @see https://tailwindcss.com/docs/visibility
       */
      visibility: ["visible", "invisible", "collapse"],
      /**
       * Z-Index
       * @see https://tailwindcss.com/docs/z-index
       */
      z: [{
        z: ["auto", isInteger, isArbitraryValue]
      }],
      // Flexbox and Grid
      /**
       * Flex Basis
       * @see https://tailwindcss.com/docs/flex-basis
       */
      basis: [{
        basis: getSpacingWithAutoAndArbitrary()
      }],
      /**
       * Flex Direction
       * @see https://tailwindcss.com/docs/flex-direction
       */
      "flex-direction": [{
        flex: ["row", "row-reverse", "col", "col-reverse"]
      }],
      /**
       * Flex Wrap
       * @see https://tailwindcss.com/docs/flex-wrap
       */
      "flex-wrap": [{
        flex: ["wrap", "wrap-reverse", "nowrap"]
      }],
      /**
       * Flex
       * @see https://tailwindcss.com/docs/flex
       */
      flex: [{
        flex: ["1", "auto", "initial", "none", isArbitraryValue]
      }],
      /**
       * Flex Grow
       * @see https://tailwindcss.com/docs/flex-grow
       */
      grow: [{
        grow: getZeroAndEmpty()
      }],
      /**
       * Flex Shrink
       * @see https://tailwindcss.com/docs/flex-shrink
       */
      shrink: [{
        shrink: getZeroAndEmpty()
      }],
      /**
       * Order
       * @see https://tailwindcss.com/docs/order
       */
      order: [{
        order: ["first", "last", "none", isInteger, isArbitraryValue]
      }],
      /**
       * Grid Template Columns
       * @see https://tailwindcss.com/docs/grid-template-columns
       */
      "grid-cols": [{
        "grid-cols": [isAny]
      }],
      /**
       * Grid Column Start / End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start-end": [{
        col: ["auto", {
          span: ["full", isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Column Start
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-start": [{
        "col-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Column End
       * @see https://tailwindcss.com/docs/grid-column
       */
      "col-end": [{
        "col-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Template Rows
       * @see https://tailwindcss.com/docs/grid-template-rows
       */
      "grid-rows": [{
        "grid-rows": [isAny]
      }],
      /**
       * Grid Row Start / End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start-end": [{
        row: ["auto", {
          span: [isInteger, isArbitraryValue]
        }, isArbitraryValue]
      }],
      /**
       * Grid Row Start
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-start": [{
        "row-start": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Row End
       * @see https://tailwindcss.com/docs/grid-row
       */
      "row-end": [{
        "row-end": getNumberWithAutoAndArbitrary()
      }],
      /**
       * Grid Auto Flow
       * @see https://tailwindcss.com/docs/grid-auto-flow
       */
      "grid-flow": [{
        "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"]
      }],
      /**
       * Grid Auto Columns
       * @see https://tailwindcss.com/docs/grid-auto-columns
       */
      "auto-cols": [{
        "auto-cols": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Grid Auto Rows
       * @see https://tailwindcss.com/docs/grid-auto-rows
       */
      "auto-rows": [{
        "auto-rows": ["auto", "min", "max", "fr", isArbitraryValue]
      }],
      /**
       * Gap
       * @see https://tailwindcss.com/docs/gap
       */
      gap: [{
        gap: [gap]
      }],
      /**
       * Gap X
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-x": [{
        "gap-x": [gap]
      }],
      /**
       * Gap Y
       * @see https://tailwindcss.com/docs/gap
       */
      "gap-y": [{
        "gap-y": [gap]
      }],
      /**
       * Justify Content
       * @see https://tailwindcss.com/docs/justify-content
       */
      "justify-content": [{
        justify: ["normal", ...getAlign()]
      }],
      /**
       * Justify Items
       * @see https://tailwindcss.com/docs/justify-items
       */
      "justify-items": [{
        "justify-items": ["start", "end", "center", "stretch"]
      }],
      /**
       * Justify Self
       * @see https://tailwindcss.com/docs/justify-self
       */
      "justify-self": [{
        "justify-self": ["auto", "start", "end", "center", "stretch"]
      }],
      /**
       * Align Content
       * @see https://tailwindcss.com/docs/align-content
       */
      "align-content": [{
        content: ["normal", ...getAlign(), "baseline"]
      }],
      /**
       * Align Items
       * @see https://tailwindcss.com/docs/align-items
       */
      "align-items": [{
        items: ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Align Self
       * @see https://tailwindcss.com/docs/align-self
       */
      "align-self": [{
        self: ["auto", "start", "end", "center", "stretch", "baseline"]
      }],
      /**
       * Place Content
       * @see https://tailwindcss.com/docs/place-content
       */
      "place-content": [{
        "place-content": [...getAlign(), "baseline"]
      }],
      /**
       * Place Items
       * @see https://tailwindcss.com/docs/place-items
       */
      "place-items": [{
        "place-items": ["start", "end", "center", "baseline", "stretch"]
      }],
      /**
       * Place Self
       * @see https://tailwindcss.com/docs/place-self
       */
      "place-self": [{
        "place-self": ["auto", "start", "end", "center", "stretch"]
      }],
      // Spacing
      /**
       * Padding
       * @see https://tailwindcss.com/docs/padding
       */
      p: [{
        p: [padding]
      }],
      /**
       * Padding X
       * @see https://tailwindcss.com/docs/padding
       */
      px: [{
        px: [padding]
      }],
      /**
       * Padding Y
       * @see https://tailwindcss.com/docs/padding
       */
      py: [{
        py: [padding]
      }],
      /**
       * Padding Start
       * @see https://tailwindcss.com/docs/padding
       */
      ps: [{
        ps: [padding]
      }],
      /**
       * Padding End
       * @see https://tailwindcss.com/docs/padding
       */
      pe: [{
        pe: [padding]
      }],
      /**
       * Padding Top
       * @see https://tailwindcss.com/docs/padding
       */
      pt: [{
        pt: [padding]
      }],
      /**
       * Padding Right
       * @see https://tailwindcss.com/docs/padding
       */
      pr: [{
        pr: [padding]
      }],
      /**
       * Padding Bottom
       * @see https://tailwindcss.com/docs/padding
       */
      pb: [{
        pb: [padding]
      }],
      /**
       * Padding Left
       * @see https://tailwindcss.com/docs/padding
       */
      pl: [{
        pl: [padding]
      }],
      /**
       * Margin
       * @see https://tailwindcss.com/docs/margin
       */
      m: [{
        m: [margin]
      }],
      /**
       * Margin X
       * @see https://tailwindcss.com/docs/margin
       */
      mx: [{
        mx: [margin]
      }],
      /**
       * Margin Y
       * @see https://tailwindcss.com/docs/margin
       */
      my: [{
        my: [margin]
      }],
      /**
       * Margin Start
       * @see https://tailwindcss.com/docs/margin
       */
      ms: [{
        ms: [margin]
      }],
      /**
       * Margin End
       * @see https://tailwindcss.com/docs/margin
       */
      me: [{
        me: [margin]
      }],
      /**
       * Margin Top
       * @see https://tailwindcss.com/docs/margin
       */
      mt: [{
        mt: [margin]
      }],
      /**
       * Margin Right
       * @see https://tailwindcss.com/docs/margin
       */
      mr: [{
        mr: [margin]
      }],
      /**
       * Margin Bottom
       * @see https://tailwindcss.com/docs/margin
       */
      mb: [{
        mb: [margin]
      }],
      /**
       * Margin Left
       * @see https://tailwindcss.com/docs/margin
       */
      ml: [{
        ml: [margin]
      }],
      /**
       * Space Between X
       * @see https://tailwindcss.com/docs/space
       */
      "space-x": [{
        "space-x": [space]
      }],
      /**
       * Space Between X Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-x-reverse": ["space-x-reverse"],
      /**
       * Space Between Y
       * @see https://tailwindcss.com/docs/space
       */
      "space-y": [{
        "space-y": [space]
      }],
      /**
       * Space Between Y Reverse
       * @see https://tailwindcss.com/docs/space
       */
      "space-y-reverse": ["space-y-reverse"],
      // Sizing
      /**
       * Width
       * @see https://tailwindcss.com/docs/width
       */
      w: [{
        w: ["auto", "min", "max", "fit", isArbitraryValue, spacing]
      }],
      /**
       * Min-Width
       * @see https://tailwindcss.com/docs/min-width
       */
      "min-w": [{
        "min-w": ["min", "max", "fit", isArbitraryValue, isLength]
      }],
      /**
       * Max-Width
       * @see https://tailwindcss.com/docs/max-width
       */
      "max-w": [{
        "max-w": ["0", "none", "full", "min", "max", "fit", "prose", {
          screen: [isTshirtSize]
        }, isTshirtSize, isArbitraryValue]
      }],
      /**
       * Height
       * @see https://tailwindcss.com/docs/height
       */
      h: [{
        h: [isArbitraryValue, spacing, "auto", "min", "max", "fit"]
      }],
      /**
       * Min-Height
       * @see https://tailwindcss.com/docs/min-height
       */
      "min-h": [{
        "min-h": ["min", "max", "fit", isLength, isArbitraryValue]
      }],
      /**
       * Max-Height
       * @see https://tailwindcss.com/docs/max-height
       */
      "max-h": [{
        "max-h": [isArbitraryValue, spacing, "min", "max", "fit"]
      }],
      // Typography
      /**
       * Font Size
       * @see https://tailwindcss.com/docs/font-size
       */
      "font-size": [{
        text: ["base", isTshirtSize, isArbitraryLength]
      }],
      /**
       * Font Smoothing
       * @see https://tailwindcss.com/docs/font-smoothing
       */
      "font-smoothing": ["antialiased", "subpixel-antialiased"],
      /**
       * Font Style
       * @see https://tailwindcss.com/docs/font-style
       */
      "font-style": ["italic", "not-italic"],
      /**
       * Font Weight
       * @see https://tailwindcss.com/docs/font-weight
       */
      "font-weight": [{
        font: ["thin", "extralight", "light", "normal", "medium", "semibold", "bold", "extrabold", "black", isArbitraryNumber]
      }],
      /**
       * Font Family
       * @see https://tailwindcss.com/docs/font-family
       */
      "font-family": [{
        font: [isAny]
      }],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-normal": ["normal-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-ordinal": ["ordinal"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-slashed-zero": ["slashed-zero"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-figure": ["lining-nums", "oldstyle-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-spacing": ["proportional-nums", "tabular-nums"],
      /**
       * Font Variant Numeric
       * @see https://tailwindcss.com/docs/font-variant-numeric
       */
      "fvn-fraction": ["diagonal-fractions", "stacked-fractons"],
      /**
       * Letter Spacing
       * @see https://tailwindcss.com/docs/letter-spacing
       */
      tracking: [{
        tracking: ["tighter", "tight", "normal", "wide", "wider", "widest", isArbitraryValue]
      }],
      /**
       * Line Clamp
       * @see https://tailwindcss.com/docs/line-clamp
       */
      "line-clamp": [{
        "line-clamp": ["none", isNumber, isArbitraryNumber]
      }],
      /**
       * Line Height
       * @see https://tailwindcss.com/docs/line-height
       */
      leading: [{
        leading: ["none", "tight", "snug", "normal", "relaxed", "loose", isLength, isArbitraryValue]
      }],
      /**
       * List Style Image
       * @see https://tailwindcss.com/docs/list-style-image
       */
      "list-image": [{
        "list-image": ["none", isArbitraryValue]
      }],
      /**
       * List Style Type
       * @see https://tailwindcss.com/docs/list-style-type
       */
      "list-style-type": [{
        list: ["none", "disc", "decimal", isArbitraryValue]
      }],
      /**
       * List Style Position
       * @see https://tailwindcss.com/docs/list-style-position
       */
      "list-style-position": [{
        list: ["inside", "outside"]
      }],
      /**
       * Placeholder Color
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/placeholder-color
       */
      "placeholder-color": [{
        placeholder: [colors]
      }],
      /**
       * Placeholder Opacity
       * @see https://tailwindcss.com/docs/placeholder-opacity
       */
      "placeholder-opacity": [{
        "placeholder-opacity": [opacity]
      }],
      /**
       * Text Alignment
       * @see https://tailwindcss.com/docs/text-align
       */
      "text-alignment": [{
        text: ["left", "center", "right", "justify", "start", "end"]
      }],
      /**
       * Text Color
       * @see https://tailwindcss.com/docs/text-color
       */
      "text-color": [{
        text: [colors]
      }],
      /**
       * Text Opacity
       * @see https://tailwindcss.com/docs/text-opacity
       */
      "text-opacity": [{
        "text-opacity": [opacity]
      }],
      /**
       * Text Decoration
       * @see https://tailwindcss.com/docs/text-decoration
       */
      "text-decoration": ["underline", "overline", "line-through", "no-underline"],
      /**
       * Text Decoration Style
       * @see https://tailwindcss.com/docs/text-decoration-style
       */
      "text-decoration-style": [{
        decoration: [...getLineStyles(), "wavy"]
      }],
      /**
       * Text Decoration Thickness
       * @see https://tailwindcss.com/docs/text-decoration-thickness
       */
      "text-decoration-thickness": [{
        decoration: ["auto", "from-font", isLength, isArbitraryLength]
      }],
      /**
       * Text Underline Offset
       * @see https://tailwindcss.com/docs/text-underline-offset
       */
      "underline-offset": [{
        "underline-offset": ["auto", isLength, isArbitraryValue]
      }],
      /**
       * Text Decoration Color
       * @see https://tailwindcss.com/docs/text-decoration-color
       */
      "text-decoration-color": [{
        decoration: [colors]
      }],
      /**
       * Text Transform
       * @see https://tailwindcss.com/docs/text-transform
       */
      "text-transform": ["uppercase", "lowercase", "capitalize", "normal-case"],
      /**
       * Text Overflow
       * @see https://tailwindcss.com/docs/text-overflow
       */
      "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
      /**
       * Text Indent
       * @see https://tailwindcss.com/docs/text-indent
       */
      indent: [{
        indent: getSpacingWithArbitrary()
      }],
      /**
       * Vertical Alignment
       * @see https://tailwindcss.com/docs/vertical-align
       */
      "vertical-align": [{
        align: ["baseline", "top", "middle", "bottom", "text-top", "text-bottom", "sub", "super", isArbitraryValue]
      }],
      /**
       * Whitespace
       * @see https://tailwindcss.com/docs/whitespace
       */
      whitespace: [{
        whitespace: ["normal", "nowrap", "pre", "pre-line", "pre-wrap", "break-spaces"]
      }],
      /**
       * Word Break
       * @see https://tailwindcss.com/docs/word-break
       */
      break: [{
        break: ["normal", "words", "all", "keep"]
      }],
      /**
       * Hyphens
       * @see https://tailwindcss.com/docs/hyphens
       */
      hyphens: [{
        hyphens: ["none", "manual", "auto"]
      }],
      /**
       * Content
       * @see https://tailwindcss.com/docs/content
       */
      content: [{
        content: ["none", isArbitraryValue]
      }],
      // Backgrounds
      /**
       * Background Attachment
       * @see https://tailwindcss.com/docs/background-attachment
       */
      "bg-attachment": [{
        bg: ["fixed", "local", "scroll"]
      }],
      /**
       * Background Clip
       * @see https://tailwindcss.com/docs/background-clip
       */
      "bg-clip": [{
        "bg-clip": ["border", "padding", "content", "text"]
      }],
      /**
       * Background Opacity
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/background-opacity
       */
      "bg-opacity": [{
        "bg-opacity": [opacity]
      }],
      /**
       * Background Origin
       * @see https://tailwindcss.com/docs/background-origin
       */
      "bg-origin": [{
        "bg-origin": ["border", "padding", "content"]
      }],
      /**
       * Background Position
       * @see https://tailwindcss.com/docs/background-position
       */
      "bg-position": [{
        bg: [...getPositions(), isArbitraryPosition]
      }],
      /**
       * Background Repeat
       * @see https://tailwindcss.com/docs/background-repeat
       */
      "bg-repeat": [{
        bg: ["no-repeat", {
          repeat: ["", "x", "y", "round", "space"]
        }]
      }],
      /**
       * Background Size
       * @see https://tailwindcss.com/docs/background-size
       */
      "bg-size": [{
        bg: ["auto", "cover", "contain", isArbitrarySize]
      }],
      /**
       * Background Image
       * @see https://tailwindcss.com/docs/background-image
       */
      "bg-image": [{
        bg: ["none", {
          "gradient-to": ["t", "tr", "r", "br", "b", "bl", "l", "tl"]
        }, isArbitraryImage]
      }],
      /**
       * Background Color
       * @see https://tailwindcss.com/docs/background-color
       */
      "bg-color": [{
        bg: [colors]
      }],
      /**
       * Gradient Color Stops From Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from-pos": [{
        from: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops Via Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via-pos": [{
        via: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops To Position
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to-pos": [{
        to: [gradientColorStopPositions]
      }],
      /**
       * Gradient Color Stops From
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-from": [{
        from: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops Via
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-via": [{
        via: [gradientColorStops]
      }],
      /**
       * Gradient Color Stops To
       * @see https://tailwindcss.com/docs/gradient-color-stops
       */
      "gradient-to": [{
        to: [gradientColorStops]
      }],
      // Borders
      /**
       * Border Radius
       * @see https://tailwindcss.com/docs/border-radius
       */
      rounded: [{
        rounded: [borderRadius]
      }],
      /**
       * Border Radius Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-s": [{
        "rounded-s": [borderRadius]
      }],
      /**
       * Border Radius End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-e": [{
        "rounded-e": [borderRadius]
      }],
      /**
       * Border Radius Top
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-t": [{
        "rounded-t": [borderRadius]
      }],
      /**
       * Border Radius Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-r": [{
        "rounded-r": [borderRadius]
      }],
      /**
       * Border Radius Bottom
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-b": [{
        "rounded-b": [borderRadius]
      }],
      /**
       * Border Radius Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-l": [{
        "rounded-l": [borderRadius]
      }],
      /**
       * Border Radius Start Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ss": [{
        "rounded-ss": [borderRadius]
      }],
      /**
       * Border Radius Start End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-se": [{
        "rounded-se": [borderRadius]
      }],
      /**
       * Border Radius End End
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-ee": [{
        "rounded-ee": [borderRadius]
      }],
      /**
       * Border Radius End Start
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-es": [{
        "rounded-es": [borderRadius]
      }],
      /**
       * Border Radius Top Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tl": [{
        "rounded-tl": [borderRadius]
      }],
      /**
       * Border Radius Top Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-tr": [{
        "rounded-tr": [borderRadius]
      }],
      /**
       * Border Radius Bottom Right
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-br": [{
        "rounded-br": [borderRadius]
      }],
      /**
       * Border Radius Bottom Left
       * @see https://tailwindcss.com/docs/border-radius
       */
      "rounded-bl": [{
        "rounded-bl": [borderRadius]
      }],
      /**
       * Border Width
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w": [{
        border: [borderWidth]
      }],
      /**
       * Border Width X
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-x": [{
        "border-x": [borderWidth]
      }],
      /**
       * Border Width Y
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-y": [{
        "border-y": [borderWidth]
      }],
      /**
       * Border Width Start
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-s": [{
        "border-s": [borderWidth]
      }],
      /**
       * Border Width End
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-e": [{
        "border-e": [borderWidth]
      }],
      /**
       * Border Width Top
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-t": [{
        "border-t": [borderWidth]
      }],
      /**
       * Border Width Right
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-r": [{
        "border-r": [borderWidth]
      }],
      /**
       * Border Width Bottom
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-b": [{
        "border-b": [borderWidth]
      }],
      /**
       * Border Width Left
       * @see https://tailwindcss.com/docs/border-width
       */
      "border-w-l": [{
        "border-l": [borderWidth]
      }],
      /**
       * Border Opacity
       * @see https://tailwindcss.com/docs/border-opacity
       */
      "border-opacity": [{
        "border-opacity": [opacity]
      }],
      /**
       * Border Style
       * @see https://tailwindcss.com/docs/border-style
       */
      "border-style": [{
        border: [...getLineStyles(), "hidden"]
      }],
      /**
       * Divide Width X
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x": [{
        "divide-x": [borderWidth]
      }],
      /**
       * Divide Width X Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-x-reverse": ["divide-x-reverse"],
      /**
       * Divide Width Y
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y": [{
        "divide-y": [borderWidth]
      }],
      /**
       * Divide Width Y Reverse
       * @see https://tailwindcss.com/docs/divide-width
       */
      "divide-y-reverse": ["divide-y-reverse"],
      /**
       * Divide Opacity
       * @see https://tailwindcss.com/docs/divide-opacity
       */
      "divide-opacity": [{
        "divide-opacity": [opacity]
      }],
      /**
       * Divide Style
       * @see https://tailwindcss.com/docs/divide-style
       */
      "divide-style": [{
        divide: getLineStyles()
      }],
      /**
       * Border Color
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color": [{
        border: [borderColor]
      }],
      /**
       * Border Color X
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-x": [{
        "border-x": [borderColor]
      }],
      /**
       * Border Color Y
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-y": [{
        "border-y": [borderColor]
      }],
      /**
       * Border Color Top
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-t": [{
        "border-t": [borderColor]
      }],
      /**
       * Border Color Right
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-r": [{
        "border-r": [borderColor]
      }],
      /**
       * Border Color Bottom
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-b": [{
        "border-b": [borderColor]
      }],
      /**
       * Border Color Left
       * @see https://tailwindcss.com/docs/border-color
       */
      "border-color-l": [{
        "border-l": [borderColor]
      }],
      /**
       * Divide Color
       * @see https://tailwindcss.com/docs/divide-color
       */
      "divide-color": [{
        divide: [borderColor]
      }],
      /**
       * Outline Style
       * @see https://tailwindcss.com/docs/outline-style
       */
      "outline-style": [{
        outline: ["", ...getLineStyles()]
      }],
      /**
       * Outline Offset
       * @see https://tailwindcss.com/docs/outline-offset
       */
      "outline-offset": [{
        "outline-offset": [isLength, isArbitraryValue]
      }],
      /**
       * Outline Width
       * @see https://tailwindcss.com/docs/outline-width
       */
      "outline-w": [{
        outline: [isLength, isArbitraryLength]
      }],
      /**
       * Outline Color
       * @see https://tailwindcss.com/docs/outline-color
       */
      "outline-color": [{
        outline: [colors]
      }],
      /**
       * Ring Width
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w": [{
        ring: getLengthWithEmptyAndArbitrary()
      }],
      /**
       * Ring Width Inset
       * @see https://tailwindcss.com/docs/ring-width
       */
      "ring-w-inset": ["ring-inset"],
      /**
       * Ring Color
       * @see https://tailwindcss.com/docs/ring-color
       */
      "ring-color": [{
        ring: [colors]
      }],
      /**
       * Ring Opacity
       * @see https://tailwindcss.com/docs/ring-opacity
       */
      "ring-opacity": [{
        "ring-opacity": [opacity]
      }],
      /**
       * Ring Offset Width
       * @see https://tailwindcss.com/docs/ring-offset-width
       */
      "ring-offset-w": [{
        "ring-offset": [isLength, isArbitraryLength]
      }],
      /**
       * Ring Offset Color
       * @see https://tailwindcss.com/docs/ring-offset-color
       */
      "ring-offset-color": [{
        "ring-offset": [colors]
      }],
      // Effects
      /**
       * Box Shadow
       * @see https://tailwindcss.com/docs/box-shadow
       */
      shadow: [{
        shadow: ["", "inner", "none", isTshirtSize, isArbitraryShadow]
      }],
      /**
       * Box Shadow Color
       * @see https://tailwindcss.com/docs/box-shadow-color
       */
      "shadow-color": [{
        shadow: [isAny]
      }],
      /**
       * Opacity
       * @see https://tailwindcss.com/docs/opacity
       */
      opacity: [{
        opacity: [opacity]
      }],
      /**
       * Mix Blend Mode
       * @see https://tailwindcss.com/docs/mix-blend-mode
       */
      "mix-blend": [{
        "mix-blend": getBlendModes()
      }],
      /**
       * Background Blend Mode
       * @see https://tailwindcss.com/docs/background-blend-mode
       */
      "bg-blend": [{
        "bg-blend": getBlendModes()
      }],
      // Filters
      /**
       * Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/filter
       */
      filter: [{
        filter: ["", "none"]
      }],
      /**
       * Blur
       * @see https://tailwindcss.com/docs/blur
       */
      blur: [{
        blur: [blur]
      }],
      /**
       * Brightness
       * @see https://tailwindcss.com/docs/brightness
       */
      brightness: [{
        brightness: [brightness]
      }],
      /**
       * Contrast
       * @see https://tailwindcss.com/docs/contrast
       */
      contrast: [{
        contrast: [contrast]
      }],
      /**
       * Drop Shadow
       * @see https://tailwindcss.com/docs/drop-shadow
       */
      "drop-shadow": [{
        "drop-shadow": ["", "none", isTshirtSize, isArbitraryValue]
      }],
      /**
       * Grayscale
       * @see https://tailwindcss.com/docs/grayscale
       */
      grayscale: [{
        grayscale: [grayscale]
      }],
      /**
       * Hue Rotate
       * @see https://tailwindcss.com/docs/hue-rotate
       */
      "hue-rotate": [{
        "hue-rotate": [hueRotate]
      }],
      /**
       * Invert
       * @see https://tailwindcss.com/docs/invert
       */
      invert: [{
        invert: [invert]
      }],
      /**
       * Saturate
       * @see https://tailwindcss.com/docs/saturate
       */
      saturate: [{
        saturate: [saturate]
      }],
      /**
       * Sepia
       * @see https://tailwindcss.com/docs/sepia
       */
      sepia: [{
        sepia: [sepia]
      }],
      /**
       * Backdrop Filter
       * @deprecated since Tailwind CSS v3.0.0
       * @see https://tailwindcss.com/docs/backdrop-filter
       */
      "backdrop-filter": [{
        "backdrop-filter": ["", "none"]
      }],
      /**
       * Backdrop Blur
       * @see https://tailwindcss.com/docs/backdrop-blur
       */
      "backdrop-blur": [{
        "backdrop-blur": [blur]
      }],
      /**
       * Backdrop Brightness
       * @see https://tailwindcss.com/docs/backdrop-brightness
       */
      "backdrop-brightness": [{
        "backdrop-brightness": [brightness]
      }],
      /**
       * Backdrop Contrast
       * @see https://tailwindcss.com/docs/backdrop-contrast
       */
      "backdrop-contrast": [{
        "backdrop-contrast": [contrast]
      }],
      /**
       * Backdrop Grayscale
       * @see https://tailwindcss.com/docs/backdrop-grayscale
       */
      "backdrop-grayscale": [{
        "backdrop-grayscale": [grayscale]
      }],
      /**
       * Backdrop Hue Rotate
       * @see https://tailwindcss.com/docs/backdrop-hue-rotate
       */
      "backdrop-hue-rotate": [{
        "backdrop-hue-rotate": [hueRotate]
      }],
      /**
       * Backdrop Invert
       * @see https://tailwindcss.com/docs/backdrop-invert
       */
      "backdrop-invert": [{
        "backdrop-invert": [invert]
      }],
      /**
       * Backdrop Opacity
       * @see https://tailwindcss.com/docs/backdrop-opacity
       */
      "backdrop-opacity": [{
        "backdrop-opacity": [opacity]
      }],
      /**
       * Backdrop Saturate
       * @see https://tailwindcss.com/docs/backdrop-saturate
       */
      "backdrop-saturate": [{
        "backdrop-saturate": [saturate]
      }],
      /**
       * Backdrop Sepia
       * @see https://tailwindcss.com/docs/backdrop-sepia
       */
      "backdrop-sepia": [{
        "backdrop-sepia": [sepia]
      }],
      // Tables
      /**
       * Border Collapse
       * @see https://tailwindcss.com/docs/border-collapse
       */
      "border-collapse": [{
        border: ["collapse", "separate"]
      }],
      /**
       * Border Spacing
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing": [{
        "border-spacing": [borderSpacing]
      }],
      /**
       * Border Spacing X
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-x": [{
        "border-spacing-x": [borderSpacing]
      }],
      /**
       * Border Spacing Y
       * @see https://tailwindcss.com/docs/border-spacing
       */
      "border-spacing-y": [{
        "border-spacing-y": [borderSpacing]
      }],
      /**
       * Table Layout
       * @see https://tailwindcss.com/docs/table-layout
       */
      "table-layout": [{
        table: ["auto", "fixed"]
      }],
      /**
       * Caption Side
       * @see https://tailwindcss.com/docs/caption-side
       */
      caption: [{
        caption: ["top", "bottom"]
      }],
      // Transitions and Animation
      /**
       * Tranisition Property
       * @see https://tailwindcss.com/docs/transition-property
       */
      transition: [{
        transition: ["none", "all", "", "colors", "opacity", "shadow", "transform", isArbitraryValue]
      }],
      /**
       * Transition Duration
       * @see https://tailwindcss.com/docs/transition-duration
       */
      duration: [{
        duration: getNumberAndArbitrary()
      }],
      /**
       * Transition Timing Function
       * @see https://tailwindcss.com/docs/transition-timing-function
       */
      ease: [{
        ease: ["linear", "in", "out", "in-out", isArbitraryValue]
      }],
      /**
       * Transition Delay
       * @see https://tailwindcss.com/docs/transition-delay
       */
      delay: [{
        delay: getNumberAndArbitrary()
      }],
      /**
       * Animation
       * @see https://tailwindcss.com/docs/animation
       */
      animate: [{
        animate: ["none", "spin", "ping", "pulse", "bounce", isArbitraryValue]
      }],
      // Transforms
      /**
       * Transform
       * @see https://tailwindcss.com/docs/transform
       */
      transform: [{
        transform: ["", "gpu", "none"]
      }],
      /**
       * Scale
       * @see https://tailwindcss.com/docs/scale
       */
      scale: [{
        scale: [scale2]
      }],
      /**
       * Scale X
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-x": [{
        "scale-x": [scale2]
      }],
      /**
       * Scale Y
       * @see https://tailwindcss.com/docs/scale
       */
      "scale-y": [{
        "scale-y": [scale2]
      }],
      /**
       * Rotate
       * @see https://tailwindcss.com/docs/rotate
       */
      rotate: [{
        rotate: [isInteger, isArbitraryValue]
      }],
      /**
       * Translate X
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-x": [{
        "translate-x": [translate]
      }],
      /**
       * Translate Y
       * @see https://tailwindcss.com/docs/translate
       */
      "translate-y": [{
        "translate-y": [translate]
      }],
      /**
       * Skew X
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-x": [{
        "skew-x": [skew]
      }],
      /**
       * Skew Y
       * @see https://tailwindcss.com/docs/skew
       */
      "skew-y": [{
        "skew-y": [skew]
      }],
      /**
       * Transform Origin
       * @see https://tailwindcss.com/docs/transform-origin
       */
      "transform-origin": [{
        origin: ["center", "top", "top-right", "right", "bottom-right", "bottom", "bottom-left", "left", "top-left", isArbitraryValue]
      }],
      // Interactivity
      /**
       * Accent Color
       * @see https://tailwindcss.com/docs/accent-color
       */
      accent: [{
        accent: ["auto", colors]
      }],
      /**
       * Appearance
       * @see https://tailwindcss.com/docs/appearance
       */
      appearance: ["appearance-none"],
      /**
       * Cursor
       * @see https://tailwindcss.com/docs/cursor
       */
      cursor: [{
        cursor: ["auto", "default", "pointer", "wait", "text", "move", "help", "not-allowed", "none", "context-menu", "progress", "cell", "crosshair", "vertical-text", "alias", "copy", "no-drop", "grab", "grabbing", "all-scroll", "col-resize", "row-resize", "n-resize", "e-resize", "s-resize", "w-resize", "ne-resize", "nw-resize", "se-resize", "sw-resize", "ew-resize", "ns-resize", "nesw-resize", "nwse-resize", "zoom-in", "zoom-out", isArbitraryValue]
      }],
      /**
       * Caret Color
       * @see https://tailwindcss.com/docs/just-in-time-mode#caret-color-utilities
       */
      "caret-color": [{
        caret: [colors]
      }],
      /**
       * Pointer Events
       * @see https://tailwindcss.com/docs/pointer-events
       */
      "pointer-events": [{
        "pointer-events": ["none", "auto"]
      }],
      /**
       * Resize
       * @see https://tailwindcss.com/docs/resize
       */
      resize: [{
        resize: ["none", "y", "x", ""]
      }],
      /**
       * Scroll Behavior
       * @see https://tailwindcss.com/docs/scroll-behavior
       */
      "scroll-behavior": [{
        scroll: ["auto", "smooth"]
      }],
      /**
       * Scroll Margin
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-m": [{
        "scroll-m": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin X
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mx": [{
        "scroll-mx": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Y
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-my": [{
        "scroll-my": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Start
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ms": [{
        "scroll-ms": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin End
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-me": [{
        "scroll-me": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Top
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mt": [{
        "scroll-mt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Right
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mr": [{
        "scroll-mr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Bottom
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-mb": [{
        "scroll-mb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Margin Left
       * @see https://tailwindcss.com/docs/scroll-margin
       */
      "scroll-ml": [{
        "scroll-ml": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-p": [{
        "scroll-p": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding X
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-px": [{
        "scroll-px": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Y
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-py": [{
        "scroll-py": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Start
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-ps": [{
        "scroll-ps": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding End
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pe": [{
        "scroll-pe": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Top
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pt": [{
        "scroll-pt": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Right
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pr": [{
        "scroll-pr": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Bottom
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pb": [{
        "scroll-pb": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Padding Left
       * @see https://tailwindcss.com/docs/scroll-padding
       */
      "scroll-pl": [{
        "scroll-pl": getSpacingWithArbitrary()
      }],
      /**
       * Scroll Snap Align
       * @see https://tailwindcss.com/docs/scroll-snap-align
       */
      "snap-align": [{
        snap: ["start", "end", "center", "align-none"]
      }],
      /**
       * Scroll Snap Stop
       * @see https://tailwindcss.com/docs/scroll-snap-stop
       */
      "snap-stop": [{
        snap: ["normal", "always"]
      }],
      /**
       * Scroll Snap Type
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-type": [{
        snap: ["none", "x", "y", "both"]
      }],
      /**
       * Scroll Snap Type Strictness
       * @see https://tailwindcss.com/docs/scroll-snap-type
       */
      "snap-strictness": [{
        snap: ["mandatory", "proximity"]
      }],
      /**
       * Touch Action
       * @see https://tailwindcss.com/docs/touch-action
       */
      touch: [{
        touch: ["auto", "none", "manipulation"]
      }],
      /**
       * Touch Action X
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-x": [{
        "touch-pan": ["x", "left", "right"]
      }],
      /**
       * Touch Action Y
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-y": [{
        "touch-pan": ["y", "up", "down"]
      }],
      /**
       * Touch Action Pinch Zoom
       * @see https://tailwindcss.com/docs/touch-action
       */
      "touch-pz": ["touch-pinch-zoom"],
      /**
       * User Select
       * @see https://tailwindcss.com/docs/user-select
       */
      select: [{
        select: ["none", "text", "all", "auto"]
      }],
      /**
       * Will Change
       * @see https://tailwindcss.com/docs/will-change
       */
      "will-change": [{
        "will-change": ["auto", "scroll", "contents", "transform", isArbitraryValue]
      }],
      // SVG
      /**
       * Fill
       * @see https://tailwindcss.com/docs/fill
       */
      fill: [{
        fill: [colors, "none"]
      }],
      /**
       * Stroke Width
       * @see https://tailwindcss.com/docs/stroke-width
       */
      "stroke-w": [{
        stroke: [isLength, isArbitraryLength, isArbitraryNumber]
      }],
      /**
       * Stroke
       * @see https://tailwindcss.com/docs/stroke
       */
      stroke: [{
        stroke: [colors, "none"]
      }],
      // Accessibility
      /**
       * Screen Readers
       * @see https://tailwindcss.com/docs/screen-readers
       */
      sr: ["sr-only", "not-sr-only"]
    },
    conflictingClassGroups: {
      overflow: ["overflow-x", "overflow-y"],
      overscroll: ["overscroll-x", "overscroll-y"],
      inset: ["inset-x", "inset-y", "start", "end", "top", "right", "bottom", "left"],
      "inset-x": ["right", "left"],
      "inset-y": ["top", "bottom"],
      flex: ["basis", "grow", "shrink"],
      gap: ["gap-x", "gap-y"],
      p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
      px: ["pr", "pl"],
      py: ["pt", "pb"],
      m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
      mx: ["mr", "ml"],
      my: ["mt", "mb"],
      "font-size": ["leading"],
      "fvn-normal": ["fvn-ordinal", "fvn-slashed-zero", "fvn-figure", "fvn-spacing", "fvn-fraction"],
      "fvn-ordinal": ["fvn-normal"],
      "fvn-slashed-zero": ["fvn-normal"],
      "fvn-figure": ["fvn-normal"],
      "fvn-spacing": ["fvn-normal"],
      "fvn-fraction": ["fvn-normal"],
      "line-clamp": ["display", "overflow"],
      rounded: ["rounded-s", "rounded-e", "rounded-t", "rounded-r", "rounded-b", "rounded-l", "rounded-ss", "rounded-se", "rounded-ee", "rounded-es", "rounded-tl", "rounded-tr", "rounded-br", "rounded-bl"],
      "rounded-s": ["rounded-ss", "rounded-es"],
      "rounded-e": ["rounded-se", "rounded-ee"],
      "rounded-t": ["rounded-tl", "rounded-tr"],
      "rounded-r": ["rounded-tr", "rounded-br"],
      "rounded-b": ["rounded-br", "rounded-bl"],
      "rounded-l": ["rounded-tl", "rounded-bl"],
      "border-spacing": ["border-spacing-x", "border-spacing-y"],
      "border-w": ["border-w-s", "border-w-e", "border-w-t", "border-w-r", "border-w-b", "border-w-l"],
      "border-w-x": ["border-w-r", "border-w-l"],
      "border-w-y": ["border-w-t", "border-w-b"],
      "border-color": ["border-color-t", "border-color-r", "border-color-b", "border-color-l"],
      "border-color-x": ["border-color-r", "border-color-l"],
      "border-color-y": ["border-color-t", "border-color-b"],
      "scroll-m": ["scroll-mx", "scroll-my", "scroll-ms", "scroll-me", "scroll-mt", "scroll-mr", "scroll-mb", "scroll-ml"],
      "scroll-mx": ["scroll-mr", "scroll-ml"],
      "scroll-my": ["scroll-mt", "scroll-mb"],
      "scroll-p": ["scroll-px", "scroll-py", "scroll-ps", "scroll-pe", "scroll-pt", "scroll-pr", "scroll-pb", "scroll-pl"],
      "scroll-px": ["scroll-pr", "scroll-pl"],
      "scroll-py": ["scroll-pt", "scroll-pb"],
      touch: ["touch-x", "touch-y", "touch-pz"],
      "touch-x": ["touch"],
      "touch-y": ["touch"],
      "touch-pz": ["touch"]
    },
    conflictingClassGroupModifiers: {
      "font-size": ["leading"]
    }
  };
}
var twMerge = /* @__PURE__ */ createTailwindMerge(getDefaultConfig);

// app/lib/utils.ts
function cn(...inputs) {
  return twMerge(clsx(inputs));
}
var getRelativeTime = (date) => {
  let now = /* @__PURE__ */ new Date(), then = new Date(date), diff = differenceInDays(now, then), isToday2 = isToday(then);
  return diff === 0 && isToday2 ? `${format(
    then,
    "HH:mm"
  )} (${formatDistanceToNowStrict(then, { addSuffix: !0 })})` : diff === 0 ? `${format(
    then,
    "PP HH:mm"
  )} (${formatDistanceToNowStrict(then, { addSuffix: !0 })})` : `${format(then, "PP HH:mm")}`;
}, getNameInitials = (name, count2 = 2) => name ? name.split(" ").map((n2) => n2[0]).join("").replace(/[^a-zA-Z]/g, "").slice(0, count2).toUpperCase() : "";

// app/components/ui/toast.tsx
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1), ToastProvider = $054eb8030ebde76e$export$2881499e37b75b9a, ToastViewport = React17.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$d5c6c08dc2d3ca7,
  {
    ref,
    className: cn(
      "fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]",
      className
    ),
    ...props
  }
));
ToastViewport.displayName = $054eb8030ebde76e$export$d5c6c08dc2d3ca7.displayName;
var toastVariants = cva(
  "group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full",
  {
    variants: {
      variant: {
        default: "border bg-background text-foreground",
        destructive: "destructive group border-destructive bg-destructive text-destructive-foreground"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), Toast = React17.forwardRef(({ className, variant, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(toastVariants({ variant }), className),
    ...props
  }
));
Toast.displayName = $054eb8030ebde76e$export$be92b6f5f03c0fe9.displayName;
var ToastAction = React17.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$e19cd5f9376f8cee,
  {
    ref,
    className: cn(
      "inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive",
      className
    ),
    ...props
  }
));
ToastAction.displayName = $054eb8030ebde76e$export$e19cd5f9376f8cee.displayName;
var ToastClose = React17.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$f39c2d165cd861fe,
  {
    ref,
    className: cn(
      "absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600",
      className
    ),
    "toast-close": "",
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(Cross2Icon, { className: "h-4 w-4" })
  }
));
ToastClose.displayName = $054eb8030ebde76e$export$f39c2d165cd861fe.displayName;
var ToastTitle = React17.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$f99233281efd08a0,
  {
    ref,
    className: cn("text-sm font-semibold [&+div]:text-xs", className),
    ...props
  }
));
ToastTitle.displayName = $054eb8030ebde76e$export$f99233281efd08a0.displayName;
var ToastDescription = React17.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime3.jsx)(
  $054eb8030ebde76e$export$393edc798c47379d,
  {
    ref,
    className: cn("text-sm opacity-90", className),
    ...props
  }
));
ToastDescription.displayName = $054eb8030ebde76e$export$393edc798c47379d.displayName;

// app/components/ui/use-toast.ts
var React18 = __toESM(require_react(), 1), TOAST_LIMIT = 1, TOAST_REMOVE_DELAY = 1e6;
var count = 0;
function genId() {
  return count = (count + 1) % Number.MAX_VALUE, count.toString();
}
var toastTimeouts = /* @__PURE__ */ new Map(), addToRemoveQueue = (toastId) => {
  if (toastTimeouts.has(toastId))
    return;
  let timeout = setTimeout(() => {
    toastTimeouts.delete(toastId), dispatch({
      type: "REMOVE_TOAST",
      toastId
    });
  }, TOAST_REMOVE_DELAY);
  toastTimeouts.set(toastId, timeout);
}, reducer = (state, action) => {
  switch (action.type) {
    case "ADD_TOAST":
      return {
        ...state,
        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT)
      };
    case "UPDATE_TOAST":
      return {
        ...state,
        toasts: state.toasts.map(
          (t4) => t4.id === action.toast.id ? { ...t4, ...action.toast } : t4
        )
      };
    case "DISMISS_TOAST": {
      let { toastId } = action;
      return toastId ? addToRemoveQueue(toastId) : state.toasts.forEach((toast2) => {
        addToRemoveQueue(toast2.id);
      }), {
        ...state,
        toasts: state.toasts.map(
          (t4) => t4.id === toastId || toastId === void 0 ? {
            ...t4,
            open: !1
          } : t4
        )
      };
    }
    case "REMOVE_TOAST":
      return action.toastId === void 0 ? {
        ...state,
        toasts: []
      } : {
        ...state,
        toasts: state.toasts.filter((t4) => t4.id !== action.toastId)
      };
  }
}, listeners = [], memoryState = { toasts: [] };
function dispatch(action) {
  memoryState = reducer(memoryState, action), listeners.forEach((listener) => {
    listener(memoryState);
  });
}
function toast({ ...props }) {
  let id3 = genId(), update = (props2) => dispatch({
    type: "UPDATE_TOAST",
    toast: { ...props2, id: id3 }
  }), dismiss = () => dispatch({ type: "DISMISS_TOAST", toastId: id3 });
  return dispatch({
    type: "ADD_TOAST",
    toast: {
      ...props,
      id: id3,
      open: !0,
      onOpenChange: (open) => {
        open || dismiss();
      }
    }
  }), {
    id: id3,
    dismiss,
    update
  };
}
function useToast() {
  let [state, setState] = React18.useState(memoryState);
  return React18.useEffect(() => (listeners.push(setState), () => {
    let index3 = listeners.indexOf(setState);
    index3 > -1 && listeners.splice(index3, 1);
  }), [state]), {
    ...state,
    toast,
    dismiss: (toastId) => dispatch({ type: "DISMISS_TOAST", toastId })
  };
}

// app/components/ui/toaster.tsx
var import_jsx_runtime4 = __toESM(require_jsx_runtime(), 1);
function Toaster() {
  let { toasts } = useToast();
  return /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(ToastProvider, { children: [
    toasts.map(function({ id: id3, title, description, action, ...props }) {
      return /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)(Toast, { ...props, children: [
        /* @__PURE__ */ (0, import_jsx_runtime4.jsxs)("div", { className: "grid gap-1", children: [
          title && /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ToastTitle, { children: title }),
          description && /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ToastDescription, { children: description })
        ] }),
        action,
        /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ToastClose, {})
      ] }, id3);
    }),
    /* @__PURE__ */ (0, import_jsx_runtime4.jsx)(ToastViewport, {})
  ] });
}

// ../../node_modules/react-hook-form/dist/index.esm.mjs
var import_react19 = __toESM(require_react(), 1), isCheckBoxInput = (element) => element.type === "checkbox", isDateObject = (value) => value instanceof Date, isNullOrUndefined = (value) => value == null, isObjectType = (value) => typeof value == "object", isObject = (value) => !isNullOrUndefined(value) && !Array.isArray(value) && isObjectType(value) && !isDateObject(value), getEventValue = (event) => isObject(event) && event.target ? isCheckBoxInput(event.target) ? event.target.checked : event.target.value : event, getNodeParentName = (name) => name.substring(0, name.search(/\.\d+(\.|$)/)) || name, isNameInFieldArray = (names, name) => names.has(getNodeParentName(name)), isPlainObject2 = (tempObject) => {
  let prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;
  return isObject(prototypeCopy) && prototypeCopy.hasOwnProperty("isPrototypeOf");
}, isWeb = typeof window < "u" && typeof window.HTMLElement < "u" && typeof document < "u";
function cloneObject2(data) {
  let copy, isArray2 = Array.isArray(data);
  if (data instanceof Date)
    copy = new Date(data);
  else if (data instanceof Set)
    copy = new Set(data);
  else if (!(isWeb && (data instanceof Blob || data instanceof FileList)) && (isArray2 || isObject(data)))
    if (copy = isArray2 ? [] : {}, !isArray2 && !isPlainObject2(data))
      copy = data;
    else
      for (let key in data)
        data.hasOwnProperty(key) && (copy[key] = cloneObject2(data[key]));
  else
    return data;
  return copy;
}
var compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [], isUndefined = (val) => val === void 0, get = (object, path, defaultValue) => {
  if (!path || !isObject(object))
    return defaultValue;
  let result = compact(path.split(/[,[\].]+?/)).reduce((result2, key) => isNullOrUndefined(result2) ? result2 : result2[key], object);
  return isUndefined(result) || result === object ? isUndefined(object[path]) ? defaultValue : object[path] : result;
}, isBoolean = (value) => typeof value == "boolean", EVENTS = {
  BLUR: "blur",
  FOCUS_OUT: "focusout",
  CHANGE: "change"
}, VALIDATION_MODE = {
  onBlur: "onBlur",
  onChange: "onChange",
  onSubmit: "onSubmit",
  onTouched: "onTouched",
  all: "all"
}, INPUT_VALIDATION_RULES = {
  max: "max",
  min: "min",
  maxLength: "maxLength",
  minLength: "minLength",
  pattern: "pattern",
  required: "required",
  validate: "validate"
}, HookFormContext = import_react19.default.createContext(null), useFormContext = () => import_react19.default.useContext(HookFormContext), FormProvider = (props) => {
  let { children, ...data } = props;
  return import_react19.default.createElement(HookFormContext.Provider, { value: data }, children);
}, getProxyFormState = (formState, control, localProxyFormState, isRoot = !0) => {
  let result = {
    defaultValues: control._defaultValues
  };
  for (let key in formState)
    Object.defineProperty(result, key, {
      get: () => {
        let _key = key;
        return control._proxyFormState[_key] !== VALIDATION_MODE.all && (control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all), localProxyFormState && (localProxyFormState[_key] = !0), formState[_key];
      }
    });
  return result;
}, isEmptyObject = (value) => isObject(value) && !Object.keys(value).length, shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {
  updateFormState(formStateData);
  let { name, ...formState } = formStateData;
  return isEmptyObject(formState) || Object.keys(formState).length >= Object.keys(_proxyFormState).length || Object.keys(formState).find((key) => _proxyFormState[key] === (!isRoot || VALIDATION_MODE.all));
}, convertToArrayPayload = (value) => Array.isArray(value) ? value : [value], shouldSubscribeByName = (name, signalName, exact) => !name || !signalName || name === signalName || convertToArrayPayload(name).some((currentName) => currentName && (exact ? currentName === signalName : currentName.startsWith(signalName) || signalName.startsWith(currentName)));
function useSubscribe(props) {
  let _props = import_react19.default.useRef(props);
  _props.current = props, import_react19.default.useEffect(() => {
    let subscription = !props.disabled && _props.current.subject && _props.current.subject.subscribe({
      next: _props.current.next
    });
    return () => {
      subscription && subscription.unsubscribe();
    };
  }, [props.disabled]);
}
function useFormState(props) {
  let methods = useFormContext(), { control = methods.control, disabled, name, exact } = props || {}, [formState, updateFormState] = import_react19.default.useState(control._formState), _mounted = import_react19.default.useRef(!0), _localProxyFormState = import_react19.default.useRef({
    isDirty: !1,
    isLoading: !1,
    dirtyFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }), _name = import_react19.default.useRef(name);
  return _name.current = name, useSubscribe({
    disabled,
    next: (value) => _mounted.current && shouldSubscribeByName(_name.current, value.name, exact) && shouldRenderFormState(value, _localProxyFormState.current, control._updateFormState) && updateFormState({
      ...control._formState,
      ...value
    }),
    subject: control._subjects.state
  }), import_react19.default.useEffect(() => (_mounted.current = !0, _localProxyFormState.current.isValid && control._updateValid(!0), () => {
    _mounted.current = !1;
  }), [control]), getProxyFormState(formState, control, _localProxyFormState.current, !1);
}
var isString = (value) => typeof value == "string", generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => isString(names) ? (isGlobal && _names.watch.add(names), get(formValues, names, defaultValue)) : Array.isArray(names) ? names.map((fieldName) => (isGlobal && _names.watch.add(fieldName), get(formValues, fieldName))) : (isGlobal && (_names.watchAll = !0), formValues);
function useWatch(props) {
  let methods = useFormContext(), { control = methods.control, name, defaultValue, disabled, exact } = props || {}, _name = import_react19.default.useRef(name);
  _name.current = name, useSubscribe({
    disabled,
    subject: control._subjects.values,
    next: (formState) => {
      shouldSubscribeByName(_name.current, formState.name, exact) && updateValue(cloneObject2(generateWatchOutput(_name.current, control._names, formState.values || control._formValues, !1, defaultValue)));
    }
  });
  let [value, updateValue] = import_react19.default.useState(control._getWatch(name, defaultValue));
  return import_react19.default.useEffect(() => control._removeUnmounted()), value;
}
var isKey = (value) => /^\w*$/.test(value), stringToPath = (input) => compact(input.replace(/["|']|\]/g, "").split(/\.|\[/)), set = (object, path, value) => {
  let index3 = -1, tempPath = isKey(path) ? [path] : stringToPath(path), length = tempPath.length, lastIndex = length - 1;
  for (; ++index3 < length; ) {
    let key = tempPath[index3], newValue = value;
    if (index3 !== lastIndex) {
      let objValue = object[key];
      newValue = isObject(objValue) || Array.isArray(objValue) ? objValue : isNaN(+tempPath[index3 + 1]) ? {} : [];
    }
    object[key] = newValue, object = object[key];
  }
  return object;
};
function useController(props) {
  let methods = useFormContext(), { name, disabled, control = methods.control, shouldUnregister } = props, isArrayField = isNameInFieldArray(control._names.array, name), value = useWatch({
    control,
    name,
    defaultValue: get(control._formValues, name, get(control._defaultValues, name, props.defaultValue)),
    exact: !0
  }), formState = useFormState({
    control,
    name
  }), _registerProps = import_react19.default.useRef(control.register(name, {
    ...props.rules,
    value,
    ...isBoolean(props.disabled) ? { disabled: props.disabled } : {}
  }));
  return import_react19.default.useEffect(() => {
    let _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister, updateMounted = (name2, value2) => {
      let field = get(control._fields, name2);
      field && (field._f.mount = value2);
    };
    if (updateMounted(name, !0), _shouldUnregisterField) {
      let value2 = cloneObject2(get(control._options.defaultValues, name));
      set(control._defaultValues, name, value2), isUndefined(get(control._formValues, name)) && set(control._formValues, name, value2);
    }
    return () => {
      (isArrayField ? _shouldUnregisterField && !control._state.action : _shouldUnregisterField) ? control.unregister(name) : updateMounted(name, !1);
    };
  }, [name, control, isArrayField, shouldUnregister]), import_react19.default.useEffect(() => {
    get(control._fields, name) && control._updateDisabledField({
      disabled,
      fields: control._fields,
      name,
      value: get(control._fields, name)._f.value
    });
  }, [disabled, name, control]), {
    field: {
      name,
      value,
      ...isBoolean(disabled) || isBoolean(formState.disabled) ? { disabled: formState.disabled || disabled } : {},
      onChange: import_react19.default.useCallback((event) => _registerProps.current.onChange({
        target: {
          value: getEventValue(event),
          name
        },
        type: EVENTS.CHANGE
      }), [name]),
      onBlur: import_react19.default.useCallback(() => _registerProps.current.onBlur({
        target: {
          value: get(control._formValues, name),
          name
        },
        type: EVENTS.BLUR
      }), [name, control]),
      ref: (elm) => {
        let field = get(control._fields, name);
        field && elm && (field._f.ref = {
          focus: () => elm.focus(),
          select: () => elm.select(),
          setCustomValidity: (message) => elm.setCustomValidity(message),
          reportValidity: () => elm.reportValidity()
        });
      }
    },
    formState,
    fieldState: Object.defineProperties({}, {
      invalid: {
        enumerable: !0,
        get: () => !!get(formState.errors, name)
      },
      isDirty: {
        enumerable: !0,
        get: () => !!get(formState.dirtyFields, name)
      },
      isTouched: {
        enumerable: !0,
        get: () => !!get(formState.touchedFields, name)
      },
      error: {
        enumerable: !0,
        get: () => get(formState.errors, name)
      }
    })
  };
}
var Controller = (props) => props.render(useController(props));
var appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria ? {
  ...errors[name],
  types: {
    ...errors[name] && errors[name].types ? errors[name].types : {},
    [type]: message || !0
  }
} : {};
var getValidationModes = (mode2) => ({
  isOnSubmit: !mode2 || mode2 === VALIDATION_MODE.onSubmit,
  isOnBlur: mode2 === VALIDATION_MODE.onBlur,
  isOnChange: mode2 === VALIDATION_MODE.onChange,
  isOnAll: mode2 === VALIDATION_MODE.all,
  isOnTouch: mode2 === VALIDATION_MODE.onTouched
}), isWatched = (name, _names, isBlurEvent) => !isBlurEvent && (_names.watchAll || _names.watch.has(name) || [..._names.watch].some((watchName) => name.startsWith(watchName) && /^\.\w+/.test(name.slice(watchName.length)))), iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {
  for (let key of fieldsNames || Object.keys(fields)) {
    let field = get(fields, key);
    if (field) {
      let { _f, ...currentField } = field;
      if (_f) {
        if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly)
          break;
        if (_f.ref && action(_f.ref, _f.name) && !abortEarly)
          break;
        iterateFieldsByAction(currentField, action);
      } else
        isObject(currentField) && iterateFieldsByAction(currentField, action);
    }
  }
}, updateFieldArrayRootError = (errors, error, name) => {
  let fieldArrayErrors = compact(get(errors, name));
  return set(fieldArrayErrors, "root", error[name]), set(errors, name, fieldArrayErrors), errors;
}, isFileInput = (element) => element.type === "file", isFunction = (value) => typeof value == "function", isHTMLElement = (value) => {
  if (!isWeb)
    return !1;
  let owner = value ? value.ownerDocument : 0;
  return value instanceof (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement);
}, isMessage = (value) => isString(value), isRadioInput = (element) => element.type === "radio", isRegex = (value) => value instanceof RegExp, defaultResult = {
  value: !1,
  isValid: !1
}, validResult = { value: !0, isValid: !0 }, getCheckboxValue = (options) => {
  if (Array.isArray(options)) {
    if (options.length > 1) {
      let values = options.filter((option) => option && option.checked && !option.disabled).map((option) => option.value);
      return { value: values, isValid: !!values.length };
    }
    return options[0].checked && !options[0].disabled ? (
      // @ts-expect-error expected to work in the browser
      options[0].attributes && !isUndefined(options[0].attributes.value) ? isUndefined(options[0].value) || options[0].value === "" ? validResult : { value: options[0].value, isValid: !0 } : validResult
    ) : defaultResult;
  }
  return defaultResult;
}, defaultReturn = {
  isValid: !1,
  value: null
}, getRadioValue = (options) => Array.isArray(options) ? options.reduce((previous, option) => option && option.checked && !option.disabled ? {
  isValid: !0,
  value: option.value
} : previous, defaultReturn) : defaultReturn;
function getValidateError(result, ref, type = "validate") {
  if (isMessage(result) || Array.isArray(result) && result.every(isMessage) || isBoolean(result) && !result)
    return {
      type,
      message: isMessage(result) ? result : "",
      ref
    };
}
var getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData) ? validationData : {
  value: validationData,
  message: ""
}, validateField = async (field, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {
  let { ref, refs, required, maxLength, minLength, min: min2, max: max2, pattern, validate, name, valueAsNumber, mount, disabled } = field._f, inputValue = get(formValues, name);
  if (!mount || disabled)
    return {};
  let inputRef = refs ? refs[0] : ref, setCustomValidity = (message) => {
    shouldUseNativeValidation && inputRef.reportValidity && (inputRef.setCustomValidity(isBoolean(message) ? "" : message || ""), inputRef.reportValidity());
  }, error = {}, isRadio = isRadioInput(ref), isCheckBox = isCheckBoxInput(ref), isRadioOrCheckbox2 = isRadio || isCheckBox, isEmpty = (valueAsNumber || isFileInput(ref)) && isUndefined(ref.value) && isUndefined(inputValue) || isHTMLElement(ref) && ref.value === "" || inputValue === "" || Array.isArray(inputValue) && !inputValue.length, appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error), getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {
    let message = exceedMax ? maxLengthMessage : minLengthMessage;
    error[name] = {
      type: exceedMax ? maxType : minType,
      message,
      ref,
      ...appendErrorsCurry(exceedMax ? maxType : minType, message)
    };
  };
  if (isFieldArray ? !Array.isArray(inputValue) || !inputValue.length : required && (!isRadioOrCheckbox2 && (isEmpty || isNullOrUndefined(inputValue)) || isBoolean(inputValue) && !inputValue || isCheckBox && !getCheckboxValue(refs).isValid || isRadio && !getRadioValue(refs).isValid)) {
    let { value, message } = isMessage(required) ? { value: !!required, message: required } : getValueAndMessage(required);
    if (value && (error[name] = {
      type: INPUT_VALIDATION_RULES.required,
      message,
      ref: inputRef,
      ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message)
    }, !validateAllFieldCriteria))
      return setCustomValidity(message), error;
  }
  if (!isEmpty && (!isNullOrUndefined(min2) || !isNullOrUndefined(max2))) {
    let exceedMax, exceedMin, maxOutput = getValueAndMessage(max2), minOutput = getValueAndMessage(min2);
    if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {
      let valueNumber = ref.valueAsNumber || inputValue && +inputValue;
      isNullOrUndefined(maxOutput.value) || (exceedMax = valueNumber > maxOutput.value), isNullOrUndefined(minOutput.value) || (exceedMin = valueNumber < minOutput.value);
    } else {
      let valueDate = ref.valueAsDate || new Date(inputValue), convertTimeToDate = (time) => /* @__PURE__ */ new Date((/* @__PURE__ */ new Date()).toDateString() + " " + time), isTime = ref.type == "time", isWeek = ref.type == "week";
      isString(maxOutput.value) && inputValue && (exceedMax = isTime ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value) : isWeek ? inputValue > maxOutput.value : valueDate > new Date(maxOutput.value)), isString(minOutput.value) && inputValue && (exceedMin = isTime ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value) : isWeek ? inputValue < minOutput.value : valueDate < new Date(minOutput.value));
    }
    if ((exceedMax || exceedMin) && (getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min), !validateAllFieldCriteria))
      return setCustomValidity(error[name].message), error;
  }
  if ((maxLength || minLength) && !isEmpty && (isString(inputValue) || isFieldArray && Array.isArray(inputValue))) {
    let maxLengthOutput = getValueAndMessage(maxLength), minLengthOutput = getValueAndMessage(minLength), exceedMax = !isNullOrUndefined(maxLengthOutput.value) && inputValue.length > +maxLengthOutput.value, exceedMin = !isNullOrUndefined(minLengthOutput.value) && inputValue.length < +minLengthOutput.value;
    if ((exceedMax || exceedMin) && (getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message), !validateAllFieldCriteria))
      return setCustomValidity(error[name].message), error;
  }
  if (pattern && !isEmpty && isString(inputValue)) {
    let { value: patternValue, message } = getValueAndMessage(pattern);
    if (isRegex(patternValue) && !inputValue.match(patternValue) && (error[name] = {
      type: INPUT_VALIDATION_RULES.pattern,
      message,
      ref,
      ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message)
    }, !validateAllFieldCriteria))
      return setCustomValidity(message), error;
  }
  if (validate) {
    if (isFunction(validate)) {
      let result = await validate(inputValue, formValues), validateError = getValidateError(result, inputRef);
      if (validateError && (error[name] = {
        ...validateError,
        ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message)
      }, !validateAllFieldCriteria))
        return setCustomValidity(validateError.message), error;
    } else if (isObject(validate)) {
      let validationResult = {};
      for (let key in validate) {
        if (!isEmptyObject(validationResult) && !validateAllFieldCriteria)
          break;
        let validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);
        validateError && (validationResult = {
          ...validateError,
          ...appendErrorsCurry(key, validateError.message)
        }, setCustomValidity(validateError.message), validateAllFieldCriteria && (error[name] = validationResult));
      }
      if (!isEmptyObject(validationResult) && (error[name] = {
        ref: inputRef,
        ...validationResult
      }, !validateAllFieldCriteria))
        return error;
    }
  }
  return setCustomValidity(!0), error;
};
function baseGet(object, updatePath) {
  let length = updatePath.slice(0, -1).length, index3 = 0;
  for (; index3 < length; )
    object = isUndefined(object) ? index3++ : object[updatePath[index3++]];
  return object;
}
function isEmptyArray(obj) {
  for (let key in obj)
    if (obj.hasOwnProperty(key) && !isUndefined(obj[key]))
      return !1;
  return !0;
}
function unset(object, path) {
  let paths = Array.isArray(path) ? path : isKey(path) ? [path] : stringToPath(path), childObject = paths.length === 1 ? object : baseGet(object, paths), index3 = paths.length - 1, key = paths[index3];
  return childObject && delete childObject[key], index3 !== 0 && (isObject(childObject) && isEmptyObject(childObject) || Array.isArray(childObject) && isEmptyArray(childObject)) && unset(object, paths.slice(0, -1)), object;
}
var createSubject = () => {
  let _observers = [];
  return {
    get observers() {
      return _observers;
    },
    next: (value) => {
      for (let observer of _observers)
        observer.next && observer.next(value);
    },
    subscribe: (observer) => (_observers.push(observer), {
      unsubscribe: () => {
        _observers = _observers.filter((o2) => o2 !== observer);
      }
    }),
    unsubscribe: () => {
      _observers = [];
    }
  };
}, isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);
function deepEqual(object1, object2) {
  if (isPrimitive(object1) || isPrimitive(object2))
    return object1 === object2;
  if (isDateObject(object1) && isDateObject(object2))
    return object1.getTime() === object2.getTime();
  let keys1 = Object.keys(object1), keys2 = Object.keys(object2);
  if (keys1.length !== keys2.length)
    return !1;
  for (let key of keys1) {
    let val1 = object1[key];
    if (!keys2.includes(key))
      return !1;
    if (key !== "ref") {
      let val2 = object2[key];
      if (isDateObject(val1) && isDateObject(val2) || isObject(val1) && isObject(val2) || Array.isArray(val1) && Array.isArray(val2) ? !deepEqual(val1, val2) : val1 !== val2)
        return !1;
    }
  }
  return !0;
}
var isMultipleSelect = (element) => element.type === "select-multiple", isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref), live = (ref) => isHTMLElement(ref) && ref.isConnected, objectHasFunction = (data) => {
  for (let key in data)
    if (isFunction(data[key]))
      return !0;
  return !1;
};
function markFieldsDirty(data, fields = {}) {
  let isParentNodeArray = Array.isArray(data);
  if (isObject(data) || isParentNodeArray)
    for (let key in data)
      Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key]) ? (fields[key] = Array.isArray(data[key]) ? [] : {}, markFieldsDirty(data[key], fields[key])) : isNullOrUndefined(data[key]) || (fields[key] = !0);
  return fields;
}
function getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {
  let isParentNodeArray = Array.isArray(data);
  if (isObject(data) || isParentNodeArray)
    for (let key in data)
      Array.isArray(data[key]) || isObject(data[key]) && !objectHasFunction(data[key]) ? isUndefined(formValues) || isPrimitive(dirtyFieldsFromValues[key]) ? dirtyFieldsFromValues[key] = Array.isArray(data[key]) ? markFieldsDirty(data[key], []) : { ...markFieldsDirty(data[key]) } : getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]) : dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);
  return dirtyFieldsFromValues;
}
var getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues)), getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value) ? value : valueAsNumber ? value === "" ? NaN : value && +value : valueAsDate && isString(value) ? new Date(value) : setValueAs ? setValueAs(value) : value;
function getFieldValue(_f) {
  let ref = _f.ref;
  if (!(_f.refs ? _f.refs.every((ref2) => ref2.disabled) : ref.disabled))
    return isFileInput(ref) ? ref.files : isRadioInput(ref) ? getRadioValue(_f.refs).value : isMultipleSelect(ref) ? [...ref.selectedOptions].map(({ value }) => value) : isCheckBoxInput(ref) ? getCheckboxValue(_f.refs).value : getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);
}
var getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {
  let fields = {};
  for (let name of fieldsNames) {
    let field = get(_fields, name);
    field && set(fields, name, field._f);
  }
  return {
    criteriaMode,
    names: [...fieldsNames],
    fields,
    shouldUseNativeValidation
  };
}, getRuleValue = (rule) => isUndefined(rule) ? rule : isRegex(rule) ? rule.source : isObject(rule) ? isRegex(rule.value) ? rule.value.source : rule.value : rule, hasValidation = (options) => options.mount && (options.required || options.min || options.max || options.maxLength || options.minLength || options.pattern || options.validate);
function schemaErrorLookup(errors, _fields, name) {
  let error = get(errors, name);
  if (error || isKey(name))
    return {
      error,
      name
    };
  let names = name.split(".");
  for (; names.length; ) {
    let fieldName = names.join("."), field = get(_fields, fieldName), foundError = get(errors, fieldName);
    if (field && !Array.isArray(field) && name !== fieldName)
      return { name };
    if (foundError && foundError.type)
      return {
        name: fieldName,
        error: foundError
      };
    names.pop();
  }
  return {
    name
  };
}
var skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode2) => mode2.isOnAll ? !1 : !isSubmitted && mode2.isOnTouch ? !(isTouched || isBlurEvent) : (isSubmitted ? reValidateMode.isOnBlur : mode2.isOnBlur) ? !isBlurEvent : (isSubmitted ? reValidateMode.isOnChange : mode2.isOnChange) ? isBlurEvent : !0, unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name), defaultOptions2 = {
  mode: VALIDATION_MODE.onSubmit,
  reValidateMode: VALIDATION_MODE.onChange,
  shouldFocusError: !0
};
function createFormControl(props = {}, flushRootRender) {
  let _options = {
    ...defaultOptions2,
    ...props
  }, _formState = {
    submitCount: 0,
    isDirty: !1,
    isLoading: isFunction(_options.defaultValues),
    isValidating: !1,
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    touchedFields: {},
    dirtyFields: {},
    errors: _options.errors || {},
    disabled: !1
  }, _fields = {}, _defaultValues = isObject(_options.defaultValues) || isObject(_options.values) ? cloneObject2(_options.defaultValues || _options.values) || {} : {}, _formValues = _options.shouldUnregister ? {} : cloneObject2(_defaultValues), _state = {
    action: !1,
    mount: !1,
    watch: !1
  }, _names = {
    mount: /* @__PURE__ */ new Set(),
    unMount: /* @__PURE__ */ new Set(),
    array: /* @__PURE__ */ new Set(),
    watch: /* @__PURE__ */ new Set()
  }, delayErrorCallback, timer = 0, _proxyFormState = {
    isDirty: !1,
    dirtyFields: !1,
    touchedFields: !1,
    isValidating: !1,
    isValid: !1,
    errors: !1
  }, _subjects = {
    values: createSubject(),
    array: createSubject(),
    state: createSubject()
  }, shouldCaptureDirtyFields = props.resetOptions && props.resetOptions.keepDirtyValues, validationModeBeforeSubmit = getValidationModes(_options.mode), validationModeAfterSubmit = getValidationModes(_options.reValidateMode), shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all, debounce2 = (callback) => (wait) => {
    clearTimeout(timer), timer = setTimeout(callback, wait);
  }, _updateValid = async (shouldUpdateValid) => {
    if (_proxyFormState.isValid || shouldUpdateValid) {
      let isValid2 = _options.resolver ? isEmptyObject((await _executeSchema()).errors) : await executeBuiltInValidation(_fields, !0);
      isValid2 !== _formState.isValid && _subjects.state.next({
        isValid: isValid2
      });
    }
  }, _updateIsValidating = (value) => _proxyFormState.isValidating && _subjects.state.next({
    isValidating: value
  }), _updateFieldArray = (name, values = [], method, args, shouldSetValues = !0, shouldUpdateFieldsAndState = !0) => {
    if (args && method) {
      if (_state.action = !0, shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {
        let fieldValues = method(get(_fields, name), args.argA, args.argB);
        shouldSetValues && set(_fields, name, fieldValues);
      }
      if (shouldUpdateFieldsAndState && Array.isArray(get(_formState.errors, name))) {
        let errors = method(get(_formState.errors, name), args.argA, args.argB);
        shouldSetValues && set(_formState.errors, name, errors), unsetEmptyArray(_formState.errors, name);
      }
      if (_proxyFormState.touchedFields && shouldUpdateFieldsAndState && Array.isArray(get(_formState.touchedFields, name))) {
        let touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);
        shouldSetValues && set(_formState.touchedFields, name, touchedFields);
      }
      _proxyFormState.dirtyFields && (_formState.dirtyFields = getDirtyFields(_defaultValues, _formValues)), _subjects.state.next({
        name,
        isDirty: _getDirty(name, values),
        dirtyFields: _formState.dirtyFields,
        errors: _formState.errors,
        isValid: _formState.isValid
      });
    } else
      set(_formValues, name, values);
  }, updateErrors = (name, error) => {
    set(_formState.errors, name, error), _subjects.state.next({
      errors: _formState.errors
    });
  }, _setErrors = (errors) => {
    _formState.errors = errors, _subjects.state.next({
      errors: _formState.errors,
      isValid: !1
    });
  }, updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {
    let field = get(_fields, name);
    if (field) {
      let defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);
      isUndefined(defaultValue) || ref && ref.defaultChecked || shouldSkipSetValueAs ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f)) : setFieldValue(name, defaultValue), _state.mount && _updateValid();
    }
  }, updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {
    let shouldUpdateField = !1, isPreviousDirty = !1, output = {
      name
    }, disabledField = !!(get(_fields, name) && get(_fields, name)._f.disabled);
    if (!isBlurEvent || shouldDirty) {
      _proxyFormState.isDirty && (isPreviousDirty = _formState.isDirty, _formState.isDirty = output.isDirty = _getDirty(), shouldUpdateField = isPreviousDirty !== output.isDirty);
      let isCurrentFieldPristine = disabledField || deepEqual(get(_defaultValues, name), fieldValue);
      isPreviousDirty = !!(!disabledField && get(_formState.dirtyFields, name)), isCurrentFieldPristine || disabledField ? unset(_formState.dirtyFields, name) : set(_formState.dirtyFields, name, !0), output.dirtyFields = _formState.dirtyFields, shouldUpdateField = shouldUpdateField || _proxyFormState.dirtyFields && isPreviousDirty !== !isCurrentFieldPristine;
    }
    if (isBlurEvent) {
      let isPreviousFieldTouched = get(_formState.touchedFields, name);
      isPreviousFieldTouched || (set(_formState.touchedFields, name, isBlurEvent), output.touchedFields = _formState.touchedFields, shouldUpdateField = shouldUpdateField || _proxyFormState.touchedFields && isPreviousFieldTouched !== isBlurEvent);
    }
    return shouldUpdateField && shouldRender && _subjects.state.next(output), shouldUpdateField ? output : {};
  }, shouldRenderByError = (name, isValid2, error, fieldState) => {
    let previousFieldError = get(_formState.errors, name), shouldUpdateValid = _proxyFormState.isValid && isBoolean(isValid2) && _formState.isValid !== isValid2;
    if (props.delayError && error ? (delayErrorCallback = debounce2(() => updateErrors(name, error)), delayErrorCallback(props.delayError)) : (clearTimeout(timer), delayErrorCallback = null, error ? set(_formState.errors, name, error) : unset(_formState.errors, name)), (error ? !deepEqual(previousFieldError, error) : previousFieldError) || !isEmptyObject(fieldState) || shouldUpdateValid) {
      let updatedFormState = {
        ...fieldState,
        ...shouldUpdateValid && isBoolean(isValid2) ? { isValid: isValid2 } : {},
        errors: _formState.errors,
        name
      };
      _formState = {
        ..._formState,
        ...updatedFormState
      }, _subjects.state.next(updatedFormState);
    }
    _updateIsValidating(!1);
  }, _executeSchema = async (name) => _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation)), executeSchemaAndUpdateState = async (names) => {
    let { errors } = await _executeSchema(names);
    if (names)
      for (let name of names) {
        let error = get(errors, name);
        error ? set(_formState.errors, name, error) : unset(_formState.errors, name);
      }
    else
      _formState.errors = errors;
    return errors;
  }, executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {
    valid: !0
  }) => {
    for (let name in fields) {
      let field = fields[name];
      if (field) {
        let { _f, ...fieldValue } = field;
        if (_f) {
          let isFieldArrayRoot = _names.array.has(_f.name), fieldError = await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);
          if (fieldError[_f.name] && (context.valid = !1, shouldOnlyCheckValid))
            break;
          !shouldOnlyCheckValid && (get(fieldError, _f.name) ? isFieldArrayRoot ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name) : set(_formState.errors, _f.name, fieldError[_f.name]) : unset(_formState.errors, _f.name));
        }
        fieldValue && await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context);
      }
    }
    return context.valid;
  }, _removeUnmounted = () => {
    for (let name of _names.unMount) {
      let field = get(_fields, name);
      field && (field._f.refs ? field._f.refs.every((ref) => !live(ref)) : !live(field._f.ref)) && unregister(name);
    }
    _names.unMount = /* @__PURE__ */ new Set();
  }, _getDirty = (name, data) => (name && data && set(_formValues, name, data), !deepEqual(getValues(), _defaultValues)), _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {
    ..._state.mount ? _formValues : isUndefined(defaultValue) ? _defaultValues : isString(names) ? { [names]: defaultValue } : defaultValue
  }, isGlobal, defaultValue), _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, props.shouldUnregister ? get(_defaultValues, name, []) : [])), setFieldValue = (name, value, options = {}) => {
    let field = get(_fields, name), fieldValue = value;
    if (field) {
      let fieldReference = field._f;
      fieldReference && (!fieldReference.disabled && set(_formValues, name, getFieldValueAs(value, fieldReference)), fieldValue = isHTMLElement(fieldReference.ref) && isNullOrUndefined(value) ? "" : value, isMultipleSelect(fieldReference.ref) ? [...fieldReference.ref.options].forEach((optionRef) => optionRef.selected = fieldValue.includes(optionRef.value)) : fieldReference.refs ? isCheckBoxInput(fieldReference.ref) ? fieldReference.refs.length > 1 ? fieldReference.refs.forEach((checkboxRef) => (!checkboxRef.defaultChecked || !checkboxRef.disabled) && (checkboxRef.checked = Array.isArray(fieldValue) ? !!fieldValue.find((data) => data === checkboxRef.value) : fieldValue === checkboxRef.value)) : fieldReference.refs[0] && (fieldReference.refs[0].checked = !!fieldValue) : fieldReference.refs.forEach((radioRef) => radioRef.checked = radioRef.value === fieldValue) : isFileInput(fieldReference.ref) ? fieldReference.ref.value = "" : (fieldReference.ref.value = fieldValue, fieldReference.ref.type || _subjects.values.next({
        name,
        values: { ..._formValues }
      })));
    }
    (options.shouldDirty || options.shouldTouch) && updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, !0), options.shouldValidate && trigger(name);
  }, setValues = (name, value, options) => {
    for (let fieldKey in value) {
      let fieldValue = value[fieldKey], fieldName = `${name}.${fieldKey}`, field = get(_fields, fieldName);
      (_names.array.has(name) || !isPrimitive(fieldValue) || field && !field._f) && !isDateObject(fieldValue) ? setValues(fieldName, fieldValue, options) : setFieldValue(fieldName, fieldValue, options);
    }
  }, setValue = (name, value, options = {}) => {
    let field = get(_fields, name), isFieldArray = _names.array.has(name), cloneValue = cloneObject2(value);
    set(_formValues, name, cloneValue), isFieldArray ? (_subjects.array.next({
      name,
      values: { ..._formValues }
    }), (_proxyFormState.isDirty || _proxyFormState.dirtyFields) && options.shouldDirty && _subjects.state.next({
      name,
      dirtyFields: getDirtyFields(_defaultValues, _formValues),
      isDirty: _getDirty(name, cloneValue)
    })) : field && !field._f && !isNullOrUndefined(cloneValue) ? setValues(name, cloneValue, options) : setFieldValue(name, cloneValue, options), isWatched(name, _names) && _subjects.state.next({ ..._formState }), _subjects.values.next({
      name,
      values: { ..._formValues }
    }), !_state.mount && flushRootRender();
  }, onChange = async (event) => {
    let target = event.target, name = target.name, isFieldValueUpdated = !0, field = get(_fields, name), getCurrentFieldValue = () => target.type ? getFieldValue(field._f) : getEventValue(event), _updateIsFieldValueUpdated = (fieldValue) => {
      isFieldValueUpdated = Number.isNaN(fieldValue) || fieldValue === get(_formValues, name, fieldValue);
    };
    if (field) {
      let error, isValid2, fieldValue = getCurrentFieldValue(), isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT, shouldSkipValidation = !hasValidation(field._f) && !_options.resolver && !get(_formState.errors, name) && !field._f.deps || skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit), watched = isWatched(name, _names, isBlurEvent);
      set(_formValues, name, fieldValue), isBlurEvent ? (field._f.onBlur && field._f.onBlur(event), delayErrorCallback && delayErrorCallback(0)) : field._f.onChange && field._f.onChange(event);
      let fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent, !1), shouldRender = !isEmptyObject(fieldState) || watched;
      if (!isBlurEvent && _subjects.values.next({
        name,
        type: event.type,
        values: { ..._formValues }
      }), shouldSkipValidation)
        return _proxyFormState.isValid && _updateValid(), shouldRender && _subjects.state.next({ name, ...watched ? {} : fieldState });
      if (!isBlurEvent && watched && _subjects.state.next({ ..._formState }), _updateIsValidating(!0), _options.resolver) {
        let { errors } = await _executeSchema([name]);
        if (_updateIsFieldValueUpdated(fieldValue), isFieldValueUpdated) {
          let previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name), errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);
          error = errorLookupResult.error, name = errorLookupResult.name, isValid2 = isEmptyObject(errors);
        }
      } else
        error = (await validateField(field, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name], _updateIsFieldValueUpdated(fieldValue), isFieldValueUpdated && (error ? isValid2 = !1 : _proxyFormState.isValid && (isValid2 = await executeBuiltInValidation(_fields, !0)));
      isFieldValueUpdated && (field._f.deps && trigger(field._f.deps), shouldRenderByError(name, isValid2, error, fieldState));
    }
  }, _focusInput = (ref, key) => {
    if (get(_formState.errors, key) && ref.focus)
      return ref.focus(), 1;
  }, trigger = async (name, options = {}) => {
    let isValid2, validationResult, fieldNames = convertToArrayPayload(name);
    if (_updateIsValidating(!0), _options.resolver) {
      let errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);
      isValid2 = isEmptyObject(errors), validationResult = name ? !fieldNames.some((name2) => get(errors, name2)) : isValid2;
    } else
      name ? (validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {
        let field = get(_fields, fieldName);
        return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);
      }))).every(Boolean), !(!validationResult && !_formState.isValid) && _updateValid()) : validationResult = isValid2 = await executeBuiltInValidation(_fields);
    return _subjects.state.next({
      ...!isString(name) || _proxyFormState.isValid && isValid2 !== _formState.isValid ? {} : { name },
      ..._options.resolver || !name ? { isValid: isValid2 } : {},
      errors: _formState.errors,
      isValidating: !1
    }), options.shouldFocus && !validationResult && iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount), validationResult;
  }, getValues = (fieldNames) => {
    let values = {
      ..._defaultValues,
      ..._state.mount ? _formValues : {}
    };
    return isUndefined(fieldNames) ? values : isString(fieldNames) ? get(values, fieldNames) : fieldNames.map((name) => get(values, name));
  }, getFieldState = (name, formState) => ({
    invalid: !!get((formState || _formState).errors, name),
    isDirty: !!get((formState || _formState).dirtyFields, name),
    isTouched: !!get((formState || _formState).touchedFields, name),
    error: get((formState || _formState).errors, name)
  }), clearErrors = (name) => {
    name && convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName)), _subjects.state.next({
      errors: name ? _formState.errors : {}
    });
  }, setError = (name, error, options) => {
    let ref = (get(_fields, name, { _f: {} })._f || {}).ref;
    set(_formState.errors, name, {
      ...error,
      ref
    }), _subjects.state.next({
      name,
      errors: _formState.errors,
      isValid: !1
    }), options && options.shouldFocus && ref && ref.focus && ref.focus();
  }, watch = (name, defaultValue) => isFunction(name) ? _subjects.values.subscribe({
    next: (payload) => name(_getWatch(void 0, defaultValue), payload)
  }) : _getWatch(name, defaultValue, !0), unregister = (name, options = {}) => {
    for (let fieldName of name ? convertToArrayPayload(name) : _names.mount)
      _names.mount.delete(fieldName), _names.array.delete(fieldName), options.keepValue || (unset(_fields, fieldName), unset(_formValues, fieldName)), !options.keepError && unset(_formState.errors, fieldName), !options.keepDirty && unset(_formState.dirtyFields, fieldName), !options.keepTouched && unset(_formState.touchedFields, fieldName), !_options.shouldUnregister && !options.keepDefaultValue && unset(_defaultValues, fieldName);
    _subjects.values.next({
      values: { ..._formValues }
    }), _subjects.state.next({
      ..._formState,
      ...options.keepDirty ? { isDirty: _getDirty() } : {}
    }), !options.keepIsValid && _updateValid();
  }, _updateDisabledField = ({ disabled, name, field, fields, value }) => {
    if (isBoolean(disabled)) {
      let inputValue = disabled ? void 0 : isUndefined(value) ? getFieldValue(field ? field._f : get(fields, name)._f) : value;
      set(_formValues, name, inputValue), updateTouchAndDirty(name, inputValue, !1, !1, !0);
    }
  }, register = (name, options = {}) => {
    let field = get(_fields, name), disabledIsDefined = isBoolean(options.disabled);
    return set(_fields, name, {
      ...field || {},
      _f: {
        ...field && field._f ? field._f : { ref: { name } },
        name,
        mount: !0,
        ...options
      }
    }), _names.mount.add(name), field ? _updateDisabledField({
      field,
      disabled: options.disabled,
      name,
      value: options.value
    }) : updateValidAndValue(name, !0, options.value), {
      ...disabledIsDefined ? { disabled: options.disabled } : {},
      ..._options.progressive ? {
        required: !!options.required,
        min: getRuleValue(options.min),
        max: getRuleValue(options.max),
        minLength: getRuleValue(options.minLength),
        maxLength: getRuleValue(options.maxLength),
        pattern: getRuleValue(options.pattern)
      } : {},
      name,
      onChange,
      onBlur: onChange,
      ref: (ref) => {
        if (ref) {
          register(name, options), field = get(_fields, name);
          let fieldRef = isUndefined(ref.value) && ref.querySelectorAll && ref.querySelectorAll("input,select,textarea")[0] || ref, radioOrCheckbox = isRadioOrCheckbox(fieldRef), refs = field._f.refs || [];
          if (radioOrCheckbox ? refs.find((option) => option === fieldRef) : fieldRef === field._f.ref)
            return;
          set(_fields, name, {
            _f: {
              ...field._f,
              ...radioOrCheckbox ? {
                refs: [
                  ...refs.filter(live),
                  fieldRef,
                  ...Array.isArray(get(_defaultValues, name)) ? [{}] : []
                ],
                ref: { type: fieldRef.type, name }
              } : { ref: fieldRef }
            }
          }), updateValidAndValue(name, !1, void 0, fieldRef);
        } else
          field = get(_fields, name, {}), field._f && (field._f.mount = !1), (_options.shouldUnregister || options.shouldUnregister) && !(isNameInFieldArray(_names.array, name) && _state.action) && _names.unMount.add(name);
      }
    };
  }, _focusError = () => _options.shouldFocusError && iterateFieldsByAction(_fields, _focusInput, _names.mount), _disableForm = (disabled) => {
    isBoolean(disabled) && (_subjects.state.next({ disabled }), iterateFieldsByAction(_fields, (ref, name) => {
      let requiredDisabledState = disabled, currentField = get(_fields, name);
      currentField && isBoolean(currentField._f.disabled) && (requiredDisabledState || (requiredDisabledState = currentField._f.disabled)), ref.disabled = requiredDisabledState;
    }, 0, !1));
  }, handleSubmit = (onValid, onInvalid) => async (e3) => {
    e3 && (e3.preventDefault && e3.preventDefault(), e3.persist && e3.persist());
    let fieldValues = cloneObject2(_formValues);
    if (_subjects.state.next({
      isSubmitting: !0
    }), _options.resolver) {
      let { errors, values } = await _executeSchema();
      _formState.errors = errors, fieldValues = values;
    } else
      await executeBuiltInValidation(_fields);
    unset(_formState.errors, "root"), isEmptyObject(_formState.errors) ? (_subjects.state.next({
      errors: {}
    }), await onValid(fieldValues, e3)) : (onInvalid && await onInvalid({ ..._formState.errors }, e3), _focusError(), setTimeout(_focusError)), _subjects.state.next({
      isSubmitted: !0,
      isSubmitting: !1,
      isSubmitSuccessful: isEmptyObject(_formState.errors),
      submitCount: _formState.submitCount + 1,
      errors: _formState.errors
    });
  }, resetField = (name, options = {}) => {
    get(_fields, name) && (isUndefined(options.defaultValue) ? setValue(name, get(_defaultValues, name)) : (setValue(name, options.defaultValue), set(_defaultValues, name, options.defaultValue)), options.keepTouched || unset(_formState.touchedFields, name), options.keepDirty || (unset(_formState.dirtyFields, name), _formState.isDirty = options.defaultValue ? _getDirty(name, get(_defaultValues, name)) : _getDirty()), options.keepError || (unset(_formState.errors, name), _proxyFormState.isValid && _updateValid()), _subjects.state.next({ ..._formState }));
  }, _reset = (formValues, keepStateOptions = {}) => {
    let updatedValues = formValues ? cloneObject2(formValues) : _defaultValues, cloneUpdatedValues = cloneObject2(updatedValues), values = formValues && !isEmptyObject(formValues) ? cloneUpdatedValues : _defaultValues;
    if (keepStateOptions.keepDefaultValues || (_defaultValues = updatedValues), !keepStateOptions.keepValues) {
      if (keepStateOptions.keepDirtyValues || shouldCaptureDirtyFields)
        for (let fieldName of _names.mount)
          get(_formState.dirtyFields, fieldName) ? set(values, fieldName, get(_formValues, fieldName)) : setValue(fieldName, get(values, fieldName));
      else {
        if (isWeb && isUndefined(formValues))
          for (let name of _names.mount) {
            let field = get(_fields, name);
            if (field && field._f) {
              let fieldReference = Array.isArray(field._f.refs) ? field._f.refs[0] : field._f.ref;
              if (isHTMLElement(fieldReference)) {
                let form = fieldReference.closest("form");
                if (form) {
                  form.reset();
                  break;
                }
              }
            }
          }
        _fields = {};
      }
      _formValues = props.shouldUnregister ? keepStateOptions.keepDefaultValues ? cloneObject2(_defaultValues) : {} : cloneObject2(values), _subjects.array.next({
        values: { ...values }
      }), _subjects.values.next({
        values: { ...values }
      });
    }
    _names = {
      mount: /* @__PURE__ */ new Set(),
      unMount: /* @__PURE__ */ new Set(),
      array: /* @__PURE__ */ new Set(),
      watch: /* @__PURE__ */ new Set(),
      watchAll: !1,
      focus: ""
    }, !_state.mount && flushRootRender(), _state.mount = !_proxyFormState.isValid || !!keepStateOptions.keepIsValid, _state.watch = !!props.shouldUnregister, _subjects.state.next({
      submitCount: keepStateOptions.keepSubmitCount ? _formState.submitCount : 0,
      isDirty: keepStateOptions.keepDirty ? _formState.isDirty : !!(keepStateOptions.keepDefaultValues && !deepEqual(formValues, _defaultValues)),
      isSubmitted: keepStateOptions.keepIsSubmitted ? _formState.isSubmitted : !1,
      dirtyFields: keepStateOptions.keepDirtyValues ? _formState.dirtyFields : keepStateOptions.keepDefaultValues && formValues ? getDirtyFields(_defaultValues, formValues) : {},
      touchedFields: keepStateOptions.keepTouched ? _formState.touchedFields : {},
      errors: keepStateOptions.keepErrors ? _formState.errors : {},
      isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful ? _formState.isSubmitSuccessful : !1,
      isSubmitting: !1
    });
  }, reset = (formValues, keepStateOptions) => _reset(isFunction(formValues) ? formValues(_formValues) : formValues, keepStateOptions);
  return {
    control: {
      register,
      unregister,
      getFieldState,
      handleSubmit,
      setError,
      _executeSchema,
      _getWatch,
      _getDirty,
      _updateValid,
      _removeUnmounted,
      _updateFieldArray,
      _updateDisabledField,
      _getFieldArray,
      _reset,
      _resetDefaultValues: () => isFunction(_options.defaultValues) && _options.defaultValues().then((values) => {
        reset(values, _options.resetOptions), _subjects.state.next({
          isLoading: !1
        });
      }),
      _updateFormState: (updatedFormState) => {
        _formState = {
          ..._formState,
          ...updatedFormState
        };
      },
      _disableForm,
      _subjects,
      _proxyFormState,
      _setErrors,
      get _fields() {
        return _fields;
      },
      get _formValues() {
        return _formValues;
      },
      get _state() {
        return _state;
      },
      set _state(value) {
        _state = value;
      },
      get _defaultValues() {
        return _defaultValues;
      },
      get _names() {
        return _names;
      },
      set _names(value) {
        _names = value;
      },
      get _formState() {
        return _formState;
      },
      set _formState(value) {
        _formState = value;
      },
      get _options() {
        return _options;
      },
      set _options(value) {
        _options = {
          ..._options,
          ...value
        };
      }
    },
    trigger,
    register,
    handleSubmit,
    watch,
    setValue,
    getValues,
    reset,
    resetField,
    clearErrors,
    unregister,
    setError,
    setFocus: (name, options = {}) => {
      let field = get(_fields, name), fieldReference = field && field._f;
      if (fieldReference) {
        let fieldRef = fieldReference.refs ? fieldReference.refs[0] : fieldReference.ref;
        fieldRef.focus && (fieldRef.focus(), options.shouldSelect && fieldRef.select());
      }
    },
    getFieldState
  };
}
function useForm(props = {}) {
  let _formControl = import_react19.default.useRef(), _values = import_react19.default.useRef(), [formState, updateFormState] = import_react19.default.useState({
    isDirty: !1,
    isValidating: !1,
    isLoading: isFunction(props.defaultValues),
    isSubmitted: !1,
    isSubmitting: !1,
    isSubmitSuccessful: !1,
    isValid: !1,
    submitCount: 0,
    dirtyFields: {},
    touchedFields: {},
    errors: props.errors || {},
    disabled: !1,
    defaultValues: isFunction(props.defaultValues) ? void 0 : props.defaultValues
  });
  _formControl.current || (_formControl.current = {
    ...createFormControl(props, () => updateFormState((formState2) => ({ ...formState2 }))),
    formState
  });
  let control = _formControl.current.control;
  return control._options = props, useSubscribe({
    subject: control._subjects.state,
    next: (value) => {
      shouldRenderFormState(value, control._proxyFormState, control._updateFormState, !0) && updateFormState({ ...control._formState });
    }
  }), import_react19.default.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]), import_react19.default.useEffect(() => {
    if (control._proxyFormState.isDirty) {
      let isDirty = control._getDirty();
      isDirty !== formState.isDirty && control._subjects.state.next({
        isDirty
      });
    }
  }, [control, formState.isDirty]), import_react19.default.useEffect(() => {
    props.values && !deepEqual(props.values, _values.current) ? (control._reset(props.values, control._options.resetOptions), _values.current = props.values, updateFormState((state) => ({ ...state }))) : control._resetDefaultValues();
  }, [props.values, control]), import_react19.default.useEffect(() => {
    props.errors && control._setErrors(props.errors);
  }, [props.errors, control]), import_react19.default.useEffect(() => {
    control._state.mount || (control._updateValid(), control._state.mount = !0), control._state.watch && (control._state.watch = !1, control._subjects.state.next({ ...control._formState })), control._removeUnmounted();
  }), _formControl.current.formState = getProxyFormState(formState, control), _formControl.current;
}

// app/components/ui/dialog.tsx
var React26 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-dialog/dist/index.mjs
var import_react23 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-id/dist/index.mjs
var $2AODx$react = __toESM(require_react(), 1);
var $1746a345f3d73bb7$var$useReactId = $2AODx$react["useId".toString()] || (() => {
}), $1746a345f3d73bb7$var$count = 0;
function $1746a345f3d73bb7$export$f680877a34711e37(deterministicId) {
  let [id3, setId] = $2AODx$react.useState($1746a345f3d73bb7$var$useReactId());
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    deterministicId || setId(
      (reactId) => reactId ?? String($1746a345f3d73bb7$var$count++)
    );
  }, [
    deterministicId
  ]), deterministicId || (id3 ? `radix-${id3}` : "");
}

// ../../node_modules/@radix-ui/react-focus-scope/dist/index.mjs
var import_react20 = __toESM(require_react(), 1);
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT = "focusScope.autoFocusOnMount", $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT = "focusScope.autoFocusOnUnmount", $d3863c46a17e8a28$var$EVENT_OPTIONS = {
  bubbles: !1,
  cancelable: !0
};
var $d3863c46a17e8a28$export$20e40289641fbbb6 = /* @__PURE__ */ (0, import_react20.forwardRef)((props, forwardedRef) => {
  let { loop = !1, trapped = !1, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props, [container1, setContainer] = (0, import_react20.useState)(null), onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onMountAutoFocusProp), onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onUnmountAutoFocusProp), lastFocusedElementRef = (0, import_react20.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContainer(node)
  ), focusScope = (0, import_react20.useRef)({
    paused: !1,
    pause() {
      this.paused = !0;
    },
    resume() {
      this.paused = !1;
    }
  }).current;
  (0, import_react20.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1)
          return;
        let target = event.target;
        container1.contains(target) ? lastFocusedElementRef.current = target : $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: !0
        });
      }, handleFocusOut = function(event) {
        if (focusScope.paused || !container1)
          return;
        let relatedTarget = event.relatedTarget;
        relatedTarget !== null && (container1.contains(relatedTarget) || $d3863c46a17e8a28$var$focus(lastFocusedElementRef.current, {
          select: !0
        }));
      }, handleMutations = function(mutations) {
        if (document.activeElement === document.body)
          for (let mutation of mutations)
            mutation.removedNodes.length > 0 && $d3863c46a17e8a28$var$focus(container1);
      };
      document.addEventListener("focusin", handleFocusIn), document.addEventListener("focusout", handleFocusOut);
      let mutationObserver = new MutationObserver(handleMutations);
      return container1 && mutationObserver.observe(container1, {
        childList: !0,
        subtree: !0
      }), () => {
        document.removeEventListener("focusin", handleFocusIn), document.removeEventListener("focusout", handleFocusOut), mutationObserver.disconnect();
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]), (0, import_react20.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack.add(focusScope);
      let previouslyFocusedElement = document.activeElement;
      if (!container1.contains(previouslyFocusedElement)) {
        let mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus), container1.dispatchEvent(mountEvent), mountEvent.defaultPrevented || ($d3863c46a17e8a28$var$focusFirst($d3863c46a17e8a28$var$removeLinks($d3863c46a17e8a28$var$getTabbableCandidates(container1)), {
          select: !0
        }), document.activeElement === previouslyFocusedElement && $d3863c46a17e8a28$var$focus(container1));
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT, onMountAutoFocus), setTimeout(() => {
          let unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, $d3863c46a17e8a28$var$EVENT_OPTIONS);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus), container1.dispatchEvent(unmountEvent), unmountEvent.defaultPrevented || $d3863c46a17e8a28$var$focus(previouslyFocusedElement ?? document.body, {
            select: !0
          }), container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT, onUnmountAutoFocus), $d3863c46a17e8a28$var$focusScopesStack.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  let handleKeyDown = (0, import_react20.useCallback)((event) => {
    if (!loop && !trapped || focusScope.paused)
      return;
    let isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey, focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      let container = event.currentTarget, [first, last] = $d3863c46a17e8a28$var$getTabbableEdges(container);
      first && last ? !event.shiftKey && focusedElement === last ? (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus(first, {
        select: !0
      })) : event.shiftKey && focusedElement === first && (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus(last, {
        select: !0
      })) : focusedElement === container && event.preventDefault();
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return /* @__PURE__ */ (0, import_react20.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
function $d3863c46a17e8a28$var$focusFirst(candidates, { select = !1 } = {}) {
  let previouslyFocusedElement = document.activeElement;
  for (let candidate of candidates)
    if ($d3863c46a17e8a28$var$focus(candidate, {
      select
    }), document.activeElement !== previouslyFocusedElement)
      return;
}
function $d3863c46a17e8a28$var$getTabbableEdges(container) {
  let candidates = $d3863c46a17e8a28$var$getTabbableCandidates(container), first = $d3863c46a17e8a28$var$findVisible(candidates, container), last = $d3863c46a17e8a28$var$findVisible(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates(container) {
  let nodes = [], walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      let isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      return node.disabled || node.hidden || isHiddenInput ? NodeFilter.FILTER_SKIP : node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; walker.nextNode(); )
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible(elements, container) {
  for (let element of elements)
    if (!$d3863c46a17e8a28$var$isHidden(element, {
      upTo: container
    }))
      return element;
}
function $d3863c46a17e8a28$var$isHidden(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return !0;
  for (; node; ) {
    if (upTo !== void 0 && node === upTo)
      return !1;
    if (getComputedStyle(node).display === "none")
      return !0;
    node = node.parentElement;
  }
  return !1;
}
function $d3863c46a17e8a28$var$isSelectableInput(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus(element, { select = !1 } = {}) {
  if (element && element.focus) {
    let previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: !0
    }), element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput(element) && select && element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack = $d3863c46a17e8a28$var$createFocusScopesStack();
function $d3863c46a17e8a28$var$createFocusScopesStack() {
  let stack = [];
  return {
    add(focusScope) {
      let activeFocusScope = stack[0];
      focusScope !== activeFocusScope && activeFocusScope?.pause(), stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope), stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove(stack, focusScope), (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove(array, item) {
  let updatedArray = [
    ...array
  ], index3 = updatedArray.indexOf(item);
  return index3 !== -1 && updatedArray.splice(index3, 1), updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// ../../node_modules/@radix-ui/react-focus-guards/dist/index.mjs
var import_react21 = __toESM(require_react(), 1), $3db38b7d1fb3fe6a$var$count = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c() {
  (0, import_react21.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    let edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard()), document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard()), $3db38b7d1fb3fe6a$var$count++, () => {
      $3db38b7d1fb3fe6a$var$count === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach(
        (node) => node.remove()
      ), $3db38b7d1fb3fe6a$var$count--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard() {
  let element = document.createElement("span");
  return element.setAttribute("data-radix-focus-guard", ""), element.tabIndex = 0, element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", element;
}

// ../../node_modules/tslib/modules/index.js
var import_tslib = __toESM(require_tslib(), 1), {
  __extends,
  __assign,
  __rest,
  __decorate,
  __param,
  __esDecorate,
  __runInitializers,
  __propKey,
  __setFunctionName,
  __metadata,
  __awaiter,
  __generator,
  __exportStar,
  __createBinding,
  __values,
  __read,
  __spread,
  __spreadArrays,
  __spreadArray,
  __await,
  __asyncGenerator,
  __asyncDelegator,
  __asyncValues,
  __makeTemplateObject,
  __importStar,
  __importDefault,
  __classPrivateFieldGet,
  __classPrivateFieldSet,
  __classPrivateFieldIn,
  __addDisposableResource,
  __disposeResources
} = import_tslib.default;

// ../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var React25 = __toESM(require_react());

// ../../node_modules/react-remove-scroll/dist/es2015/UI.js
var React21 = __toESM(require_react());

// ../../node_modules/react-remove-scroll-bar/dist/es2015/constants.js
var zeroRightClassName = "right-scroll-bar-position", fullWidthClassName = "width-before-scroll-bar", noScrollbarsClassName = "with-scroll-bars-hidden", removedBarSizeVariable = "--removed-body-scroll-bar-size";

// ../../node_modules/use-callback-ref/dist/es2015/assignRef.js
function assignRef(ref, value) {
  return typeof ref == "function" ? ref(value) : ref && (ref.current = value), ref;
}

// ../../node_modules/use-callback-ref/dist/es2015/useRef.js
var import_react22 = __toESM(require_react());
function useCallbackRef(initialValue, callback) {
  var ref = (0, import_react22.useState)(function() {
    return {
      // value
      value: initialValue,
      // last callback
      callback,
      // "memoized" public interface
      facade: {
        get current() {
          return ref.value;
        },
        set current(value) {
          var last = ref.value;
          last !== value && (ref.value = value, ref.callback(value, last));
        }
      }
    };
  })[0];
  return ref.callback = callback, ref.facade;
}

// ../../node_modules/use-callback-ref/dist/es2015/useMergeRef.js
function useMergeRefs(refs, defaultValue) {
  return useCallbackRef(defaultValue || null, function(newValue) {
    return refs.forEach(function(ref) {
      return assignRef(ref, newValue);
    });
  });
}

// ../../node_modules/use-sidecar/dist/es2015/medium.js
function ItoI(a4) {
  return a4;
}
function innerCreateMedium(defaults2, middleware) {
  middleware === void 0 && (middleware = ItoI);
  var buffer = [], assigned = !1, medium = {
    read: function() {
      if (assigned)
        throw new Error("Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.");
      return buffer.length ? buffer[buffer.length - 1] : defaults2;
    },
    useMedium: function(data) {
      var item = middleware(data, assigned);
      return buffer.push(item), function() {
        buffer = buffer.filter(function(x3) {
          return x3 !== item;
        });
      };
    },
    assignSyncMedium: function(cb) {
      for (assigned = !0; buffer.length; ) {
        var cbs = buffer;
        buffer = [], cbs.forEach(cb);
      }
      buffer = {
        push: function(x3) {
          return cb(x3);
        },
        filter: function() {
          return buffer;
        }
      };
    },
    assignMedium: function(cb) {
      assigned = !0;
      var pendingQueue = [];
      if (buffer.length) {
        var cbs = buffer;
        buffer = [], cbs.forEach(cb), pendingQueue = buffer;
      }
      var executeQueue = function() {
        var cbs2 = pendingQueue;
        pendingQueue = [], cbs2.forEach(cb);
      }, cycle = function() {
        return Promise.resolve().then(executeQueue);
      };
      cycle(), buffer = {
        push: function(x3) {
          pendingQueue.push(x3), cycle();
        },
        filter: function(filter3) {
          return pendingQueue = pendingQueue.filter(filter3), buffer;
        }
      };
    }
  };
  return medium;
}
function createSidecarMedium(options) {
  options === void 0 && (options = {});
  var medium = innerCreateMedium(null);
  return medium.options = __assign({ async: !0, ssr: !1 }, options), medium;
}

// ../../node_modules/use-sidecar/dist/es2015/exports.js
var React20 = __toESM(require_react()), SideCar = function(_a) {
  var sideCar = _a.sideCar, rest = __rest(_a, ["sideCar"]);
  if (!sideCar)
    throw new Error("Sidecar: please provide `sideCar` property to import the right car");
  var Target = sideCar.read();
  if (!Target)
    throw new Error("Sidecar medium not found");
  return React20.createElement(Target, __assign({}, rest));
};
SideCar.isSideCarExport = !0;
function exportSidecar(medium, exported) {
  return medium.useMedium(exported), SideCar;
}

// ../../node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar = createSidecarMedium();

// ../../node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing = function() {
}, RemoveScroll = React21.forwardRef(function(props, parentRef) {
  var ref = React21.useRef(null), _a = React21.useState({
    onScrollCapture: nothing,
    onWheelCapture: nothing,
    onTouchMoveCapture: nothing
  }), callbacks = _a[0], setCallbacks = _a[1], forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]), SideCar2 = sideCar, containerRef = useMergeRefs([ref, parentRef]), containerProps = __assign(__assign({}, rest), callbacks);
  return React21.createElement(
    React21.Fragment,
    null,
    enabled && React21.createElement(SideCar2, { sideCar: effectCar, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? React21.cloneElement(React21.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React21.createElement(Container, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll.defaultProps = {
  enabled: !0,
  removeScrollBar: !0,
  inert: !1
};
RemoveScroll.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// ../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React24 = __toESM(require_react());

// ../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var React23 = __toESM(require_react());

// ../../node_modules/react-style-singleton/dist/es2015/hook.js
var React22 = __toESM(require_react());

// ../../node_modules/get-nonce/dist/es2015/index.js
var currentNonce;
var getNonce = function() {
  if (currentNonce)
    return currentNonce;
  if (typeof __webpack_nonce__ < "u")
    return __webpack_nonce__;
};

// ../../node_modules/react-style-singleton/dist/es2015/singleton.js
function makeStyleTag() {
  if (!document)
    return null;
  var tag = document.createElement("style");
  tag.type = "text/css";
  var nonce = getNonce();
  return nonce && tag.setAttribute("nonce", nonce), tag;
}
function injectStyles(tag, css) {
  tag.styleSheet ? tag.styleSheet.cssText = css : tag.appendChild(document.createTextNode(css));
}
function insertStyleTag(tag) {
  var head = document.head || document.getElementsByTagName("head")[0];
  head.appendChild(tag);
}
var stylesheetSingleton = function() {
  var counter = 0, stylesheet = null;
  return {
    add: function(style) {
      counter == 0 && (stylesheet = makeStyleTag()) && (injectStyles(stylesheet, style), insertStyleTag(stylesheet)), counter++;
    },
    remove: function() {
      counter--, !counter && stylesheet && (stylesheet.parentNode && stylesheet.parentNode.removeChild(stylesheet), stylesheet = null);
    }
  };
};

// ../../node_modules/react-style-singleton/dist/es2015/hook.js
var styleHookSingleton = function() {
  var sheet = stylesheetSingleton();
  return function(styles, isDynamic) {
    React22.useEffect(function() {
      return sheet.add(styles), function() {
        sheet.remove();
      };
    }, [styles && isDynamic]);
  };
};

// ../../node_modules/react-style-singleton/dist/es2015/component.js
var styleSingleton = function() {
  var useStyle2 = styleHookSingleton(), Sheet = function(_a) {
    var styles = _a.styles, dynamic = _a.dynamic;
    return useStyle2(styles, dynamic), null;
  };
  return Sheet;
};

// ../../node_modules/react-remove-scroll-bar/dist/es2015/utils.js
var zeroGap = {
  left: 0,
  top: 0,
  right: 0,
  gap: 0
}, parse2 = function(x3) {
  return parseInt(x3 || "", 10) || 0;
}, getOffset = function(gapMode) {
  var cs = window.getComputedStyle(document.body), left = cs[gapMode === "padding" ? "paddingLeft" : "marginLeft"], top = cs[gapMode === "padding" ? "paddingTop" : "marginTop"], right = cs[gapMode === "padding" ? "paddingRight" : "marginRight"];
  return [parse2(left), parse2(top), parse2(right)];
}, getGapWidth = function(gapMode) {
  if (gapMode === void 0 && (gapMode = "margin"), typeof window > "u")
    return zeroGap;
  var offsets = getOffset(gapMode), documentWidth = document.documentElement.clientWidth, windowWidth = window.innerWidth;
  return {
    left: offsets[0],
    top: offsets[1],
    right: offsets[2],
    gap: Math.max(0, windowWidth - documentWidth + offsets[2] - offsets[0])
  };
};

// ../../node_modules/react-remove-scroll-bar/dist/es2015/component.js
var Style = styleSingleton(), getStyles = function(_a, allowRelative, gapMode, important) {
  var left = _a.left, top = _a.top, right = _a.right, gap = _a.gap;
  return gapMode === void 0 && (gapMode = "margin"), `
  .`.concat(noScrollbarsClassName, ` {
   overflow: hidden `).concat(important, `;
   padding-right: `).concat(gap, "px ").concat(important, `;
  }
  body {
    overflow: hidden `).concat(important, `;
    overscroll-behavior: contain;
    `).concat([
    allowRelative && "position: relative ".concat(important, ";"),
    gapMode === "margin" && `
    padding-left: `.concat(left, `px;
    padding-top: `).concat(top, `px;
    padding-right: `).concat(right, `px;
    margin-left:0;
    margin-top:0;
    margin-right: `).concat(gap, "px ").concat(important, `;
    `),
    gapMode === "padding" && "padding-right: ".concat(gap, "px ").concat(important, ";")
  ].filter(Boolean).join(""), `
  }
  
  .`).concat(zeroRightClassName, ` {
    right: `).concat(gap, "px ").concat(important, `;
  }
  
  .`).concat(fullWidthClassName, ` {
    margin-right: `).concat(gap, "px ").concat(important, `;
  }
  
  .`).concat(zeroRightClassName, " .").concat(zeroRightClassName, ` {
    right: 0 `).concat(important, `;
  }
  
  .`).concat(fullWidthClassName, " .").concat(fullWidthClassName, ` {
    margin-right: 0 `).concat(important, `;
  }
  
  body {
    `).concat(removedBarSizeVariable, ": ").concat(gap, `px;
  }
`);
}, RemoveScrollBar = function(props) {
  var noRelative = props.noRelative, noImportant = props.noImportant, _a = props.gapMode, gapMode = _a === void 0 ? "margin" : _a, gap = React23.useMemo(function() {
    return getGapWidth(gapMode);
  }, [gapMode]);
  return React23.createElement(Style, { styles: getStyles(gap, !noRelative, gapMode, noImportant ? "" : "!important") });
};

// ../../node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported = !1;
if (typeof window < "u")
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        return passiveSupported = !0, !0;
      }
    }), window.addEventListener("test", options, options), window.removeEventListener("test", options, options);
  } catch {
    passiveSupported = !1;
  }
var options, nonPassive = passiveSupported ? { passive: !1 } : !1;

// ../../node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var alwaysContainsScroll = function(node) {
  return node.tagName === "TEXTAREA";
}, elementCanBeScrolled = function(node, overflow) {
  var styles = window.getComputedStyle(node);
  return (
    // not-not-scrollable
    styles[overflow] !== "hidden" && // contains scroll inside self
    !(styles.overflowY === styles.overflowX && !alwaysContainsScroll(node) && styles[overflow] === "visible")
  );
}, elementCouldBeVScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowY");
}, elementCouldBeHScrolled = function(node) {
  return elementCanBeScrolled(node, "overflowX");
}, locationCouldBeScrolled = function(axis, node) {
  var current = node;
  do {
    typeof ShadowRoot < "u" && current instanceof ShadowRoot && (current = current.host);
    var isScrollable = elementCouldBeScrolled(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables(axis, current), s4 = _a[1], d4 = _a[2];
      if (s4 > d4)
        return !0;
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return !1;
}, getVScrollVariables = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
}, getHScrollVariables = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
}, elementCouldBeScrolled = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled(node) : elementCouldBeHScrolled(node);
}, getScrollVariables = function(axis, node) {
  return axis === "v" ? getVScrollVariables(node) : getHScrollVariables(node);
}, getDirectionFactor = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
}, handleScroll = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor(axis, window.getComputedStyle(endTarget).direction), delta = directionFactor * sourceDelta, target = event.target, targetInLock = endTarget.contains(target), shouldCancelScroll = !1, isDeltaPositive = delta > 0, availableScroll = 0, availableScrollTop = 0;
  do {
    var _a = getScrollVariables(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2], elementScroll = scroll_1 - capacity - directionFactor * position;
    (position || elementScroll) && elementCouldBeScrolled(axis, target) && (availableScroll += elementScroll, availableScrollTop += position), target = target.parentNode;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  return (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll) || !isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) && (shouldCancelScroll = !0), shouldCancelScroll;
};

// ../../node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
}, getDeltaXY = function(event) {
  return [event.deltaX, event.deltaY];
}, extractRef = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
}, deltaCompare = function(x3, y4) {
  return x3[0] === y4[0] && x3[1] === y4[1];
}, generateStyle = function(id3) {
  return `
  .block-interactivity-`.concat(id3, ` {pointer-events: none;}
  .allow-interactivity-`).concat(id3, ` {pointer-events: all;}
`);
}, idCounter = 0, lockStack = [];
function RemoveScrollSideCar(props) {
  var shouldPreventQueue = React24.useRef([]), touchStartRef = React24.useRef([0, 0]), activeAxis = React24.useRef(), id3 = React24.useState(idCounter++)[0], Style2 = React24.useState(function() {
    return styleSingleton();
  })[0], lastProps = React24.useRef(props);
  React24.useEffect(function() {
    lastProps.current = props;
  }, [props]), React24.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id3));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef), !0).filter(Boolean);
      return allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id3));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(id3)), allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id3));
        });
      };
    }
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React24.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2)
      return !lastProps.current.allowPinchZoom;
    var touch = getTouchXY(event), touchStart = touchStartRef.current, deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0], deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1], currentAxis, target = event.target, moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range")
      return !1;
    var canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target);
    if (!canBeScrolledInMainDirection)
      return !0;
    if (canBeScrolledInMainDirection ? currentAxis = moveDirection : (currentAxis = moveDirection === "v" ? "h" : "v", canBeScrolledInMainDirection = locationCouldBeScrolled(moveDirection, target)), !canBeScrolledInMainDirection)
      return !1;
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY) && (activeAxis.current = currentAxis), !currentAxis)
      return !0;
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, !0);
  }, []), shouldPrevent = React24.useCallback(function(_event) {
    var event = _event;
    if (!(!lockStack.length || lockStack[lockStack.length - 1] !== Style2)) {
      var delta = "deltaY" in event ? getDeltaXY(event) : getTouchXY(event), sourceEvent = shouldPreventQueue.current.filter(function(e3) {
        return e3.name === event.type && e3.target === event.target && deltaCompare(e3.delta, delta);
      })[0];
      if (sourceEvent && sourceEvent.should) {
        event.cancelable && event.preventDefault();
        return;
      }
      if (!sourceEvent) {
        var shardNodes = (lastProps.current.shards || []).map(extractRef).filter(Boolean).filter(function(node) {
          return node.contains(event.target);
        }), shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
        shouldStop && event.cancelable && event.preventDefault();
      }
    }
  }, []), shouldCancel = React24.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event), setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e3) {
        return e3 !== event;
      });
    }, 1);
  }, []), scrollTouchStart = React24.useCallback(function(event) {
    touchStartRef.current = getTouchXY(event), activeAxis.current = void 0;
  }, []), scrollWheel = React24.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []), scrollTouchMove = React24.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React24.useEffect(function() {
    return lockStack.push(Style2), props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    }), document.addEventListener("wheel", shouldPrevent, nonPassive), document.addEventListener("touchmove", shouldPrevent, nonPassive), document.addEventListener("touchstart", scrollTouchStart, nonPassive), function() {
      lockStack = lockStack.filter(function(inst) {
        return inst !== Style2;
      }), document.removeEventListener("wheel", shouldPrevent, nonPassive), document.removeEventListener("touchmove", shouldPrevent, nonPassive), document.removeEventListener("touchstart", scrollTouchStart, nonPassive);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React24.createElement(
    React24.Fragment,
    null,
    inert ? React24.createElement(Style2, { styles: generateStyle(id3) }) : null,
    removeScrollBar ? React24.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}

// ../../node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default = exportSidecar(effectCar, RemoveScrollSideCar);

// ../../node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll = React25.forwardRef(function(props, ref) {
  return React25.createElement(RemoveScroll, __assign({}, props, { ref, sideCar: sidecar_default }));
});
ReactRemoveScroll.classNames = RemoveScroll.classNames;
var Combination_default = ReactRemoveScroll;

// ../../node_modules/aria-hidden/dist/es2015/index.js
var getDefaultParent = function(originalTarget) {
  if (typeof document > "u")
    return null;
  var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;
  return sampleTarget.ownerDocument.body;
}, counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {}, lockCount = 0, unwrapHost = function(node) {
  return node && (node.host || unwrapHost(node.parentNode));
}, correctTargets = function(parent, targets) {
  return targets.map(function(target) {
    if (parent.contains(target))
      return target;
    var correctedTarget = unwrapHost(target);
    return correctedTarget && parent.contains(correctedTarget) ? correctedTarget : (console.error("aria-hidden", target, "in not contained inside", parent, ". Doing nothing"), null);
  }).filter(function(x3) {
    return Boolean(x3);
  });
}, applyAttributeToOthers = function(originalTarget, parentNode, markerName, controlAttribute) {
  var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);
  markerMap[markerName] || (markerMap[markerName] = /* @__PURE__ */ new WeakMap());
  var markerCounter = markerMap[markerName], hiddenNodes = [], elementsToKeep = /* @__PURE__ */ new Set(), elementsToStop = new Set(targets), keep = function(el) {
    !el || elementsToKeep.has(el) || (elementsToKeep.add(el), keep(el.parentNode));
  };
  targets.forEach(keep);
  var deep = function(parent) {
    !parent || elementsToStop.has(parent) || Array.prototype.forEach.call(parent.children, function(node) {
      if (elementsToKeep.has(node))
        deep(node);
      else {
        var attr = node.getAttribute(controlAttribute), alreadyHidden = attr !== null && attr !== "false", counterValue = (counterMap.get(node) || 0) + 1, markerValue = (markerCounter.get(node) || 0) + 1;
        counterMap.set(node, counterValue), markerCounter.set(node, markerValue), hiddenNodes.push(node), counterValue === 1 && alreadyHidden && uncontrolledNodes.set(node, !0), markerValue === 1 && node.setAttribute(markerName, "true"), alreadyHidden || node.setAttribute(controlAttribute, "true");
      }
    });
  };
  return deep(parentNode), elementsToKeep.clear(), lockCount++, function() {
    hiddenNodes.forEach(function(node) {
      var counterValue = counterMap.get(node) - 1, markerValue = markerCounter.get(node) - 1;
      counterMap.set(node, counterValue), markerCounter.set(node, markerValue), counterValue || (uncontrolledNodes.has(node) || node.removeAttribute(controlAttribute), uncontrolledNodes.delete(node)), markerValue || node.removeAttribute(markerName);
    }), lockCount--, lockCount || (counterMap = /* @__PURE__ */ new WeakMap(), counterMap = /* @__PURE__ */ new WeakMap(), uncontrolledNodes = /* @__PURE__ */ new WeakMap(), markerMap = {});
  };
}, hideOthers = function(originalTarget, parentNode, markerName) {
  markerName === void 0 && (markerName = "data-aria-hidden");
  var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]), activeParentNode = parentNode || getDefaultParent(originalTarget);
  return activeParentNode ? (targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll("[aria-live]"))), applyAttributeToOthers(targets, activeParentNode, markerName, "aria-hidden")) : function() {
    return null;
  };
};

// ../../node_modules/@radix-ui/react-dialog/dist/index.mjs
var $5d3850c4d0b4e6c7$var$DIALOG_NAME = "Dialog", [$5d3850c4d0b4e6c7$var$createDialogContext, $5d3850c4d0b4e6c7$export$cc702773b8ea3e41] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($5d3850c4d0b4e6c7$var$DIALOG_NAME), [$5d3850c4d0b4e6c7$var$DialogProvider, $5d3850c4d0b4e6c7$var$useDialogContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$DIALOG_NAME), $5d3850c4d0b4e6c7$export$3ddf2d174ce01153 = (props) => {
  let { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = !0 } = props, triggerRef = (0, import_react23.useRef)(null), contentRef = (0, import_react23.useRef)(null), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogProvider, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e37(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react23.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
}, $5d3850c4d0b4e6c7$var$TRIGGER_NAME = "DialogTrigger", $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88 = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...triggerProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TRIGGER_NAME, __scopeDialog), composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef);
  return /* @__PURE__ */ (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
}), $5d3850c4d0b4e6c7$var$PORTAL_NAME = "DialogPortal", [$5d3850c4d0b4e6c7$var$PortalProvider, $5d3850c4d0b4e6c7$var$usePortalContext] = $5d3850c4d0b4e6c7$var$createDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, {
  forceMount: void 0
}), $5d3850c4d0b4e6c7$export$dad7c95542bacce0 = (props) => {
  let { __scopeDialog, forceMount, children, container } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$PORTAL_NAME, __scopeDialog);
  return /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$PortalProvider, {
    scope: __scopeDialog,
    forceMount
  }, import_react23.Children.map(
    children,
    (child) => /* @__PURE__ */ (0, import_react23.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
      present: forceMount || context.open
    }, /* @__PURE__ */ (0, import_react23.createElement)($f1701beae083dbae$export$602eac185826482c, {
      asChild: !0,
      container
    }, child))
  ));
}, $5d3850c4d0b4e6c7$var$OVERLAY_NAME = "DialogOverlay", $5d3850c4d0b4e6c7$export$bd1d06c79be19e17 = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog), { forceMount = portalContext.forceMount, ...overlayProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, props.__scopeDialog);
  return context.modal ? /* @__PURE__ */ (0, import_react23.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl, _extends6({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
}), $5d3850c4d0b4e6c7$var$DialogOverlayImpl = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...overlayProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$OVERLAY_NAME, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    /* @__PURE__ */ (0, import_react23.createElement)(Combination_default, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
      allowPinchZoom: !0,
      shards: [
        context.contentRef
      ]
    }, /* @__PURE__ */ (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
      "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
}), $5d3850c4d0b4e6c7$var$CONTENT_NAME = "DialogContent", $5d3850c4d0b4e6c7$export$b6d9565de1e068cf = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let portalContext = $5d3850c4d0b4e6c7$var$usePortalContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog), { forceMount = portalContext.forceMount, ...contentProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog);
  return /* @__PURE__ */ (0, import_react23.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })));
}), $5d3850c4d0b4e6c7$var$DialogContentModal = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog), contentRef = (0, import_react23.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.contentRef, contentRef);
  return (0, import_react23.useEffect)(() => {
    let content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []), /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends6({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: !0,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault(), (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0;
      (originalEvent.button === 2 || ctrlLeftClick) && event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
}), $5d3850c4d0b4e6c7$var$DialogContentNonModal = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, props.__scopeDialog), hasInteractedOutsideRef = (0, import_react23.useRef)(!1), hasPointerDownOutsideRef = (0, import_react23.useRef)(!1);
  return /* @__PURE__ */ (0, import_react23.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl, _extends6({}, props, {
    ref: forwardedRef,
    trapFocus: !1,
    disableOutsidePointerEvents: !1,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      if ((_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event), !event.defaultPrevented) {
        var _context$triggerRef$c2;
        hasInteractedOutsideRef.current || (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(), event.preventDefault();
      }
      hasInteractedOutsideRef.current = !1, hasPointerDownOutsideRef.current = !1;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event), event.defaultPrevented || (hasInteractedOutsideRef.current = !0, event.detail.originalEvent.type === "pointerdown" && (hasPointerDownOutsideRef.current = !0));
      let target = event.target;
      ((_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target)) && event.preventDefault(), event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current && event.preventDefault();
    }
  }));
}), $5d3850c4d0b4e6c7$var$DialogContentImpl = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CONTENT_NAME, __scopeDialog), contentRef = (0, import_react23.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef);
  return $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c(), /* @__PURE__ */ (0, import_react23.createElement)(import_react23.Fragment, null, /* @__PURE__ */ (0, import_react23.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: !0,
    loop: !0,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ (0, import_react23.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, _extends6({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(!1)
  }))), !1);
}), $5d3850c4d0b4e6c7$var$TITLE_NAME = "DialogTitle", $5d3850c4d0b4e6c7$export$16f7638e4a34b909 = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...titleProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$TITLE_NAME, __scopeDialog);
  return /* @__PURE__ */ (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.h2, _extends6({
    id: context.titleId
  }, titleProps, {
    ref: forwardedRef
  }));
}), $5d3850c4d0b4e6c7$var$DESCRIPTION_NAME = "DialogDescription", $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5 = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...descriptionProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$DESCRIPTION_NAME, __scopeDialog);
  return /* @__PURE__ */ (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.p, _extends6({
    id: context.descriptionId
  }, descriptionProps, {
    ref: forwardedRef
  }));
}), $5d3850c4d0b4e6c7$var$CLOSE_NAME = "DialogClose", $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac = /* @__PURE__ */ (0, import_react23.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...closeProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext($5d3850c4d0b4e6c7$var$CLOSE_NAME, __scopeDialog);
  return /* @__PURE__ */ (0, import_react23.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(!1)
    )
  }));
});
function $5d3850c4d0b4e6c7$var$getState(open) {
  return open ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME = "DialogTitleWarning", [$5d3850c4d0b4e6c7$export$69b62a49393917d6, $5d3850c4d0b4e6c7$var$useWarningContext] = $c512c27ab02ef895$export$fd42f52fd3ae1109($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9 = $5d3850c4d0b4e6c7$export$3ddf2d174ce01153, $5d3850c4d0b4e6c7$export$41fb9f06171c75f4 = $5d3850c4d0b4e6c7$export$2e1e1122cf0cba88, $5d3850c4d0b4e6c7$export$602eac185826482c = $5d3850c4d0b4e6c7$export$dad7c95542bacce0, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff = $5d3850c4d0b4e6c7$export$bd1d06c79be19e17, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf, $5d3850c4d0b4e6c7$export$f99233281efd08a0 = $5d3850c4d0b4e6c7$export$16f7638e4a34b909, $5d3850c4d0b4e6c7$export$393edc798c47379d = $5d3850c4d0b4e6c7$export$94e94c2ec2c954d5, $5d3850c4d0b4e6c7$export$f39c2d165cd861fe = $5d3850c4d0b4e6c7$export$fba2fb7cd781b7ac;

// app/components/ui/dialog.tsx
var import_jsx_runtime5 = __toESM(require_jsx_runtime(), 1), Dialog = $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9, DialogTrigger = $5d3850c4d0b4e6c7$export$41fb9f06171c75f4, DialogPortal = $5d3850c4d0b4e6c7$export$602eac185826482c;
var DialogOverlay = React26.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff,
  {
    ref,
    className: cn(
      "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    ),
    ...props
  }
));
DialogOverlay.displayName = $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff.displayName;
var DialogContent = React26.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(DialogPortal, { children: [
  /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(DialogOverlay, {}),
  /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)(
    $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2,
    {
      ref,
      className: cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg md:w-full",
        className
      ),
      ...props,
      children: [
        children,
        /* @__PURE__ */ (0, import_jsx_runtime5.jsxs)($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, { className: "absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground", children: [
          /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(Cross2Icon, { className: "h-4 w-4" }),
          /* @__PURE__ */ (0, import_jsx_runtime5.jsx)("span", { className: "sr-only", children: "Close" })
        ] })
      ]
    }
  )
] }));
DialogContent.displayName = $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2.displayName;
var DialogHeader = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  "div",
  {
    className: cn(
      "flex flex-col space-y-1.5 text-center sm:text-left",
      className
    ),
    ...props
  }
);
DialogHeader.displayName = "DialogHeader";
var DialogFooter = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  "div",
  {
    className: cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    ),
    ...props
  }
);
DialogFooter.displayName = "DialogFooter";
var DialogTitle = React26.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  $5d3850c4d0b4e6c7$export$f99233281efd08a0,
  {
    ref,
    className: cn(
      "text-lg font-semibold leading-none tracking-tight",
      className
    ),
    ...props
  }
));
DialogTitle.displayName = $5d3850c4d0b4e6c7$export$f99233281efd08a0.displayName;
var DialogDescription = React26.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime5.jsx)(
  $5d3850c4d0b4e6c7$export$393edc798c47379d,
  {
    ref,
    className: cn("text-sm text-muted-foreground", className),
    ...props
  }
));
DialogDescription.displayName = $5d3850c4d0b4e6c7$export$393edc798c47379d.displayName;

// app/components/ui/button.tsx
var React27 = __toESM(require_react(), 1);
var import_jsx_runtime6 = __toESM(require_jsx_runtime(), 1), buttonVariants = cva(
  "inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive: "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline: "border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary: "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground disabled:opacity-30",
        link: "text-primary underline-offset-4 hover:underline"
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9"
      }
    },
    defaultVariants: {
      variant: "default",
      size: "default"
    }
  }
), Button = React27.forwardRef(
  ({ className, variant, size: size2, asChild = !1, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime6.jsx)(
    asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac1360 : "button",
    {
      className: cn(buttonVariants({ variant, size: size2, className })),
      ref,
      ...props
    }
  )
);
Button.displayName = "Button";

// ../../node_modules/axios/lib/helpers/bind.js
function bind(fn, thisArg) {
  return function() {
    return fn.apply(thisArg, arguments);
  };
}

// ../../node_modules/axios/lib/utils.js
var { toString } = Object.prototype, { getPrototypeOf } = Object, kindOf = ((cache) => (thing) => {
  let str = toString.call(thing);
  return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());
})(/* @__PURE__ */ Object.create(null)), kindOfTest = (type) => (type = type.toLowerCase(), (thing) => kindOf(thing) === type), typeOfTest = (type) => (thing) => typeof thing === type, { isArray } = Array, isUndefined2 = typeOfTest("undefined");
function isBuffer(val) {
  return val !== null && !isUndefined2(val) && val.constructor !== null && !isUndefined2(val.constructor) && isFunction2(val.constructor.isBuffer) && val.constructor.isBuffer(val);
}
var isArrayBuffer = kindOfTest("ArrayBuffer");
function isArrayBufferView(val) {
  let result;
  return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? result = ArrayBuffer.isView(val) : result = val && val.buffer && isArrayBuffer(val.buffer), result;
}
var isString2 = typeOfTest("string"), isFunction2 = typeOfTest("function"), isNumber2 = typeOfTest("number"), isObject2 = (thing) => thing !== null && typeof thing == "object", isBoolean2 = (thing) => thing === !0 || thing === !1, isPlainObject3 = (val) => {
  if (kindOf(val) !== "object")
    return !1;
  let prototype3 = getPrototypeOf(val);
  return (prototype3 === null || prototype3 === Object.prototype || Object.getPrototypeOf(prototype3) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);
}, isDate2 = kindOfTest("Date"), isFile = kindOfTest("File"), isBlob = kindOfTest("Blob"), isFileList = kindOfTest("FileList"), isStream = (val) => isObject2(val) && isFunction2(val.pipe), isFormData = (thing) => {
  let kind;
  return thing && (typeof FormData == "function" && thing instanceof FormData || isFunction2(thing.append) && ((kind = kindOf(thing)) === "formdata" || // detect form-data instance
  kind === "object" && isFunction2(thing.toString) && thing.toString() === "[object FormData]"));
}, isURLSearchParams = kindOfTest("URLSearchParams"), trim = (str) => str.trim ? str.trim() : str.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
function forEach(obj, fn, { allOwnKeys = !1 } = {}) {
  if (obj === null || typeof obj > "u")
    return;
  let i3, l2;
  if (typeof obj != "object" && (obj = [obj]), isArray(obj))
    for (i3 = 0, l2 = obj.length; i3 < l2; i3++)
      fn.call(null, obj[i3], i3, obj);
  else {
    let keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj), len = keys.length, key;
    for (i3 = 0; i3 < len; i3++)
      key = keys[i3], fn.call(null, obj[key], key, obj);
  }
}
function findKey2(obj, key) {
  key = key.toLowerCase();
  let keys = Object.keys(obj), i3 = keys.length, _key;
  for (; i3-- > 0; )
    if (_key = keys[i3], key === _key.toLowerCase())
      return _key;
  return null;
}
var _global = (() => typeof globalThis < "u" ? globalThis : typeof self < "u" ? self : typeof window < "u" ? window : globalThis)(), isContextDefined = (context) => !isUndefined2(context) && context !== _global;
function merge() {
  let { caseless } = isContextDefined(this) && this || {}, result = {}, assignValue = (val, key) => {
    let targetKey = caseless && findKey2(result, key) || key;
    isPlainObject3(result[targetKey]) && isPlainObject3(val) ? result[targetKey] = merge(result[targetKey], val) : isPlainObject3(val) ? result[targetKey] = merge({}, val) : isArray(val) ? result[targetKey] = val.slice() : result[targetKey] = val;
  };
  for (let i3 = 0, l2 = arguments.length; i3 < l2; i3++)
    arguments[i3] && forEach(arguments[i3], assignValue);
  return result;
}
var extend = (a4, b3, thisArg, { allOwnKeys } = {}) => (forEach(b3, (val, key) => {
  thisArg && isFunction2(val) ? a4[key] = bind(val, thisArg) : a4[key] = val;
}, { allOwnKeys }), a4), stripBOM = (content) => (content.charCodeAt(0) === 65279 && (content = content.slice(1)), content), inherits = (constructor, superConstructor, props, descriptors2) => {
  constructor.prototype = Object.create(superConstructor.prototype, descriptors2), constructor.prototype.constructor = constructor, Object.defineProperty(constructor, "super", {
    value: superConstructor.prototype
  }), props && Object.assign(constructor.prototype, props);
}, toFlatObject = (sourceObj, destObj, filter3, propFilter) => {
  let props, i3, prop, merged = {};
  if (destObj = destObj || {}, sourceObj == null)
    return destObj;
  do {
    for (props = Object.getOwnPropertyNames(sourceObj), i3 = props.length; i3-- > 0; )
      prop = props[i3], (!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop] && (destObj[prop] = sourceObj[prop], merged[prop] = !0);
    sourceObj = filter3 !== !1 && getPrototypeOf(sourceObj);
  } while (sourceObj && (!filter3 || filter3(sourceObj, destObj)) && sourceObj !== Object.prototype);
  return destObj;
}, endsWith = (str, searchString, position) => {
  str = String(str), (position === void 0 || position > str.length) && (position = str.length), position -= searchString.length;
  let lastIndex = str.indexOf(searchString, position);
  return lastIndex !== -1 && lastIndex === position;
}, toArray = (thing) => {
  if (!thing)
    return null;
  if (isArray(thing))
    return thing;
  let i3 = thing.length;
  if (!isNumber2(i3))
    return null;
  let arr = new Array(i3);
  for (; i3-- > 0; )
    arr[i3] = thing[i3];
  return arr;
}, isTypedArray = ((TypedArray) => (thing) => TypedArray && thing instanceof TypedArray)(typeof Uint8Array < "u" && getPrototypeOf(Uint8Array)), forEachEntry = (obj, fn) => {
  let iterator = (obj && obj[Symbol.iterator]).call(obj), result;
  for (; (result = iterator.next()) && !result.done; ) {
    let pair = result.value;
    fn.call(obj, pair[0], pair[1]);
  }
}, matchAll = (regExp, str) => {
  let matches, arr = [];
  for (; (matches = regExp.exec(str)) !== null; )
    arr.push(matches);
  return arr;
}, isHTMLForm = kindOfTest("HTMLFormElement"), toCamelCase = (str) => str.toLowerCase().replace(
  /[-_\s]([a-z\d])(\w*)/g,
  function(m4, p1, p2) {
    return p1.toUpperCase() + p2;
  }
), hasOwnProperty = (({ hasOwnProperty: hasOwnProperty2 }) => (obj, prop) => hasOwnProperty2.call(obj, prop))(Object.prototype), isRegExp = kindOfTest("RegExp"), reduceDescriptors = (obj, reducer2) => {
  let descriptors2 = Object.getOwnPropertyDescriptors(obj), reducedDescriptors = {};
  forEach(descriptors2, (descriptor, name) => {
    let ret;
    (ret = reducer2(descriptor, name, obj)) !== !1 && (reducedDescriptors[name] = ret || descriptor);
  }), Object.defineProperties(obj, reducedDescriptors);
}, freezeMethods = (obj) => {
  reduceDescriptors(obj, (descriptor, name) => {
    if (isFunction2(obj) && ["arguments", "caller", "callee"].indexOf(name) !== -1)
      return !1;
    let value = obj[name];
    if (isFunction2(value)) {
      if (descriptor.enumerable = !1, "writable" in descriptor) {
        descriptor.writable = !1;
        return;
      }
      descriptor.set || (descriptor.set = () => {
        throw Error("Can not rewrite read-only method '" + name + "'");
      });
    }
  });
}, toObjectSet = (arrayOrString, delimiter) => {
  let obj = {}, define2 = (arr) => {
    arr.forEach((value) => {
      obj[value] = !0;
    });
  };
  return isArray(arrayOrString) ? define2(arrayOrString) : define2(String(arrayOrString).split(delimiter)), obj;
}, noop3 = () => {
}, toFiniteNumber = (value, defaultValue) => (value = +value, Number.isFinite(value) ? value : defaultValue), ALPHA = "abcdefghijklmnopqrstuvwxyz", DIGIT = "0123456789", ALPHABET = {
  DIGIT,
  ALPHA,
  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT
}, generateString = (size2 = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {
  let str = "", { length } = alphabet;
  for (; size2--; )
    str += alphabet[Math.random() * length | 0];
  return str;
};
function isSpecCompliantForm(thing) {
  return !!(thing && isFunction2(thing.append) && thing[Symbol.toStringTag] === "FormData" && thing[Symbol.iterator]);
}
var toJSONObject = (obj) => {
  let stack = new Array(10), visit = (source, i3) => {
    if (isObject2(source)) {
      if (stack.indexOf(source) >= 0)
        return;
      if (!("toJSON" in source)) {
        stack[i3] = source;
        let target = isArray(source) ? [] : {};
        return forEach(source, (value, key) => {
          let reducedValue = visit(value, i3 + 1);
          !isUndefined2(reducedValue) && (target[key] = reducedValue);
        }), stack[i3] = void 0, target;
      }
    }
    return source;
  };
  return visit(obj, 0);
}, isAsyncFn = kindOfTest("AsyncFunction"), isThenable = (thing) => thing && (isObject2(thing) || isFunction2(thing)) && isFunction2(thing.then) && isFunction2(thing.catch), utils_default = {
  isArray,
  isArrayBuffer,
  isBuffer,
  isFormData,
  isArrayBufferView,
  isString: isString2,
  isNumber: isNumber2,
  isBoolean: isBoolean2,
  isObject: isObject2,
  isPlainObject: isPlainObject3,
  isUndefined: isUndefined2,
  isDate: isDate2,
  isFile,
  isBlob,
  isRegExp,
  isFunction: isFunction2,
  isStream,
  isURLSearchParams,
  isTypedArray,
  isFileList,
  forEach,
  merge,
  extend,
  trim,
  stripBOM,
  inherits,
  toFlatObject,
  kindOf,
  kindOfTest,
  endsWith,
  toArray,
  forEachEntry,
  matchAll,
  isHTMLForm,
  hasOwnProperty,
  hasOwnProp: hasOwnProperty,
  // an alias to avoid ESLint no-prototype-builtins detection
  reduceDescriptors,
  freezeMethods,
  toObjectSet,
  toCamelCase,
  noop: noop3,
  toFiniteNumber,
  findKey: findKey2,
  global: _global,
  isContextDefined,
  ALPHABET,
  generateString,
  isSpecCompliantForm,
  toJSONObject,
  isAsyncFn,
  isThenable
};

// ../../node_modules/axios/lib/core/AxiosError.js
function AxiosError(message, code, config, request, response) {
  Error.call(this), Error.captureStackTrace ? Error.captureStackTrace(this, this.constructor) : this.stack = new Error().stack, this.message = message, this.name = "AxiosError", code && (this.code = code), config && (this.config = config), request && (this.request = request), response && (this.response = response);
}
utils_default.inherits(AxiosError, Error, {
  toJSON: function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: utils_default.toJSONObject(this.config),
      code: this.code,
      status: this.response && this.response.status ? this.response.status : null
    };
  }
});
var prototype = AxiosError.prototype, descriptors = {};
[
  "ERR_BAD_OPTION_VALUE",
  "ERR_BAD_OPTION",
  "ECONNABORTED",
  "ETIMEDOUT",
  "ERR_NETWORK",
  "ERR_FR_TOO_MANY_REDIRECTS",
  "ERR_DEPRECATED",
  "ERR_BAD_RESPONSE",
  "ERR_BAD_REQUEST",
  "ERR_CANCELED",
  "ERR_NOT_SUPPORT",
  "ERR_INVALID_URL"
  // eslint-disable-next-line func-names
].forEach((code) => {
  descriptors[code] = { value: code };
});
Object.defineProperties(AxiosError, descriptors);
Object.defineProperty(prototype, "isAxiosError", { value: !0 });
AxiosError.from = (error, code, config, request, response, customProps) => {
  let axiosError = Object.create(prototype);
  return utils_default.toFlatObject(error, axiosError, function(obj) {
    return obj !== Error.prototype;
  }, (prop) => prop !== "isAxiosError"), AxiosError.call(axiosError, error.message, code, config, request, response), axiosError.cause = error, axiosError.name = error.name, customProps && Object.assign(axiosError, customProps), axiosError;
};
var AxiosError_default = AxiosError;

// ../../node_modules/axios/lib/platform/node/classes/FormData.js
var import_form_data = __toESM(require_browser(), 1), FormData_default = import_form_data.default;

// ../../node_modules/axios/lib/helpers/toFormData.js
function isVisitable(thing) {
  return utils_default.isPlainObject(thing) || utils_default.isArray(thing);
}
function removeBrackets(key) {
  return utils_default.endsWith(key, "[]") ? key.slice(0, -2) : key;
}
function renderKey(path, key, dots) {
  return path ? path.concat(key).map(function(token, i3) {
    return token = removeBrackets(token), !dots && i3 ? "[" + token + "]" : token;
  }).join(dots ? "." : "") : key;
}
function isFlatArray(arr) {
  return utils_default.isArray(arr) && !arr.some(isVisitable);
}
var predicates = utils_default.toFlatObject(utils_default, {}, null, function(prop) {
  return /^is[A-Z]/.test(prop);
});
function toFormData(obj, formData, options) {
  if (!utils_default.isObject(obj))
    throw new TypeError("target must be an object");
  formData = formData || new (FormData_default || FormData)(), options = utils_default.toFlatObject(options, {
    metaTokens: !0,
    dots: !1,
    indexes: !1
  }, !1, function(option, source) {
    return !utils_default.isUndefined(source[option]);
  });
  let metaTokens = options.metaTokens, visitor = options.visitor || defaultVisitor, dots = options.dots, indexes = options.indexes, useBlob = (options.Blob || typeof Blob < "u" && Blob) && utils_default.isSpecCompliantForm(formData);
  if (!utils_default.isFunction(visitor))
    throw new TypeError("visitor must be a function");
  function convertValue(value) {
    if (value === null)
      return "";
    if (utils_default.isDate(value))
      return value.toISOString();
    if (!useBlob && utils_default.isBlob(value))
      throw new AxiosError_default("Blob is not supported. Use a Buffer instead.");
    return utils_default.isArrayBuffer(value) || utils_default.isTypedArray(value) ? useBlob && typeof Blob == "function" ? new Blob([value]) : Buffer.from(value) : value;
  }
  function defaultVisitor(value, key, path) {
    let arr = value;
    if (value && !path && typeof value == "object") {
      if (utils_default.endsWith(key, "{}"))
        key = metaTokens ? key : key.slice(0, -2), value = JSON.stringify(value);
      else if (utils_default.isArray(value) && isFlatArray(value) || (utils_default.isFileList(value) || utils_default.endsWith(key, "[]")) && (arr = utils_default.toArray(value)))
        return key = removeBrackets(key), arr.forEach(function(el, index3) {
          !(utils_default.isUndefined(el) || el === null) && formData.append(
            // eslint-disable-next-line no-nested-ternary
            indexes === !0 ? renderKey([key], index3, dots) : indexes === null ? key : key + "[]",
            convertValue(el)
          );
        }), !1;
    }
    return isVisitable(value) ? !0 : (formData.append(renderKey(path, key, dots), convertValue(value)), !1);
  }
  let stack = [], exposedHelpers = Object.assign(predicates, {
    defaultVisitor,
    convertValue,
    isVisitable
  });
  function build(value, path) {
    if (!utils_default.isUndefined(value)) {
      if (stack.indexOf(value) !== -1)
        throw Error("Circular reference detected in " + path.join("."));
      stack.push(value), utils_default.forEach(value, function(el, key) {
        (!(utils_default.isUndefined(el) || el === null) && visitor.call(
          formData,
          el,
          utils_default.isString(key) ? key.trim() : key,
          path,
          exposedHelpers
        )) === !0 && build(el, path ? path.concat(key) : [key]);
      }), stack.pop();
    }
  }
  if (!utils_default.isObject(obj))
    throw new TypeError("data must be an object");
  return build(obj), formData;
}
var toFormData_default = toFormData;

// ../../node_modules/axios/lib/helpers/AxiosURLSearchParams.js
function encode(str) {
  let charMap = {
    "!": "%21",
    "'": "%27",
    "(": "%28",
    ")": "%29",
    "~": "%7E",
    "%20": "+",
    "%00": "\0"
  };
  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function(match2) {
    return charMap[match2];
  });
}
function AxiosURLSearchParams(params, options) {
  this._pairs = [], params && toFormData_default(params, this, options);
}
var prototype2 = AxiosURLSearchParams.prototype;
prototype2.append = function(name, value) {
  this._pairs.push([name, value]);
};
prototype2.toString = function(encoder) {
  let _encode = encoder ? function(value) {
    return encoder.call(this, value, encode);
  } : encode;
  return this._pairs.map(function(pair) {
    return _encode(pair[0]) + "=" + _encode(pair[1]);
  }, "").join("&");
};
var AxiosURLSearchParams_default = AxiosURLSearchParams;

// ../../node_modules/axios/lib/helpers/buildURL.js
function encode2(val) {
  return encodeURIComponent(val).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]");
}
function buildURL(url2, params, options) {
  if (!params)
    return url2;
  let _encode = options && options.encode || encode2, serializeFn = options && options.serialize, serializedParams;
  if (serializeFn ? serializedParams = serializeFn(params, options) : serializedParams = utils_default.isURLSearchParams(params) ? params.toString() : new AxiosURLSearchParams_default(params, options).toString(_encode), serializedParams) {
    let hashmarkIndex = url2.indexOf("#");
    hashmarkIndex !== -1 && (url2 = url2.slice(0, hashmarkIndex)), url2 += (url2.indexOf("?") === -1 ? "?" : "&") + serializedParams;
  }
  return url2;
}

// ../../node_modules/axios/lib/core/InterceptorManager.js
var InterceptorManager = class {
  constructor() {
    this.handlers = [];
  }
  /**
   * Add a new interceptor to the stack
   *
   * @param {Function} fulfilled The function to handle `then` for a `Promise`
   * @param {Function} rejected The function to handle `reject` for a `Promise`
   *
   * @return {Number} An ID used to remove interceptor later
   */
  use(fulfilled, rejected, options) {
    return this.handlers.push({
      fulfilled,
      rejected,
      synchronous: options ? options.synchronous : !1,
      runWhen: options ? options.runWhen : null
    }), this.handlers.length - 1;
  }
  /**
   * Remove an interceptor from the stack
   *
   * @param {Number} id The ID that was returned by `use`
   *
   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise
   */
  eject(id3) {
    this.handlers[id3] && (this.handlers[id3] = null);
  }
  /**
   * Clear all interceptors from the stack
   *
   * @returns {void}
   */
  clear() {
    this.handlers && (this.handlers = []);
  }
  /**
   * Iterate over all the registered interceptors
   *
   * This method is particularly useful for skipping over any
   * interceptors that may have become `null` calling `eject`.
   *
   * @param {Function} fn The function to call for each interceptor
   *
   * @returns {void}
   */
  forEach(fn) {
    utils_default.forEach(this.handlers, function(h4) {
      h4 !== null && fn(h4);
    });
  }
}, InterceptorManager_default = InterceptorManager;

// ../../node_modules/axios/lib/defaults/transitional.js
var transitional_default = {
  silentJSONParsing: !0,
  forcedJSONParsing: !0,
  clarifyTimeoutError: !1
};

// ../../node_modules/axios/lib/platform/node/classes/URLSearchParams.js
import url from "url";
var URLSearchParams_default = url.URLSearchParams;

// ../../node_modules/axios/lib/platform/node/index.js
var node_default = {
  isNode: !0,
  classes: {
    URLSearchParams: URLSearchParams_default,
    FormData: FormData_default,
    Blob: typeof Blob < "u" && Blob || null
  },
  protocols: ["http", "https", "file", "data"]
};

// ../../node_modules/axios/lib/platform/common/utils.js
var utils_exports = {};
__export(utils_exports, {
  hasBrowserEnv: () => hasBrowserEnv,
  hasStandardBrowserEnv: () => hasStandardBrowserEnv,
  hasStandardBrowserWebWorkerEnv: () => hasStandardBrowserWebWorkerEnv
});
var hasBrowserEnv = typeof window < "u" && typeof document < "u", hasStandardBrowserEnv = ((product) => hasBrowserEnv && ["ReactNative", "NativeScript", "NS"].indexOf(product) < 0)(typeof navigator < "u" && navigator.product), hasStandardBrowserWebWorkerEnv = (() => typeof WorkerGlobalScope < "u" && // eslint-disable-next-line no-undef
self instanceof WorkerGlobalScope && typeof self.importScripts == "function")();

// ../../node_modules/axios/lib/platform/index.js
var platform_default = {
  ...utils_exports,
  ...node_default
};

// ../../node_modules/axios/lib/helpers/toURLEncodedForm.js
function toURLEncodedForm(data, options) {
  return toFormData_default(data, new platform_default.classes.URLSearchParams(), Object.assign({
    visitor: function(value, key, path, helpers) {
      return platform_default.isNode && utils_default.isBuffer(value) ? (this.append(key, value.toString("base64")), !1) : helpers.defaultVisitor.apply(this, arguments);
    }
  }, options));
}

// ../../node_modules/axios/lib/helpers/formDataToJSON.js
function parsePropPath(name) {
  return utils_default.matchAll(/\w+|\[(\w*)]/g, name).map((match2) => match2[0] === "[]" ? "" : match2[1] || match2[0]);
}
function arrayToObject(arr) {
  let obj = {}, keys = Object.keys(arr), i3, len = keys.length, key;
  for (i3 = 0; i3 < len; i3++)
    key = keys[i3], obj[key] = arr[key];
  return obj;
}
function formDataToJSON(formData) {
  function buildPath(path, value, target, index3) {
    let name = path[index3++], isNumericKey = Number.isFinite(+name), isLast = index3 >= path.length;
    return name = !name && utils_default.isArray(target) ? target.length : name, isLast ? (utils_default.hasOwnProp(target, name) ? target[name] = [target[name], value] : target[name] = value, !isNumericKey) : ((!target[name] || !utils_default.isObject(target[name])) && (target[name] = []), buildPath(path, value, target[name], index3) && utils_default.isArray(target[name]) && (target[name] = arrayToObject(target[name])), !isNumericKey);
  }
  if (utils_default.isFormData(formData) && utils_default.isFunction(formData.entries)) {
    let obj = {};
    return utils_default.forEachEntry(formData, (name, value) => {
      buildPath(parsePropPath(name), value, obj, 0);
    }), obj;
  }
  return null;
}
var formDataToJSON_default = formDataToJSON;

// ../../node_modules/axios/lib/defaults/index.js
function stringifySafely(rawValue, parser, encoder) {
  if (utils_default.isString(rawValue))
    try {
      return (parser || JSON.parse)(rawValue), utils_default.trim(rawValue);
    } catch (e3) {
      if (e3.name !== "SyntaxError")
        throw e3;
    }
  return (encoder || JSON.stringify)(rawValue);
}
var defaults = {
  transitional: transitional_default,
  adapter: ["xhr", "http"],
  transformRequest: [function(data, headers) {
    let contentType = headers.getContentType() || "", hasJSONContentType = contentType.indexOf("application/json") > -1, isObjectPayload = utils_default.isObject(data);
    if (isObjectPayload && utils_default.isHTMLForm(data) && (data = new FormData(data)), utils_default.isFormData(data))
      return hasJSONContentType && hasJSONContentType ? JSON.stringify(formDataToJSON_default(data)) : data;
    if (utils_default.isArrayBuffer(data) || utils_default.isBuffer(data) || utils_default.isStream(data) || utils_default.isFile(data) || utils_default.isBlob(data))
      return data;
    if (utils_default.isArrayBufferView(data))
      return data.buffer;
    if (utils_default.isURLSearchParams(data))
      return headers.setContentType("application/x-www-form-urlencoded;charset=utf-8", !1), data.toString();
    let isFileList2;
    if (isObjectPayload) {
      if (contentType.indexOf("application/x-www-form-urlencoded") > -1)
        return toURLEncodedForm(data, this.formSerializer).toString();
      if ((isFileList2 = utils_default.isFileList(data)) || contentType.indexOf("multipart/form-data") > -1) {
        let _FormData = this.env && this.env.FormData;
        return toFormData_default(
          isFileList2 ? { "files[]": data } : data,
          _FormData && new _FormData(),
          this.formSerializer
        );
      }
    }
    return isObjectPayload || hasJSONContentType ? (headers.setContentType("application/json", !1), stringifySafely(data)) : data;
  }],
  transformResponse: [function(data) {
    let transitional2 = this.transitional || defaults.transitional, forcedJSONParsing = transitional2 && transitional2.forcedJSONParsing, JSONRequested = this.responseType === "json";
    if (data && utils_default.isString(data) && (forcedJSONParsing && !this.responseType || JSONRequested)) {
      let strictJSONParsing = !(transitional2 && transitional2.silentJSONParsing) && JSONRequested;
      try {
        return JSON.parse(data);
      } catch (e3) {
        if (strictJSONParsing)
          throw e3.name === "SyntaxError" ? AxiosError_default.from(e3, AxiosError_default.ERR_BAD_RESPONSE, this, null, this.response) : e3;
      }
    }
    return data;
  }],
  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,
  xsrfCookieName: "XSRF-TOKEN",
  xsrfHeaderName: "X-XSRF-TOKEN",
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: platform_default.classes.FormData,
    Blob: platform_default.classes.Blob
  },
  validateStatus: function(status) {
    return status >= 200 && status < 300;
  },
  headers: {
    common: {
      Accept: "application/json, text/plain, */*",
      "Content-Type": void 0
    }
  }
};
utils_default.forEach(["delete", "get", "head", "post", "put", "patch"], (method) => {
  defaults.headers[method] = {};
});
var defaults_default = defaults;

// ../../node_modules/axios/lib/helpers/parseHeaders.js
var ignoreDuplicateOf = utils_default.toObjectSet([
  "age",
  "authorization",
  "content-length",
  "content-type",
  "etag",
  "expires",
  "from",
  "host",
  "if-modified-since",
  "if-unmodified-since",
  "last-modified",
  "location",
  "max-forwards",
  "proxy-authorization",
  "referer",
  "retry-after",
  "user-agent"
]), parseHeaders_default = (rawHeaders) => {
  let parsed = {}, key, val, i3;
  return rawHeaders && rawHeaders.split(`
`).forEach(function(line) {
    i3 = line.indexOf(":"), key = line.substring(0, i3).trim().toLowerCase(), val = line.substring(i3 + 1).trim(), !(!key || parsed[key] && ignoreDuplicateOf[key]) && (key === "set-cookie" ? parsed[key] ? parsed[key].push(val) : parsed[key] = [val] : parsed[key] = parsed[key] ? parsed[key] + ", " + val : val);
  }), parsed;
};

// ../../node_modules/axios/lib/core/AxiosHeaders.js
var $internals = Symbol("internals");
function normalizeHeader(header) {
  return header && String(header).trim().toLowerCase();
}
function normalizeValue(value) {
  return value === !1 || value == null ? value : utils_default.isArray(value) ? value.map(normalizeValue) : String(value);
}
function parseTokens(str) {
  let tokens = /* @__PURE__ */ Object.create(null), tokensRE = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g, match2;
  for (; match2 = tokensRE.exec(str); )
    tokens[match2[1]] = match2[2];
  return tokens;
}
var isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());
function matchHeaderValue(context, value, header, filter3, isHeaderNameFilter) {
  if (utils_default.isFunction(filter3))
    return filter3.call(this, value, header);
  if (isHeaderNameFilter && (value = header), !!utils_default.isString(value)) {
    if (utils_default.isString(filter3))
      return value.indexOf(filter3) !== -1;
    if (utils_default.isRegExp(filter3))
      return filter3.test(value);
  }
}
function formatHeader(header) {
  return header.trim().toLowerCase().replace(/([a-z\d])(\w*)/g, (w2, char, str) => char.toUpperCase() + str);
}
function buildAccessors(obj, header) {
  let accessorName = utils_default.toCamelCase(" " + header);
  ["get", "set", "has"].forEach((methodName) => {
    Object.defineProperty(obj, methodName + accessorName, {
      value: function(arg1, arg2, arg3) {
        return this[methodName].call(this, header, arg1, arg2, arg3);
      },
      configurable: !0
    });
  });
}
var AxiosHeaders = class {
  constructor(headers) {
    headers && this.set(headers);
  }
  set(header, valueOrRewrite, rewrite) {
    let self2 = this;
    function setHeader(_value, _header, _rewrite) {
      let lHeader = normalizeHeader(_header);
      if (!lHeader)
        throw new Error("header name must be a non-empty string");
      let key = utils_default.findKey(self2, lHeader);
      (!key || self2[key] === void 0 || _rewrite === !0 || _rewrite === void 0 && self2[key] !== !1) && (self2[key || _header] = normalizeValue(_value));
    }
    let setHeaders = (headers, _rewrite) => utils_default.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));
    return utils_default.isPlainObject(header) || header instanceof this.constructor ? setHeaders(header, valueOrRewrite) : utils_default.isString(header) && (header = header.trim()) && !isValidHeaderName(header) ? setHeaders(parseHeaders_default(header), valueOrRewrite) : header != null && setHeader(valueOrRewrite, header, rewrite), this;
  }
  get(header, parser) {
    if (header = normalizeHeader(header), header) {
      let key = utils_default.findKey(this, header);
      if (key) {
        let value = this[key];
        if (!parser)
          return value;
        if (parser === !0)
          return parseTokens(value);
        if (utils_default.isFunction(parser))
          return parser.call(this, value, key);
        if (utils_default.isRegExp(parser))
          return parser.exec(value);
        throw new TypeError("parser must be boolean|regexp|function");
      }
    }
  }
  has(header, matcher) {
    if (header = normalizeHeader(header), header) {
      let key = utils_default.findKey(this, header);
      return !!(key && this[key] !== void 0 && (!matcher || matchHeaderValue(this, this[key], key, matcher)));
    }
    return !1;
  }
  delete(header, matcher) {
    let self2 = this, deleted = !1;
    function deleteHeader(_header) {
      if (_header = normalizeHeader(_header), _header) {
        let key = utils_default.findKey(self2, _header);
        key && (!matcher || matchHeaderValue(self2, self2[key], key, matcher)) && (delete self2[key], deleted = !0);
      }
    }
    return utils_default.isArray(header) ? header.forEach(deleteHeader) : deleteHeader(header), deleted;
  }
  clear(matcher) {
    let keys = Object.keys(this), i3 = keys.length, deleted = !1;
    for (; i3--; ) {
      let key = keys[i3];
      (!matcher || matchHeaderValue(this, this[key], key, matcher, !0)) && (delete this[key], deleted = !0);
    }
    return deleted;
  }
  normalize(format2) {
    let self2 = this, headers = {};
    return utils_default.forEach(this, (value, header) => {
      let key = utils_default.findKey(headers, header);
      if (key) {
        self2[key] = normalizeValue(value), delete self2[header];
        return;
      }
      let normalized = format2 ? formatHeader(header) : String(header).trim();
      normalized !== header && delete self2[header], self2[normalized] = normalizeValue(value), headers[normalized] = !0;
    }), this;
  }
  concat(...targets) {
    return this.constructor.concat(this, ...targets);
  }
  toJSON(asStrings) {
    let obj = /* @__PURE__ */ Object.create(null);
    return utils_default.forEach(this, (value, header) => {
      value != null && value !== !1 && (obj[header] = asStrings && utils_default.isArray(value) ? value.join(", ") : value);
    }), obj;
  }
  [Symbol.iterator]() {
    return Object.entries(this.toJSON())[Symbol.iterator]();
  }
  toString() {
    return Object.entries(this.toJSON()).map(([header, value]) => header + ": " + value).join(`
`);
  }
  get [Symbol.toStringTag]() {
    return "AxiosHeaders";
  }
  static from(thing) {
    return thing instanceof this ? thing : new this(thing);
  }
  static concat(first, ...targets) {
    let computed = new this(first);
    return targets.forEach((target) => computed.set(target)), computed;
  }
  static accessor(header) {
    let accessors = (this[$internals] = this[$internals] = {
      accessors: {}
    }).accessors, prototype3 = this.prototype;
    function defineAccessor(_header) {
      let lHeader = normalizeHeader(_header);
      accessors[lHeader] || (buildAccessors(prototype3, _header), accessors[lHeader] = !0);
    }
    return utils_default.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header), this;
  }
};
AxiosHeaders.accessor(["Content-Type", "Content-Length", "Accept", "Accept-Encoding", "User-Agent", "Authorization"]);
utils_default.reduceDescriptors(AxiosHeaders.prototype, ({ value }, key) => {
  let mapped = key[0].toUpperCase() + key.slice(1);
  return {
    get: () => value,
    set(headerValue) {
      this[mapped] = headerValue;
    }
  };
});
utils_default.freezeMethods(AxiosHeaders);
var AxiosHeaders_default = AxiosHeaders;

// ../../node_modules/axios/lib/core/transformData.js
function transformData(fns, response) {
  let config = this || defaults_default, context = response || config, headers = AxiosHeaders_default.from(context.headers), data = context.data;
  return utils_default.forEach(fns, function(fn) {
    data = fn.call(config, data, headers.normalize(), response ? response.status : void 0);
  }), headers.normalize(), data;
}

// ../../node_modules/axios/lib/cancel/isCancel.js
function isCancel(value) {
  return !!(value && value.__CANCEL__);
}

// ../../node_modules/axios/lib/cancel/CanceledError.js
function CanceledError(message, config, request) {
  AxiosError_default.call(this, message ?? "canceled", AxiosError_default.ERR_CANCELED, config, request), this.name = "CanceledError";
}
utils_default.inherits(CanceledError, AxiosError_default, {
  __CANCEL__: !0
});
var CanceledError_default = CanceledError;

// ../../node_modules/axios/lib/core/settle.js
function settle(resolve, reject, response) {
  let validateStatus2 = response.config.validateStatus;
  !response.status || !validateStatus2 || validateStatus2(response.status) ? resolve(response) : reject(new AxiosError_default(
    "Request failed with status code " + response.status,
    [AxiosError_default.ERR_BAD_REQUEST, AxiosError_default.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],
    response.config,
    response.request,
    response
  ));
}

// ../../node_modules/axios/lib/helpers/isAbsoluteURL.js
function isAbsoluteURL(url2) {
  return /^([a-z][a-z\d+\-.]*:)?\/\//i.test(url2);
}

// ../../node_modules/axios/lib/helpers/combineURLs.js
function combineURLs(baseURL, relativeURL) {
  return relativeURL ? baseURL.replace(/\/+$/, "") + "/" + relativeURL.replace(/^\/+/, "") : baseURL;
}

// ../../node_modules/axios/lib/core/buildFullPath.js
function buildFullPath(baseURL, requestedURL) {
  return baseURL && !isAbsoluteURL(requestedURL) ? combineURLs(baseURL, requestedURL) : requestedURL;
}

// ../../node_modules/axios/lib/adapters/http.js
var import_proxy_from_env = __toESM(require_proxy_from_env(), 1), import_follow_redirects = __toESM(require_follow_redirects(), 1);
import http from "http";
import https from "https";
import util from "util";
import zlib from "zlib";

// ../../node_modules/axios/lib/env/data.js
var VERSION = "1.6.2";

// ../../node_modules/axios/lib/helpers/parseProtocol.js
function parseProtocol(url2) {
  let match2 = /^([-+\w]{1,25})(:?\/\/|:)/.exec(url2);
  return match2 && match2[1] || "";
}

// ../../node_modules/axios/lib/helpers/fromDataURI.js
var DATA_URL_PATTERN = /^(?:([^;]+);)?(?:[^;]+;)?(base64|),([\s\S]*)$/;
function fromDataURI(uri, asBlob, options) {
  let _Blob = options && options.Blob || platform_default.classes.Blob, protocol = parseProtocol(uri);
  if (asBlob === void 0 && _Blob && (asBlob = !0), protocol === "data") {
    uri = protocol.length ? uri.slice(protocol.length + 1) : uri;
    let match2 = DATA_URL_PATTERN.exec(uri);
    if (!match2)
      throw new AxiosError_default("Invalid URL", AxiosError_default.ERR_INVALID_URL);
    let mime = match2[1], isBase64 = match2[2], body = match2[3], buffer = Buffer.from(decodeURIComponent(body), isBase64 ? "base64" : "utf8");
    if (asBlob) {
      if (!_Blob)
        throw new AxiosError_default("Blob is not supported", AxiosError_default.ERR_NOT_SUPPORT);
      return new _Blob([buffer], { type: mime });
    }
    return buffer;
  }
  throw new AxiosError_default("Unsupported protocol " + protocol, AxiosError_default.ERR_NOT_SUPPORT);
}

// ../../node_modules/axios/lib/adapters/http.js
import stream3 from "stream";

// ../../node_modules/axios/lib/helpers/AxiosTransformStream.js
import stream from "stream";

// ../../node_modules/axios/lib/helpers/throttle.js
function throttle(fn, freq) {
  let timestamp = 0, threshold = 1e3 / freq, timer = null;
  return function(force, args) {
    let now = Date.now();
    if (force || now - timestamp > threshold)
      return timer && (clearTimeout(timer), timer = null), timestamp = now, fn.apply(null, args);
    timer || (timer = setTimeout(() => (timer = null, timestamp = Date.now(), fn.apply(null, args)), threshold - (now - timestamp)));
  };
}
var throttle_default = throttle;

// ../../node_modules/axios/lib/helpers/speedometer.js
function speedometer(samplesCount, min2) {
  samplesCount = samplesCount || 10;
  let bytes = new Array(samplesCount), timestamps = new Array(samplesCount), head = 0, tail = 0, firstSampleTS;
  return min2 = min2 !== void 0 ? min2 : 1e3, function(chunkLength) {
    let now = Date.now(), startedAt = timestamps[tail];
    firstSampleTS || (firstSampleTS = now), bytes[head] = chunkLength, timestamps[head] = now;
    let i3 = tail, bytesCount = 0;
    for (; i3 !== head; )
      bytesCount += bytes[i3++], i3 = i3 % samplesCount;
    if (head = (head + 1) % samplesCount, head === tail && (tail = (tail + 1) % samplesCount), now - firstSampleTS < min2)
      return;
    let passed = startedAt && now - startedAt;
    return passed ? Math.round(bytesCount * 1e3 / passed) : void 0;
  };
}
var speedometer_default = speedometer;

// ../../node_modules/axios/lib/helpers/AxiosTransformStream.js
var kInternals = Symbol("internals"), AxiosTransformStream = class extends stream.Transform {
  constructor(options) {
    options = utils_default.toFlatObject(options, {
      maxRate: 0,
      chunkSize: 64 * 1024,
      minChunkSize: 100,
      timeWindow: 500,
      ticksRate: 2,
      samplesCount: 15
    }, null, (prop, source) => !utils_default.isUndefined(source[prop])), super({
      readableHighWaterMark: options.chunkSize
    });
    let self2 = this, internals = this[kInternals] = {
      length: options.length,
      timeWindow: options.timeWindow,
      ticksRate: options.ticksRate,
      chunkSize: options.chunkSize,
      maxRate: options.maxRate,
      minChunkSize: options.minChunkSize,
      bytesSeen: 0,
      isCaptured: !1,
      notifiedBytesLoaded: 0,
      ts: Date.now(),
      bytes: 0,
      onReadCallback: null
    }, _speedometer = speedometer_default(internals.ticksRate * options.samplesCount, internals.timeWindow);
    this.on("newListener", (event) => {
      event === "progress" && (internals.isCaptured || (internals.isCaptured = !0));
    });
    let bytesNotified = 0;
    internals.updateProgress = throttle_default(function() {
      let totalBytes = internals.length, bytesTransferred = internals.bytesSeen, progressBytes = bytesTransferred - bytesNotified;
      if (!progressBytes || self2.destroyed)
        return;
      let rate = _speedometer(progressBytes);
      bytesNotified = bytesTransferred, process.nextTick(() => {
        self2.emit("progress", {
          loaded: bytesTransferred,
          total: totalBytes,
          progress: totalBytes ? bytesTransferred / totalBytes : void 0,
          bytes: progressBytes,
          rate: rate || void 0,
          estimated: rate && totalBytes && bytesTransferred <= totalBytes ? (totalBytes - bytesTransferred) / rate : void 0
        });
      });
    }, internals.ticksRate);
    let onFinish = () => {
      internals.updateProgress(!0);
    };
    this.once("end", onFinish), this.once("error", onFinish);
  }
  _read(size2) {
    let internals = this[kInternals];
    return internals.onReadCallback && internals.onReadCallback(), super._read(size2);
  }
  _transform(chunk, encoding, callback) {
    let self2 = this, internals = this[kInternals], maxRate = internals.maxRate, readableHighWaterMark = this.readableHighWaterMark, timeWindow = internals.timeWindow, divider = 1e3 / timeWindow, bytesThreshold = maxRate / divider, minChunkSize = internals.minChunkSize !== !1 ? Math.max(internals.minChunkSize, bytesThreshold * 0.01) : 0;
    function pushChunk(_chunk, _callback) {
      let bytes = Buffer.byteLength(_chunk);
      internals.bytesSeen += bytes, internals.bytes += bytes, internals.isCaptured && internals.updateProgress(), self2.push(_chunk) ? process.nextTick(_callback) : internals.onReadCallback = () => {
        internals.onReadCallback = null, process.nextTick(_callback);
      };
    }
    let transformChunk = (_chunk, _callback) => {
      let chunkSize = Buffer.byteLength(_chunk), chunkRemainder = null, maxChunkSize = readableHighWaterMark, bytesLeft, passed = 0;
      if (maxRate) {
        let now = Date.now();
        (!internals.ts || (passed = now - internals.ts) >= timeWindow) && (internals.ts = now, bytesLeft = bytesThreshold - internals.bytes, internals.bytes = bytesLeft < 0 ? -bytesLeft : 0, passed = 0), bytesLeft = bytesThreshold - internals.bytes;
      }
      if (maxRate) {
        if (bytesLeft <= 0)
          return setTimeout(() => {
            _callback(null, _chunk);
          }, timeWindow - passed);
        bytesLeft < maxChunkSize && (maxChunkSize = bytesLeft);
      }
      maxChunkSize && chunkSize > maxChunkSize && chunkSize - maxChunkSize > minChunkSize && (chunkRemainder = _chunk.subarray(maxChunkSize), _chunk = _chunk.subarray(0, maxChunkSize)), pushChunk(_chunk, chunkRemainder ? () => {
        process.nextTick(_callback, null, chunkRemainder);
      } : _callback);
    };
    transformChunk(chunk, function transformNextChunk(err, _chunk) {
      if (err)
        return callback(err);
      _chunk ? transformChunk(_chunk, transformNextChunk) : callback(null);
    });
  }
  setLength(length) {
    return this[kInternals].length = +length, this;
  }
}, AxiosTransformStream_default = AxiosTransformStream;

// ../../node_modules/axios/lib/adapters/http.js
import EventEmitter from "events";

// ../../node_modules/axios/lib/helpers/formDataToStream.js
import { TextEncoder as TextEncoder2 } from "util";
import { Readable } from "stream";

// ../../node_modules/axios/lib/helpers/readBlob.js
var { asyncIterator } = Symbol, readBlob = async function* (blob) {
  blob.stream ? yield* blob.stream() : blob.arrayBuffer ? yield await blob.arrayBuffer() : blob[asyncIterator] ? yield* blob[asyncIterator]() : yield blob;
}, readBlob_default = readBlob;

// ../../node_modules/axios/lib/helpers/formDataToStream.js
var BOUNDARY_ALPHABET = utils_default.ALPHABET.ALPHA_DIGIT + "-_", textEncoder = new TextEncoder2(), CRLF2 = `\r
`, CRLF_BYTES = textEncoder.encode(CRLF2), CRLF_BYTES_COUNT = 2, FormDataPart = class {
  constructor(name, value) {
    let { escapeName } = this.constructor, isStringValue = utils_default.isString(value), headers = `Content-Disposition: form-data; name="${escapeName(name)}"${!isStringValue && value.name ? `; filename="${escapeName(value.name)}"` : ""}${CRLF2}`;
    isStringValue ? value = textEncoder.encode(String(value).replace(/\r?\n|\r\n?/g, CRLF2)) : headers += `Content-Type: ${value.type || "application/octet-stream"}${CRLF2}`, this.headers = textEncoder.encode(headers + CRLF2), this.contentLength = isStringValue ? value.byteLength : value.size, this.size = this.headers.byteLength + this.contentLength + CRLF_BYTES_COUNT, this.name = name, this.value = value;
  }
  async *encode() {
    yield this.headers;
    let { value } = this;
    utils_default.isTypedArray(value) ? yield value : yield* readBlob_default(value), yield CRLF_BYTES;
  }
  static escapeName(name) {
    return String(name).replace(/[\r\n"]/g, (match2) => ({
      "\r": "%0D",
      "\n": "%0A",
      '"': "%22"
    })[match2]);
  }
}, formDataToStream = (form, headersHandler, options) => {
  let {
    tag = "form-data-boundary",
    size: size2 = 25,
    boundary = tag + "-" + utils_default.generateString(size2, BOUNDARY_ALPHABET)
  } = options || {};
  if (!utils_default.isFormData(form))
    throw TypeError("FormData instance required");
  if (boundary.length < 1 || boundary.length > 70)
    throw Error("boundary must be 10-70 characters long");
  let boundaryBytes = textEncoder.encode("--" + boundary + CRLF2), footerBytes = textEncoder.encode("--" + boundary + "--" + CRLF2 + CRLF2), contentLength = footerBytes.byteLength, parts = Array.from(form.entries()).map(([name, value]) => {
    let part = new FormDataPart(name, value);
    return contentLength += part.size, part;
  });
  contentLength += boundaryBytes.byteLength * parts.length, contentLength = utils_default.toFiniteNumber(contentLength);
  let computedHeaders = {
    "Content-Type": `multipart/form-data; boundary=${boundary}`
  };
  return Number.isFinite(contentLength) && (computedHeaders["Content-Length"] = contentLength), headersHandler && headersHandler(computedHeaders), Readable.from(async function* () {
    for (let part of parts)
      yield boundaryBytes, yield* part.encode();
    yield footerBytes;
  }());
}, formDataToStream_default = formDataToStream;

// ../../node_modules/axios/lib/helpers/ZlibHeaderTransformStream.js
import stream2 from "stream";
var ZlibHeaderTransformStream = class extends stream2.Transform {
  __transform(chunk, encoding, callback) {
    this.push(chunk), callback();
  }
  _transform(chunk, encoding, callback) {
    if (chunk.length !== 0 && (this._transform = this.__transform, chunk[0] !== 120)) {
      let header = Buffer.alloc(2);
      header[0] = 120, header[1] = 156, this.push(header, encoding);
    }
    this.__transform(chunk, encoding, callback);
  }
}, ZlibHeaderTransformStream_default = ZlibHeaderTransformStream;

// ../../node_modules/axios/lib/helpers/callbackify.js
var callbackify = (fn, reducer2) => utils_default.isAsyncFn(fn) ? function(...args) {
  let cb = args.pop();
  fn.apply(this, args).then((value) => {
    try {
      reducer2 ? cb(null, ...reducer2(value)) : cb(null, value);
    } catch (err) {
      cb(err);
    }
  }, cb);
} : fn, callbackify_default = callbackify;

// ../../node_modules/axios/lib/adapters/http.js
var zlibOptions = {
  flush: zlib.constants.Z_SYNC_FLUSH,
  finishFlush: zlib.constants.Z_SYNC_FLUSH
}, brotliOptions = {
  flush: zlib.constants.BROTLI_OPERATION_FLUSH,
  finishFlush: zlib.constants.BROTLI_OPERATION_FLUSH
}, isBrotliSupported = utils_default.isFunction(zlib.createBrotliDecompress), { http: httpFollow, https: httpsFollow } = import_follow_redirects.default, isHttps = /https:?/, supportedProtocols = platform_default.protocols.map((protocol) => protocol + ":");
function dispatchBeforeRedirect(options) {
  options.beforeRedirects.proxy && options.beforeRedirects.proxy(options), options.beforeRedirects.config && options.beforeRedirects.config(options);
}
function setProxy(options, configProxy, location) {
  let proxy = configProxy;
  if (!proxy && proxy !== !1) {
    let proxyUrl = (0, import_proxy_from_env.getProxyForUrl)(location);
    proxyUrl && (proxy = new URL(proxyUrl));
  }
  if (proxy) {
    if (proxy.username && (proxy.auth = (proxy.username || "") + ":" + (proxy.password || "")), proxy.auth) {
      (proxy.auth.username || proxy.auth.password) && (proxy.auth = (proxy.auth.username || "") + ":" + (proxy.auth.password || ""));
      let base64 = Buffer.from(proxy.auth, "utf8").toString("base64");
      options.headers["Proxy-Authorization"] = "Basic " + base64;
    }
    options.headers.host = options.hostname + (options.port ? ":" + options.port : "");
    let proxyHost = proxy.hostname || proxy.host;
    options.hostname = proxyHost, options.host = proxyHost, options.port = proxy.port, options.path = location, proxy.protocol && (options.protocol = proxy.protocol.includes(":") ? proxy.protocol : `${proxy.protocol}:`);
  }
  options.beforeRedirects.proxy = function(redirectOptions) {
    setProxy(redirectOptions, configProxy, redirectOptions.href);
  };
}
var isHttpAdapterSupported = typeof process < "u" && utils_default.kindOf(process) === "process", wrapAsync = (asyncExecutor) => new Promise((resolve, reject) => {
  let onDone, isDone, done = (value, isRejected) => {
    isDone || (isDone = !0, onDone && onDone(value, isRejected));
  }, _resolve = (value) => {
    done(value), resolve(value);
  }, _reject = (reason) => {
    done(reason, !0), reject(reason);
  };
  asyncExecutor(_resolve, _reject, (onDoneHandler) => onDone = onDoneHandler).catch(_reject);
}), resolveFamily = ({ address, family }) => {
  if (!utils_default.isString(address))
    throw TypeError("address must be a string");
  return {
    address,
    family: family || (address.indexOf(".") < 0 ? 6 : 4)
  };
}, buildAddressEntry = (address, family) => resolveFamily(utils_default.isObject(address) ? address : { address, family }), http_default = isHttpAdapterSupported && function(config) {
  return wrapAsync(async function(resolve, reject, onDone) {
    let { data, lookup, family } = config, { responseType, responseEncoding } = config, method = config.method.toUpperCase(), isDone, rejected = !1, req;
    if (lookup) {
      let _lookup = callbackify_default(lookup, (value) => utils_default.isArray(value) ? value : [value]);
      lookup = (hostname, opt, cb) => {
        _lookup(hostname, opt, (err, arg0, arg1) => {
          let addresses = utils_default.isArray(arg0) ? arg0.map((addr) => buildAddressEntry(addr)) : [buildAddressEntry(arg0, arg1)];
          opt.all ? cb(err, addresses) : cb(err, addresses[0].address, addresses[0].family);
        });
      };
    }
    let emitter = new EventEmitter(), onFinished = () => {
      config.cancelToken && config.cancelToken.unsubscribe(abort), config.signal && config.signal.removeEventListener("abort", abort), emitter.removeAllListeners();
    };
    onDone((value, isRejected) => {
      isDone = !0, isRejected && (rejected = !0, onFinished());
    });
    function abort(reason) {
      emitter.emit("abort", !reason || reason.type ? new CanceledError_default(null, config, req) : reason);
    }
    emitter.once("abort", reject), (config.cancelToken || config.signal) && (config.cancelToken && config.cancelToken.subscribe(abort), config.signal && (config.signal.aborted ? abort() : config.signal.addEventListener("abort", abort)));
    let fullPath = buildFullPath(config.baseURL, config.url), parsed = new URL(fullPath, "http://localhost"), protocol = parsed.protocol || supportedProtocols[0];
    if (protocol === "data:") {
      let convertedData;
      if (method !== "GET")
        return settle(resolve, reject, {
          status: 405,
          statusText: "method not allowed",
          headers: {},
          config
        });
      try {
        convertedData = fromDataURI(config.url, responseType === "blob", {
          Blob: config.env && config.env.Blob
        });
      } catch (err) {
        throw AxiosError_default.from(err, AxiosError_default.ERR_BAD_REQUEST, config);
      }
      return responseType === "text" ? (convertedData = convertedData.toString(responseEncoding), (!responseEncoding || responseEncoding === "utf8") && (convertedData = utils_default.stripBOM(convertedData))) : responseType === "stream" && (convertedData = stream3.Readable.from(convertedData)), settle(resolve, reject, {
        data: convertedData,
        status: 200,
        statusText: "OK",
        headers: new AxiosHeaders_default(),
        config
      });
    }
    if (supportedProtocols.indexOf(protocol) === -1)
      return reject(new AxiosError_default(
        "Unsupported protocol " + protocol,
        AxiosError_default.ERR_BAD_REQUEST,
        config
      ));
    let headers = AxiosHeaders_default.from(config.headers).normalize();
    headers.set("User-Agent", "axios/" + VERSION, !1);
    let onDownloadProgress = config.onDownloadProgress, onUploadProgress = config.onUploadProgress, maxRate = config.maxRate, maxUploadRate, maxDownloadRate;
    if (utils_default.isSpecCompliantForm(data)) {
      let userBoundary = headers.getContentType(/boundary=([-_\w\d]{10,70})/i);
      data = formDataToStream_default(data, (formHeaders) => {
        headers.set(formHeaders);
      }, {
        tag: `axios-${VERSION}-boundary`,
        boundary: userBoundary && userBoundary[1] || void 0
      });
    } else if (utils_default.isFormData(data) && utils_default.isFunction(data.getHeaders)) {
      if (headers.set(data.getHeaders()), !headers.hasContentLength())
        try {
          let knownLength = await util.promisify(data.getLength).call(data);
          Number.isFinite(knownLength) && knownLength >= 0 && headers.setContentLength(knownLength);
        } catch {
        }
    } else if (utils_default.isBlob(data))
      data.size && headers.setContentType(data.type || "application/octet-stream"), headers.setContentLength(data.size || 0), data = stream3.Readable.from(readBlob_default(data));
    else if (data && !utils_default.isStream(data)) {
      if (!Buffer.isBuffer(data))
        if (utils_default.isArrayBuffer(data))
          data = Buffer.from(new Uint8Array(data));
        else if (utils_default.isString(data))
          data = Buffer.from(data, "utf-8");
        else
          return reject(new AxiosError_default(
            "Data after transformation must be a string, an ArrayBuffer, a Buffer, or a Stream",
            AxiosError_default.ERR_BAD_REQUEST,
            config
          ));
      if (headers.setContentLength(data.length, !1), config.maxBodyLength > -1 && data.length > config.maxBodyLength)
        return reject(new AxiosError_default(
          "Request body larger than maxBodyLength limit",
          AxiosError_default.ERR_BAD_REQUEST,
          config
        ));
    }
    let contentLength = utils_default.toFiniteNumber(headers.getContentLength());
    utils_default.isArray(maxRate) ? (maxUploadRate = maxRate[0], maxDownloadRate = maxRate[1]) : maxUploadRate = maxDownloadRate = maxRate, data && (onUploadProgress || maxUploadRate) && (utils_default.isStream(data) || (data = stream3.Readable.from(data, { objectMode: !1 })), data = stream3.pipeline([data, new AxiosTransformStream_default({
      length: contentLength,
      maxRate: utils_default.toFiniteNumber(maxUploadRate)
    })], utils_default.noop), onUploadProgress && data.on("progress", (progress2) => {
      onUploadProgress(Object.assign(progress2, {
        upload: !0
      }));
    }));
    let auth;
    if (config.auth) {
      let username = config.auth.username || "", password = config.auth.password || "";
      auth = username + ":" + password;
    }
    if (!auth && parsed.username) {
      let urlUsername = parsed.username, urlPassword = parsed.password;
      auth = urlUsername + ":" + urlPassword;
    }
    auth && headers.delete("authorization");
    let path;
    try {
      path = buildURL(
        parsed.pathname + parsed.search,
        config.params,
        config.paramsSerializer
      ).replace(/^\?/, "");
    } catch (err) {
      let customErr = new Error(err.message);
      return customErr.config = config, customErr.url = config.url, customErr.exists = !0, reject(customErr);
    }
    headers.set(
      "Accept-Encoding",
      "gzip, compress, deflate" + (isBrotliSupported ? ", br" : ""),
      !1
    );
    let options = {
      path,
      method,
      headers: headers.toJSON(),
      agents: { http: config.httpAgent, https: config.httpsAgent },
      auth,
      protocol,
      family,
      beforeRedirect: dispatchBeforeRedirect,
      beforeRedirects: {}
    };
    !utils_default.isUndefined(lookup) && (options.lookup = lookup), config.socketPath ? options.socketPath = config.socketPath : (options.hostname = parsed.hostname, options.port = parsed.port, setProxy(options, config.proxy, protocol + "//" + parsed.hostname + (parsed.port ? ":" + parsed.port : "") + options.path));
    let transport, isHttpsRequest = isHttps.test(options.protocol);
    if (options.agent = isHttpsRequest ? config.httpsAgent : config.httpAgent, config.transport ? transport = config.transport : config.maxRedirects === 0 ? transport = isHttpsRequest ? https : http : (config.maxRedirects && (options.maxRedirects = config.maxRedirects), config.beforeRedirect && (options.beforeRedirects.config = config.beforeRedirect), transport = isHttpsRequest ? httpsFollow : httpFollow), config.maxBodyLength > -1 ? options.maxBodyLength = config.maxBodyLength : options.maxBodyLength = 1 / 0, config.insecureHTTPParser && (options.insecureHTTPParser = config.insecureHTTPParser), req = transport.request(options, function(res) {
      if (req.destroyed)
        return;
      let streams = [res], responseLength = +res.headers["content-length"];
      if (onDownloadProgress) {
        let transformStream = new AxiosTransformStream_default({
          length: utils_default.toFiniteNumber(responseLength),
          maxRate: utils_default.toFiniteNumber(maxDownloadRate)
        });
        onDownloadProgress && transformStream.on("progress", (progress2) => {
          onDownloadProgress(Object.assign(progress2, {
            download: !0
          }));
        }), streams.push(transformStream);
      }
      let responseStream = res, lastRequest = res.req || req;
      if (config.decompress !== !1 && res.headers["content-encoding"])
        switch ((method === "HEAD" || res.statusCode === 204) && delete res.headers["content-encoding"], (res.headers["content-encoding"] || "").toLowerCase()) {
          case "gzip":
          case "x-gzip":
          case "compress":
          case "x-compress":
            streams.push(zlib.createUnzip(zlibOptions)), delete res.headers["content-encoding"];
            break;
          case "deflate":
            streams.push(new ZlibHeaderTransformStream_default()), streams.push(zlib.createUnzip(zlibOptions)), delete res.headers["content-encoding"];
            break;
          case "br":
            isBrotliSupported && (streams.push(zlib.createBrotliDecompress(brotliOptions)), delete res.headers["content-encoding"]);
        }
      responseStream = streams.length > 1 ? stream3.pipeline(streams, utils_default.noop) : streams[0];
      let offListeners = stream3.finished(responseStream, () => {
        offListeners(), onFinished();
      }), response = {
        status: res.statusCode,
        statusText: res.statusMessage,
        headers: new AxiosHeaders_default(res.headers),
        config,
        request: lastRequest
      };
      if (responseType === "stream")
        response.data = responseStream, settle(resolve, reject, response);
      else {
        let responseBuffer = [], totalResponseBytes = 0;
        responseStream.on("data", function(chunk) {
          responseBuffer.push(chunk), totalResponseBytes += chunk.length, config.maxContentLength > -1 && totalResponseBytes > config.maxContentLength && (rejected = !0, responseStream.destroy(), reject(new AxiosError_default(
            "maxContentLength size of " + config.maxContentLength + " exceeded",
            AxiosError_default.ERR_BAD_RESPONSE,
            config,
            lastRequest
          )));
        }), responseStream.on("aborted", function() {
          if (rejected)
            return;
          let err = new AxiosError_default(
            "maxContentLength size of " + config.maxContentLength + " exceeded",
            AxiosError_default.ERR_BAD_RESPONSE,
            config,
            lastRequest
          );
          responseStream.destroy(err), reject(err);
        }), responseStream.on("error", function(err) {
          req.destroyed || reject(AxiosError_default.from(err, null, config, lastRequest));
        }), responseStream.on("end", function() {
          try {
            let responseData = responseBuffer.length === 1 ? responseBuffer[0] : Buffer.concat(responseBuffer);
            responseType !== "arraybuffer" && (responseData = responseData.toString(responseEncoding), (!responseEncoding || responseEncoding === "utf8") && (responseData = utils_default.stripBOM(responseData))), response.data = responseData;
          } catch (err) {
            return reject(AxiosError_default.from(err, null, config, response.request, response));
          }
          settle(resolve, reject, response);
        });
      }
      emitter.once("abort", (err) => {
        responseStream.destroyed || (responseStream.emit("error", err), responseStream.destroy());
      });
    }), emitter.once("abort", (err) => {
      reject(err), req.destroy(err);
    }), req.on("error", function(err) {
      reject(AxiosError_default.from(err, null, config, req));
    }), req.on("socket", function(socket) {
      socket.setKeepAlive(!0, 1e3 * 60);
    }), config.timeout) {
      let timeout = parseInt(config.timeout, 10);
      if (Number.isNaN(timeout)) {
        reject(new AxiosError_default(
          "error trying to parse `config.timeout` to int",
          AxiosError_default.ERR_BAD_OPTION_VALUE,
          config,
          req
        ));
        return;
      }
      req.setTimeout(timeout, function() {
        if (isDone)
          return;
        let timeoutErrorMessage = config.timeout ? "timeout of " + config.timeout + "ms exceeded" : "timeout exceeded", transitional2 = config.transitional || transitional_default;
        config.timeoutErrorMessage && (timeoutErrorMessage = config.timeoutErrorMessage), reject(new AxiosError_default(
          timeoutErrorMessage,
          transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
          config,
          req
        )), abort();
      });
    }
    if (utils_default.isStream(data)) {
      let ended = !1, errored = !1;
      data.on("end", () => {
        ended = !0;
      }), data.once("error", (err) => {
        errored = !0, req.destroy(err);
      }), data.on("close", () => {
        !ended && !errored && abort(new CanceledError_default("Request stream has been aborted", config, req));
      }), data.pipe(req);
    } else
      req.end(data);
  });
};

// ../../node_modules/axios/lib/helpers/cookies.js
var cookies_default = platform_default.hasStandardBrowserEnv ? (
  // Standard browser envs support document.cookie
  {
    write(name, value, expires, path, domain, secure) {
      let cookie = [name + "=" + encodeURIComponent(value)];
      utils_default.isNumber(expires) && cookie.push("expires=" + new Date(expires).toGMTString()), utils_default.isString(path) && cookie.push("path=" + path), utils_default.isString(domain) && cookie.push("domain=" + domain), secure === !0 && cookie.push("secure"), document.cookie = cookie.join("; ");
    },
    read(name) {
      let match2 = document.cookie.match(new RegExp("(^|;\\s*)(" + name + ")=([^;]*)"));
      return match2 ? decodeURIComponent(match2[3]) : null;
    },
    remove(name) {
      this.write(name, "", Date.now() - 864e5);
    }
  }
) : (
  // Non-standard browser env (web workers, react-native) lack needed support.
  {
    write() {
    },
    read() {
      return null;
    },
    remove() {
    }
  }
);

// ../../node_modules/axios/lib/helpers/isURLSameOrigin.js
var isURLSameOrigin_default = platform_default.hasStandardBrowserEnv ? (
  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
  function() {
    let msie = /(msie|trident)/i.test(navigator.userAgent), urlParsingNode = document.createElement("a"), originURL;
    function resolveURL(url2) {
      let href = url2;
      return msie && (urlParsingNode.setAttribute("href", href), href = urlParsingNode.href), urlParsingNode.setAttribute("href", href), {
        href: urlParsingNode.href,
        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, "") : "",
        host: urlParsingNode.host,
        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, "") : "",
        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, "") : "",
        hostname: urlParsingNode.hostname,
        port: urlParsingNode.port,
        pathname: urlParsingNode.pathname.charAt(0) === "/" ? urlParsingNode.pathname : "/" + urlParsingNode.pathname
      };
    }
    return originURL = resolveURL(window.location.href), function(requestURL) {
      let parsed = utils_default.isString(requestURL) ? resolveURL(requestURL) : requestURL;
      return parsed.protocol === originURL.protocol && parsed.host === originURL.host;
    };
  }()
) : (
  // Non standard browser envs (web workers, react-native) lack needed support.
  function() {
    return function() {
      return !0;
    };
  }()
);

// ../../node_modules/axios/lib/adapters/xhr.js
function progressEventReducer(listener, isDownloadStream) {
  let bytesNotified = 0, _speedometer = speedometer_default(50, 250);
  return (e3) => {
    let loaded = e3.loaded, total = e3.lengthComputable ? e3.total : void 0, progressBytes = loaded - bytesNotified, rate = _speedometer(progressBytes), inRange = loaded <= total;
    bytesNotified = loaded;
    let data = {
      loaded,
      total,
      progress: total ? loaded / total : void 0,
      bytes: progressBytes,
      rate: rate || void 0,
      estimated: rate && total && inRange ? (total - loaded) / rate : void 0,
      event: e3
    };
    data[isDownloadStream ? "download" : "upload"] = !0, listener(data);
  };
}
var isXHRAdapterSupported = typeof XMLHttpRequest < "u", xhr_default = isXHRAdapterSupported && function(config) {
  return new Promise(function(resolve, reject) {
    let requestData = config.data, requestHeaders = AxiosHeaders_default.from(config.headers).normalize(), { responseType, withXSRFToken } = config, onCanceled;
    function done() {
      config.cancelToken && config.cancelToken.unsubscribe(onCanceled), config.signal && config.signal.removeEventListener("abort", onCanceled);
    }
    let contentType;
    if (utils_default.isFormData(requestData)) {
      if (platform_default.hasStandardBrowserEnv || platform_default.hasStandardBrowserWebWorkerEnv)
        requestHeaders.setContentType(!1);
      else if ((contentType = requestHeaders.getContentType()) !== !1) {
        let [type, ...tokens] = contentType ? contentType.split(";").map((token) => token.trim()).filter(Boolean) : [];
        requestHeaders.setContentType([type || "multipart/form-data", ...tokens].join("; "));
      }
    }
    let request = new XMLHttpRequest();
    if (config.auth) {
      let username = config.auth.username || "", password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : "";
      requestHeaders.set("Authorization", "Basic " + btoa(username + ":" + password));
    }
    let fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), !0), request.timeout = config.timeout;
    function onloadend() {
      if (!request)
        return;
      let responseHeaders = AxiosHeaders_default.from(
        "getAllResponseHeaders" in request && request.getAllResponseHeaders()
      ), response = {
        data: !responseType || responseType === "text" || responseType === "json" ? request.responseText : request.response,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config,
        request
      };
      settle(function(value) {
        resolve(value), done();
      }, function(err) {
        reject(err), done();
      }, response), request = null;
    }
    if ("onloadend" in request ? request.onloadend = onloadend : request.onreadystatechange = function() {
      !request || request.readyState !== 4 || request.status === 0 && !(request.responseURL && request.responseURL.indexOf("file:") === 0) || setTimeout(onloadend);
    }, request.onabort = function() {
      request && (reject(new AxiosError_default("Request aborted", AxiosError_default.ECONNABORTED, config, request)), request = null);
    }, request.onerror = function() {
      reject(new AxiosError_default("Network Error", AxiosError_default.ERR_NETWORK, config, request)), request = null;
    }, request.ontimeout = function() {
      let timeoutErrorMessage = config.timeout ? "timeout of " + config.timeout + "ms exceeded" : "timeout exceeded", transitional2 = config.transitional || transitional_default;
      config.timeoutErrorMessage && (timeoutErrorMessage = config.timeoutErrorMessage), reject(new AxiosError_default(
        timeoutErrorMessage,
        transitional2.clarifyTimeoutError ? AxiosError_default.ETIMEDOUT : AxiosError_default.ECONNABORTED,
        config,
        request
      )), request = null;
    }, platform_default.hasStandardBrowserEnv && (withXSRFToken && utils_default.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(config)), withXSRFToken || withXSRFToken !== !1 && isURLSameOrigin_default(fullPath))) {
      let xsrfValue = config.xsrfHeaderName && config.xsrfCookieName && cookies_default.read(config.xsrfCookieName);
      xsrfValue && requestHeaders.set(config.xsrfHeaderName, xsrfValue);
    }
    requestData === void 0 && requestHeaders.setContentType(null), "setRequestHeader" in request && utils_default.forEach(requestHeaders.toJSON(), function(val, key) {
      request.setRequestHeader(key, val);
    }), utils_default.isUndefined(config.withCredentials) || (request.withCredentials = !!config.withCredentials), responseType && responseType !== "json" && (request.responseType = config.responseType), typeof config.onDownloadProgress == "function" && request.addEventListener("progress", progressEventReducer(config.onDownloadProgress, !0)), typeof config.onUploadProgress == "function" && request.upload && request.upload.addEventListener("progress", progressEventReducer(config.onUploadProgress)), (config.cancelToken || config.signal) && (onCanceled = (cancel) => {
      request && (reject(!cancel || cancel.type ? new CanceledError_default(null, config, request) : cancel), request.abort(), request = null);
    }, config.cancelToken && config.cancelToken.subscribe(onCanceled), config.signal && (config.signal.aborted ? onCanceled() : config.signal.addEventListener("abort", onCanceled)));
    let protocol = parseProtocol(fullPath);
    if (protocol && platform_default.protocols.indexOf(protocol) === -1) {
      reject(new AxiosError_default("Unsupported protocol " + protocol + ":", AxiosError_default.ERR_BAD_REQUEST, config));
      return;
    }
    request.send(requestData || null);
  });
};

// ../../node_modules/axios/lib/adapters/adapters.js
var knownAdapters = {
  http: http_default,
  xhr: xhr_default
};
utils_default.forEach(knownAdapters, (fn, value) => {
  if (fn) {
    try {
      Object.defineProperty(fn, "name", { value });
    } catch {
    }
    Object.defineProperty(fn, "adapterName", { value });
  }
});
var renderReason = (reason) => `- ${reason}`, isResolvedHandle = (adapter) => utils_default.isFunction(adapter) || adapter === null || adapter === !1, adapters_default = {
  getAdapter: (adapters) => {
    adapters = utils_default.isArray(adapters) ? adapters : [adapters];
    let { length } = adapters, nameOrAdapter, adapter, rejectedReasons = {};
    for (let i3 = 0; i3 < length; i3++) {
      nameOrAdapter = adapters[i3];
      let id3;
      if (adapter = nameOrAdapter, !isResolvedHandle(nameOrAdapter) && (adapter = knownAdapters[(id3 = String(nameOrAdapter)).toLowerCase()], adapter === void 0))
        throw new AxiosError_default(`Unknown adapter '${id3}'`);
      if (adapter)
        break;
      rejectedReasons[id3 || "#" + i3] = adapter;
    }
    if (!adapter) {
      let reasons = Object.entries(rejectedReasons).map(
        ([id3, state]) => `adapter ${id3} ` + (state === !1 ? "is not supported by the environment" : "is not available in the build")
      ), s4 = length ? reasons.length > 1 ? `since :
` + reasons.map(renderReason).join(`
`) : " " + renderReason(reasons[0]) : "as no adapter specified";
      throw new AxiosError_default(
        "There is no suitable adapter to dispatch the request " + s4,
        "ERR_NOT_SUPPORT"
      );
    }
    return adapter;
  },
  adapters: knownAdapters
};

// ../../node_modules/axios/lib/core/dispatchRequest.js
function throwIfCancellationRequested(config) {
  if (config.cancelToken && config.cancelToken.throwIfRequested(), config.signal && config.signal.aborted)
    throw new CanceledError_default(null, config);
}
function dispatchRequest(config) {
  return throwIfCancellationRequested(config), config.headers = AxiosHeaders_default.from(config.headers), config.data = transformData.call(
    config,
    config.transformRequest
  ), ["post", "put", "patch"].indexOf(config.method) !== -1 && config.headers.setContentType("application/x-www-form-urlencoded", !1), adapters_default.getAdapter(config.adapter || defaults_default.adapter)(config).then(function(response) {
    return throwIfCancellationRequested(config), response.data = transformData.call(
      config,
      config.transformResponse,
      response
    ), response.headers = AxiosHeaders_default.from(response.headers), response;
  }, function(reason) {
    return isCancel(reason) || (throwIfCancellationRequested(config), reason && reason.response && (reason.response.data = transformData.call(
      config,
      config.transformResponse,
      reason.response
    ), reason.response.headers = AxiosHeaders_default.from(reason.response.headers))), Promise.reject(reason);
  });
}

// ../../node_modules/axios/lib/core/mergeConfig.js
var headersToObject = (thing) => thing instanceof AxiosHeaders_default ? thing.toJSON() : thing;
function mergeConfig(config1, config2) {
  config2 = config2 || {};
  let config = {};
  function getMergedValue(target, source, caseless) {
    return utils_default.isPlainObject(target) && utils_default.isPlainObject(source) ? utils_default.merge.call({ caseless }, target, source) : utils_default.isPlainObject(source) ? utils_default.merge({}, source) : utils_default.isArray(source) ? source.slice() : source;
  }
  function mergeDeepProperties(a4, b3, caseless) {
    if (utils_default.isUndefined(b3)) {
      if (!utils_default.isUndefined(a4))
        return getMergedValue(void 0, a4, caseless);
    } else
      return getMergedValue(a4, b3, caseless);
  }
  function valueFromConfig2(a4, b3) {
    if (!utils_default.isUndefined(b3))
      return getMergedValue(void 0, b3);
  }
  function defaultToConfig2(a4, b3) {
    if (utils_default.isUndefined(b3)) {
      if (!utils_default.isUndefined(a4))
        return getMergedValue(void 0, a4);
    } else
      return getMergedValue(void 0, b3);
  }
  function mergeDirectKeys(a4, b3, prop) {
    if (prop in config2)
      return getMergedValue(a4, b3);
    if (prop in config1)
      return getMergedValue(void 0, a4);
  }
  let mergeMap = {
    url: valueFromConfig2,
    method: valueFromConfig2,
    data: valueFromConfig2,
    baseURL: defaultToConfig2,
    transformRequest: defaultToConfig2,
    transformResponse: defaultToConfig2,
    paramsSerializer: defaultToConfig2,
    timeout: defaultToConfig2,
    timeoutMessage: defaultToConfig2,
    withCredentials: defaultToConfig2,
    withXSRFToken: defaultToConfig2,
    adapter: defaultToConfig2,
    responseType: defaultToConfig2,
    xsrfCookieName: defaultToConfig2,
    xsrfHeaderName: defaultToConfig2,
    onUploadProgress: defaultToConfig2,
    onDownloadProgress: defaultToConfig2,
    decompress: defaultToConfig2,
    maxContentLength: defaultToConfig2,
    maxBodyLength: defaultToConfig2,
    beforeRedirect: defaultToConfig2,
    transport: defaultToConfig2,
    httpAgent: defaultToConfig2,
    httpsAgent: defaultToConfig2,
    cancelToken: defaultToConfig2,
    socketPath: defaultToConfig2,
    responseEncoding: defaultToConfig2,
    validateStatus: mergeDirectKeys,
    headers: (a4, b3) => mergeDeepProperties(headersToObject(a4), headersToObject(b3), !0)
  };
  return utils_default.forEach(Object.keys(Object.assign({}, config1, config2)), function(prop) {
    let merge2 = mergeMap[prop] || mergeDeepProperties, configValue = merge2(config1[prop], config2[prop], prop);
    utils_default.isUndefined(configValue) && merge2 !== mergeDirectKeys || (config[prop] = configValue);
  }), config;
}

// ../../node_modules/axios/lib/helpers/validator.js
var validators = {};
["object", "boolean", "number", "function", "string", "symbol"].forEach((type, i3) => {
  validators[type] = function(thing) {
    return typeof thing === type || "a" + (i3 < 1 ? "n " : " ") + type;
  };
});
var deprecatedWarnings = {};
validators.transitional = function(validator, version, message) {
  function formatMessage(opt, desc) {
    return "[Axios v" + VERSION + "] Transitional option '" + opt + "'" + desc + (message ? ". " + message : "");
  }
  return (value, opt, opts) => {
    if (validator === !1)
      throw new AxiosError_default(
        formatMessage(opt, " has been removed" + (version ? " in " + version : "")),
        AxiosError_default.ERR_DEPRECATED
      );
    return version && !deprecatedWarnings[opt] && (deprecatedWarnings[opt] = !0, console.warn(
      formatMessage(
        opt,
        " has been deprecated since v" + version + " and will be removed in the near future"
      )
    )), validator ? validator(value, opt, opts) : !0;
  };
};
function assertOptions(options, schema, allowUnknown) {
  if (typeof options != "object")
    throw new AxiosError_default("options must be an object", AxiosError_default.ERR_BAD_OPTION_VALUE);
  let keys = Object.keys(options), i3 = keys.length;
  for (; i3-- > 0; ) {
    let opt = keys[i3], validator = schema[opt];
    if (validator) {
      let value = options[opt], result = value === void 0 || validator(value, opt, options);
      if (result !== !0)
        throw new AxiosError_default("option " + opt + " must be " + result, AxiosError_default.ERR_BAD_OPTION_VALUE);
      continue;
    }
    if (allowUnknown !== !0)
      throw new AxiosError_default("Unknown option " + opt, AxiosError_default.ERR_BAD_OPTION);
  }
}
var validator_default = {
  assertOptions,
  validators
};

// ../../node_modules/axios/lib/core/Axios.js
var validators2 = validator_default.validators, Axios = class {
  constructor(instanceConfig) {
    this.defaults = instanceConfig, this.interceptors = {
      request: new InterceptorManager_default(),
      response: new InterceptorManager_default()
    };
  }
  /**
   * Dispatch a request
   *
   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)
   * @param {?Object} config
   *
   * @returns {Promise} The Promise to be fulfilled
   */
  request(configOrUrl, config) {
    typeof configOrUrl == "string" ? (config = config || {}, config.url = configOrUrl) : config = configOrUrl || {}, config = mergeConfig(this.defaults, config);
    let { transitional: transitional2, paramsSerializer, headers } = config;
    transitional2 !== void 0 && validator_default.assertOptions(transitional2, {
      silentJSONParsing: validators2.transitional(validators2.boolean),
      forcedJSONParsing: validators2.transitional(validators2.boolean),
      clarifyTimeoutError: validators2.transitional(validators2.boolean)
    }, !1), paramsSerializer != null && (utils_default.isFunction(paramsSerializer) ? config.paramsSerializer = {
      serialize: paramsSerializer
    } : validator_default.assertOptions(paramsSerializer, {
      encode: validators2.function,
      serialize: validators2.function
    }, !0)), config.method = (config.method || this.defaults.method || "get").toLowerCase();
    let contextHeaders = headers && utils_default.merge(
      headers.common,
      headers[config.method]
    );
    headers && utils_default.forEach(
      ["delete", "get", "head", "post", "put", "patch", "common"],
      (method) => {
        delete headers[method];
      }
    ), config.headers = AxiosHeaders_default.concat(contextHeaders, headers);
    let requestInterceptorChain = [], synchronousRequestInterceptors = !0;
    this.interceptors.request.forEach(function(interceptor) {
      typeof interceptor.runWhen == "function" && interceptor.runWhen(config) === !1 || (synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous, requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected));
    });
    let responseInterceptorChain = [];
    this.interceptors.response.forEach(function(interceptor) {
      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);
    });
    let promise, i3 = 0, len;
    if (!synchronousRequestInterceptors) {
      let chain = [dispatchRequest.bind(this), void 0];
      for (chain.unshift.apply(chain, requestInterceptorChain), chain.push.apply(chain, responseInterceptorChain), len = chain.length, promise = Promise.resolve(config); i3 < len; )
        promise = promise.then(chain[i3++], chain[i3++]);
      return promise;
    }
    len = requestInterceptorChain.length;
    let newConfig = config;
    for (i3 = 0; i3 < len; ) {
      let onFulfilled = requestInterceptorChain[i3++], onRejected = requestInterceptorChain[i3++];
      try {
        newConfig = onFulfilled(newConfig);
      } catch (error) {
        onRejected.call(this, error);
        break;
      }
    }
    try {
      promise = dispatchRequest.call(this, newConfig);
    } catch (error) {
      return Promise.reject(error);
    }
    for (i3 = 0, len = responseInterceptorChain.length; i3 < len; )
      promise = promise.then(responseInterceptorChain[i3++], responseInterceptorChain[i3++]);
    return promise;
  }
  getUri(config) {
    config = mergeConfig(this.defaults, config);
    let fullPath = buildFullPath(config.baseURL, config.url);
    return buildURL(fullPath, config.params, config.paramsSerializer);
  }
};
utils_default.forEach(["delete", "get", "head", "options"], function(method) {
  Axios.prototype[method] = function(url2, config) {
    return this.request(mergeConfig(config || {}, {
      method,
      url: url2,
      data: (config || {}).data
    }));
  };
});
utils_default.forEach(["post", "put", "patch"], function(method) {
  function generateHTTPMethod(isForm) {
    return function(url2, data, config) {
      return this.request(mergeConfig(config || {}, {
        method,
        headers: isForm ? {
          "Content-Type": "multipart/form-data"
        } : {},
        url: url2,
        data
      }));
    };
  }
  Axios.prototype[method] = generateHTTPMethod(), Axios.prototype[method + "Form"] = generateHTTPMethod(!0);
});
var Axios_default = Axios;

// ../../node_modules/axios/lib/cancel/CancelToken.js
var CancelToken = class {
  constructor(executor) {
    if (typeof executor != "function")
      throw new TypeError("executor must be a function.");
    let resolvePromise;
    this.promise = new Promise(function(resolve) {
      resolvePromise = resolve;
    });
    let token = this;
    this.promise.then((cancel) => {
      if (!token._listeners)
        return;
      let i3 = token._listeners.length;
      for (; i3-- > 0; )
        token._listeners[i3](cancel);
      token._listeners = null;
    }), this.promise.then = (onfulfilled) => {
      let _resolve, promise = new Promise((resolve) => {
        token.subscribe(resolve), _resolve = resolve;
      }).then(onfulfilled);
      return promise.cancel = function() {
        token.unsubscribe(_resolve);
      }, promise;
    }, executor(function(message, config, request) {
      token.reason || (token.reason = new CanceledError_default(message, config, request), resolvePromise(token.reason));
    });
  }
  /**
   * Throws a `CanceledError` if cancellation has been requested.
   */
  throwIfRequested() {
    if (this.reason)
      throw this.reason;
  }
  /**
   * Subscribe to the cancel signal
   */
  subscribe(listener) {
    if (this.reason) {
      listener(this.reason);
      return;
    }
    this._listeners ? this._listeners.push(listener) : this._listeners = [listener];
  }
  /**
   * Unsubscribe from the cancel signal
   */
  unsubscribe(listener) {
    if (!this._listeners)
      return;
    let index3 = this._listeners.indexOf(listener);
    index3 !== -1 && this._listeners.splice(index3, 1);
  }
  /**
   * Returns an object that contains a new `CancelToken` and a function that, when called,
   * cancels the `CancelToken`.
   */
  static source() {
    let cancel;
    return {
      token: new CancelToken(function(c3) {
        cancel = c3;
      }),
      cancel
    };
  }
}, CancelToken_default = CancelToken;

// ../../node_modules/axios/lib/helpers/spread.js
function spread(callback) {
  return function(arr) {
    return callback.apply(null, arr);
  };
}

// ../../node_modules/axios/lib/helpers/isAxiosError.js
function isAxiosError(payload) {
  return utils_default.isObject(payload) && payload.isAxiosError === !0;
}

// ../../node_modules/axios/lib/helpers/HttpStatusCode.js
var HttpStatusCode = {
  Continue: 100,
  SwitchingProtocols: 101,
  Processing: 102,
  EarlyHints: 103,
  Ok: 200,
  Created: 201,
  Accepted: 202,
  NonAuthoritativeInformation: 203,
  NoContent: 204,
  ResetContent: 205,
  PartialContent: 206,
  MultiStatus: 207,
  AlreadyReported: 208,
  ImUsed: 226,
  MultipleChoices: 300,
  MovedPermanently: 301,
  Found: 302,
  SeeOther: 303,
  NotModified: 304,
  UseProxy: 305,
  Unused: 306,
  TemporaryRedirect: 307,
  PermanentRedirect: 308,
  BadRequest: 400,
  Unauthorized: 401,
  PaymentRequired: 402,
  Forbidden: 403,
  NotFound: 404,
  MethodNotAllowed: 405,
  NotAcceptable: 406,
  ProxyAuthenticationRequired: 407,
  RequestTimeout: 408,
  Conflict: 409,
  Gone: 410,
  LengthRequired: 411,
  PreconditionFailed: 412,
  PayloadTooLarge: 413,
  UriTooLong: 414,
  UnsupportedMediaType: 415,
  RangeNotSatisfiable: 416,
  ExpectationFailed: 417,
  ImATeapot: 418,
  MisdirectedRequest: 421,
  UnprocessableEntity: 422,
  Locked: 423,
  FailedDependency: 424,
  TooEarly: 425,
  UpgradeRequired: 426,
  PreconditionRequired: 428,
  TooManyRequests: 429,
  RequestHeaderFieldsTooLarge: 431,
  UnavailableForLegalReasons: 451,
  InternalServerError: 500,
  NotImplemented: 501,
  BadGateway: 502,
  ServiceUnavailable: 503,
  GatewayTimeout: 504,
  HttpVersionNotSupported: 505,
  VariantAlsoNegotiates: 506,
  InsufficientStorage: 507,
  LoopDetected: 508,
  NotExtended: 510,
  NetworkAuthenticationRequired: 511
};
Object.entries(HttpStatusCode).forEach(([key, value]) => {
  HttpStatusCode[value] = key;
});
var HttpStatusCode_default = HttpStatusCode;

// ../../node_modules/axios/lib/axios.js
function createInstance(defaultConfig) {
  let context = new Axios_default(defaultConfig), instance = bind(Axios_default.prototype.request, context);
  return utils_default.extend(instance, Axios_default.prototype, context, { allOwnKeys: !0 }), utils_default.extend(instance, context, null, { allOwnKeys: !0 }), instance.create = function(instanceConfig) {
    return createInstance(mergeConfig(defaultConfig, instanceConfig));
  }, instance;
}
var axios = createInstance(defaults_default);
axios.Axios = Axios_default;
axios.CanceledError = CanceledError_default;
axios.CancelToken = CancelToken_default;
axios.isCancel = isCancel;
axios.VERSION = VERSION;
axios.toFormData = toFormData_default;
axios.AxiosError = AxiosError_default;
axios.Cancel = axios.CanceledError;
axios.all = function(promises) {
  return Promise.all(promises);
};
axios.spread = spread;
axios.isAxiosError = isAxiosError;
axios.mergeConfig = mergeConfig;
axios.AxiosHeaders = AxiosHeaders_default;
axios.formToJSON = (thing) => formDataToJSON_default(utils_default.isHTMLForm(thing) ? new FormData(thing) : thing);
axios.getAdapter = adapters_default.getAdapter;
axios.HttpStatusCode = HttpStatusCode_default;
axios.default = axios;
var axios_default = axios;

// ../../node_modules/axios/index.js
var {
  Axios: Axios2,
  AxiosError: AxiosError2,
  CanceledError: CanceledError2,
  isCancel: isCancel2,
  CancelToken: CancelToken2,
  VERSION: VERSION2,
  all: all2,
  Cancel,
  isAxiosError: isAxiosError2,
  spread: spread2,
  toFormData: toFormData2,
  AxiosHeaders: AxiosHeaders2,
  HttpStatusCode: HttpStatusCode2,
  formToJSON,
  getAdapter,
  mergeConfig: mergeConfig2
} = axios_default;

// app/lib/axios.ts
var BASE_URL = "https://feedbacky-production.up.railway.app", axiosInstance = axios_default.create({
  baseURL: BASE_URL,
  withCredentials: !0,
  headers: {
    "Content-Type": "application/json"
  }
});
axiosInstance.interceptors.response.use(
  (response) => response,
  async function(error) {
    let response = error?.response;
    if (!response)
      return Promise.reject(error);
    let status = response?.status, message = response?.data?.message;
    if (typeof window < "u") {
      if (status === 401 && message === "Invalid refresh token")
        return window.location.pathname !== "/login" && window.location.replace("/login"), Promise.reject(error);
      if (status === 403 && message === "Email is not verified")
        return window.location.pathname !== "/dashboard/email-verification" && window.location.replace("/dashboard/email-verification"), Promise.reject(error);
    }
    let originalRequest = error.config;
    return response.status === 401 && !originalRequest?._retry ? (originalRequest._retry = !0, await fetchers.refreshToken(), axiosInstance(originalRequest)) : Promise.reject(error);
  }
);

// app/lib/fetchers/index.ts
var getProjects = async () => {
  let { data } = await axiosInstance.get("/projects");
  return data;
}, getProject = async (projectId) => {
  let { data } = await axiosInstance.get(`/projects/${projectId}`);
  return data;
}, updateProject = async (projectId, payload) => {
  let { data } = await axiosInstance.patch(`/projects/${projectId}`, payload);
  return data;
}, deleteProject = async (projectId) => {
  let { data } = await axiosInstance.delete(`/projects/${projectId}`);
  return data;
}, createProject = async (payload) => {
  let { data } = await axiosInstance.post("/projects", payload);
  return data;
}, getUserInvites = async () => {
  let { data } = await axiosInstance.get("/projects/current-user-invites");
  return data;
}, acceptInvite = async ({ projectId }) => {
  let { data } = await axiosInstance.post(
    `/projects/${projectId}/accept-invite`
  );
  return data;
}, rejectInvite = async ({ projectId }) => {
  let { data } = await axiosInstance.post(
    `/projects/${projectId}/reject-invite`
  );
  return data;
}, me = async (cookie) => {
  let { data } = await axiosInstance.get("/users/me", {
    headers: {
      Cookie: cookie
    }
  });
  return data;
}, updateUser = async (payload) => {
  let { data } = await axiosInstance.patch("/users/me", payload);
  return data;
}, signup = async (payload) => {
  let { data } = await axiosInstance.post("/auth/local/signup", payload);
  return data;
}, signin = async (payload) => {
  let { data } = await axiosInstance.post("/auth/local/signin", payload);
  return data;
}, verifyEmail = async (payload) => {
  let { data } = await axiosInstance.post(
    "/auth/local/verify-email",
    payload
  );
  return data;
}, resendVerificationEmail = async () => {
  let { data } = await axiosInstance.post(
    "/auth/local/send-verification-email"
  );
  return data;
}, logout = async () => {
  let { data } = await axiosInstance.post("/auth/logout");
  return data;
}, refreshToken = async () => {
  let { data } = await axiosInstance.post("/auth/refresh");
  return data;
}, googleLogin = async (payload) => {
  let { data } = await axiosInstance.post("/auth/google/login", payload);
  return data;
}, getFeedbacks = async (params) => {
  let { data } = await axiosInstance.get("/feedbacks", {
    params
  });
  return data;
}, updateFeedbackStatus = async (payload) => {
  let { data } = await axiosInstance.patch(
    `/feedbacks/${payload.id}/status`,
    payload
  );
  return data;
}, getProjectMembers = async (projectId) => {
  let { data } = await axiosInstance.get(`/projects/${projectId}/members`);
  return data;
}, inviteMember = async (projectId, payload) => {
  let { data } = await axiosInstance.post(
    `/projects/${projectId}/invite`,
    payload
  );
  return data;
}, deleteMember = async (projectId, memberId) => {
  let { data } = await axiosInstance.delete(
    `/projects/${projectId}/member/${memberId}`
  );
  return data;
}, cancelInvite = async (projectId, inviteId) => {
  let { data } = await axiosInstance.delete(
    `/projects/${projectId}/invite/${inviteId}`
  );
  return data;
}, getProjectTeam = async (projectId) => {
  let { data } = await axiosInstance.get(`/projects/${projectId}/team`);
  return data;
}, fetchers = {
  getProjects,
  getProject,
  updateProject,
  deleteProject,
  createProject,
  getUserInvites,
  acceptInvite,
  rejectInvite,
  me,
  updateUser,
  signup,
  signin,
  verifyEmail,
  resendVerificationEmail,
  logout,
  refreshToken,
  googleLogin,
  getFeedbacks,
  updateFeedbackStatus,
  getProjectMembers,
  inviteMember,
  deleteMember,
  cancelInvite,
  getProjectTeam
};

// app/components/ui/form.tsx
var React29 = __toESM(require_react(), 1);

// app/components/ui/label.tsx
var React28 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-label/dist/index.mjs
var import_react24 = __toESM(require_react(), 1);
var $b73a6c6685e72184$export$b04be29aa201d4f5 = /* @__PURE__ */ (0, import_react24.forwardRef)((props, forwardedRef) => /* @__PURE__ */ (0, import_react24.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.label, _extends6({}, props, {
  ref: forwardedRef,
  onMouseDown: (event) => {
    var _props$onMouseDown;
    (_props$onMouseDown = props.onMouseDown) === null || _props$onMouseDown === void 0 || _props$onMouseDown.call(props, event), !event.defaultPrevented && event.detail > 1 && event.preventDefault();
  }
}))), $b73a6c6685e72184$export$be92b6f5f03c0fe9 = $b73a6c6685e72184$export$b04be29aa201d4f5;

// app/components/ui/label.tsx
var import_jsx_runtime7 = __toESM(require_jsx_runtime(), 1), labelVariants = cva(
  "text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"
), Label = React28.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime7.jsx)(
  $b73a6c6685e72184$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(labelVariants(), className),
    ...props
  }
));
Label.displayName = $b73a6c6685e72184$export$be92b6f5f03c0fe9.displayName;

// app/components/ui/form.tsx
var import_jsx_runtime8 = __toESM(require_jsx_runtime(), 1), Form2 = FormProvider, FormFieldContext = React29.createContext(
  {}
), FormField = ({
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(FormFieldContext.Provider, { value: { name: props.name }, children: /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(Controller, { ...props }) }), useFormField = () => {
  let fieldContext = React29.useContext(FormFieldContext), itemContext = React29.useContext(FormItemContext), { getFieldState, formState } = useFormContext(), fieldState = getFieldState(fieldContext.name, formState);
  if (!fieldContext)
    throw new Error("useFormField should be used within <FormField>");
  let { id: id3 } = itemContext;
  return {
    id: id3,
    name: fieldContext.name,
    formItemId: `${id3}-form-item`,
    formDescriptionId: `${id3}-form-item-description`,
    formMessageId: `${id3}-form-item-message`,
    ...fieldState
  };
}, FormItemContext = React29.createContext(
  {}
), FormItem = React29.forwardRef(({ className, ...props }, ref) => {
  let id3 = React29.useId();
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(FormItemContext.Provider, { value: { id: id3 }, children: /* @__PURE__ */ (0, import_jsx_runtime8.jsx)("div", { ref, className: cn("space-y-2", className), ...props }) });
});
FormItem.displayName = "FormItem";
var FormLabel = React29.forwardRef(({ className, ...props }, ref) => {
  let { error, formItemId } = useFormField();
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
    Label,
    {
      ref,
      className: cn(error && "text-destructive", className),
      htmlFor: formItemId,
      ...props
    }
  );
});
FormLabel.displayName = "FormLabel";
var FormControl = React29.forwardRef(({ ...props }, ref) => {
  let { error, formItemId, formDescriptionId, formMessageId } = useFormField();
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
    $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    {
      ref,
      id: formItemId,
      "aria-describedby": error ? `${formDescriptionId} ${formMessageId}` : `${formDescriptionId}`,
      "aria-invalid": !!error,
      ...props
    }
  );
});
FormControl.displayName = "FormControl";
var FormDescription = React29.forwardRef(({ className, ...props }, ref) => {
  let { formDescriptionId } = useFormField();
  return /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
    "p",
    {
      ref,
      id: formDescriptionId,
      className: cn("text-[0.8rem] text-muted-foreground", className),
      ...props
    }
  );
});
FormDescription.displayName = "FormDescription";
var FormMessage = React29.forwardRef(({ className, children, ...props }, ref) => {
  let { error, formMessageId } = useFormField(), body = error ? String(error?.message) : children;
  return body ? /* @__PURE__ */ (0, import_jsx_runtime8.jsx)(
    "p",
    {
      ref,
      id: formMessageId,
      className: cn("text-[0.8rem] font-medium text-destructive", className),
      ...props,
      children: body
    }
  ) : null;
});
FormMessage.displayName = "FormMessage";

// app/components/ui/input.tsx
var React30 = __toESM(require_react(), 1);
var import_jsx_runtime9 = __toESM(require_jsx_runtime(), 1), Input = React30.forwardRef(
  ({ className, type, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime9.jsx)(
    "input",
    {
      type,
      className: cn(
        "flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
        className
      ),
      ref,
      ...props
    }
  )
);
Input.displayName = "Input";

// app/components/ui/separator.tsx
var React31 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-separator/dist/index.mjs
var import_react25 = __toESM(require_react(), 1);
var $89eedd556c436f6a$var$DEFAULT_ORIENTATION = "horizontal", $89eedd556c436f6a$var$ORIENTATIONS = [
  "horizontal",
  "vertical"
], $89eedd556c436f6a$export$1ff3c3f08ae963c0 = /* @__PURE__ */ (0, import_react25.forwardRef)((props, forwardedRef) => {
  let { decorative, orientation: orientationProp = $89eedd556c436f6a$var$DEFAULT_ORIENTATION, ...domProps } = props, orientation = $89eedd556c436f6a$var$isValidOrientation(orientationProp) ? orientationProp : $89eedd556c436f6a$var$DEFAULT_ORIENTATION, semanticProps = decorative ? {
    role: "none"
  } : {
    "aria-orientation": orientation === "vertical" ? orientation : void 0,
    role: "separator"
  };
  return /* @__PURE__ */ (0, import_react25.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-orientation": orientation
  }, semanticProps, domProps, {
    ref: forwardedRef
  }));
});
$89eedd556c436f6a$export$1ff3c3f08ae963c0.propTypes = {
  orientation(props, propName, componentName) {
    let propValue = props[propName], strVal = String(propValue);
    return propValue && !$89eedd556c436f6a$var$isValidOrientation(propValue) ? new Error($89eedd556c436f6a$var$getInvalidOrientationError(strVal, componentName)) : null;
  }
};
function $89eedd556c436f6a$var$getInvalidOrientationError(value, componentName) {
  return `Invalid prop \`orientation\` of value \`${value}\` supplied to \`${componentName}\`, expected one of:
  - horizontal
  - vertical

Defaulting to \`${$89eedd556c436f6a$var$DEFAULT_ORIENTATION}\`.`;
}
function $89eedd556c436f6a$var$isValidOrientation(orientation) {
  return $89eedd556c436f6a$var$ORIENTATIONS.includes(orientation);
}
var $89eedd556c436f6a$export$be92b6f5f03c0fe9 = $89eedd556c436f6a$export$1ff3c3f08ae963c0;

// app/components/ui/separator.tsx
var import_jsx_runtime10 = __toESM(require_jsx_runtime(), 1), Separator = React31.forwardRef(
  ({ className, orientation = "horizontal", decorative = !0, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime10.jsx)(
    $89eedd556c436f6a$export$be92b6f5f03c0fe9,
    {
      ref,
      decorative,
      orientation,
      className: cn(
        "shrink-0 bg-border",
        orientation === "horizontal" ? "h-[1px] w-full" : "h-full w-[1px]",
        className
      ),
      ...props
    }
  )
);
Separator.displayName = $89eedd556c436f6a$export$be92b6f5f03c0fe9.displayName;

// app/components/loading-indicator.tsx
var import_jsx_runtime11 = __toESM(require_jsx_runtime(), 1);
function LoadingIndicator({ className }) {
  return /* @__PURE__ */ (0, import_jsx_runtime11.jsx)(
    "div",
    {
      className: cn(
        "box-border inline-block h-4 w-4 animate-spin rounded-full border-2 border-inherit !border-b-transparent repeat-infinite",
        className
      )
    }
  );
}

// app/components/global-modals/create-project.tsx
var import_jsx_runtime12 = __toESM(require_jsx_runtime(), 1);
function CreateProject() {
  let navigate = useNavigate(), [_, setSearchParams] = useSearchParams(), queryClient = useQueryClient(), form = useForm({
    defaultValues: {
      name: ""
    }
  }), close = () => {
    setSearchParams((prev) => (prev.delete("modal"), prev));
  }, { mutate, isPending } = useMutation({
    mutationFn: fetchers.createProject,
    onSuccess: async (data) => {
      await queryClient.invalidateQueries({ queryKey: ["projects"] }), close(), navigate(`/dashboard/${data.id}`);
    }
  }), onSubmit = (values) => {
    mutate(values);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(
    Dialog,
    {
      modal: !0,
      open: !0,
      onOpenChange: (open) => {
        open || close();
      },
      children: /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)(DialogContent, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)(DialogHeader, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(DialogTitle, { children: "Create project" }),
          /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(DialogDescription, { children: "Add a new project to collect and manage feedback." })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(Separator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(
            FormField,
            {
              control: form.control,
              name: "name",
              render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)(FormItem, { children: [
                /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(FormLabel, { children: "Project name" }),
                /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(
                  Input,
                  {
                    placeholder: "Acme Inc.",
                    required: !0,
                    minLength: 3,
                    autoComplete: "off",
                    ...field
                  }
                ) }),
                /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(FormMessage, {})
              ] })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)(DialogFooter, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(
              Button,
              {
                variant: "outline",
                onClick: () => {
                  close();
                },
                children: "Cancel"
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime12.jsxs)(Button, { type: "submit", disabled: isPending, children: [
              isPending && /* @__PURE__ */ (0, import_jsx_runtime12.jsx)(LoadingIndicator, { className: "mr-2" }),
              "Save"
            ] })
          ] })
        ] }) })
      ] })
    }
  );
}

// app/components/global-modals/modal-root.tsx
var import_jsx_runtime13 = __toESM(require_jsx_runtime(), 1);
function ModalRoot() {
  let location = useLocation(), [searchParams] = useSearchParams();
  if (!location.pathname.startsWith("/dashboard"))
    return null;
  switch (searchParams.get("modal")) {
    case "create-project":
      return /* @__PURE__ */ (0, import_jsx_runtime13.jsx)(CreateProject, {});
    default:
      return null;
  }
}

// app/tailwind.css
var tailwind_default = "/build/_assets/tailwind-G6UHYL2X.css";

// app/root.tsx
var import_jsx_runtime14 = __toESM(require_jsx_runtime(), 1), links = () => [
  { rel: "stylesheet", href: tailwind_default },
  {
    rel: "stylesheet",
    href: "https://rsms.me/inter/inter.css"
  },
  ...void 0 ? [{ rel: "stylesheet", href: void 0 }] : []
];
async function loader() {
  return (0, import_cloudflare2.json)({
    ENV: {
      GOOGLE_CLIENT_ID: process.env.GOOGLE_CLIENT_ID || "108576727290-r2vpjvnub36682vn3vig0rq1jvj9to2n.apps.googleusercontent.com"
    }
  });
}
function App() {
  let data = useLoaderData2(), { toast: toast2 } = useToast(), [queryClient] = (0, import_react28.useState)(
    () => new QueryClient({
      defaultOptions: {
        queries: {
          // With SSR, set some default staleTime
          // above 0 to avoid refetching immediately on the client
          staleTime: 1e3
        }
      },
      queryCache: new QueryCache({
        onError: () => toast2({
          title: "Uh oh! Something went wrong.",
          description: "There was a problem with your request.",
          action: /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(
            ToastAction,
            {
              altText: "Try again",
              onClick: () => window.location.reload(),
              children: "Try again"
            }
          )
        })
      }),
      mutationCache: new MutationCache({
        onError: (error, variables, context, mutation) => {
          mutation.options?.meta?.errorToast !== !1 && toast2({
            title: "Uh oh! Something went wrong.",
            description: "There was a problem with your mutation."
          });
        }
      })
    })
  );
  return /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("html", { lang: "en", suppressHydrationWarning: !0, children: [
    /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("head", { children: [
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("meta", { charSet: "utf-8" }),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)("meta", { name: "viewport", content: "width=device-width, initial-scale=1" }),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Meta, {}),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Links, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("body", { className: "antialiased", children: [
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(
        ThemeProvider,
        {
          attribute: "class",
          defaultTheme: "system",
          enableSystem: !0,
          disableTransitionOnChange: !0,
          children: /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)(QueryClientProvider, { client: queryClient, children: [
            /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(GoogleOAuthProvider, { clientId: data.ENV.GOOGLE_CLIENT_ID, children: /* @__PURE__ */ (0, import_jsx_runtime14.jsxs)("main", { className: "relative min-h-screen", children: [
              /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Outlet, {}),
              /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(ModalRoot, {})
            ] }) }),
            /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(ReactQueryDevtools2, { initialIsOpen: !1 })
          ] })
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Toaster, {}),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(ScrollRestoration2, {}),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(Scripts, {}),
      /* @__PURE__ */ (0, import_jsx_runtime14.jsx)(LiveReload, {})
    ] })
  ] });
}

// app/routes/dashboard/route.tsx
var route_exports = {};
__export(route_exports, {
  default: () => Dashboard
});

// ../../node_modules/framer-motion/dist/es/motion/index.mjs
var React32 = __toESM(require_react(), 1), import_react40 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs
var import_react30 = __toESM(require_react(), 1), MotionConfigContext = (0, import_react30.createContext)({
  transformPagePoint: (p2) => p2,
  isStatic: !1,
  reducedMotion: "never"
});

// ../../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs
var import_react31 = __toESM(require_react(), 1), MotionContext = (0, import_react31.createContext)({});

// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
var import_react35 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/context/PresenceContext.mjs
var import_react32 = __toESM(require_react(), 1), PresenceContext = (0, import_react32.createContext)(null);

// ../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var import_react33 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/utils/is-browser.mjs
var isBrowser2 = typeof document < "u";

// ../../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs
var useIsomorphicLayoutEffect2 = isBrowser2 ? import_react33.useLayoutEffect : import_react33.useEffect;

// ../../node_modules/framer-motion/dist/es/context/LazyContext.mjs
var import_react34 = __toESM(require_react(), 1), LazyContext = (0, import_react34.createContext)({ strict: !1 });

// ../../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs
var camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, "$1-$2").toLowerCase();

// ../../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs
var optimizedAppearDataId = "framerAppearId", optimizedAppearDataAttribute = "data-" + camelToDash(optimizedAppearDataId);

// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs
function useVisualElement(Component5, visualState, props, createVisualElement) {
  let { visualElement: parent } = (0, import_react35.useContext)(MotionContext), lazyContext = (0, import_react35.useContext)(LazyContext), presenceContext = (0, import_react35.useContext)(PresenceContext), reducedMotionConfig = (0, import_react35.useContext)(MotionConfigContext).reducedMotion, visualElementRef = (0, import_react35.useRef)();
  createVisualElement = createVisualElement || lazyContext.renderer, !visualElementRef.current && createVisualElement && (visualElementRef.current = createVisualElement(Component5, {
    visualState,
    parent,
    props,
    presenceContext,
    blockInitialAnimation: presenceContext ? presenceContext.initial === !1 : !1,
    reducedMotionConfig
  }));
  let visualElement = visualElementRef.current;
  (0, import_react35.useInsertionEffect)(() => {
    visualElement && visualElement.update(props, presenceContext);
  });
  let wantsHandoff = (0, import_react35.useRef)(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));
  return useIsomorphicLayoutEffect2(() => {
    visualElement && (visualElement.render(), wantsHandoff.current && visualElement.animationState && visualElement.animationState.animateChanges());
  }), (0, import_react35.useEffect)(() => {
    visualElement && (visualElement.updateFeatures(), !wantsHandoff.current && visualElement.animationState && visualElement.animationState.animateChanges(), wantsHandoff.current && (wantsHandoff.current = !1, window.HandoffComplete = !0));
  }), visualElement;
}

// ../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
var import_react36 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs
function isRefObject(ref) {
  return typeof ref == "object" && Object.prototype.hasOwnProperty.call(ref, "current");
}

// ../../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs
function useMotionRef(visualState, visualElement, externalRef) {
  return (0, import_react36.useCallback)(
    (instance) => {
      instance && visualState.mount && visualState.mount(instance), visualElement && (instance ? visualElement.mount(instance) : visualElement.unmount()), externalRef && (typeof externalRef == "function" ? externalRef(instance) : isRefObject(externalRef) && (externalRef.current = instance));
    },
    /**
     * Only pass a new ref callback to React if we've received a visual element
     * factory. Otherwise we'll be mounting/remounting every time externalRef
     * or other dependencies change.
     */
    [visualElement]
  );
}

// ../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
var import_react37 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs
function isVariantLabel(v2) {
  return typeof v2 == "string" || Array.isArray(v2);
}

// ../../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs
function isAnimationControls(v2) {
  return typeof v2 == "object" && typeof v2.start == "function";
}

// ../../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs
var variantPriorityOrder = [
  "animate",
  "whileInView",
  "whileFocus",
  "whileHover",
  "whileTap",
  "whileDrag",
  "exit"
], variantProps = ["initial", ...variantPriorityOrder];

// ../../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs
function isControllingVariants(props) {
  return isAnimationControls(props.animate) || variantProps.some((name) => isVariantLabel(props[name]));
}
function isVariantNode(props) {
  return Boolean(isControllingVariants(props) || props.variants);
}

// ../../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs
function getCurrentTreeVariants(props, context) {
  if (isControllingVariants(props)) {
    let { initial, animate } = props;
    return {
      initial: initial === !1 || isVariantLabel(initial) ? initial : void 0,
      animate: isVariantLabel(animate) ? animate : void 0
    };
  }
  return props.inherit !== !1 ? context : {};
}

// ../../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs
function useCreateMotionContext(props) {
  let { initial, animate } = getCurrentTreeVariants(props, (0, import_react37.useContext)(MotionContext));
  return (0, import_react37.useMemo)(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);
}
function variantLabelsAsDependency(prop) {
  return Array.isArray(prop) ? prop.join(" ") : prop;
}

// ../../node_modules/framer-motion/dist/es/motion/features/definitions.mjs
var featureProps = {
  animation: [
    "animate",
    "variants",
    "whileHover",
    "whileTap",
    "exit",
    "whileInView",
    "whileFocus",
    "whileDrag"
  ],
  exit: ["exit"],
  drag: ["drag", "dragControls"],
  focus: ["whileFocus"],
  hover: ["whileHover", "onHoverStart", "onHoverEnd"],
  tap: ["whileTap", "onTap", "onTapStart", "onTapCancel"],
  pan: ["onPan", "onPanStart", "onPanSessionStart", "onPanEnd"],
  inView: ["whileInView", "onViewportEnter", "onViewportLeave"],
  layout: ["layout", "layoutId"]
}, featureDefinitions = {};
for (let key in featureProps)
  featureDefinitions[key] = {
    isEnabled: (props) => featureProps[key].some((name) => !!props[name])
  };

// ../../node_modules/framer-motion/dist/es/motion/features/load-features.mjs
function loadFeatures(features) {
  for (let key in features)
    featureDefinitions[key] = {
      ...featureDefinitions[key],
      ...features[key]
    };
}

// ../../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs
var import_react38 = __toESM(require_react(), 1), LayoutGroupContext = (0, import_react38.createContext)({});

// ../../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs
var import_react39 = __toESM(require_react(), 1), SwitchLayoutGroupContext = (0, import_react39.createContext)({});

// ../../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs
var motionComponentSymbol = Symbol.for("motionComponentSymbol");

// ../../node_modules/framer-motion/dist/es/motion/index.mjs
function createMotionComponent({ preloadedFeatures: preloadedFeatures2, createVisualElement, useRender, useVisualState, Component: Component5 }) {
  preloadedFeatures2 && loadFeatures(preloadedFeatures2);
  function MotionComponent(props, externalRef) {
    let MeasureLayout2, configAndProps = {
      ...(0, import_react40.useContext)(MotionConfigContext),
      ...props,
      layoutId: useLayoutId(props)
    }, { isStatic } = configAndProps, context = useCreateMotionContext(props), visualState = useVisualState(props, isStatic);
    if (!isStatic && isBrowser2) {
      context.visualElement = useVisualElement(Component5, visualState, configAndProps, createVisualElement);
      let initialLayoutGroupConfig = (0, import_react40.useContext)(SwitchLayoutGroupContext), isStrict = (0, import_react40.useContext)(LazyContext).strict;
      context.visualElement && (MeasureLayout2 = context.visualElement.loadFeatures(
        // Note: Pass the full new combined props to correctly re-render dynamic feature components.
        configAndProps,
        isStrict,
        preloadedFeatures2,
        initialLayoutGroupConfig
      ));
    }
    return React32.createElement(
      MotionContext.Provider,
      { value: context },
      MeasureLayout2 && context.visualElement ? React32.createElement(MeasureLayout2, { visualElement: context.visualElement, ...configAndProps }) : null,
      useRender(Component5, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)
    );
  }
  let ForwardRefComponent = (0, import_react40.forwardRef)(MotionComponent);
  return ForwardRefComponent[motionComponentSymbol] = Component5, ForwardRefComponent;
}
function useLayoutId({ layoutId }) {
  let layoutGroupId = (0, import_react40.useContext)(LayoutGroupContext).id;
  return layoutGroupId && layoutId !== void 0 ? layoutGroupId + "-" + layoutId : layoutId;
}

// ../../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs
function createMotionProxy(createConfig) {
  function custom(Component5, customMotionComponentConfig = {}) {
    return createMotionComponent(createConfig(Component5, customMotionComponentConfig));
  }
  if (typeof Proxy > "u")
    return custom;
  let componentCache = /* @__PURE__ */ new Map();
  return new Proxy(custom, {
    /**
     * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.
     * The prop name is passed through as `key` and we can use that to generate a `motion`
     * DOM component with that name.
     */
    get: (_target, key) => (componentCache.has(key) || componentCache.set(key, custom(key)), componentCache.get(key))
  });
}

// ../../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs
var lowercaseSVGElements = [
  "animate",
  "circle",
  "defs",
  "desc",
  "ellipse",
  "g",
  "image",
  "line",
  "filter",
  "marker",
  "mask",
  "metadata",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "rect",
  "stop",
  "switch",
  "symbol",
  "svg",
  "text",
  "tspan",
  "use",
  "view"
];

// ../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs
function isSVGComponent(Component5) {
  return (
    /**
     * If it's not a string, it's a custom React component. Currently we only support
     * HTML custom React components.
     */
    typeof Component5 != "string" || /**
     * If it contains a dash, the element is a custom HTML webcomponent.
     */
    Component5.includes("-") ? !1 : (
      /**
       * If it's in our list of lowercase SVG tags, it's an SVG component
       */
      !!(lowercaseSVGElements.indexOf(Component5) > -1 || /**
       * If it contains a capital letter, it's an SVG component
       */
      /[A-Z]/.test(Component5))
    )
  );
}

// ../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs
var import_react43 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/render/html/use-props.mjs
var import_react41 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs
var scaleCorrectors = {};
function addScaleCorrector(correctors) {
  Object.assign(scaleCorrectors, correctors);
}

// ../../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs
var transformPropOrder = [
  "transformPerspective",
  "x",
  "y",
  "z",
  "translateX",
  "translateY",
  "translateZ",
  "scale",
  "scaleX",
  "scaleY",
  "rotate",
  "rotateX",
  "rotateY",
  "rotateZ",
  "skew",
  "skewX",
  "skewY"
], transformProps = new Set(transformPropOrder);

// ../../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs
function isForcedMotionValue(key, { layout: layout2, layoutId }) {
  return transformProps.has(key) || key.startsWith("origin") || (layout2 || layoutId !== void 0) && (!!scaleCorrectors[key] || key === "opacity");
}

// ../../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs
var isMotionValue = (value) => Boolean(value && value.getVelocity);

// ../../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs
var translateAlias = {
  x: "translateX",
  y: "translateY",
  z: "translateZ",
  transformPerspective: "perspective"
}, numTransforms = transformPropOrder.length;
function buildTransform(transform, { enableHardwareAcceleration = !0, allowTransformNone = !0 }, transformIsDefault, transformTemplate) {
  let transformString = "";
  for (let i3 = 0; i3 < numTransforms; i3++) {
    let key = transformPropOrder[i3];
    if (transform[key] !== void 0) {
      let transformName = translateAlias[key] || key;
      transformString += `${transformName}(${transform[key]}) `;
    }
  }
  return enableHardwareAcceleration && !transform.z && (transformString += "translateZ(0)"), transformString = transformString.trim(), transformTemplate ? transformString = transformTemplate(transform, transformIsDefault ? "" : transformString) : allowTransformNone && transformIsDefault && (transformString = "none"), transformString;
}

// ../../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs
var checkStringStartsWith = (token) => (key) => typeof key == "string" && key.startsWith(token), isCSSVariableName = checkStringStartsWith("--"), isCSSVariableToken = checkStringStartsWith("var(--"), cssVariableRegex = /var\s*\(\s*--[\w-]+(\s*,\s*(?:(?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)+)?\s*\)/g;

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs
var getValueAsType = (value, type) => type && typeof value == "number" ? type.transform(value) : value;

// ../../node_modules/framer-motion/dist/es/utils/clamp.mjs
var clamp = (min2, max2, v2) => Math.min(Math.max(v2, min2), max2);

// ../../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs
var number = {
  test: (v2) => typeof v2 == "number",
  parse: parseFloat,
  transform: (v2) => v2
}, alpha = {
  ...number,
  transform: (v2) => clamp(0, 1, v2)
}, scale = {
  ...number,
  default: 1
};

// ../../node_modules/framer-motion/dist/es/value/types/utils.mjs
var sanitize = (v2) => Math.round(v2 * 1e5) / 1e5, floatRegex = /(-)?([\d]*\.?[\d])+/g, colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))/gi, singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\((-?[\d\.]+%?[,\s]+){2}(-?[\d\.]+%?)\s*[\,\/]?\s*[\d\.]*%?\))$/i;
function isString3(v2) {
  return typeof v2 == "string";
}

// ../../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs
var createUnitType = (unit) => ({
  test: (v2) => isString3(v2) && v2.endsWith(unit) && v2.split(" ").length === 1,
  parse: parseFloat,
  transform: (v2) => `${v2}${unit}`
}), degrees = createUnitType("deg"), percent = createUnitType("%"), px = createUnitType("px"), vh = createUnitType("vh"), vw = createUnitType("vw"), progressPercentage = {
  ...percent,
  parse: (v2) => percent.parse(v2) / 100,
  transform: (v2) => percent.transform(v2 * 100)
};

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs
var int = {
  ...number,
  transform: Math.round
};

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs
var numberValueTypes = {
  // Border props
  borderWidth: px,
  borderTopWidth: px,
  borderRightWidth: px,
  borderBottomWidth: px,
  borderLeftWidth: px,
  borderRadius: px,
  radius: px,
  borderTopLeftRadius: px,
  borderTopRightRadius: px,
  borderBottomRightRadius: px,
  borderBottomLeftRadius: px,
  // Positioning props
  width: px,
  maxWidth: px,
  height: px,
  maxHeight: px,
  size: px,
  top: px,
  right: px,
  bottom: px,
  left: px,
  // Spacing props
  padding: px,
  paddingTop: px,
  paddingRight: px,
  paddingBottom: px,
  paddingLeft: px,
  margin: px,
  marginTop: px,
  marginRight: px,
  marginBottom: px,
  marginLeft: px,
  // Transform props
  rotate: degrees,
  rotateX: degrees,
  rotateY: degrees,
  rotateZ: degrees,
  scale,
  scaleX: scale,
  scaleY: scale,
  scaleZ: scale,
  skew: degrees,
  skewX: degrees,
  skewY: degrees,
  distance: px,
  translateX: px,
  translateY: px,
  translateZ: px,
  x: px,
  y: px,
  z: px,
  perspective: px,
  transformPerspective: px,
  opacity: alpha,
  originX: progressPercentage,
  originY: progressPercentage,
  originZ: px,
  // Misc
  zIndex: int,
  // SVG
  fillOpacity: alpha,
  strokeOpacity: alpha,
  numOctaves: int
};

// ../../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs
function buildHTMLStyles(state, latestValues, options, transformTemplate) {
  let { style, vars, transform, transformOrigin } = state, hasTransform2 = !1, hasTransformOrigin = !1, transformIsNone = !0;
  for (let key in latestValues) {
    let value = latestValues[key];
    if (isCSSVariableName(key)) {
      vars[key] = value;
      continue;
    }
    let valueType = numberValueTypes[key], valueAsType = getValueAsType(value, valueType);
    if (transformProps.has(key)) {
      if (hasTransform2 = !0, transform[key] = valueAsType, !transformIsNone)
        continue;
      value !== (valueType.default || 0) && (transformIsNone = !1);
    } else
      key.startsWith("origin") ? (hasTransformOrigin = !0, transformOrigin[key] = valueAsType) : style[key] = valueAsType;
  }
  if (latestValues.transform || (hasTransform2 || transformTemplate ? style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate) : style.transform && (style.transform = "none")), hasTransformOrigin) {
    let { originX = "50%", originY = "50%", originZ = 0 } = transformOrigin;
    style.transformOrigin = `${originX} ${originY} ${originZ}`;
  }
}

// ../../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs
var createHtmlRenderState = () => ({
  style: {},
  transform: {},
  transformOrigin: {},
  vars: {}
});

// ../../node_modules/framer-motion/dist/es/render/html/use-props.mjs
function copyRawValuesOnly(target, source, props) {
  for (let key in source)
    !isMotionValue(source[key]) && !isForcedMotionValue(key, props) && (target[key] = source[key]);
}
function useInitialMotionValues({ transformTemplate }, visualState, isStatic) {
  return (0, import_react41.useMemo)(() => {
    let state = createHtmlRenderState();
    return buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate), Object.assign({}, state.vars, state.style);
  }, [visualState]);
}
function useStyle(props, visualState, isStatic) {
  let styleProp = props.style || {}, style = {};
  return copyRawValuesOnly(style, styleProp, props), Object.assign(style, useInitialMotionValues(props, visualState, isStatic)), props.transformValues ? props.transformValues(style) : style;
}
function useHTMLProps(props, visualState, isStatic) {
  let htmlProps = {}, style = useStyle(props, visualState, isStatic);
  return props.drag && props.dragListener !== !1 && (htmlProps.draggable = !1, style.userSelect = style.WebkitUserSelect = style.WebkitTouchCallout = "none", style.touchAction = props.drag === !0 ? "none" : `pan-${props.drag === "x" ? "y" : "x"}`), props.tabIndex === void 0 && (props.onTap || props.onTapStart || props.whileTap) && (htmlProps.tabIndex = 0), htmlProps.style = style, htmlProps;
}

// ../../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs
var validMotionProps = /* @__PURE__ */ new Set([
  "animate",
  "exit",
  "variants",
  "initial",
  "style",
  "values",
  "variants",
  "transition",
  "transformTemplate",
  "transformValues",
  "custom",
  "inherit",
  "onLayoutAnimationStart",
  "onLayoutAnimationComplete",
  "onLayoutMeasure",
  "onBeforeLayoutMeasure",
  "onAnimationStart",
  "onAnimationComplete",
  "onUpdate",
  "onDragStart",
  "onDrag",
  "onDragEnd",
  "onMeasureDragConstraints",
  "onDirectionLock",
  "onDragTransitionEnd",
  "_dragX",
  "_dragY",
  "onHoverStart",
  "onHoverEnd",
  "onViewportEnter",
  "onViewportLeave",
  "ignoreStrict",
  "viewport"
]);
function isValidMotionProp(key) {
  return key.startsWith("while") || key.startsWith("drag") && key !== "draggable" || key.startsWith("layout") || key.startsWith("onTap") || key.startsWith("onPan") || validMotionProps.has(key);
}

// ../../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs
var shouldForward = (key) => !isValidMotionProp(key);
function loadExternalIsValidProp(isValidProp) {
  isValidProp && (shouldForward = (key) => key.startsWith("on") ? !isValidMotionProp(key) : isValidProp(key));
}
try {
  loadExternalIsValidProp((init_is_prop_valid_esm(), __toCommonJS(is_prop_valid_esm_exports)).default);
} catch {
}
function filterProps(props, isDom, forwardMotionProps) {
  let filteredProps = {};
  for (let key in props)
    key === "values" && typeof props.values == "object" || (shouldForward(key) || forwardMotionProps === !0 && isValidMotionProp(key) || !isDom && !isValidMotionProp(key) || // If trying to use native HTML drag events, forward drag listeners
    props.draggable && key.startsWith("onDrag")) && (filteredProps[key] = props[key]);
  return filteredProps;
}

// ../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs
var import_react42 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs
function calcOrigin(origin, offset2, size2) {
  return typeof origin == "string" ? origin : px.transform(offset2 + size2 * origin);
}
function calcSVGTransformOrigin(dimensions, originX, originY) {
  let pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width), pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);
  return `${pxOriginX} ${pxOriginY}`;
}

// ../../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs
var dashKeys = {
  offset: "stroke-dashoffset",
  array: "stroke-dasharray"
}, camelKeys = {
  offset: "strokeDashoffset",
  array: "strokeDasharray"
};
function buildSVGPath(attrs, length, spacing = 1, offset2 = 0, useDashCase = !0) {
  attrs.pathLength = 1;
  let keys = useDashCase ? dashKeys : camelKeys;
  attrs[keys.offset] = px.transform(-offset2);
  let pathLength = px.transform(length), pathSpacing = px.transform(spacing);
  attrs[keys.array] = `${pathLength} ${pathSpacing}`;
}

// ../../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs
function buildSVGAttrs(state, {
  attrX,
  attrY,
  attrScale,
  originX,
  originY,
  pathLength,
  pathSpacing = 1,
  pathOffset = 0,
  // This is object creation, which we try to avoid per-frame.
  ...latest
}, options, isSVGTag2, transformTemplate) {
  if (buildHTMLStyles(state, latest, options, transformTemplate), isSVGTag2) {
    state.style.viewBox && (state.attrs.viewBox = state.style.viewBox);
    return;
  }
  state.attrs = state.style, state.style = {};
  let { attrs, style, dimensions } = state;
  attrs.transform && (dimensions && (style.transform = attrs.transform), delete attrs.transform), dimensions && (originX !== void 0 || originY !== void 0 || style.transform) && (style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== void 0 ? originX : 0.5, originY !== void 0 ? originY : 0.5)), attrX !== void 0 && (attrs.x = attrX), attrY !== void 0 && (attrs.y = attrY), attrScale !== void 0 && (attrs.scale = attrScale), pathLength !== void 0 && buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, !1);
}

// ../../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs
var createSvgRenderState = () => ({
  ...createHtmlRenderState(),
  attrs: {}
});

// ../../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs
var isSVGTag = (tag) => typeof tag == "string" && tag.toLowerCase() === "svg";

// ../../node_modules/framer-motion/dist/es/render/svg/use-props.mjs
function useSVGProps(props, visualState, _isStatic, Component5) {
  let visualProps = (0, import_react42.useMemo)(() => {
    let state = createSvgRenderState();
    return buildSVGAttrs(state, visualState, { enableHardwareAcceleration: !1 }, isSVGTag(Component5), props.transformTemplate), {
      ...state.attrs,
      style: { ...state.style }
    };
  }, [visualState]);
  if (props.style) {
    let rawStyles = {};
    copyRawValuesOnly(rawStyles, props.style, props), visualProps.style = { ...rawStyles, ...visualProps.style };
  }
  return visualProps;
}

// ../../node_modules/framer-motion/dist/es/render/dom/use-render.mjs
function createUseRender(forwardMotionProps = !1) {
  return (Component5, props, ref, { latestValues }, isStatic) => {
    let visualProps = (isSVGComponent(Component5) ? useSVGProps : useHTMLProps)(props, latestValues, isStatic, Component5), elementProps = {
      ...filterProps(props, typeof Component5 == "string", forwardMotionProps),
      ...visualProps,
      ref
    }, { children } = props, renderedChildren = (0, import_react43.useMemo)(() => isMotionValue(children) ? children.get() : children, [children]);
    return (0, import_react43.createElement)(Component5, {
      ...elementProps,
      children: renderedChildren
    });
  };
}

// ../../node_modules/framer-motion/dist/es/render/html/utils/render.mjs
function renderHTML(element, { style, vars }, styleProp, projection) {
  Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));
  for (let key in vars)
    element.style.setProperty(key, vars[key]);
}

// ../../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs
var camelCaseAttributes = /* @__PURE__ */ new Set([
  "baseFrequency",
  "diffuseConstant",
  "kernelMatrix",
  "kernelUnitLength",
  "keySplines",
  "keyTimes",
  "limitingConeAngle",
  "markerHeight",
  "markerWidth",
  "numOctaves",
  "targetX",
  "targetY",
  "surfaceScale",
  "specularConstant",
  "specularExponent",
  "stdDeviation",
  "tableValues",
  "viewBox",
  "gradientTransform",
  "pathLength",
  "startOffset",
  "textLength",
  "lengthAdjust"
]);

// ../../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs
function renderSVG(element, renderState, _styleProp, projection) {
  renderHTML(element, renderState, void 0, projection);
  for (let key in renderState.attrs)
    element.setAttribute(camelCaseAttributes.has(key) ? key : camelToDash(key), renderState.attrs[key]);
}

// ../../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps(props, prevProps) {
  let { style } = props, newValues = {};
  for (let key in style)
    (isMotionValue(style[key]) || prevProps.style && isMotionValue(prevProps.style[key]) || isForcedMotionValue(key, props)) && (newValues[key] = style[key]);
  return newValues;
}

// ../../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs
function scrapeMotionValuesFromProps2(props, prevProps) {
  let newValues = scrapeMotionValuesFromProps(props, prevProps);
  for (let key in props)
    if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {
      let targetKey = transformPropOrder.indexOf(key) !== -1 ? "attr" + key.charAt(0).toUpperCase() + key.substring(1) : key;
      newValues[targetKey] = props[key];
    }
  return newValues;
}

// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
var import_react45 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs
function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {
  return typeof definition == "function" && (definition = definition(custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)), typeof definition == "string" && (definition = props.variants && props.variants[definition]), typeof definition == "function" && (definition = definition(custom !== void 0 ? custom : props.custom, currentValues, currentVelocity)), definition;
}

// ../../node_modules/framer-motion/dist/es/utils/use-constant.mjs
var import_react44 = __toESM(require_react(), 1);
function useConstant(init) {
  let ref = (0, import_react44.useRef)(null);
  return ref.current === null && (ref.current = init()), ref.current;
}

// ../../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs
var isKeyframesTarget = (v2) => Array.isArray(v2);

// ../../node_modules/framer-motion/dist/es/utils/resolve-value.mjs
var isCustomValue = (v2) => Boolean(v2 && typeof v2 == "object" && v2.mix && v2.toValue), resolveFinalValueInKeyframes = (v2) => isKeyframesTarget(v2) ? v2[v2.length - 1] || 0 : v2;

// ../../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs
function resolveMotionValue(value) {
  let unwrappedValue = isMotionValue(value) ? value.get() : value;
  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;
}

// ../../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs
function makeState({ scrapeMotionValuesFromProps: scrapeMotionValuesFromProps3, createRenderState, onMount }, props, context, presenceContext) {
  let state = {
    latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps3),
    renderState: createRenderState()
  };
  return onMount && (state.mount = (instance) => onMount(props, instance, state)), state;
}
var makeUseVisualState = (config) => (props, isStatic) => {
  let context = (0, import_react45.useContext)(MotionContext), presenceContext = (0, import_react45.useContext)(PresenceContext), make = () => makeState(config, props, context, presenceContext);
  return isStatic ? make() : useConstant(make);
};
function makeLatestValues(props, context, presenceContext, scrapeMotionValues) {
  let values = {}, motionValues = scrapeMotionValues(props, {});
  for (let key in motionValues)
    values[key] = resolveMotionValue(motionValues[key]);
  let { initial, animate } = props, isControllingVariants$1 = isControllingVariants(props), isVariantNode$1 = isVariantNode(props);
  context && isVariantNode$1 && !isControllingVariants$1 && props.inherit !== !1 && (initial === void 0 && (initial = context.initial), animate === void 0 && (animate = context.animate));
  let isInitialAnimationBlocked = presenceContext ? presenceContext.initial === !1 : !1;
  isInitialAnimationBlocked = isInitialAnimationBlocked || initial === !1;
  let variantToSet = isInitialAnimationBlocked ? animate : initial;
  return variantToSet && typeof variantToSet != "boolean" && !isAnimationControls(variantToSet) && (Array.isArray(variantToSet) ? variantToSet : [variantToSet]).forEach((definition) => {
    let resolved = resolveVariantFromProps(props, definition);
    if (!resolved)
      return;
    let { transitionEnd, transition, ...target } = resolved;
    for (let key in target) {
      let valueTarget = target[key];
      if (Array.isArray(valueTarget)) {
        let index3 = isInitialAnimationBlocked ? valueTarget.length - 1 : 0;
        valueTarget = valueTarget[index3];
      }
      valueTarget !== null && (values[key] = valueTarget);
    }
    for (let key in transitionEnd)
      values[key] = transitionEnd[key];
  }), values;
}

// ../../node_modules/framer-motion/dist/es/utils/noop.mjs
var noop4 = (any) => any;

// ../../node_modules/framer-motion/dist/es/frameloop/render-step.mjs
var Queue = class {
  constructor() {
    this.order = [], this.scheduled = /* @__PURE__ */ new Set();
  }
  add(process2) {
    if (!this.scheduled.has(process2))
      return this.scheduled.add(process2), this.order.push(process2), !0;
  }
  remove(process2) {
    let index3 = this.order.indexOf(process2);
    index3 !== -1 && (this.order.splice(index3, 1), this.scheduled.delete(process2));
  }
  clear() {
    this.order.length = 0, this.scheduled.clear();
  }
};
function createRenderStep(runNextFrame) {
  let thisFrame = new Queue(), nextFrame = new Queue(), numToRun = 0, isProcessing = !1, flushNextFrame = !1, toKeepAlive = /* @__PURE__ */ new WeakSet(), step = {
    /**
     * Schedule a process to run on the next frame.
     */
    schedule: (callback, keepAlive = !1, immediate = !1) => {
      let addToCurrentFrame = immediate && isProcessing, queue = addToCurrentFrame ? thisFrame : nextFrame;
      return keepAlive && toKeepAlive.add(callback), queue.add(callback) && addToCurrentFrame && isProcessing && (numToRun = thisFrame.order.length), callback;
    },
    /**
     * Cancel the provided callback from running on the next frame.
     */
    cancel: (callback) => {
      nextFrame.remove(callback), toKeepAlive.delete(callback);
    },
    /**
     * Execute all schedule callbacks.
     */
    process: (frameData2) => {
      if (isProcessing) {
        flushNextFrame = !0;
        return;
      }
      if (isProcessing = !0, [thisFrame, nextFrame] = [nextFrame, thisFrame], nextFrame.clear(), numToRun = thisFrame.order.length, numToRun)
        for (let i3 = 0; i3 < numToRun; i3++) {
          let callback = thisFrame.order[i3];
          callback(frameData2), toKeepAlive.has(callback) && (step.schedule(callback), runNextFrame());
        }
      isProcessing = !1, flushNextFrame && (flushNextFrame = !1, step.process(frameData2));
    }
  };
  return step;
}

// ../../node_modules/framer-motion/dist/es/frameloop/batcher.mjs
var stepsOrder = [
  "prepare",
  "read",
  "update",
  "preRender",
  "render",
  "postRender"
], maxElapsed = 40;
function createRenderBatcher(scheduleNextBatch, allowKeepAlive) {
  let runNextFrame = !1, useDefaultElapsed = !0, state = {
    delta: 0,
    timestamp: 0,
    isProcessing: !1
  }, steps2 = stepsOrder.reduce((acc, key) => (acc[key] = createRenderStep(() => runNextFrame = !0), acc), {}), processStep = (stepId) => steps2[stepId].process(state), processBatch = () => {
    let timestamp = performance.now();
    runNextFrame = !1, state.delta = useDefaultElapsed ? 1e3 / 60 : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1), state.timestamp = timestamp, state.isProcessing = !0, stepsOrder.forEach(processStep), state.isProcessing = !1, runNextFrame && allowKeepAlive && (useDefaultElapsed = !1, scheduleNextBatch(processBatch));
  }, wake = () => {
    runNextFrame = !0, useDefaultElapsed = !0, state.isProcessing || scheduleNextBatch(processBatch);
  };
  return { schedule: stepsOrder.reduce((acc, key) => {
    let step = steps2[key];
    return acc[key] = (process2, keepAlive = !1, immediate = !1) => (runNextFrame || wake(), step.schedule(process2, keepAlive, immediate)), acc;
  }, {}), cancel: (process2) => stepsOrder.forEach((key) => steps2[key].cancel(process2)), state, steps: steps2 };
}

// ../../node_modules/framer-motion/dist/es/frameloop/frame.mjs
var { schedule: frame, cancel: cancelFrame, state: frameData, steps } = createRenderBatcher(typeof requestAnimationFrame < "u" ? requestAnimationFrame : noop4, !0);

// ../../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs
var svgMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps2,
    createRenderState: createSvgRenderState,
    onMount: (props, instance, { renderState, latestValues }) => {
      frame.read(() => {
        try {
          renderState.dimensions = typeof instance.getBBox == "function" ? instance.getBBox() : instance.getBoundingClientRect();
        } catch {
          renderState.dimensions = {
            x: 0,
            y: 0,
            width: 0,
            height: 0
          };
        }
      }), frame.render(() => {
        buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: !1 }, isSVGTag(instance.tagName), props.transformTemplate), renderSVG(instance, renderState);
      });
    }
  })
};

// ../../node_modules/framer-motion/dist/es/render/html/config-motion.mjs
var htmlMotionConfig = {
  useVisualState: makeUseVisualState({
    scrapeMotionValuesFromProps,
    createRenderState: createHtmlRenderState
  })
};

// ../../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs
function createDomMotionConfig(Component5, { forwardMotionProps = !1 }, preloadedFeatures2, createVisualElement) {
  return {
    ...isSVGComponent(Component5) ? svgMotionConfig : htmlMotionConfig,
    preloadedFeatures: preloadedFeatures2,
    useRender: createUseRender(forwardMotionProps),
    createVisualElement,
    Component: Component5
  };
}

// ../../node_modules/framer-motion/dist/es/events/add-dom-event.mjs
function addDomEvent(target, eventName, handler, options = { passive: !0 }) {
  return target.addEventListener(eventName, handler, options), () => target.removeEventListener(eventName, handler);
}

// ../../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs
var isPrimaryPointer = (event) => event.pointerType === "mouse" ? typeof event.button != "number" || event.button <= 0 : event.isPrimary !== !1;

// ../../node_modules/framer-motion/dist/es/events/event-info.mjs
function extractEventInfo(event, pointType = "page") {
  return {
    point: {
      x: event[pointType + "X"],
      y: event[pointType + "Y"]
    }
  };
}
var addPointerInfo = (handler) => (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));

// ../../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs
function addPointerEvent(target, eventName, handler, options) {
  return addDomEvent(target, eventName, addPointerInfo(handler), options);
}

// ../../node_modules/framer-motion/dist/es/utils/pipe.mjs
var combineFunctions = (a4, b3) => (v2) => b3(a4(v2)), pipe = (...transformers) => transformers.reduce(combineFunctions);

// ../../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs
function createLock(name) {
  let lock = null;
  return () => {
    let openLock = () => {
      lock = null;
    };
    return lock === null ? (lock = name, openLock) : !1;
  };
}
var globalHorizontalLock = createLock("dragHorizontal"), globalVerticalLock = createLock("dragVertical");
function getGlobalLock(drag2) {
  let lock = !1;
  if (drag2 === "y")
    lock = globalVerticalLock();
  else if (drag2 === "x")
    lock = globalHorizontalLock();
  else {
    let openHorizontal = globalHorizontalLock(), openVertical = globalVerticalLock();
    openHorizontal && openVertical ? lock = () => {
      openHorizontal(), openVertical();
    } : (openHorizontal && openHorizontal(), openVertical && openVertical());
  }
  return lock;
}
function isDragActive() {
  let openGestureLock = getGlobalLock(!0);
  return openGestureLock ? (openGestureLock(), !1) : !0;
}

// ../../node_modules/framer-motion/dist/es/motion/features/Feature.mjs
var Feature = class {
  constructor(node) {
    this.isMounted = !1, this.node = node;
  }
  update() {
  }
};

// ../../node_modules/framer-motion/dist/es/gestures/hover.mjs
function addHoverEvent(node, isActive) {
  let eventName = "pointer" + (isActive ? "enter" : "leave"), callbackName = "onHover" + (isActive ? "Start" : "End"), handleEvent = (event, info) => {
    if (event.type === "touch" || isDragActive())
      return;
    let props = node.getProps();
    node.animationState && props.whileHover && node.animationState.setActive("whileHover", isActive), props[callbackName] && frame.update(() => props[callbackName](event, info));
  };
  return addPointerEvent(node.current, eventName, handleEvent, {
    passive: !node.getProps()[callbackName]
  });
}
var HoverGesture = class extends Feature {
  mount() {
    this.unmount = pipe(addHoverEvent(this.node, !0), addHoverEvent(this.node, !1));
  }
  unmount() {
  }
};

// ../../node_modules/framer-motion/dist/es/gestures/focus.mjs
var FocusGesture = class extends Feature {
  constructor() {
    super(...arguments), this.isActive = !1;
  }
  onFocus() {
    let isFocusVisible = !1;
    try {
      isFocusVisible = this.node.current.matches(":focus-visible");
    } catch {
      isFocusVisible = !0;
    }
    !isFocusVisible || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !0), this.isActive = !0);
  }
  onBlur() {
    !this.isActive || !this.node.animationState || (this.node.animationState.setActive("whileFocus", !1), this.isActive = !1);
  }
  mount() {
    this.unmount = pipe(addDomEvent(this.node.current, "focus", () => this.onFocus()), addDomEvent(this.node.current, "blur", () => this.onBlur()));
  }
  unmount() {
  }
};

// ../../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs
var isNodeOrChild = (parent, child) => child ? parent === child ? !0 : isNodeOrChild(parent, child.parentElement) : !1;

// ../../node_modules/framer-motion/dist/es/gestures/press.mjs
function fireSyntheticPointerEvent(name, handler) {
  if (!handler)
    return;
  let syntheticPointerEvent = new PointerEvent("pointer" + name);
  handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));
}
var PressGesture = class extends Feature {
  constructor() {
    super(...arguments), this.removeStartListeners = noop4, this.removeEndListeners = noop4, this.removeAccessibleListeners = noop4, this.startPointerPress = (startEvent, startInfo) => {
      if (this.removeEndListeners(), this.isPressing)
        return;
      let props = this.node.getProps(), removePointerUpListener = addPointerEvent(window, "pointerup", (endEvent, endInfo) => {
        if (!this.checkPressEnd())
          return;
        let { onTap, onTapCancel } = this.node.getProps();
        frame.update(() => {
          isNodeOrChild(this.node.current, endEvent.target) ? onTap && onTap(endEvent, endInfo) : onTapCancel && onTapCancel(endEvent, endInfo);
        });
      }, { passive: !(props.onTap || props.onPointerUp) }), removePointerCancelListener = addPointerEvent(window, "pointercancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props.onPointerCancel) });
      this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener), this.startPress(startEvent, startInfo);
    }, this.startAccessiblePress = () => {
      let handleKeydown = (keydownEvent) => {
        if (keydownEvent.key !== "Enter" || this.isPressing)
          return;
        let handleKeyup = (keyupEvent) => {
          keyupEvent.key !== "Enter" || !this.checkPressEnd() || fireSyntheticPointerEvent("up", (event, info) => {
            let { onTap } = this.node.getProps();
            onTap && frame.update(() => onTap(event, info));
          });
        };
        this.removeEndListeners(), this.removeEndListeners = addDomEvent(this.node.current, "keyup", handleKeyup), fireSyntheticPointerEvent("down", (event, info) => {
          this.startPress(event, info);
        });
      }, removeKeydownListener = addDomEvent(this.node.current, "keydown", handleKeydown), handleBlur = () => {
        this.isPressing && fireSyntheticPointerEvent("cancel", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));
      }, removeBlurListener = addDomEvent(this.node.current, "blur", handleBlur);
      this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);
    };
  }
  startPress(event, info) {
    this.isPressing = !0;
    let { onTapStart, whileTap } = this.node.getProps();
    whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !0), onTapStart && frame.update(() => onTapStart(event, info));
  }
  checkPressEnd() {
    return this.removeEndListeners(), this.isPressing = !1, this.node.getProps().whileTap && this.node.animationState && this.node.animationState.setActive("whileTap", !1), !isDragActive();
  }
  cancelPress(event, info) {
    if (!this.checkPressEnd())
      return;
    let { onTapCancel } = this.node.getProps();
    onTapCancel && frame.update(() => onTapCancel(event, info));
  }
  mount() {
    let props = this.node.getProps(), removePointerListener = addPointerEvent(this.node.current, "pointerdown", this.startPointerPress, { passive: !(props.onTapStart || props.onPointerStart) }), removeFocusListener = addDomEvent(this.node.current, "focus", this.startAccessiblePress);
    this.removeStartListeners = pipe(removePointerListener, removeFocusListener);
  }
  unmount() {
    this.removeStartListeners(), this.removeEndListeners(), this.removeAccessibleListeners();
  }
};

// ../../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs
var observerCallbacks = /* @__PURE__ */ new WeakMap(), observers = /* @__PURE__ */ new WeakMap(), fireObserverCallback = (entry2) => {
  let callback = observerCallbacks.get(entry2.target);
  callback && callback(entry2);
}, fireAllObserverCallbacks = (entries) => {
  entries.forEach(fireObserverCallback);
};
function initIntersectionObserver({ root, ...options }) {
  let lookupRoot = root || document;
  observers.has(lookupRoot) || observers.set(lookupRoot, {});
  let rootObservers = observers.get(lookupRoot), key = JSON.stringify(options);
  return rootObservers[key] || (rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options })), rootObservers[key];
}
function observeIntersection(element, options, callback) {
  let rootInteresectionObserver = initIntersectionObserver(options);
  return observerCallbacks.set(element, callback), rootInteresectionObserver.observe(element), () => {
    observerCallbacks.delete(element), rootInteresectionObserver.unobserve(element);
  };
}

// ../../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs
var thresholdNames = {
  some: 0,
  all: 1
}, InViewFeature = class extends Feature {
  constructor() {
    super(...arguments), this.hasEnteredView = !1, this.isInView = !1;
  }
  startObserver() {
    this.unmount();
    let { viewport = {} } = this.node.getProps(), { root, margin: rootMargin, amount = "some", once } = viewport, options = {
      root: root ? root.current : void 0,
      rootMargin,
      threshold: typeof amount == "number" ? amount : thresholdNames[amount]
    }, onIntersectionUpdate = (entry2) => {
      let { isIntersecting } = entry2;
      if (this.isInView === isIntersecting || (this.isInView = isIntersecting, once && !isIntersecting && this.hasEnteredView))
        return;
      isIntersecting && (this.hasEnteredView = !0), this.node.animationState && this.node.animationState.setActive("whileInView", isIntersecting);
      let { onViewportEnter, onViewportLeave } = this.node.getProps(), callback = isIntersecting ? onViewportEnter : onViewportLeave;
      callback && callback(entry2);
    };
    return observeIntersection(this.node.current, options, onIntersectionUpdate);
  }
  mount() {
    this.startObserver();
  }
  update() {
    if (typeof IntersectionObserver > "u")
      return;
    let { props, prevProps } = this.node;
    ["amount", "margin", "root"].some(hasViewportOptionChanged(props, prevProps)) && this.startObserver();
  }
  unmount() {
  }
};
function hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {
  return (name) => viewport[name] !== prevViewport[name];
}

// ../../node_modules/framer-motion/dist/es/motion/features/gestures.mjs
var gestureAnimations = {
  inView: {
    Feature: InViewFeature
  },
  tap: {
    Feature: PressGesture
  },
  focus: {
    Feature: FocusGesture
  },
  hover: {
    Feature: HoverGesture
  }
};

// ../../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs
function shallowCompare(next, prev) {
  if (!Array.isArray(prev))
    return !1;
  let prevLength = prev.length;
  if (prevLength !== next.length)
    return !1;
  for (let i3 = 0; i3 < prevLength; i3++)
    if (prev[i3] !== next[i3])
      return !1;
  return !0;
}

// ../../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs
function getCurrent(visualElement) {
  let current = {};
  return visualElement.values.forEach((value, key) => current[key] = value.get()), current;
}
function getVelocity(visualElement) {
  let velocity = {};
  return visualElement.values.forEach((value, key) => velocity[key] = value.getVelocity()), velocity;
}
function resolveVariant(visualElement, definition, custom) {
  let props = visualElement.getProps();
  return resolveVariantFromProps(props, definition, custom !== void 0 ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));
}

// ../../node_modules/framer-motion/dist/es/utils/errors.mjs
var warning3 = noop4, invariant5 = noop4;

// ../../node_modules/framer-motion/dist/es/utils/time-conversion.mjs
var secondsToMilliseconds = (seconds) => seconds * 1e3, millisecondsToSeconds = (milliseconds) => milliseconds / 1e3;

// ../../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs
var instantAnimationState = {
  current: !1
};

// ../../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs
var isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] == "number";

// ../../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs
function isWaapiSupportedEasing(easing) {
  return Boolean(!easing || typeof easing == "string" && supportedWaapiEasing[easing] || isBezierDefinition(easing) || Array.isArray(easing) && easing.every(isWaapiSupportedEasing));
}
var cubicBezierAsString = ([a4, b3, c3, d4]) => `cubic-bezier(${a4}, ${b3}, ${c3}, ${d4})`, supportedWaapiEasing = {
  linear: "linear",
  ease: "ease",
  easeIn: "ease-in",
  easeOut: "ease-out",
  easeInOut: "ease-in-out",
  circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),
  circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),
  backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),
  backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99])
};
function mapEasingToNativeEasing(easing) {
  if (easing)
    return isBezierDefinition(easing) ? cubicBezierAsString(easing) : Array.isArray(easing) ? easing.map(mapEasingToNativeEasing) : supportedWaapiEasing[easing];
}

// ../../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs
function animateStyle(element, valueName, keyframes2, { delay: delay2 = 0, duration, repeat = 0, repeatType = "loop", ease: ease2, times } = {}) {
  let keyframeOptions = { [valueName]: keyframes2 };
  times && (keyframeOptions.offset = times);
  let easing = mapEasingToNativeEasing(ease2);
  return Array.isArray(easing) && (keyframeOptions.easing = easing), element.animate(keyframeOptions, {
    delay: delay2,
    duration,
    easing: Array.isArray(easing) ? "linear" : easing,
    fill: "both",
    iterations: repeat + 1,
    direction: repeatType === "reverse" ? "alternate" : "normal"
  });
}

// ../../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs
function getFinalKeyframe(keyframes2, { repeat, repeatType = "loop" }) {
  let index3 = repeat && repeatType !== "loop" && repeat % 2 === 1 ? 0 : keyframes2.length - 1;
  return keyframes2[index3];
}

// ../../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs
var calcBezier = (t4, a1, a22) => (((1 - 3 * a22 + 3 * a1) * t4 + (3 * a22 - 6 * a1)) * t4 + 3 * a1) * t4, subdivisionPrecision = 1e-7, subdivisionMaxIterations = 12;
function binarySubdivide(x3, lowerBound, upperBound, mX1, mX2) {
  let currentX, currentT, i3 = 0;
  do
    currentT = lowerBound + (upperBound - lowerBound) / 2, currentX = calcBezier(currentT, mX1, mX2) - x3, currentX > 0 ? upperBound = currentT : lowerBound = currentT;
  while (Math.abs(currentX) > subdivisionPrecision && ++i3 < subdivisionMaxIterations);
  return currentT;
}
function cubicBezier(mX1, mY1, mX2, mY2) {
  if (mX1 === mY1 && mX2 === mY2)
    return noop4;
  let getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);
  return (t4) => t4 === 0 || t4 === 1 ? t4 : calcBezier(getTForX(t4), mY1, mY2);
}

// ../../node_modules/framer-motion/dist/es/easing/ease.mjs
var easeIn = cubicBezier(0.42, 0, 1, 1), easeOut = cubicBezier(0, 0, 0.58, 1), easeInOut = cubicBezier(0.42, 0, 0.58, 1);

// ../../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs
var isEasingArray = (ease2) => Array.isArray(ease2) && typeof ease2[0] != "number";

// ../../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs
var mirrorEasing = (easing) => (p2) => p2 <= 0.5 ? easing(2 * p2) / 2 : (2 - easing(2 * (1 - p2))) / 2;

// ../../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs
var reverseEasing = (easing) => (p2) => 1 - easing(1 - p2);

// ../../node_modules/framer-motion/dist/es/easing/circ.mjs
var circIn = (p2) => 1 - Math.sin(Math.acos(p2)), circOut = reverseEasing(circIn), circInOut = mirrorEasing(circIn);

// ../../node_modules/framer-motion/dist/es/easing/back.mjs
var backOut = cubicBezier(0.33, 1.53, 0.69, 0.99), backIn = reverseEasing(backOut), backInOut = mirrorEasing(backIn);

// ../../node_modules/framer-motion/dist/es/easing/anticipate.mjs
var anticipate = (p2) => (p2 *= 2) < 1 ? 0.5 * backIn(p2) : 0.5 * (2 - Math.pow(2, -10 * (p2 - 1)));

// ../../node_modules/framer-motion/dist/es/easing/utils/map.mjs
var easingLookup = {
  linear: noop4,
  easeIn,
  easeInOut,
  easeOut,
  circIn,
  circInOut,
  circOut,
  backIn,
  backInOut,
  backOut,
  anticipate
}, easingDefinitionToFunction = (definition) => {
  if (Array.isArray(definition)) {
    invariant5(definition.length === 4, "Cubic bezier arrays must contain four numerical values.");
    let [x1, y1, x22, y22] = definition;
    return cubicBezier(x1, y1, x22, y22);
  } else if (typeof definition == "string")
    return invariant5(easingLookup[definition] !== void 0, `Invalid easing type '${definition}'`), easingLookup[definition];
  return definition;
};

// ../../node_modules/framer-motion/dist/es/value/types/color/utils.mjs
var isColorString = (type, testProp) => (v2) => Boolean(isString3(v2) && singleColorRegex.test(v2) && v2.startsWith(type) || testProp && Object.prototype.hasOwnProperty.call(v2, testProp)), splitColor = (aName, bName, cName) => (v2) => {
  if (!isString3(v2))
    return v2;
  let [a4, b3, c3, alpha2] = v2.match(floatRegex);
  return {
    [aName]: parseFloat(a4),
    [bName]: parseFloat(b3),
    [cName]: parseFloat(c3),
    alpha: alpha2 !== void 0 ? parseFloat(alpha2) : 1
  };
};

// ../../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs
var clampRgbUnit = (v2) => clamp(0, 255, v2), rgbUnit = {
  ...number,
  transform: (v2) => Math.round(clampRgbUnit(v2))
}, rgba = {
  test: isColorString("rgb", "red"),
  parse: splitColor("red", "green", "blue"),
  transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => "rgba(" + rgbUnit.transform(red) + ", " + rgbUnit.transform(green) + ", " + rgbUnit.transform(blue) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// ../../node_modules/framer-motion/dist/es/value/types/color/hex.mjs
function parseHex(v2) {
  let r3 = "", g2 = "", b3 = "", a4 = "";
  return v2.length > 5 ? (r3 = v2.substring(1, 3), g2 = v2.substring(3, 5), b3 = v2.substring(5, 7), a4 = v2.substring(7, 9)) : (r3 = v2.substring(1, 2), g2 = v2.substring(2, 3), b3 = v2.substring(3, 4), a4 = v2.substring(4, 5), r3 += r3, g2 += g2, b3 += b3, a4 += a4), {
    red: parseInt(r3, 16),
    green: parseInt(g2, 16),
    blue: parseInt(b3, 16),
    alpha: a4 ? parseInt(a4, 16) / 255 : 1
  };
}
var hex2 = {
  test: isColorString("#"),
  parse: parseHex,
  transform: rgba.transform
};

// ../../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs
var hsla = {
  test: isColorString("hsl", "hue"),
  parse: splitColor("hue", "saturation", "lightness"),
  transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => "hsla(" + Math.round(hue) + ", " + percent.transform(sanitize(saturation)) + ", " + percent.transform(sanitize(lightness)) + ", " + sanitize(alpha.transform(alpha$1)) + ")"
};

// ../../node_modules/framer-motion/dist/es/value/types/color/index.mjs
var color = {
  test: (v2) => rgba.test(v2) || hex2.test(v2) || hsla.test(v2),
  parse: (v2) => rgba.test(v2) ? rgba.parse(v2) : hsla.test(v2) ? hsla.parse(v2) : hex2.parse(v2),
  transform: (v2) => isString3(v2) ? v2 : v2.hasOwnProperty("red") ? rgba.transform(v2) : hsla.transform(v2)
};

// ../../node_modules/framer-motion/dist/es/utils/mix.mjs
var mix = (from, to, progress2) => -progress2 * from + progress2 * to + from;

// ../../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs
function hueToRgb(p2, q2, t4) {
  return t4 < 0 && (t4 += 1), t4 > 1 && (t4 -= 1), t4 < 1 / 6 ? p2 + (q2 - p2) * 6 * t4 : t4 < 1 / 2 ? q2 : t4 < 2 / 3 ? p2 + (q2 - p2) * (2 / 3 - t4) * 6 : p2;
}
function hslaToRgba({ hue, saturation, lightness, alpha: alpha2 }) {
  hue /= 360, saturation /= 100, lightness /= 100;
  let red = 0, green = 0, blue = 0;
  if (!saturation)
    red = green = blue = lightness;
  else {
    let q2 = lightness < 0.5 ? lightness * (1 + saturation) : lightness + saturation - lightness * saturation, p2 = 2 * lightness - q2;
    red = hueToRgb(p2, q2, hue + 1 / 3), green = hueToRgb(p2, q2, hue), blue = hueToRgb(p2, q2, hue - 1 / 3);
  }
  return {
    red: Math.round(red * 255),
    green: Math.round(green * 255),
    blue: Math.round(blue * 255),
    alpha: alpha2
  };
}

// ../../node_modules/framer-motion/dist/es/utils/mix-color.mjs
var mixLinearColor = (from, to, v2) => {
  let fromExpo = from * from;
  return Math.sqrt(Math.max(0, v2 * (to * to - fromExpo) + fromExpo));
}, colorTypes = [hex2, rgba, hsla], getColorType = (v2) => colorTypes.find((type) => type.test(v2));
function asRGBA(color2) {
  let type = getColorType(color2);
  invariant5(Boolean(type), `'${color2}' is not an animatable color. Use the equivalent color code instead.`);
  let model = type.parse(color2);
  return type === hsla && (model = hslaToRgba(model)), model;
}
var mixColor = (from, to) => {
  let fromRGBA = asRGBA(from), toRGBA = asRGBA(to), blended = { ...fromRGBA };
  return (v2) => (blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v2), blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v2), blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v2), blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v2), rgba.transform(blended));
};

// ../../node_modules/framer-motion/dist/es/value/types/complex/index.mjs
function test(v2) {
  var _a, _b;
  return isNaN(v2) && isString3(v2) && (((_a = v2.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) + (((_b = v2.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) > 0;
}
var cssVarTokeniser = {
  regex: cssVariableRegex,
  countKey: "Vars",
  token: "${v}",
  parse: noop4
}, colorTokeniser = {
  regex: colorRegex,
  countKey: "Colors",
  token: "${c}",
  parse: color.parse
}, numberTokeniser = {
  regex: floatRegex,
  countKey: "Numbers",
  token: "${n}",
  parse: number.parse
};
function tokenise(info, { regex, countKey, token, parse: parse3 }) {
  let matches = info.tokenised.match(regex);
  matches && (info["num" + countKey] = matches.length, info.tokenised = info.tokenised.replace(regex, token), info.values.push(...matches.map(parse3)));
}
function analyseComplexValue(value) {
  let originalValue = value.toString(), info = {
    value: originalValue,
    tokenised: originalValue,
    values: [],
    numVars: 0,
    numColors: 0,
    numNumbers: 0
  };
  return info.value.includes("var(--") && tokenise(info, cssVarTokeniser), tokenise(info, colorTokeniser), tokenise(info, numberTokeniser), info;
}
function parseComplexValue(v2) {
  return analyseComplexValue(v2).values;
}
function createTransformer(source) {
  let { values, numColors, numVars, tokenised } = analyseComplexValue(source), numValues = values.length;
  return (v2) => {
    let output = tokenised;
    for (let i3 = 0; i3 < numValues; i3++)
      i3 < numVars ? output = output.replace(cssVarTokeniser.token, v2[i3]) : i3 < numVars + numColors ? output = output.replace(colorTokeniser.token, color.transform(v2[i3])) : output = output.replace(numberTokeniser.token, sanitize(v2[i3]));
    return output;
  };
}
var convertNumbersToZero = (v2) => typeof v2 == "number" ? 0 : v2;
function getAnimatableNone(v2) {
  let parsed = parseComplexValue(v2);
  return createTransformer(v2)(parsed.map(convertNumbersToZero));
}
var complex = {
  test,
  parse: parseComplexValue,
  createTransformer,
  getAnimatableNone
};

// ../../node_modules/framer-motion/dist/es/utils/mix-complex.mjs
var mixImmediate = (origin, target) => (p2) => `${p2 > 0 ? target : origin}`;
function getMixer(origin, target) {
  return typeof origin == "number" ? (v2) => mix(origin, target, v2) : color.test(origin) ? mixColor(origin, target) : origin.startsWith("var(") ? mixImmediate(origin, target) : mixComplex(origin, target);
}
var mixArray = (from, to) => {
  let output = [...from], numValues = output.length, blendValue = from.map((fromThis, i3) => getMixer(fromThis, to[i3]));
  return (v2) => {
    for (let i3 = 0; i3 < numValues; i3++)
      output[i3] = blendValue[i3](v2);
    return output;
  };
}, mixObject = (origin, target) => {
  let output = { ...origin, ...target }, blendValue = {};
  for (let key in output)
    origin[key] !== void 0 && target[key] !== void 0 && (blendValue[key] = getMixer(origin[key], target[key]));
  return (v2) => {
    for (let key in blendValue)
      output[key] = blendValue[key](v2);
    return output;
  };
}, mixComplex = (origin, target) => {
  let template = complex.createTransformer(target), originStats = analyseComplexValue(origin), targetStats = analyseComplexValue(target);
  return originStats.numVars === targetStats.numVars && originStats.numColors === targetStats.numColors && originStats.numNumbers >= targetStats.numNumbers ? pipe(mixArray(originStats.values, targetStats.values), template) : (warning3(!0, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`), mixImmediate(origin, target));
};

// ../../node_modules/framer-motion/dist/es/utils/progress.mjs
var progress = (from, to, value) => {
  let toFromDifference = to - from;
  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;
};

// ../../node_modules/framer-motion/dist/es/utils/interpolate.mjs
var mixNumber = (from, to) => (p2) => mix(from, to, p2);
function detectMixerFactory(v2) {
  return typeof v2 == "number" ? mixNumber : typeof v2 == "string" ? color.test(v2) ? mixColor : mixComplex : Array.isArray(v2) ? mixArray : typeof v2 == "object" ? mixObject : mixNumber;
}
function createMixers(output, ease2, customMixer) {
  let mixers = [], mixerFactory = customMixer || detectMixerFactory(output[0]), numMixers = output.length - 1;
  for (let i3 = 0; i3 < numMixers; i3++) {
    let mixer = mixerFactory(output[i3], output[i3 + 1]);
    if (ease2) {
      let easingFunction = Array.isArray(ease2) ? ease2[i3] || noop4 : ease2;
      mixer = pipe(easingFunction, mixer);
    }
    mixers.push(mixer);
  }
  return mixers;
}
function interpolate(input, output, { clamp: isClamp = !0, ease: ease2, mixer } = {}) {
  let inputLength = input.length;
  if (invariant5(inputLength === output.length, "Both input and output ranges must be the same length"), inputLength === 1)
    return () => output[0];
  input[0] > input[inputLength - 1] && (input = [...input].reverse(), output = [...output].reverse());
  let mixers = createMixers(output, ease2, mixer), numMixers = mixers.length, interpolator = (v2) => {
    let i3 = 0;
    if (numMixers > 1)
      for (; i3 < input.length - 2 && !(v2 < input[i3 + 1]); i3++)
        ;
    let progressInRange = progress(input[i3], input[i3 + 1], v2);
    return mixers[i3](progressInRange);
  };
  return isClamp ? (v2) => interpolator(clamp(input[0], input[inputLength - 1], v2)) : interpolator;
}

// ../../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs
function fillOffset(offset2, remaining) {
  let min2 = offset2[offset2.length - 1];
  for (let i3 = 1; i3 <= remaining; i3++) {
    let offsetProgress = progress(0, remaining, i3);
    offset2.push(mix(min2, 1, offsetProgress));
  }
}

// ../../node_modules/framer-motion/dist/es/utils/offsets/default.mjs
function defaultOffset(arr) {
  let offset2 = [0];
  return fillOffset(offset2, arr.length - 1), offset2;
}

// ../../node_modules/framer-motion/dist/es/utils/offsets/time.mjs
function convertOffsetToTimes(offset2, duration) {
  return offset2.map((o2) => o2 * duration);
}

// ../../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs
function defaultEasing(values, easing) {
  return values.map(() => easing || easeInOut).splice(0, values.length - 1);
}
function keyframes({ duration = 300, keyframes: keyframeValues, times, ease: ease2 = "easeInOut" }) {
  let easingFunctions = isEasingArray(ease2) ? ease2.map(easingDefinitionToFunction) : easingDefinitionToFunction(ease2), state = {
    done: !1,
    value: keyframeValues[0]
  }, absoluteTimes = convertOffsetToTimes(
    // Only use the provided offsets if they're the correct length
    // TODO Maybe we should warn here if there's a length mismatch
    times && times.length === keyframeValues.length ? times : defaultOffset(keyframeValues),
    duration
  ), mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {
    ease: Array.isArray(easingFunctions) ? easingFunctions : defaultEasing(keyframeValues, easingFunctions)
  });
  return {
    calculatedDuration: duration,
    next: (t4) => (state.value = mapTimeToKeyframe(t4), state.done = t4 >= duration, state)
  };
}

// ../../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs
function velocityPerSecond(velocity, frameDuration) {
  return frameDuration ? velocity * (1e3 / frameDuration) : 0;
}

// ../../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs
var velocitySampleDuration = 5;
function calcGeneratorVelocity(resolveValue, t4, current) {
  let prevT = Math.max(t4 - velocitySampleDuration, 0);
  return velocityPerSecond(current - resolveValue(prevT), t4 - prevT);
}

// ../../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs
var safeMin = 1e-3, minDuration = 0.01, maxDuration = 10, minDamping = 0.05, maxDamping = 1;
function findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1 }) {
  let envelope, derivative;
  warning3(duration <= secondsToMilliseconds(maxDuration), "Spring duration must be 10 seconds or less");
  let dampingRatio = 1 - bounce;
  dampingRatio = clamp(minDamping, maxDamping, dampingRatio), duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration)), dampingRatio < 1 ? (envelope = (undampedFreq2) => {
    let exponentialDecay = undampedFreq2 * dampingRatio, delta = exponentialDecay * duration, a4 = exponentialDecay - velocity, b3 = calcAngularFreq(undampedFreq2, dampingRatio), c3 = Math.exp(-delta);
    return safeMin - a4 / b3 * c3;
  }, derivative = (undampedFreq2) => {
    let delta = undampedFreq2 * dampingRatio * duration, d4 = delta * velocity + velocity, e3 = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq2, 2) * duration, f2 = Math.exp(-delta), g2 = calcAngularFreq(Math.pow(undampedFreq2, 2), dampingRatio);
    return (-envelope(undampedFreq2) + safeMin > 0 ? -1 : 1) * ((d4 - e3) * f2) / g2;
  }) : (envelope = (undampedFreq2) => {
    let a4 = Math.exp(-undampedFreq2 * duration), b3 = (undampedFreq2 - velocity) * duration + 1;
    return -safeMin + a4 * b3;
  }, derivative = (undampedFreq2) => {
    let a4 = Math.exp(-undampedFreq2 * duration), b3 = (velocity - undampedFreq2) * (duration * duration);
    return a4 * b3;
  });
  let initialGuess = 5 / duration, undampedFreq = approximateRoot(envelope, derivative, initialGuess);
  if (duration = secondsToMilliseconds(duration), isNaN(undampedFreq))
    return {
      stiffness: 100,
      damping: 10,
      duration
    };
  {
    let stiffness = Math.pow(undampedFreq, 2) * mass;
    return {
      stiffness,
      damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),
      duration
    };
  }
}
var rootIterations = 12;
function approximateRoot(envelope, derivative, initialGuess) {
  let result = initialGuess;
  for (let i3 = 1; i3 < rootIterations; i3++)
    result = result - envelope(result) / derivative(result);
  return result;
}
function calcAngularFreq(undampedFreq, dampingRatio) {
  return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);
}

// ../../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs
var durationKeys = ["duration", "bounce"], physicsKeys = ["stiffness", "damping", "mass"];
function isSpringType(options, keys) {
  return keys.some((key) => options[key] !== void 0);
}
function getSpringOptions(options) {
  let springOptions = {
    velocity: 0,
    stiffness: 100,
    damping: 10,
    mass: 1,
    isResolvedFromDuration: !1,
    ...options
  };
  if (!isSpringType(options, physicsKeys) && isSpringType(options, durationKeys)) {
    let derived = findSpring(options);
    springOptions = {
      ...springOptions,
      ...derived,
      velocity: 0,
      mass: 1
    }, springOptions.isResolvedFromDuration = !0;
  }
  return springOptions;
}
function spring({ keyframes: keyframes2, restDelta, restSpeed, ...options }) {
  let origin = keyframes2[0], target = keyframes2[keyframes2.length - 1], state = { done: !1, value: origin }, { stiffness, damping, mass, velocity, duration, isResolvedFromDuration } = getSpringOptions(options), initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0, dampingRatio = damping / (2 * Math.sqrt(stiffness * mass)), initialDelta = target - origin, undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass)), isGranularScale = Math.abs(initialDelta) < 5;
  restSpeed || (restSpeed = isGranularScale ? 0.01 : 2), restDelta || (restDelta = isGranularScale ? 5e-3 : 0.5);
  let resolveSpring;
  if (dampingRatio < 1) {
    let angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);
    resolveSpring = (t4) => {
      let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t4);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) / angularFreq * Math.sin(angularFreq * t4) + initialDelta * Math.cos(angularFreq * t4));
    };
  } else if (dampingRatio === 1)
    resolveSpring = (t4) => target - Math.exp(-undampedAngularFreq * t4) * (initialDelta + (initialVelocity + undampedAngularFreq * initialDelta) * t4);
  else {
    let dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);
    resolveSpring = (t4) => {
      let envelope = Math.exp(-dampingRatio * undampedAngularFreq * t4), freqForT = Math.min(dampedAngularFreq * t4, 300);
      return target - envelope * ((initialVelocity + dampingRatio * undampedAngularFreq * initialDelta) * Math.sinh(freqForT) + dampedAngularFreq * initialDelta * Math.cosh(freqForT)) / dampedAngularFreq;
    };
  }
  return {
    calculatedDuration: isResolvedFromDuration && duration || null,
    next: (t4) => {
      let current = resolveSpring(t4);
      if (isResolvedFromDuration)
        state.done = t4 >= duration;
      else {
        let currentVelocity = initialVelocity;
        t4 !== 0 && (dampingRatio < 1 ? currentVelocity = calcGeneratorVelocity(resolveSpring, t4, current) : currentVelocity = 0);
        let isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed, isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;
        state.done = isBelowVelocityThreshold && isBelowDisplacementThreshold;
      }
      return state.value = state.done ? target : current, state;
    }
  };
}

// ../../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs
function inertia({ keyframes: keyframes2, velocity = 0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min: min2, max: max2, restDelta = 0.5, restSpeed }) {
  let origin = keyframes2[0], state = {
    done: !1,
    value: origin
  }, isOutOfBounds = (v2) => min2 !== void 0 && v2 < min2 || max2 !== void 0 && v2 > max2, nearestBoundary = (v2) => min2 === void 0 ? max2 : max2 === void 0 || Math.abs(min2 - v2) < Math.abs(max2 - v2) ? min2 : max2, amplitude = power * velocity, ideal = origin + amplitude, target = modifyTarget === void 0 ? ideal : modifyTarget(ideal);
  target !== ideal && (amplitude = target - origin);
  let calcDelta = (t4) => -amplitude * Math.exp(-t4 / timeConstant), calcLatest = (t4) => target + calcDelta(t4), applyFriction = (t4) => {
    let delta = calcDelta(t4), latest = calcLatest(t4);
    state.done = Math.abs(delta) <= restDelta, state.value = state.done ? target : latest;
  }, timeReachedBoundary, spring$1, checkCatchBoundary = (t4) => {
    isOutOfBounds(state.value) && (timeReachedBoundary = t4, spring$1 = spring({
      keyframes: [state.value, nearestBoundary(state.value)],
      velocity: calcGeneratorVelocity(calcLatest, t4, state.value),
      damping: bounceDamping,
      stiffness: bounceStiffness,
      restDelta,
      restSpeed
    }));
  };
  return checkCatchBoundary(0), {
    calculatedDuration: null,
    next: (t4) => {
      let hasUpdatedFrame = !1;
      return !spring$1 && timeReachedBoundary === void 0 && (hasUpdatedFrame = !0, applyFriction(t4), checkCatchBoundary(t4)), timeReachedBoundary !== void 0 && t4 > timeReachedBoundary ? spring$1.next(t4 - timeReachedBoundary) : (!hasUpdatedFrame && applyFriction(t4), state);
    }
  };
}

// ../../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs
var frameloopDriver = (update) => {
  let passTimestamp = ({ timestamp }) => update(timestamp);
  return {
    start: () => frame.update(passTimestamp, !0),
    stop: () => cancelFrame(passTimestamp),
    /**
     * If we're processing this frame we can use the
     * framelocked timestamp to keep things in sync.
     */
    now: () => frameData.isProcessing ? frameData.timestamp : performance.now()
  };
};

// ../../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs
function calcGeneratorDuration(generator) {
  let duration = 0, timeStep = 50, state = generator.next(duration);
  for (; !state.done && duration < 2e4; )
    duration += timeStep, state = generator.next(duration);
  return duration >= 2e4 ? 1 / 0 : duration;
}

// ../../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs
var types = {
  decay: inertia,
  inertia,
  tween: keyframes,
  keyframes,
  spring
};
function animateValue({ autoplay = !0, delay: delay2 = 0, driver = frameloopDriver, keyframes: keyframes$1, type = "keyframes", repeat = 0, repeatDelay = 0, repeatType = "loop", onPlay, onStop, onComplete, onUpdate, ...options }) {
  let speed = 1, hasStopped = !1, resolveFinishedPromise, currentFinishedPromise, updateFinishedPromise = () => {
    currentFinishedPromise = new Promise((resolve) => {
      resolveFinishedPromise = resolve;
    });
  };
  updateFinishedPromise();
  let animationDriver, generatorFactory = types[type] || keyframes, mapNumbersToKeyframes;
  generatorFactory !== keyframes && typeof keyframes$1[0] != "number" && (mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {
    clamp: !1
  }), keyframes$1 = [0, 100]);
  let generator = generatorFactory({ ...options, keyframes: keyframes$1 }), mirroredGenerator;
  repeatType === "mirror" && (mirroredGenerator = generatorFactory({
    ...options,
    keyframes: [...keyframes$1].reverse(),
    velocity: -(options.velocity || 0)
  }));
  let playState = "idle", holdTime = null, startTime = null, cancelTime = null;
  generator.calculatedDuration === null && repeat && (generator.calculatedDuration = calcGeneratorDuration(generator));
  let { calculatedDuration } = generator, resolvedDuration = 1 / 0, totalDuration = 1 / 0;
  calculatedDuration !== null && (resolvedDuration = calculatedDuration + repeatDelay, totalDuration = resolvedDuration * (repeat + 1) - repeatDelay);
  let currentTime = 0, tick = (timestamp) => {
    if (startTime === null)
      return;
    speed > 0 && (startTime = Math.min(startTime, timestamp)), speed < 0 && (startTime = Math.min(timestamp - totalDuration / speed, startTime)), holdTime !== null ? currentTime = holdTime : currentTime = Math.round(timestamp - startTime) * speed;
    let timeWithoutDelay = currentTime - delay2 * (speed >= 0 ? 1 : -1), isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;
    currentTime = Math.max(timeWithoutDelay, 0), playState === "finished" && holdTime === null && (currentTime = totalDuration);
    let elapsed = currentTime, frameGenerator = generator;
    if (repeat) {
      let progress2 = currentTime / resolvedDuration, currentIteration = Math.floor(progress2), iterationProgress = progress2 % 1;
      !iterationProgress && progress2 >= 1 && (iterationProgress = 1), iterationProgress === 1 && currentIteration--, currentIteration = Math.min(currentIteration, repeat + 1);
      let iterationIsOdd = Boolean(currentIteration % 2);
      iterationIsOdd && (repeatType === "reverse" ? (iterationProgress = 1 - iterationProgress, repeatDelay && (iterationProgress -= repeatDelay / resolvedDuration)) : repeatType === "mirror" && (frameGenerator = mirroredGenerator));
      let p2 = clamp(0, 1, iterationProgress);
      currentTime > totalDuration && (p2 = repeatType === "reverse" && iterationIsOdd ? 1 : 0), elapsed = p2 * resolvedDuration;
    }
    let state = isInDelayPhase ? { done: !1, value: keyframes$1[0] } : frameGenerator.next(elapsed);
    mapNumbersToKeyframes && (state.value = mapNumbersToKeyframes(state.value));
    let { done } = state;
    !isInDelayPhase && calculatedDuration !== null && (done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0);
    let isAnimationFinished = holdTime === null && (playState === "finished" || playState === "running" && done);
    return onUpdate && onUpdate(state.value), isAnimationFinished && finish(), state;
  }, stopAnimationDriver = () => {
    animationDriver && animationDriver.stop(), animationDriver = void 0;
  }, cancel = () => {
    playState = "idle", stopAnimationDriver(), resolveFinishedPromise(), updateFinishedPromise(), startTime = cancelTime = null;
  }, finish = () => {
    playState = "finished", onComplete && onComplete(), stopAnimationDriver(), resolveFinishedPromise();
  }, play = () => {
    if (hasStopped)
      return;
    animationDriver || (animationDriver = driver(tick));
    let now = animationDriver.now();
    onPlay && onPlay(), holdTime !== null ? startTime = now - holdTime : (!startTime || playState === "finished") && (startTime = now), playState === "finished" && updateFinishedPromise(), cancelTime = startTime, holdTime = null, playState = "running", animationDriver.start();
  };
  autoplay && play();
  let controls = {
    then(resolve, reject) {
      return currentFinishedPromise.then(resolve, reject);
    },
    get time() {
      return millisecondsToSeconds(currentTime);
    },
    set time(newTime) {
      newTime = secondsToMilliseconds(newTime), currentTime = newTime, holdTime !== null || !animationDriver || speed === 0 ? holdTime = newTime : startTime = animationDriver.now() - newTime / speed;
    },
    get duration() {
      let duration = generator.calculatedDuration === null ? calcGeneratorDuration(generator) : generator.calculatedDuration;
      return millisecondsToSeconds(duration);
    },
    get speed() {
      return speed;
    },
    set speed(newSpeed) {
      newSpeed === speed || !animationDriver || (speed = newSpeed, controls.time = millisecondsToSeconds(currentTime));
    },
    get state() {
      return playState;
    },
    play,
    pause: () => {
      playState = "paused", holdTime = currentTime;
    },
    stop: () => {
      hasStopped = !0, playState !== "idle" && (playState = "idle", onStop && onStop(), cancel());
    },
    cancel: () => {
      cancelTime !== null && tick(cancelTime), cancel();
    },
    complete: () => {
      playState = "finished";
    },
    sample: (elapsed) => (startTime = 0, tick(elapsed))
  };
  return controls;
}

// ../../node_modules/framer-motion/dist/es/utils/memo.mjs
function memo(callback) {
  let result;
  return () => (result === void 0 && (result = callback()), result);
}

// ../../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs
var supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, "animate")), acceleratedValues = /* @__PURE__ */ new Set([
  "opacity",
  "clipPath",
  "filter",
  "transform",
  "backgroundColor"
]), sampleDelta = 10, maxDuration2 = 2e4, requiresPregeneratedKeyframes = (valueName, options) => options.type === "spring" || valueName === "backgroundColor" || !isWaapiSupportedEasing(options.ease);
function createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {
  if (!(supportsWaapi() && acceleratedValues.has(valueName) && !options.repeatDelay && options.repeatType !== "mirror" && options.damping !== 0 && options.type !== "inertia"))
    return !1;
  let hasStopped = !1, resolveFinishedPromise, currentFinishedPromise, updateFinishedPromise = () => {
    currentFinishedPromise = new Promise((resolve) => {
      resolveFinishedPromise = resolve;
    });
  };
  updateFinishedPromise();
  let { keyframes: keyframes2, duration = 300, ease: ease2, times } = options;
  if (requiresPregeneratedKeyframes(valueName, options)) {
    let sampleAnimation = animateValue({
      ...options,
      repeat: 0,
      delay: 0
    }), state = { done: !1, value: keyframes2[0] }, pregeneratedKeyframes = [], t4 = 0;
    for (; !state.done && t4 < maxDuration2; )
      state = sampleAnimation.sample(t4), pregeneratedKeyframes.push(state.value), t4 += sampleDelta;
    times = void 0, keyframes2 = pregeneratedKeyframes, duration = t4 - sampleDelta, ease2 = "linear";
  }
  let animation = animateStyle(value.owner.current, valueName, keyframes2, {
    ...options,
    duration,
    /**
     * This function is currently not called if ease is provided
     * as a function so the cast is safe.
     *
     * However it would be possible for a future refinement to port
     * in easing pregeneration from Motion One for browsers that
     * support the upcoming `linear()` easing function.
     */
    ease: ease2,
    times
  }), cancelAnimation = () => animation.cancel(), safeCancel = () => {
    frame.update(cancelAnimation), resolveFinishedPromise(), updateFinishedPromise();
  };
  return animation.onfinish = () => {
    value.set(getFinalKeyframe(keyframes2, options)), onComplete && onComplete(), safeCancel();
  }, {
    then(resolve, reject) {
      return currentFinishedPromise.then(resolve, reject);
    },
    attachTimeline(timeline) {
      return animation.timeline = timeline, animation.onfinish = null, noop4;
    },
    get time() {
      return millisecondsToSeconds(animation.currentTime || 0);
    },
    set time(newTime) {
      animation.currentTime = secondsToMilliseconds(newTime);
    },
    get speed() {
      return animation.playbackRate;
    },
    set speed(newSpeed) {
      animation.playbackRate = newSpeed;
    },
    get duration() {
      return millisecondsToSeconds(duration);
    },
    play: () => {
      hasStopped || (animation.play(), cancelFrame(cancelAnimation));
    },
    pause: () => animation.pause(),
    stop: () => {
      if (hasStopped = !0, animation.playState === "idle")
        return;
      let { currentTime } = animation;
      if (currentTime) {
        let sampleAnimation = animateValue({
          ...options,
          autoplay: !1
        });
        value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);
      }
      safeCancel();
    },
    complete: () => animation.finish(),
    cancel: safeCancel
  };
}

// ../../node_modules/framer-motion/dist/es/animation/animators/instant.mjs
function createInstantAnimation({ keyframes: keyframes2, delay: delay2, onUpdate, onComplete }) {
  let setValue = () => (onUpdate && onUpdate(keyframes2[keyframes2.length - 1]), onComplete && onComplete(), {
    time: 0,
    speed: 1,
    duration: 0,
    play: noop4,
    pause: noop4,
    stop: noop4,
    then: (resolve) => (resolve(), Promise.resolve()),
    cancel: noop4,
    complete: noop4
  });
  return delay2 ? animateValue({
    keyframes: [0, 1],
    duration: 0,
    delay: delay2,
    onComplete: setValue
  }) : setValue();
}

// ../../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs
var underDampedSpring = {
  type: "spring",
  stiffness: 500,
  damping: 25,
  restSpeed: 10
}, criticallyDampedSpring = (target) => ({
  type: "spring",
  stiffness: 550,
  damping: target === 0 ? 2 * Math.sqrt(550) : 30,
  restSpeed: 10
}), keyframesTransition = {
  type: "keyframes",
  duration: 0.8
}, ease = {
  type: "keyframes",
  ease: [0.25, 0.1, 0.35, 1],
  duration: 0.3
}, getDefaultTransition = (valueKey, { keyframes: keyframes2 }) => keyframes2.length > 2 ? keyframesTransition : transformProps.has(valueKey) ? valueKey.startsWith("scale") ? criticallyDampedSpring(keyframes2[1]) : underDampedSpring : ease;

// ../../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs
var isAnimatable = (key, value) => key === "zIndex" ? !1 : !!(typeof value == "number" || Array.isArray(value) || typeof value == "string" && // It's animatable if we have a string
(complex.test(value) || value === "0") && // And it contains numbers and/or colors
!value.startsWith("url("));

// ../../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs
var maxDefaults = /* @__PURE__ */ new Set(["brightness", "contrast", "saturate", "opacity"]);
function applyDefaultFilter(v2) {
  let [name, value] = v2.slice(0, -1).split("(");
  if (name === "drop-shadow")
    return v2;
  let [number2] = value.match(floatRegex) || [];
  if (!number2)
    return v2;
  let unit = value.replace(number2, ""), defaultValue = maxDefaults.has(name) ? 1 : 0;
  return number2 !== value && (defaultValue *= 100), name + "(" + defaultValue + unit + ")";
}
var functionRegex = /([a-z-]*)\(.*?\)/g, filter2 = {
  ...complex,
  getAnimatableNone: (v2) => {
    let functions = v2.match(functionRegex);
    return functions ? functions.map(applyDefaultFilter).join(" ") : v2;
  }
};

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs
var defaultValueTypes = {
  ...numberValueTypes,
  // Color props
  color,
  backgroundColor: color,
  outlineColor: color,
  fill: color,
  stroke: color,
  // Border props
  borderColor: color,
  borderTopColor: color,
  borderRightColor: color,
  borderBottomColor: color,
  borderLeftColor: color,
  filter: filter2,
  WebkitFilter: filter2
}, getDefaultValueType = (key) => defaultValueTypes[key];

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs
function getAnimatableNone2(key, value) {
  let defaultValueType = getDefaultValueType(key);
  return defaultValueType !== filter2 && (defaultValueType = complex), defaultValueType.getAnimatableNone ? defaultValueType.getAnimatableNone(value) : void 0;
}

// ../../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs
var isZeroValueString = (v2) => /^0[^.\s]+$/.test(v2);

// ../../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs
function isNone(value) {
  if (typeof value == "number")
    return value === 0;
  if (value !== null)
    return value === "none" || value === "0" || isZeroValueString(value);
}

// ../../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs
function getKeyframes(value, valueName, target, transition) {
  let isTargetAnimatable = isAnimatable(valueName, target), keyframes2;
  Array.isArray(target) ? keyframes2 = [...target] : keyframes2 = [null, target];
  let defaultOrigin = transition.from !== void 0 ? transition.from : value.get(), animatableTemplateValue, noneKeyframeIndexes = [];
  for (let i3 = 0; i3 < keyframes2.length; i3++)
    keyframes2[i3] === null && (keyframes2[i3] = i3 === 0 ? defaultOrigin : keyframes2[i3 - 1]), isNone(keyframes2[i3]) && noneKeyframeIndexes.push(i3), typeof keyframes2[i3] == "string" && keyframes2[i3] !== "none" && keyframes2[i3] !== "0" && (animatableTemplateValue = keyframes2[i3]);
  if (isTargetAnimatable && noneKeyframeIndexes.length && animatableTemplateValue)
    for (let i3 = 0; i3 < noneKeyframeIndexes.length; i3++) {
      let index3 = noneKeyframeIndexes[i3];
      keyframes2[index3] = getAnimatableNone2(valueName, animatableTemplateValue);
    }
  return keyframes2;
}

// ../../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs
function isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {
  return !!Object.keys(transition).length;
}
function getValueTransition(transition, key) {
  return transition[key] || transition.default || transition;
}

// ../../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs
var animateMotionValue = (valueName, value, target, transition = {}) => (onComplete) => {
  let valueTransition = getValueTransition(transition, valueName) || {}, delay2 = valueTransition.delay || transition.delay || 0, { elapsed = 0 } = transition;
  elapsed = elapsed - secondsToMilliseconds(delay2);
  let keyframes2 = getKeyframes(value, valueName, target, valueTransition), originKeyframe = keyframes2[0], targetKeyframe = keyframes2[keyframes2.length - 1], isOriginAnimatable = isAnimatable(valueName, originKeyframe), isTargetAnimatable = isAnimatable(valueName, targetKeyframe);
  warning3(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from "${originKeyframe}" to "${targetKeyframe}". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \`style\` property.`);
  let options = {
    keyframes: keyframes2,
    velocity: value.getVelocity(),
    ease: "easeOut",
    ...valueTransition,
    delay: -elapsed,
    onUpdate: (v2) => {
      value.set(v2), valueTransition.onUpdate && valueTransition.onUpdate(v2);
    },
    onComplete: () => {
      onComplete(), valueTransition.onComplete && valueTransition.onComplete();
    }
  };
  if (isTransitionDefined(valueTransition) || (options = {
    ...options,
    ...getDefaultTransition(valueName, options)
  }), options.duration && (options.duration = secondsToMilliseconds(options.duration)), options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay)), !isOriginAnimatable || !isTargetAnimatable || instantAnimationState.current || valueTransition.type === !1)
    return createInstantAnimation(instantAnimationState.current ? { ...options, delay: 0 } : options);
  if (
    /**
     * If this is a handoff animation, the optimised animation will be running via
     * WAAPI. Therefore, this animation must be JS to ensure it runs "under" the
     * optimised animation.
     */
    !transition.isHandoff && value.owner && value.owner.current instanceof HTMLElement && /**
     * If we're outputting values to onUpdate then we can't use WAAPI as there's
     * no way to read the value from WAAPI every frame.
     */
    !value.owner.getProps().onUpdate
  ) {
    let acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);
    if (acceleratedAnimation)
      return acceleratedAnimation;
  }
  return animateValue(options);
};

// ../../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs
function isWillChangeMotionValue(value) {
  return Boolean(isMotionValue(value) && value.add);
}

// ../../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs
var isNumericalString = (v2) => /^\-?\d*\.?\d+$/.test(v2);

// ../../node_modules/framer-motion/dist/es/utils/array.mjs
function addUniqueItem(arr, item) {
  arr.indexOf(item) === -1 && arr.push(item);
}
function removeItem(arr, item) {
  let index3 = arr.indexOf(item);
  index3 > -1 && arr.splice(index3, 1);
}

// ../../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs
var SubscriptionManager = class {
  constructor() {
    this.subscriptions = [];
  }
  add(handler) {
    return addUniqueItem(this.subscriptions, handler), () => removeItem(this.subscriptions, handler);
  }
  notify(a4, b3, c3) {
    let numSubscriptions = this.subscriptions.length;
    if (numSubscriptions)
      if (numSubscriptions === 1)
        this.subscriptions[0](a4, b3, c3);
      else
        for (let i3 = 0; i3 < numSubscriptions; i3++) {
          let handler = this.subscriptions[i3];
          handler && handler(a4, b3, c3);
        }
  }
  getSize() {
    return this.subscriptions.length;
  }
  clear() {
    this.subscriptions.length = 0;
  }
};

// ../../node_modules/framer-motion/dist/es/value/index.mjs
var isFloat = (value) => !isNaN(parseFloat(value)), collectMotionValues = {
  current: void 0
}, MotionValue = class {
  /**
   * @param init - The initiating value
   * @param config - Optional configuration options
   *
   * -  `transformer`: A function to transform incoming values with.
   *
   * @internal
   */
  constructor(init, options = {}) {
    this.version = "10.16.16", this.timeDelta = 0, this.lastUpdated = 0, this.canTrackVelocity = !1, this.events = {}, this.updateAndNotify = (v2, render = !0) => {
      this.prev = this.current, this.current = v2;
      let { delta, timestamp } = frameData;
      this.lastUpdated !== timestamp && (this.timeDelta = delta, this.lastUpdated = timestamp, frame.postRender(this.scheduleVelocityCheck)), this.prev !== this.current && this.events.change && this.events.change.notify(this.current), this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()), render && this.events.renderRequest && this.events.renderRequest.notify(this.current);
    }, this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck), this.velocityCheck = ({ timestamp }) => {
      timestamp !== this.lastUpdated && (this.prev = this.current, this.events.velocityChange && this.events.velocityChange.notify(this.getVelocity()));
    }, this.hasAnimated = !1, this.prev = this.current = init, this.canTrackVelocity = isFloat(this.current), this.owner = options.owner;
  }
  /**
   * Adds a function that will be notified when the `MotionValue` is updated.
   *
   * It returns a function that, when called, will cancel the subscription.
   *
   * When calling `onChange` inside a React component, it should be wrapped with the
   * `useEffect` hook. As it returns an unsubscribe function, this should be returned
   * from the `useEffect` function to ensure you don't add duplicate subscribers..
   *
   * ```jsx
   * export const MyComponent = () => {
   *   const x = useMotionValue(0)
   *   const y = useMotionValue(0)
   *   const opacity = useMotionValue(1)
   *
   *   useEffect(() => {
   *     function updateOpacity() {
   *       const maxXY = Math.max(x.get(), y.get())
   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])
   *       opacity.set(newOpacity)
   *     }
   *
   *     const unsubscribeX = x.on("change", updateOpacity)
   *     const unsubscribeY = y.on("change", updateOpacity)
   *
   *     return () => {
   *       unsubscribeX()
   *       unsubscribeY()
   *     }
   *   }, [])
   *
   *   return <motion.div style={{ x }} />
   * }
   * ```
   *
   * @param subscriber - A function that receives the latest value.
   * @returns A function that, when called, will cancel this subscription.
   *
   * @deprecated
   */
  onChange(subscription) {
    return this.on("change", subscription);
  }
  on(eventName, callback) {
    this.events[eventName] || (this.events[eventName] = new SubscriptionManager());
    let unsubscribe = this.events[eventName].add(callback);
    return eventName === "change" ? () => {
      unsubscribe(), frame.read(() => {
        this.events.change.getSize() || this.stop();
      });
    } : unsubscribe;
  }
  clearListeners() {
    for (let eventManagers in this.events)
      this.events[eventManagers].clear();
  }
  /**
   * Attaches a passive effect to the `MotionValue`.
   *
   * @internal
   */
  attach(passiveEffect, stopPassiveEffect) {
    this.passiveEffect = passiveEffect, this.stopPassiveEffect = stopPassiveEffect;
  }
  /**
   * Sets the state of the `MotionValue`.
   *
   * @remarks
   *
   * ```jsx
   * const x = useMotionValue(0)
   * x.set(10)
   * ```
   *
   * @param latest - Latest value to set.
   * @param render - Whether to notify render subscribers. Defaults to `true`
   *
   * @public
   */
  set(v2, render = !0) {
    !render || !this.passiveEffect ? this.updateAndNotify(v2, render) : this.passiveEffect(v2, this.updateAndNotify);
  }
  setWithVelocity(prev, current, delta) {
    this.set(current), this.prev = prev, this.timeDelta = delta;
  }
  /**
   * Set the state of the `MotionValue`, stopping any active animations,
   * effects, and resets velocity to `0`.
   */
  jump(v2) {
    this.updateAndNotify(v2), this.prev = v2, this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
  /**
   * Returns the latest state of `MotionValue`
   *
   * @returns - The latest state of `MotionValue`
   *
   * @public
   */
  get() {
    return collectMotionValues.current && collectMotionValues.current.push(this), this.current;
  }
  /**
   * @public
   */
  getPrevious() {
    return this.prev;
  }
  /**
   * Returns the latest velocity of `MotionValue`
   *
   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.
   *
   * @public
   */
  getVelocity() {
    return this.canTrackVelocity ? (
      // These casts could be avoided if parseFloat would be typed better
      velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta)
    ) : 0;
  }
  /**
   * Registers a new animation to control this `MotionValue`. Only one
   * animation can drive a `MotionValue` at one time.
   *
   * ```jsx
   * value.start()
   * ```
   *
   * @param animation - A function that starts the provided animation
   *
   * @internal
   */
  start(startAnimation) {
    return this.stop(), new Promise((resolve) => {
      this.hasAnimated = !0, this.animation = startAnimation(resolve), this.events.animationStart && this.events.animationStart.notify();
    }).then(() => {
      this.events.animationComplete && this.events.animationComplete.notify(), this.clearAnimation();
    });
  }
  /**
   * Stop the currently active animation.
   *
   * @public
   */
  stop() {
    this.animation && (this.animation.stop(), this.events.animationCancel && this.events.animationCancel.notify()), this.clearAnimation();
  }
  /**
   * Returns `true` if this value is currently animating.
   *
   * @public
   */
  isAnimating() {
    return !!this.animation;
  }
  clearAnimation() {
    delete this.animation;
  }
  /**
   * Destroy and clean up subscribers to this `MotionValue`.
   *
   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically
   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually
   * created a `MotionValue` via the `motionValue` function.
   *
   * @public
   */
  destroy() {
    this.clearListeners(), this.stop(), this.stopPassiveEffect && this.stopPassiveEffect();
  }
};
function motionValue(init, options) {
  return new MotionValue(init, options);
}

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs
var testValueType = (v2) => (type) => type.test(v2);

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs
var auto = {
  test: (v2) => v2 === "auto",
  parse: (v2) => v2
};

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs
var dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto], findDimensionValueType = (v2) => dimensionValueTypes.find(testValueType(v2));

// ../../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs
var valueTypes = [...dimensionValueTypes, color, complex], findValueType = (v2) => valueTypes.find(testValueType(v2));

// ../../node_modules/framer-motion/dist/es/render/utils/setters.mjs
function setMotionValue(visualElement, key, value) {
  visualElement.hasValue(key) ? visualElement.getValue(key).set(value) : visualElement.addValue(key, motionValue(value));
}
function setTarget(visualElement, definition) {
  let resolved = resolveVariant(visualElement, definition), { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, !1) : {};
  target = { ...target, ...transitionEnd };
  for (let key in target) {
    let value = resolveFinalValueInKeyframes(target[key]);
    setMotionValue(visualElement, key, value);
  }
}
function checkTargetForNewValues(visualElement, target, origin) {
  var _a, _b;
  let newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key)), numNewValues = newValueKeys.length;
  if (numNewValues)
    for (let i3 = 0; i3 < numNewValues; i3++) {
      let key = newValueKeys[i3], targetValue = target[key], value = null;
      Array.isArray(targetValue) && (value = targetValue[0]), value === null && (value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key]), value != null && (typeof value == "string" && (isNumericalString(value) || isZeroValueString(value)) ? value = parseFloat(value) : !findValueType(value) && complex.test(targetValue) && (value = getAnimatableNone2(key, targetValue)), visualElement.addValue(key, motionValue(value, { owner: visualElement })), origin[key] === void 0 && (origin[key] = value), value !== null && visualElement.setBaseTarget(key, value));
    }
}
function getOriginFromTransition(key, transition) {
  return transition ? (transition[key] || transition.default || transition).from : void 0;
}
function getOrigin(target, transition, visualElement) {
  let origin = {};
  for (let key in target) {
    let transitionOrigin = getOriginFromTransition(key, transition);
    if (transitionOrigin !== void 0)
      origin[key] = transitionOrigin;
    else {
      let value = visualElement.getValue(key);
      value && (origin[key] = value.get());
    }
  }
  return origin;
}

// ../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs
function shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {
  let shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== !0;
  return needsAnimating[key] = !1, shouldBlock;
}
function hasKeyframesChanged(value, target) {
  let current = value.get();
  if (Array.isArray(target)) {
    for (let i3 = 0; i3 < target.length; i3++)
      if (target[i3] !== current)
        return !0;
  } else
    return current !== target;
}
function animateTarget(visualElement, definition, { delay: delay2 = 0, transitionOverride, type } = {}) {
  let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition), willChange = visualElement.getValue("willChange");
  transitionOverride && (transition = transitionOverride);
  let animations2 = [], animationTypeState = type && visualElement.animationState && visualElement.animationState.getState()[type];
  for (let key in target) {
    let value = visualElement.getValue(key), valueTarget = target[key];
    if (!value || valueTarget === void 0 || animationTypeState && shouldBlockAnimation(animationTypeState, key))
      continue;
    let valueTransition = {
      delay: delay2,
      elapsed: 0,
      ...getValueTransition(transition || {}, key)
    };
    if (window.HandoffAppearAnimations) {
      let appearId = visualElement.getProps()[optimizedAppearDataAttribute];
      if (appearId) {
        let elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);
        elapsed !== null && (valueTransition.elapsed = elapsed, valueTransition.isHandoff = !0);
      }
    }
    let canSkip = !valueTransition.isHandoff && !hasKeyframesChanged(value, valueTarget);
    if (valueTransition.type === "spring" && (value.getVelocity() || valueTransition.velocity) && (canSkip = !1), value.animation && (canSkip = !1), canSkip)
      continue;
    value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key) ? { type: !1 } : valueTransition));
    let animation = value.animation;
    isWillChangeMotionValue(willChange) && (willChange.add(key), animation.then(() => willChange.remove(key))), animations2.push(animation);
  }
  return transitionEnd && Promise.all(animations2).then(() => {
    transitionEnd && setTarget(visualElement, transitionEnd);
  }), animations2;
}

// ../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs
function animateVariant(visualElement, variant, options = {}) {
  let resolved = resolveVariant(visualElement, variant, options.custom), { transition = visualElement.getDefaultTransition() || {} } = resolved || {};
  options.transitionOverride && (transition = options.transitionOverride);
  let getAnimation = resolved ? () => Promise.all(animateTarget(visualElement, resolved, options)) : () => Promise.resolve(), getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size ? (forwardDelay = 0) => {
    let { delayChildren = 0, staggerChildren, staggerDirection } = transition;
    return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);
  } : () => Promise.resolve(), { when } = transition;
  if (when) {
    let [first, last] = when === "beforeChildren" ? [getAnimation, getChildAnimations] : [getChildAnimations, getAnimation];
    return first().then(() => last());
  } else
    return Promise.all([getAnimation(), getChildAnimations(options.delay)]);
}
function animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {
  let animations2 = [], maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren, generateStaggerDuration = staggerDirection === 1 ? (i3 = 0) => i3 * staggerChildren : (i3 = 0) => maxStaggerDuration - i3 * staggerChildren;
  return Array.from(visualElement.variantChildren).sort(sortByTreeOrder).forEach((child, i3) => {
    child.notify("AnimationStart", variant), animations2.push(animateVariant(child, variant, {
      ...options,
      delay: delayChildren + generateStaggerDuration(i3)
    }).then(() => child.notify("AnimationComplete", variant)));
  }), Promise.all(animations2);
}
function sortByTreeOrder(a4, b3) {
  return a4.sortNodePosition(b3);
}

// ../../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs
function animateVisualElement(visualElement, definition, options = {}) {
  visualElement.notify("AnimationStart", definition);
  let animation;
  if (Array.isArray(definition)) {
    let animations2 = definition.map((variant) => animateVariant(visualElement, variant, options));
    animation = Promise.all(animations2);
  } else if (typeof definition == "string")
    animation = animateVariant(visualElement, definition, options);
  else {
    let resolvedDefinition = typeof definition == "function" ? resolveVariant(visualElement, definition, options.custom) : definition;
    animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));
  }
  return animation.then(() => visualElement.notify("AnimationComplete", definition));
}

// ../../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs
var reversePriorityOrder = [...variantPriorityOrder].reverse(), numAnimationTypes = variantPriorityOrder.length;
function animateList(visualElement) {
  return (animations2) => Promise.all(animations2.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));
}
function createAnimationState(visualElement) {
  let animate = animateList(visualElement), state = createState(), isInitialRender = !0, buildResolvedTypeValues = (acc, definition) => {
    let resolved = resolveVariant(visualElement, definition);
    if (resolved) {
      let { transition, transitionEnd, ...target } = resolved;
      acc = { ...acc, ...target, ...transitionEnd };
    }
    return acc;
  };
  function setAnimateFunction(makeAnimator) {
    animate = makeAnimator(visualElement);
  }
  function animateChanges(options, changedActiveType) {
    let props = visualElement.getProps(), context = visualElement.getVariantContext(!0) || {}, animations2 = [], removedKeys = /* @__PURE__ */ new Set(), encounteredKeys = {}, removedVariantIndex = 1 / 0;
    for (let i3 = 0; i3 < numAnimationTypes; i3++) {
      let type = reversePriorityOrder[i3], typeState = state[type], prop = props[type] !== void 0 ? props[type] : context[type], propIsVariant = isVariantLabel(prop), activeDelta = type === changedActiveType ? typeState.isActive : null;
      activeDelta === !1 && (removedVariantIndex = i3);
      let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;
      if (isInherited && isInitialRender && visualElement.manuallyAnimateOnMount && (isInherited = !1), typeState.protectedKeys = { ...encounteredKeys }, // If it isn't active and hasn't *just* been set as inactive
      !typeState.isActive && activeDelta === null || // If we didn't and don't have any defined prop for this animation type
      !prop && !typeState.prevProp || // Or if the prop doesn't define an animation
      isAnimationControls(prop) || typeof prop == "boolean")
        continue;
      let variantDidChange = checkVariantsDidChange(typeState.prevProp, prop), shouldAnimateType = variantDidChange || // If we're making this variant active, we want to always make it active
      type === changedActiveType && typeState.isActive && !isInherited && propIsVariant || // If we removed a higher-priority variant (i is in reverse order)
      i3 > removedVariantIndex && propIsVariant, definitionList = Array.isArray(prop) ? prop : [prop], resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});
      activeDelta === !1 && (resolvedValues = {});
      let { prevResolvedValues = {} } = typeState, allKeys = {
        ...prevResolvedValues,
        ...resolvedValues
      }, markToAnimate = (key) => {
        shouldAnimateType = !0, removedKeys.delete(key), typeState.needsAnimating[key] = !0;
      };
      for (let key in allKeys) {
        let next = resolvedValues[key], prev = prevResolvedValues[key];
        encounteredKeys.hasOwnProperty(key) || (next !== prev ? isKeyframesTarget(next) && isKeyframesTarget(prev) ? !shallowCompare(next, prev) || variantDidChange ? markToAnimate(key) : typeState.protectedKeys[key] = !0 : next !== void 0 ? markToAnimate(key) : removedKeys.add(key) : next !== void 0 && removedKeys.has(key) ? markToAnimate(key) : typeState.protectedKeys[key] = !0);
      }
      typeState.prevProp = prop, typeState.prevResolvedValues = resolvedValues, typeState.isActive && (encounteredKeys = { ...encounteredKeys, ...resolvedValues }), isInitialRender && visualElement.blockInitialAnimation && (shouldAnimateType = !1), shouldAnimateType && !isInherited && animations2.push(...definitionList.map((animation) => ({
        animation,
        options: { type, ...options }
      })));
    }
    if (removedKeys.size) {
      let fallbackAnimation = {};
      removedKeys.forEach((key) => {
        let fallbackTarget = visualElement.getBaseTarget(key);
        fallbackTarget !== void 0 && (fallbackAnimation[key] = fallbackTarget);
      }), animations2.push({ animation: fallbackAnimation });
    }
    let shouldAnimate = Boolean(animations2.length);
    return isInitialRender && (props.initial === !1 || props.initial === props.animate) && !visualElement.manuallyAnimateOnMount && (shouldAnimate = !1), isInitialRender = !1, shouldAnimate ? animate(animations2) : Promise.resolve();
  }
  function setActive(type, isActive, options) {
    var _a;
    if (state[type].isActive === isActive)
      return Promise.resolve();
    (_a = visualElement.variantChildren) === null || _a === void 0 || _a.forEach((child) => {
      var _a2;
      return (_a2 = child.animationState) === null || _a2 === void 0 ? void 0 : _a2.setActive(type, isActive);
    }), state[type].isActive = isActive;
    let animations2 = animateChanges(options, type);
    for (let key in state)
      state[key].protectedKeys = {};
    return animations2;
  }
  return {
    animateChanges,
    setActive,
    setAnimateFunction,
    getState: () => state
  };
}
function checkVariantsDidChange(prev, next) {
  return typeof next == "string" ? next !== prev : Array.isArray(next) ? !shallowCompare(next, prev) : !1;
}
function createTypeState(isActive = !1) {
  return {
    isActive,
    protectedKeys: {},
    needsAnimating: {},
    prevResolvedValues: {}
  };
}
function createState() {
  return {
    animate: createTypeState(!0),
    whileInView: createTypeState(),
    whileHover: createTypeState(),
    whileTap: createTypeState(),
    whileDrag: createTypeState(),
    whileFocus: createTypeState(),
    exit: createTypeState()
  };
}

// ../../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs
var AnimationFeature = class extends Feature {
  /**
   * We dynamically generate the AnimationState manager as it contains a reference
   * to the underlying animation library. We only want to load that if we load this,
   * so people can optionally code split it out using the `m` component.
   */
  constructor(node) {
    super(node), node.animationState || (node.animationState = createAnimationState(node));
  }
  updateAnimationControlsSubscription() {
    let { animate } = this.node.getProps();
    this.unmount(), isAnimationControls(animate) && (this.unmount = animate.subscribe(this.node));
  }
  /**
   * Subscribe any provided AnimationControls to the component's VisualElement
   */
  mount() {
    this.updateAnimationControlsSubscription();
  }
  update() {
    let { animate } = this.node.getProps(), { animate: prevAnimate } = this.node.prevProps || {};
    animate !== prevAnimate && this.updateAnimationControlsSubscription();
  }
  unmount() {
  }
};

// ../../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs
var id = 0, ExitAnimationFeature = class extends Feature {
  constructor() {
    super(...arguments), this.id = id++;
  }
  update() {
    if (!this.node.presenceContext)
      return;
    let { isPresent, onExitComplete, custom } = this.node.presenceContext, { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};
    if (!this.node.animationState || isPresent === prevIsPresent)
      return;
    let exitAnimation = this.node.animationState.setActive("exit", !isPresent, { custom: custom ?? this.node.getProps().custom });
    onExitComplete && !isPresent && exitAnimation.then(() => onExitComplete(this.id));
  }
  mount() {
    let { register } = this.node.presenceContext || {};
    register && (this.unmount = register(this.id));
  }
  unmount() {
  }
};

// ../../node_modules/framer-motion/dist/es/motion/features/animations.mjs
var animations = {
  animation: {
    Feature: AnimationFeature
  },
  exit: {
    Feature: ExitAnimationFeature
  }
};

// ../../node_modules/framer-motion/dist/es/utils/distance.mjs
var distance = (a4, b3) => Math.abs(a4 - b3);
function distance2D(a4, b3) {
  let xDelta = distance(a4.x, b3.x), yDelta = distance(a4.y, b3.y);
  return Math.sqrt(xDelta ** 2 + yDelta ** 2);
}

// ../../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs
var PanSession = class {
  constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {
    if (this.startEvent = null, this.lastMoveEvent = null, this.lastMoveEventInfo = null, this.handlers = {}, this.contextWindow = window, this.updatePoint = () => {
      if (!(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      let info2 = getPanInfo(this.lastMoveEventInfo, this.history), isPanStarted = this.startEvent !== null, isDistancePastThreshold = distance2D(info2.offset, { x: 0, y: 0 }) >= 3;
      if (!isPanStarted && !isDistancePastThreshold)
        return;
      let { point: point2 } = info2, { timestamp: timestamp2 } = frameData;
      this.history.push({ ...point2, timestamp: timestamp2 });
      let { onStart, onMove } = this.handlers;
      isPanStarted || (onStart && onStart(this.lastMoveEvent, info2), this.startEvent = this.lastMoveEvent), onMove && onMove(this.lastMoveEvent, info2);
    }, this.handlePointerMove = (event2, info2) => {
      this.lastMoveEvent = event2, this.lastMoveEventInfo = transformPoint(info2, this.transformPagePoint), frame.update(this.updatePoint, !0);
    }, this.handlePointerUp = (event2, info2) => {
      if (this.end(), !(this.lastMoveEvent && this.lastMoveEventInfo))
        return;
      let { onEnd, onSessionEnd } = this.handlers, panInfo = getPanInfo(event2.type === "pointercancel" ? this.lastMoveEventInfo : transformPoint(info2, this.transformPagePoint), this.history);
      this.startEvent && onEnd && onEnd(event2, panInfo), onSessionEnd && onSessionEnd(event2, panInfo);
    }, !isPrimaryPointer(event))
      return;
    this.handlers = handlers, this.transformPagePoint = transformPagePoint, this.contextWindow = contextWindow || window;
    let info = extractEventInfo(event), initialInfo = transformPoint(info, this.transformPagePoint), { point } = initialInfo, { timestamp } = frameData;
    this.history = [{ ...point, timestamp }];
    let { onSessionStart } = handlers;
    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history)), this.removeListeners = pipe(addPointerEvent(this.contextWindow, "pointermove", this.handlePointerMove), addPointerEvent(this.contextWindow, "pointerup", this.handlePointerUp), addPointerEvent(this.contextWindow, "pointercancel", this.handlePointerUp));
  }
  updateHandlers(handlers) {
    this.handlers = handlers;
  }
  end() {
    this.removeListeners && this.removeListeners(), cancelFrame(this.updatePoint);
  }
};
function transformPoint(info, transformPagePoint) {
  return transformPagePoint ? { point: transformPagePoint(info.point) } : info;
}
function subtractPoint(a4, b3) {
  return { x: a4.x - b3.x, y: a4.y - b3.y };
}
function getPanInfo({ point }, history) {
  return {
    point,
    delta: subtractPoint(point, lastDevicePoint(history)),
    offset: subtractPoint(point, startDevicePoint(history)),
    velocity: getVelocity2(history, 0.1)
  };
}
function startDevicePoint(history) {
  return history[0];
}
function lastDevicePoint(history) {
  return history[history.length - 1];
}
function getVelocity2(history, timeDelta) {
  if (history.length < 2)
    return { x: 0, y: 0 };
  let i3 = history.length - 1, timestampedPoint = null, lastPoint = lastDevicePoint(history);
  for (; i3 >= 0 && (timestampedPoint = history[i3], !(lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta))); )
    i3--;
  if (!timestampedPoint)
    return { x: 0, y: 0 };
  let time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);
  if (time === 0)
    return { x: 0, y: 0 };
  let currentVelocity = {
    x: (lastPoint.x - timestampedPoint.x) / time,
    y: (lastPoint.y - timestampedPoint.y) / time
  };
  return currentVelocity.x === 1 / 0 && (currentVelocity.x = 0), currentVelocity.y === 1 / 0 && (currentVelocity.y = 0), currentVelocity;
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs
function calcLength(axis) {
  return axis.max - axis.min;
}
function isNear(value, target = 0, maxDistance = 0.01) {
  return Math.abs(value - target) <= maxDistance;
}
function calcAxisDelta(delta, source, target, origin = 0.5) {
  delta.origin = origin, delta.originPoint = mix(source.min, source.max, delta.origin), delta.scale = calcLength(target) / calcLength(source), (isNear(delta.scale, 1, 1e-4) || isNaN(delta.scale)) && (delta.scale = 1), delta.translate = mix(target.min, target.max, delta.origin) - delta.originPoint, (isNear(delta.translate) || isNaN(delta.translate)) && (delta.translate = 0);
}
function calcBoxDelta(delta, source, target, origin) {
  calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : void 0), calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : void 0);
}
function calcRelativeAxis(target, relative, parent) {
  target.min = parent.min + relative.min, target.max = target.min + calcLength(relative);
}
function calcRelativeBox(target, relative, parent) {
  calcRelativeAxis(target.x, relative.x, parent.x), calcRelativeAxis(target.y, relative.y, parent.y);
}
function calcRelativeAxisPosition(target, layout2, parent) {
  target.min = layout2.min - parent.min, target.max = target.min + calcLength(layout2);
}
function calcRelativePosition(target, layout2, parent) {
  calcRelativeAxisPosition(target.x, layout2.x, parent.x), calcRelativeAxisPosition(target.y, layout2.y, parent.y);
}

// ../../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs
function applyConstraints(point, { min: min2, max: max2 }, elastic) {
  return min2 !== void 0 && point < min2 ? point = elastic ? mix(min2, point, elastic.min) : Math.max(point, min2) : max2 !== void 0 && point > max2 && (point = elastic ? mix(max2, point, elastic.max) : Math.min(point, max2)), point;
}
function calcRelativeAxisConstraints(axis, min2, max2) {
  return {
    min: min2 !== void 0 ? axis.min + min2 : void 0,
    max: max2 !== void 0 ? axis.max + max2 - (axis.max - axis.min) : void 0
  };
}
function calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {
  return {
    x: calcRelativeAxisConstraints(layoutBox.x, left, right),
    y: calcRelativeAxisConstraints(layoutBox.y, top, bottom)
  };
}
function calcViewportAxisConstraints(layoutAxis, constraintsAxis) {
  let min2 = constraintsAxis.min - layoutAxis.min, max2 = constraintsAxis.max - layoutAxis.max;
  return constraintsAxis.max - constraintsAxis.min < layoutAxis.max - layoutAxis.min && ([min2, max2] = [max2, min2]), { min: min2, max: max2 };
}
function calcViewportConstraints(layoutBox, constraintsBox) {
  return {
    x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),
    y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y)
  };
}
function calcOrigin2(source, target) {
  let origin = 0.5, sourceLength = calcLength(source), targetLength = calcLength(target);
  return targetLength > sourceLength ? origin = progress(target.min, target.max - sourceLength, source.min) : sourceLength > targetLength && (origin = progress(source.min, source.max - targetLength, target.min)), clamp(0, 1, origin);
}
function rebaseAxisConstraints(layout2, constraints) {
  let relativeConstraints = {};
  return constraints.min !== void 0 && (relativeConstraints.min = constraints.min - layout2.min), constraints.max !== void 0 && (relativeConstraints.max = constraints.max - layout2.min), relativeConstraints;
}
var defaultElastic = 0.35;
function resolveDragElastic(dragElastic = defaultElastic) {
  return dragElastic === !1 ? dragElastic = 0 : dragElastic === !0 && (dragElastic = defaultElastic), {
    x: resolveAxisElastic(dragElastic, "left", "right"),
    y: resolveAxisElastic(dragElastic, "top", "bottom")
  };
}
function resolveAxisElastic(dragElastic, minLabel, maxLabel) {
  return {
    min: resolvePointElastic(dragElastic, minLabel),
    max: resolvePointElastic(dragElastic, maxLabel)
  };
}
function resolvePointElastic(dragElastic, label) {
  return typeof dragElastic == "number" ? dragElastic : dragElastic[label] || 0;
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/models.mjs
var createAxisDelta = () => ({
  translate: 0,
  scale: 1,
  origin: 0,
  originPoint: 0
}), createDelta = () => ({
  x: createAxisDelta(),
  y: createAxisDelta()
}), createAxis = () => ({ min: 0, max: 0 }), createBox = () => ({
  x: createAxis(),
  y: createAxis()
});

// ../../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs
function eachAxis(callback) {
  return [callback("x"), callback("y")];
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs
function convertBoundingBoxToBox({ top, left, right, bottom }) {
  return {
    x: { min: left, max: right },
    y: { min: top, max: bottom }
  };
}
function convertBoxToBoundingBox({ x: x3, y: y4 }) {
  return { top: y4.min, right: x3.max, bottom: y4.max, left: x3.min };
}
function transformBoxPoints(point, transformPoint2) {
  if (!transformPoint2)
    return point;
  let topLeft = transformPoint2({ x: point.left, y: point.top }), bottomRight = transformPoint2({ x: point.right, y: point.bottom });
  return {
    top: topLeft.y,
    left: topLeft.x,
    bottom: bottomRight.y,
    right: bottomRight.x
  };
}

// ../../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs
function isIdentityScale(scale2) {
  return scale2 === void 0 || scale2 === 1;
}
function hasScale({ scale: scale2, scaleX, scaleY }) {
  return !isIdentityScale(scale2) || !isIdentityScale(scaleX) || !isIdentityScale(scaleY);
}
function hasTransform(values) {
  return hasScale(values) || has2DTranslate(values) || values.z || values.rotate || values.rotateX || values.rotateY;
}
function has2DTranslate(values) {
  return is2DTranslate(values.x) || is2DTranslate(values.y);
}
function is2DTranslate(value) {
  return value && value !== "0%";
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs
function scalePoint(point, scale2, originPoint) {
  let distanceFromOrigin = point - originPoint, scaled = scale2 * distanceFromOrigin;
  return originPoint + scaled;
}
function applyPointDelta(point, translate, scale2, originPoint, boxScale) {
  return boxScale !== void 0 && (point = scalePoint(point, boxScale, originPoint)), scalePoint(point, scale2, originPoint) + translate;
}
function applyAxisDelta(axis, translate = 0, scale2 = 1, originPoint, boxScale) {
  axis.min = applyPointDelta(axis.min, translate, scale2, originPoint, boxScale), axis.max = applyPointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function applyBoxDelta(box, { x: x3, y: y4 }) {
  applyAxisDelta(box.x, x3.translate, x3.scale, x3.originPoint), applyAxisDelta(box.y, y4.translate, y4.scale, y4.originPoint);
}
function applyTreeDeltas(box, treeScale, treePath, isSharedTransition = !1) {
  let treeLength = treePath.length;
  if (!treeLength)
    return;
  treeScale.x = treeScale.y = 1;
  let node, delta;
  for (let i3 = 0; i3 < treeLength; i3++) {
    node = treePath[i3], delta = node.projectionDelta;
    let instance = node.instance;
    instance && instance.style && instance.style.display === "contents" || (isSharedTransition && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(box, {
      x: -node.scroll.offset.x,
      y: -node.scroll.offset.y
    }), delta && (treeScale.x *= delta.x.scale, treeScale.y *= delta.y.scale, applyBoxDelta(box, delta)), isSharedTransition && hasTransform(node.latestValues) && transformBox(box, node.latestValues));
  }
  treeScale.x = snapToDefault(treeScale.x), treeScale.y = snapToDefault(treeScale.y);
}
function snapToDefault(scale2) {
  return Number.isInteger(scale2) || scale2 > 1.0000000000001 || scale2 < 0.999999999999 ? scale2 : 1;
}
function translateAxis(axis, distance2) {
  axis.min = axis.min + distance2, axis.max = axis.max + distance2;
}
function transformAxis(axis, transforms, [key, scaleKey, originKey]) {
  let axisOrigin = transforms[originKey] !== void 0 ? transforms[originKey] : 0.5, originPoint = mix(axis.min, axis.max, axisOrigin);
  applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);
}
var xKeys = ["x", "scaleX", "originX"], yKeys = ["y", "scaleY", "originY"];
function transformBox(box, transform) {
  transformAxis(box.x, transform, xKeys), transformAxis(box.y, transform, yKeys);
}

// ../../node_modules/framer-motion/dist/es/projection/utils/measure.mjs
function measureViewportBox(instance, transformPoint2) {
  return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint2));
}
function measurePageBox(element, rootProjectionNode2, transformPagePoint) {
  let viewportBox = measureViewportBox(element, transformPagePoint), { scroll } = rootProjectionNode2;
  return scroll && (translateAxis(viewportBox.x, scroll.offset.x), translateAxis(viewportBox.y, scroll.offset.y)), viewportBox;
}

// ../../node_modules/framer-motion/dist/es/utils/get-context-window.mjs
var getContextWindow = ({ current }) => current ? current.ownerDocument.defaultView : null;

// ../../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs
var elementDragControls = /* @__PURE__ */ new WeakMap(), VisualElementDragControls = class {
  constructor(visualElement) {
    this.openGlobalLock = null, this.isDragging = !1, this.currentDirection = null, this.originPoint = { x: 0, y: 0 }, this.constraints = !1, this.hasMutatedConstraints = !1, this.elastic = createBox(), this.visualElement = visualElement;
  }
  start(originEvent, { snapToCursor = !1 } = {}) {
    let { presenceContext } = this.visualElement;
    if (presenceContext && presenceContext.isPresent === !1)
      return;
    let onSessionStart = (event) => {
      this.stopAnimation(), snapToCursor && this.snapToCursor(extractEventInfo(event, "page").point);
    }, onStart = (event, info) => {
      let { drag: drag2, dragPropagation, onDragStart } = this.getProps();
      if (drag2 && !dragPropagation && (this.openGlobalLock && this.openGlobalLock(), this.openGlobalLock = getGlobalLock(drag2), !this.openGlobalLock))
        return;
      this.isDragging = !0, this.currentDirection = null, this.resolveConstraints(), this.visualElement.projection && (this.visualElement.projection.isAnimationBlocked = !0, this.visualElement.projection.target = void 0), eachAxis((axis) => {
        let current = this.getAxisMotionValue(axis).get() || 0;
        if (percent.test(current)) {
          let { projection } = this.visualElement;
          if (projection && projection.layout) {
            let measuredAxis = projection.layout.layoutBox[axis];
            measuredAxis && (current = calcLength(measuredAxis) * (parseFloat(current) / 100));
          }
        }
        this.originPoint[axis] = current;
      }), onDragStart && frame.update(() => onDragStart(event, info), !1, !0);
      let { animationState } = this.visualElement;
      animationState && animationState.setActive("whileDrag", !0);
    }, onMove = (event, info) => {
      let { dragPropagation, dragDirectionLock, onDirectionLock, onDrag } = this.getProps();
      if (!dragPropagation && !this.openGlobalLock)
        return;
      let { offset: offset2 } = info;
      if (dragDirectionLock && this.currentDirection === null) {
        this.currentDirection = getCurrentDirection(offset2), this.currentDirection !== null && onDirectionLock && onDirectionLock(this.currentDirection);
        return;
      }
      this.updateAxis("x", info.point, offset2), this.updateAxis("y", info.point, offset2), this.visualElement.render(), onDrag && onDrag(event, info);
    }, onSessionEnd = (event, info) => this.stop(event, info);
    this.panSession = new PanSession(originEvent, {
      onSessionStart,
      onStart,
      onMove,
      onSessionEnd
    }, {
      transformPagePoint: this.visualElement.getTransformPagePoint(),
      contextWindow: getContextWindow(this.visualElement)
    });
  }
  stop(event, info) {
    let isDragging = this.isDragging;
    if (this.cancel(), !isDragging)
      return;
    let { velocity } = info;
    this.startAnimation(velocity);
    let { onDragEnd } = this.getProps();
    onDragEnd && frame.update(() => onDragEnd(event, info));
  }
  cancel() {
    this.isDragging = !1;
    let { projection, animationState } = this.visualElement;
    projection && (projection.isAnimationBlocked = !1), this.panSession && this.panSession.end(), this.panSession = void 0;
    let { dragPropagation } = this.getProps();
    !dragPropagation && this.openGlobalLock && (this.openGlobalLock(), this.openGlobalLock = null), animationState && animationState.setActive("whileDrag", !1);
  }
  updateAxis(axis, _point, offset2) {
    let { drag: drag2 } = this.getProps();
    if (!offset2 || !shouldDrag(axis, drag2, this.currentDirection))
      return;
    let axisValue = this.getAxisMotionValue(axis), next = this.originPoint[axis] + offset2[axis];
    this.constraints && this.constraints[axis] && (next = applyConstraints(next, this.constraints[axis], this.elastic[axis])), axisValue.set(next);
  }
  resolveConstraints() {
    var _a;
    let { dragConstraints, dragElastic } = this.getProps(), layout2 = this.visualElement.projection && !this.visualElement.projection.layout ? this.visualElement.projection.measure(!1) : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout, prevConstraints = this.constraints;
    dragConstraints && isRefObject(dragConstraints) ? this.constraints || (this.constraints = this.resolveRefConstraints()) : dragConstraints && layout2 ? this.constraints = calcRelativeConstraints(layout2.layoutBox, dragConstraints) : this.constraints = !1, this.elastic = resolveDragElastic(dragElastic), prevConstraints !== this.constraints && layout2 && this.constraints && !this.hasMutatedConstraints && eachAxis((axis) => {
      this.getAxisMotionValue(axis) && (this.constraints[axis] = rebaseAxisConstraints(layout2.layoutBox[axis], this.constraints[axis]));
    });
  }
  resolveRefConstraints() {
    let { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();
    if (!constraints || !isRefObject(constraints))
      return !1;
    let constraintsElement = constraints.current;
    invariant5(constraintsElement !== null, "If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.");
    let { projection } = this.visualElement;
    if (!projection || !projection.layout)
      return !1;
    let constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint()), measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);
    if (onMeasureDragConstraints) {
      let userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));
      this.hasMutatedConstraints = !!userConstraints, userConstraints && (measuredConstraints = convertBoundingBoxToBox(userConstraints));
    }
    return measuredConstraints;
  }
  startAnimation(velocity) {
    let { drag: drag2, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd } = this.getProps(), constraints = this.constraints || {}, momentumAnimations = eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, this.currentDirection))
        return;
      let transition = constraints && constraints[axis] || {};
      dragSnapToOrigin && (transition = { min: 0, max: 0 });
      let bounceStiffness = dragElastic ? 200 : 1e6, bounceDamping = dragElastic ? 40 : 1e7, inertia2 = {
        type: "inertia",
        velocity: dragMomentum ? velocity[axis] : 0,
        bounceStiffness,
        bounceDamping,
        timeConstant: 750,
        restDelta: 1,
        restSpeed: 10,
        ...dragTransition,
        ...transition
      };
      return this.startAxisValueAnimation(axis, inertia2);
    });
    return Promise.all(momentumAnimations).then(onDragTransitionEnd);
  }
  startAxisValueAnimation(axis, transition) {
    let axisValue = this.getAxisMotionValue(axis);
    return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));
  }
  stopAnimation() {
    eachAxis((axis) => this.getAxisMotionValue(axis).stop());
  }
  /**
   * Drag works differently depending on which props are provided.
   *
   * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.
   * - Otherwise, we apply the delta to the x/y motion values.
   */
  getAxisMotionValue(axis) {
    let dragKey = "_drag" + axis.toUpperCase(), props = this.visualElement.getProps(), externalMotionValue = props[dragKey];
    return externalMotionValue || this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : void 0) || 0);
  }
  snapToCursor(point) {
    eachAxis((axis) => {
      let { drag: drag2 } = this.getProps();
      if (!shouldDrag(axis, drag2, this.currentDirection))
        return;
      let { projection } = this.visualElement, axisValue = this.getAxisMotionValue(axis);
      if (projection && projection.layout) {
        let { min: min2, max: max2 } = projection.layout.layoutBox[axis];
        axisValue.set(point[axis] - mix(min2, max2, 0.5));
      }
    });
  }
  /**
   * When the viewport resizes we want to check if the measured constraints
   * have changed and, if so, reposition the element within those new constraints
   * relative to where it was before the resize.
   */
  scalePositionWithinConstraints() {
    if (!this.visualElement.current)
      return;
    let { drag: drag2, dragConstraints } = this.getProps(), { projection } = this.visualElement;
    if (!isRefObject(dragConstraints) || !projection || !this.constraints)
      return;
    this.stopAnimation();
    let boxProgress = { x: 0, y: 0 };
    eachAxis((axis) => {
      let axisValue = this.getAxisMotionValue(axis);
      if (axisValue) {
        let latest = axisValue.get();
        boxProgress[axis] = calcOrigin2({ min: latest, max: latest }, this.constraints[axis]);
      }
    });
    let { transformTemplate } = this.visualElement.getProps();
    this.visualElement.current.style.transform = transformTemplate ? transformTemplate({}, "") : "none", projection.root && projection.root.updateScroll(), projection.updateLayout(), this.resolveConstraints(), eachAxis((axis) => {
      if (!shouldDrag(axis, drag2, null))
        return;
      let axisValue = this.getAxisMotionValue(axis), { min: min2, max: max2 } = this.constraints[axis];
      axisValue.set(mix(min2, max2, boxProgress[axis]));
    });
  }
  addListeners() {
    if (!this.visualElement.current)
      return;
    elementDragControls.set(this.visualElement, this);
    let element = this.visualElement.current, stopPointerListener = addPointerEvent(element, "pointerdown", (event) => {
      let { drag: drag2, dragListener = !0 } = this.getProps();
      drag2 && dragListener && this.start(event);
    }), measureDragConstraints = () => {
      let { dragConstraints } = this.getProps();
      isRefObject(dragConstraints) && (this.constraints = this.resolveRefConstraints());
    }, { projection } = this.visualElement, stopMeasureLayoutListener = projection.addEventListener("measure", measureDragConstraints);
    projection && !projection.layout && (projection.root && projection.root.updateScroll(), projection.updateLayout()), measureDragConstraints();
    let stopResizeListener = addDomEvent(window, "resize", () => this.scalePositionWithinConstraints()), stopLayoutUpdateListener = projection.addEventListener("didUpdate", ({ delta, hasLayoutChanged }) => {
      this.isDragging && hasLayoutChanged && (eachAxis((axis) => {
        let motionValue2 = this.getAxisMotionValue(axis);
        motionValue2 && (this.originPoint[axis] += delta[axis].translate, motionValue2.set(motionValue2.get() + delta[axis].translate));
      }), this.visualElement.render());
    });
    return () => {
      stopResizeListener(), stopPointerListener(), stopMeasureLayoutListener(), stopLayoutUpdateListener && stopLayoutUpdateListener();
    };
  }
  getProps() {
    let props = this.visualElement.getProps(), { drag: drag2 = !1, dragDirectionLock = !1, dragPropagation = !1, dragConstraints = !1, dragElastic = defaultElastic, dragMomentum = !0 } = props;
    return {
      ...props,
      drag: drag2,
      dragDirectionLock,
      dragPropagation,
      dragConstraints,
      dragElastic,
      dragMomentum
    };
  }
};
function shouldDrag(direction, drag2, currentDirection) {
  return (drag2 === !0 || drag2 === direction) && (currentDirection === null || currentDirection === direction);
}
function getCurrentDirection(offset2, lockThreshold = 10) {
  let direction = null;
  return Math.abs(offset2.y) > lockThreshold ? direction = "y" : Math.abs(offset2.x) > lockThreshold && (direction = "x"), direction;
}

// ../../node_modules/framer-motion/dist/es/gestures/drag/index.mjs
var DragGesture = class extends Feature {
  constructor(node) {
    super(node), this.removeGroupControls = noop4, this.removeListeners = noop4, this.controls = new VisualElementDragControls(node);
  }
  mount() {
    let { dragControls } = this.node.getProps();
    dragControls && (this.removeGroupControls = dragControls.subscribe(this.controls)), this.removeListeners = this.controls.addListeners() || noop4;
  }
  unmount() {
    this.removeGroupControls(), this.removeListeners();
  }
};

// ../../node_modules/framer-motion/dist/es/gestures/pan/index.mjs
var asyncHandler = (handler) => (event, info) => {
  handler && frame.update(() => handler(event, info));
}, PanGesture = class extends Feature {
  constructor() {
    super(...arguments), this.removePointerDownListener = noop4;
  }
  onPointerDown(pointerDownEvent) {
    this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {
      transformPagePoint: this.node.getTransformPagePoint(),
      contextWindow: getContextWindow(this.node)
    });
  }
  createPanHandlers() {
    let { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();
    return {
      onSessionStart: asyncHandler(onPanSessionStart),
      onStart: asyncHandler(onPanStart),
      onMove: onPan,
      onEnd: (event, info) => {
        delete this.session, onPanEnd && frame.update(() => onPanEnd(event, info));
      }
    };
  }
  mount() {
    this.removePointerDownListener = addPointerEvent(this.node.current, "pointerdown", (event) => this.onPointerDown(event));
  }
  update() {
    this.session && this.session.updateHandlers(this.createPanHandlers());
  }
  unmount() {
    this.removePointerDownListener(), this.session && this.session.end();
  }
};

// ../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var import_react47 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs
var import_react46 = __toESM(require_react(), 1);
function usePresence() {
  let context = (0, import_react46.useContext)(PresenceContext);
  if (context === null)
    return [!0, null];
  let { isPresent, onExitComplete, register } = context, id3 = (0, import_react46.useId)();
  return (0, import_react46.useEffect)(() => register(id3), []), !isPresent && onExitComplete ? [!1, () => onExitComplete && onExitComplete(id3)] : [!0];
}

// ../../node_modules/framer-motion/dist/es/projection/node/state.mjs
var globalProjectionState = {
  /**
   * Global flag as to whether the tree has animated since the last time
   * we resized the window
   */
  hasAnimatedSinceResize: !0,
  /**
   * We set this to true once, on the first update. Any nodes added to the tree beyond that
   * update will be given a `data-projection-id` attribute.
   */
  hasEverUpdated: !1
};

// ../../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs
function pixelsToPercent(pixels, axis) {
  return axis.max === axis.min ? 0 : pixels / (axis.max - axis.min) * 100;
}
var correctBorderRadius = {
  correct: (latest, node) => {
    if (!node.target)
      return latest;
    if (typeof latest == "string")
      if (px.test(latest))
        latest = parseFloat(latest);
      else
        return latest;
    let x3 = pixelsToPercent(latest, node.target.x), y4 = pixelsToPercent(latest, node.target.y);
    return `${x3}% ${y4}%`;
  }
};

// ../../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs
var correctBoxShadow = {
  correct: (latest, { treeScale, projectionDelta }) => {
    let original = latest, shadow = complex.parse(latest);
    if (shadow.length > 5)
      return original;
    let template = complex.createTransformer(latest), offset2 = typeof shadow[0] != "number" ? 1 : 0, xScale = projectionDelta.x.scale * treeScale.x, yScale = projectionDelta.y.scale * treeScale.y;
    shadow[0 + offset2] /= xScale, shadow[1 + offset2] /= yScale;
    let averageScale = mix(xScale, yScale, 0.5);
    return typeof shadow[2 + offset2] == "number" && (shadow[2 + offset2] /= averageScale), typeof shadow[3 + offset2] == "number" && (shadow[3 + offset2] /= averageScale), template(shadow);
  }
};

// ../../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs
var MeasureLayoutWithContext = class extends import_react47.default.Component {
  /**
   * This only mounts projection nodes for components that
   * need measuring, we might want to do it for all components
   * in order to incorporate transforms
   */
  componentDidMount() {
    let { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props, { projection } = visualElement;
    addScaleCorrector(defaultScaleCorrectors), projection && (layoutGroup.group && layoutGroup.group.add(projection), switchLayoutGroup && switchLayoutGroup.register && layoutId && switchLayoutGroup.register(projection), projection.root.didUpdate(), projection.addEventListener("animationComplete", () => {
      this.safeToRemove();
    }), projection.setOptions({
      ...projection.options,
      onExitComplete: () => this.safeToRemove()
    })), globalProjectionState.hasEverUpdated = !0;
  }
  getSnapshotBeforeUpdate(prevProps) {
    let { layoutDependency, visualElement, drag: drag2, isPresent } = this.props, projection = visualElement.projection;
    return projection && (projection.isPresent = isPresent, drag2 || prevProps.layoutDependency !== layoutDependency || layoutDependency === void 0 ? projection.willUpdate() : this.safeToRemove(), prevProps.isPresent !== isPresent && (isPresent ? projection.promote() : projection.relegate() || frame.postRender(() => {
      let stack = projection.getStack();
      (!stack || !stack.members.length) && this.safeToRemove();
    }))), null;
  }
  componentDidUpdate() {
    let { projection } = this.props.visualElement;
    projection && (projection.root.didUpdate(), queueMicrotask(() => {
      !projection.currentAnimation && projection.isLead() && this.safeToRemove();
    }));
  }
  componentWillUnmount() {
    let { visualElement, layoutGroup, switchLayoutGroup: promoteContext } = this.props, { projection } = visualElement;
    projection && (projection.scheduleCheckAfterUnmount(), layoutGroup && layoutGroup.group && layoutGroup.group.remove(projection), promoteContext && promoteContext.deregister && promoteContext.deregister(projection));
  }
  safeToRemove() {
    let { safeToRemove } = this.props;
    safeToRemove && safeToRemove();
  }
  render() {
    return null;
  }
};
function MeasureLayout(props) {
  let [isPresent, safeToRemove] = usePresence(), layoutGroup = (0, import_react47.useContext)(LayoutGroupContext);
  return import_react47.default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup, switchLayoutGroup: (0, import_react47.useContext)(SwitchLayoutGroupContext), isPresent, safeToRemove });
}
var defaultScaleCorrectors = {
  borderRadius: {
    ...correctBorderRadius,
    applyTo: [
      "borderTopLeftRadius",
      "borderTopRightRadius",
      "borderBottomLeftRadius",
      "borderBottomRightRadius"
    ]
  },
  borderTopLeftRadius: correctBorderRadius,
  borderTopRightRadius: correctBorderRadius,
  borderBottomLeftRadius: correctBorderRadius,
  borderBottomRightRadius: correctBorderRadius,
  boxShadow: correctBoxShadow
};

// ../../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs
var borders = ["TopLeft", "TopRight", "BottomLeft", "BottomRight"], numBorders = borders.length, asNumber = (value) => typeof value == "string" ? parseFloat(value) : value, isPx = (value) => typeof value == "number" || px.test(value);
function mixValues(target, follow, lead, progress2, shouldCrossfadeOpacity, isOnlyMember) {
  shouldCrossfadeOpacity ? (target.opacity = mix(
    0,
    // TODO Reinstate this if only child
    lead.opacity !== void 0 ? lead.opacity : 1,
    easeCrossfadeIn(progress2)
  ), target.opacityExit = mix(follow.opacity !== void 0 ? follow.opacity : 1, 0, easeCrossfadeOut(progress2))) : isOnlyMember && (target.opacity = mix(follow.opacity !== void 0 ? follow.opacity : 1, lead.opacity !== void 0 ? lead.opacity : 1, progress2));
  for (let i3 = 0; i3 < numBorders; i3++) {
    let borderLabel = `border${borders[i3]}Radius`, followRadius = getRadius(follow, borderLabel), leadRadius = getRadius(lead, borderLabel);
    if (followRadius === void 0 && leadRadius === void 0)
      continue;
    followRadius || (followRadius = 0), leadRadius || (leadRadius = 0), followRadius === 0 || leadRadius === 0 || isPx(followRadius) === isPx(leadRadius) ? (target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress2), 0), (percent.test(leadRadius) || percent.test(followRadius)) && (target[borderLabel] += "%")) : target[borderLabel] = leadRadius;
  }
  (follow.rotate || lead.rotate) && (target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress2));
}
function getRadius(values, radiusName) {
  return values[radiusName] !== void 0 ? values[radiusName] : values.borderRadius;
}
var easeCrossfadeIn = compress(0, 0.5, circOut), easeCrossfadeOut = compress(0.5, 0.95, noop4);
function compress(min2, max2, easing) {
  return (p2) => p2 < min2 ? 0 : p2 > max2 ? 1 : easing(progress(min2, max2, p2));
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs
function copyAxisInto(axis, originAxis) {
  axis.min = originAxis.min, axis.max = originAxis.max;
}
function copyBoxInto(box, originBox) {
  copyAxisInto(box.x, originBox.x), copyAxisInto(box.y, originBox.y);
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs
function removePointDelta(point, translate, scale2, originPoint, boxScale) {
  return point -= translate, point = scalePoint(point, 1 / scale2, originPoint), boxScale !== void 0 && (point = scalePoint(point, 1 / boxScale, originPoint)), point;
}
function removeAxisDelta(axis, translate = 0, scale2 = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {
  if (percent.test(translate) && (translate = parseFloat(translate), translate = mix(sourceAxis.min, sourceAxis.max, translate / 100) - sourceAxis.min), typeof translate != "number")
    return;
  let originPoint = mix(originAxis.min, originAxis.max, origin);
  axis === originAxis && (originPoint -= translate), axis.min = removePointDelta(axis.min, translate, scale2, originPoint, boxScale), axis.max = removePointDelta(axis.max, translate, scale2, originPoint, boxScale);
}
function removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {
  removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);
}
var xKeys2 = ["x", "scaleX", "originX"], yKeys2 = ["y", "scaleY", "originY"];
function removeBoxTransforms(box, transforms, originBox, sourceBox) {
  removeAxisTransforms(box.x, transforms, xKeys2, originBox ? originBox.x : void 0, sourceBox ? sourceBox.x : void 0), removeAxisTransforms(box.y, transforms, yKeys2, originBox ? originBox.y : void 0, sourceBox ? sourceBox.y : void 0);
}

// ../../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs
function isAxisDeltaZero(delta) {
  return delta.translate === 0 && delta.scale === 1;
}
function isDeltaZero(delta) {
  return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);
}
function boxEquals(a4, b3) {
  return a4.x.min === b3.x.min && a4.x.max === b3.x.max && a4.y.min === b3.y.min && a4.y.max === b3.y.max;
}
function boxEqualsRounded(a4, b3) {
  return Math.round(a4.x.min) === Math.round(b3.x.min) && Math.round(a4.x.max) === Math.round(b3.x.max) && Math.round(a4.y.min) === Math.round(b3.y.min) && Math.round(a4.y.max) === Math.round(b3.y.max);
}
function aspectRatio(box) {
  return calcLength(box.x) / calcLength(box.y);
}

// ../../node_modules/framer-motion/dist/es/projection/shared/stack.mjs
var NodeStack = class {
  constructor() {
    this.members = [];
  }
  add(node) {
    addUniqueItem(this.members, node), node.scheduleRender();
  }
  remove(node) {
    if (removeItem(this.members, node), node === this.prevLead && (this.prevLead = void 0), node === this.lead) {
      let prevLead = this.members[this.members.length - 1];
      prevLead && this.promote(prevLead);
    }
  }
  relegate(node) {
    let indexOfNode = this.members.findIndex((member) => node === member);
    if (indexOfNode === 0)
      return !1;
    let prevLead;
    for (let i3 = indexOfNode; i3 >= 0; i3--) {
      let member = this.members[i3];
      if (member.isPresent !== !1) {
        prevLead = member;
        break;
      }
    }
    return prevLead ? (this.promote(prevLead), !0) : !1;
  }
  promote(node, preserveFollowOpacity) {
    let prevLead = this.lead;
    if (node !== prevLead && (this.prevLead = prevLead, this.lead = node, node.show(), prevLead)) {
      prevLead.instance && prevLead.scheduleRender(), node.scheduleRender(), node.resumeFrom = prevLead, preserveFollowOpacity && (node.resumeFrom.preserveOpacity = !0), prevLead.snapshot && (node.snapshot = prevLead.snapshot, node.snapshot.latestValues = prevLead.animationValues || prevLead.latestValues), node.root && node.root.isUpdating && (node.isLayoutDirty = !0);
      let { crossfade } = node.options;
      crossfade === !1 && prevLead.hide();
    }
  }
  exitAnimationComplete() {
    this.members.forEach((node) => {
      let { options, resumingFrom } = node;
      options.onExitComplete && options.onExitComplete(), resumingFrom && resumingFrom.options.onExitComplete && resumingFrom.options.onExitComplete();
    });
  }
  scheduleRender() {
    this.members.forEach((node) => {
      node.instance && node.scheduleRender(!1);
    });
  }
  /**
   * Clear any leads that have been removed this render to prevent them from being
   * used in future animations and to prevent memory leaks
   */
  removeLeadSnapshot() {
    this.lead && this.lead.snapshot && (this.lead.snapshot = void 0);
  }
};

// ../../node_modules/framer-motion/dist/es/projection/styles/transform.mjs
function buildProjectionTransform(delta, treeScale, latestTransform) {
  let transform = "", xTranslate = delta.x.translate / treeScale.x, yTranslate = delta.y.translate / treeScale.y;
  if ((xTranslate || yTranslate) && (transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `), (treeScale.x !== 1 || treeScale.y !== 1) && (transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `), latestTransform) {
    let { rotate, rotateX, rotateY } = latestTransform;
    rotate && (transform += `rotate(${rotate}deg) `), rotateX && (transform += `rotateX(${rotateX}deg) `), rotateY && (transform += `rotateY(${rotateY}deg) `);
  }
  let elementScaleX = delta.x.scale * treeScale.x, elementScaleY = delta.y.scale * treeScale.y;
  return (elementScaleX !== 1 || elementScaleY !== 1) && (transform += `scale(${elementScaleX}, ${elementScaleY})`), transform || "none";
}

// ../../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs
var compareByDepth = (a4, b3) => a4.depth - b3.depth;

// ../../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs
var FlatTree = class {
  constructor() {
    this.children = [], this.isDirty = !1;
  }
  add(child) {
    addUniqueItem(this.children, child), this.isDirty = !0;
  }
  remove(child) {
    removeItem(this.children, child), this.isDirty = !0;
  }
  forEach(callback) {
    this.isDirty && this.children.sort(compareByDepth), this.isDirty = !1, this.children.forEach(callback);
  }
};

// ../../node_modules/framer-motion/dist/es/utils/delay.mjs
function delay(callback, timeout) {
  let start = performance.now(), checkElapsed = ({ timestamp }) => {
    let elapsed = timestamp - start;
    elapsed >= timeout && (cancelFrame(checkElapsed), callback(elapsed - timeout));
  };
  return frame.read(checkElapsed, !0), () => cancelFrame(checkElapsed);
}

// ../../node_modules/framer-motion/dist/es/debug/record.mjs
function record(data) {
  window.MotionDebug && window.MotionDebug.record(data);
}

// ../../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs
function isSVGElement(element) {
  return element instanceof SVGElement && element.tagName !== "svg";
}

// ../../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs
function animateSingleValue(value, keyframes2, options) {
  let motionValue$1 = isMotionValue(value) ? value : motionValue(value);
  return motionValue$1.start(animateMotionValue("", motionValue$1, keyframes2, options)), motionValue$1.animation;
}

// ../../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs
var transformAxes = ["", "X", "Y", "Z"], hiddenVisibility = { visibility: "hidden" }, animationTarget = 1e3, id2 = 0, projectionFrameData = {
  type: "projectionFrame",
  totalNodes: 0,
  resolvedTargetDeltas: 0,
  recalculatedProjection: 0
};
function createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform }) {
  return class {
    constructor(latestValues = {}, parent = defaultParent?.()) {
      this.id = id2++, this.animationId = 0, this.children = /* @__PURE__ */ new Set(), this.options = {}, this.isTreeAnimating = !1, this.isAnimationBlocked = !1, this.isLayoutDirty = !1, this.isProjectionDirty = !1, this.isSharedProjectionDirty = !1, this.isTransformDirty = !1, this.updateManuallyBlocked = !1, this.updateBlockedByResize = !1, this.isUpdating = !1, this.isSVG = !1, this.needsReset = !1, this.shouldResetTransform = !1, this.treeScale = { x: 1, y: 1 }, this.eventHandlers = /* @__PURE__ */ new Map(), this.hasTreeAnimated = !1, this.updateScheduled = !1, this.projectionUpdateScheduled = !1, this.checkUpdateFailed = () => {
        this.isUpdating && (this.isUpdating = !1, this.clearAllSnapshots());
      }, this.updateProjection = () => {
        this.projectionUpdateScheduled = !1, projectionFrameData.totalNodes = projectionFrameData.resolvedTargetDeltas = projectionFrameData.recalculatedProjection = 0, this.nodes.forEach(propagateDirtyNodes), this.nodes.forEach(resolveTargetDelta), this.nodes.forEach(calcProjection), this.nodes.forEach(cleanDirtyNodes), record(projectionFrameData);
      }, this.hasProjected = !1, this.isVisible = !0, this.animationProgress = 0, this.sharedNodes = /* @__PURE__ */ new Map(), this.latestValues = latestValues, this.root = parent ? parent.root || parent : this, this.path = parent ? [...parent.path, parent] : [], this.parent = parent, this.depth = parent ? parent.depth + 1 : 0;
      for (let i3 = 0; i3 < this.path.length; i3++)
        this.path[i3].shouldResetTransform = !0;
      this.root === this && (this.nodes = new FlatTree());
    }
    addEventListener(name, handler) {
      return this.eventHandlers.has(name) || this.eventHandlers.set(name, new SubscriptionManager()), this.eventHandlers.get(name).add(handler);
    }
    notifyListeners(name, ...args) {
      let subscriptionManager = this.eventHandlers.get(name);
      subscriptionManager && subscriptionManager.notify(...args);
    }
    hasListeners(name) {
      return this.eventHandlers.has(name);
    }
    /**
     * Lifecycles
     */
    mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {
      if (this.instance)
        return;
      this.isSVG = isSVGElement(instance), this.instance = instance;
      let { layoutId, layout: layout2, visualElement } = this.options;
      if (visualElement && !visualElement.current && visualElement.mount(instance), this.root.nodes.add(this), this.parent && this.parent.children.add(this), isLayoutDirty && (layout2 || layoutId) && (this.isLayoutDirty = !0), attachResizeListener) {
        let cancelDelay, resizeUnblockUpdate = () => this.root.updateBlockedByResize = !1;
        attachResizeListener(instance, () => {
          this.root.updateBlockedByResize = !0, cancelDelay && cancelDelay(), cancelDelay = delay(resizeUnblockUpdate, 250), globalProjectionState.hasAnimatedSinceResize && (globalProjectionState.hasAnimatedSinceResize = !1, this.nodes.forEach(finishAnimation));
        });
      }
      layoutId && this.root.registerSharedNode(layoutId, this), this.options.animate !== !1 && visualElement && (layoutId || layout2) && this.addEventListener("didUpdate", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout }) => {
        if (this.isTreeAnimationBlocked()) {
          this.target = void 0, this.relativeTarget = void 0;
          return;
        }
        let layoutTransition = this.options.transition || visualElement.getDefaultTransition() || defaultLayoutTransition, { onLayoutAnimationStart, onLayoutAnimationComplete } = visualElement.getProps(), targetChanged = !this.targetLayout || !boxEqualsRounded(this.targetLayout, newLayout) || hasRelativeTargetChanged, hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;
        if (this.options.layoutRoot || this.resumeFrom && this.resumeFrom.instance || hasOnlyRelativeTargetChanged || hasLayoutChanged && (targetChanged || !this.currentAnimation)) {
          this.resumeFrom && (this.resumingFrom = this.resumeFrom, this.resumingFrom.resumingFrom = void 0), this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);
          let animationOptions = {
            ...getValueTransition(layoutTransition, "layout"),
            onPlay: onLayoutAnimationStart,
            onComplete: onLayoutAnimationComplete
          };
          (visualElement.shouldReduceMotion || this.options.layoutRoot) && (animationOptions.delay = 0, animationOptions.type = !1), this.startAnimation(animationOptions);
        } else
          hasLayoutChanged || finishAnimation(this), this.isLead() && this.options.onExitComplete && this.options.onExitComplete();
        this.targetLayout = newLayout;
      });
    }
    unmount() {
      this.options.layoutId && this.willUpdate(), this.root.nodes.remove(this);
      let stack = this.getStack();
      stack && stack.remove(this), this.parent && this.parent.children.delete(this), this.instance = void 0, cancelFrame(this.updateProjection);
    }
    // only on the root
    blockUpdate() {
      this.updateManuallyBlocked = !0;
    }
    unblockUpdate() {
      this.updateManuallyBlocked = !1;
    }
    isUpdateBlocked() {
      return this.updateManuallyBlocked || this.updateBlockedByResize;
    }
    isTreeAnimationBlocked() {
      return this.isAnimationBlocked || this.parent && this.parent.isTreeAnimationBlocked() || !1;
    }
    // Note: currently only running on root node
    startUpdate() {
      this.isUpdateBlocked() || (this.isUpdating = !0, this.nodes && this.nodes.forEach(resetRotation), this.animationId++);
    }
    getTransformTemplate() {
      let { visualElement } = this.options;
      return visualElement && visualElement.getProps().transformTemplate;
    }
    willUpdate(shouldNotifyListeners = !0) {
      if (this.root.hasTreeAnimated = !0, this.root.isUpdateBlocked()) {
        this.options.onExitComplete && this.options.onExitComplete();
        return;
      }
      if (!this.root.isUpdating && this.root.startUpdate(), this.isLayoutDirty)
        return;
      this.isLayoutDirty = !0;
      for (let i3 = 0; i3 < this.path.length; i3++) {
        let node = this.path[i3];
        node.shouldResetTransform = !0, node.updateScroll("snapshot"), node.options.layoutRoot && node.willUpdate(!1);
      }
      let { layoutId, layout: layout2 } = this.options;
      if (layoutId === void 0 && !layout2)
        return;
      let transformTemplate = this.getTransformTemplate();
      this.prevTransformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0, this.updateSnapshot(), shouldNotifyListeners && this.notifyListeners("willUpdate");
    }
    update() {
      if (this.updateScheduled = !1, this.isUpdateBlocked()) {
        this.unblockUpdate(), this.clearAllSnapshots(), this.nodes.forEach(clearMeasurements);
        return;
      }
      this.isUpdating || this.nodes.forEach(clearIsLayoutDirty), this.isUpdating = !1, this.nodes.forEach(resetTransformStyle), this.nodes.forEach(updateLayout), this.nodes.forEach(notifyLayoutUpdate), this.clearAllSnapshots();
      let now = performance.now();
      frameData.delta = clamp(0, 1e3 / 60, now - frameData.timestamp), frameData.timestamp = now, frameData.isProcessing = !0, steps.update.process(frameData), steps.preRender.process(frameData), steps.render.process(frameData), frameData.isProcessing = !1;
    }
    didUpdate() {
      this.updateScheduled || (this.updateScheduled = !0, queueMicrotask(() => this.update()));
    }
    clearAllSnapshots() {
      this.nodes.forEach(clearSnapshot), this.sharedNodes.forEach(removeLeadSnapshots);
    }
    scheduleUpdateProjection() {
      this.projectionUpdateScheduled || (this.projectionUpdateScheduled = !0, frame.preRender(this.updateProjection, !1, !0));
    }
    scheduleCheckAfterUnmount() {
      frame.postRender(() => {
        this.isLayoutDirty ? this.root.didUpdate() : this.root.checkUpdateFailed();
      });
    }
    /**
     * Update measurements
     */
    updateSnapshot() {
      this.snapshot || !this.instance || (this.snapshot = this.measure());
    }
    updateLayout() {
      if (!this.instance || (this.updateScroll(), !(this.options.alwaysMeasureLayout && this.isLead()) && !this.isLayoutDirty))
        return;
      if (this.resumeFrom && !this.resumeFrom.instance)
        for (let i3 = 0; i3 < this.path.length; i3++)
          this.path[i3].updateScroll();
      let prevLayout = this.layout;
      this.layout = this.measure(!1), this.layoutCorrected = createBox(), this.isLayoutDirty = !1, this.projectionDelta = void 0, this.notifyListeners("measure", this.layout.layoutBox);
      let { visualElement } = this.options;
      visualElement && visualElement.notify("LayoutMeasure", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : void 0);
    }
    updateScroll(phase = "measure") {
      let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);
      this.scroll && this.scroll.animationId === this.root.animationId && this.scroll.phase === phase && (needsMeasurement = !1), needsMeasurement && (this.scroll = {
        animationId: this.root.animationId,
        phase,
        isRoot: checkIsScrollRoot(this.instance),
        offset: measureScroll(this.instance)
      });
    }
    resetTransform() {
      if (!resetTransform)
        return;
      let isResetRequested = this.isLayoutDirty || this.shouldResetTransform, hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta), transformTemplate = this.getTransformTemplate(), transformTemplateValue = transformTemplate ? transformTemplate(this.latestValues, "") : void 0, transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;
      isResetRequested && (hasProjection || hasTransform(this.latestValues) || transformTemplateHasChanged) && (resetTransform(this.instance, transformTemplateValue), this.shouldResetTransform = !1, this.scheduleRender());
    }
    measure(removeTransform = !0) {
      let pageBox = this.measurePageBox(), layoutBox = this.removeElementScroll(pageBox);
      return removeTransform && (layoutBox = this.removeTransform(layoutBox)), roundBox(layoutBox), {
        animationId: this.root.animationId,
        measuredBox: pageBox,
        layoutBox,
        latestValues: {},
        source: this.id
      };
    }
    measurePageBox() {
      let { visualElement } = this.options;
      if (!visualElement)
        return createBox();
      let box = visualElement.measureViewportBox(), { scroll } = this.root;
      return scroll && (translateAxis(box.x, scroll.offset.x), translateAxis(box.y, scroll.offset.y)), box;
    }
    removeElementScroll(box) {
      let boxWithoutScroll = createBox();
      copyBoxInto(boxWithoutScroll, box);
      for (let i3 = 0; i3 < this.path.length; i3++) {
        let node = this.path[i3], { scroll, options } = node;
        if (node !== this.root && scroll && options.layoutScroll) {
          if (scroll.isRoot) {
            copyBoxInto(boxWithoutScroll, box);
            let { scroll: rootScroll } = this.root;
            rootScroll && (translateAxis(boxWithoutScroll.x, -rootScroll.offset.x), translateAxis(boxWithoutScroll.y, -rootScroll.offset.y));
          }
          translateAxis(boxWithoutScroll.x, scroll.offset.x), translateAxis(boxWithoutScroll.y, scroll.offset.y);
        }
      }
      return boxWithoutScroll;
    }
    applyTransform(box, transformOnly = !1) {
      let withTransforms = createBox();
      copyBoxInto(withTransforms, box);
      for (let i3 = 0; i3 < this.path.length; i3++) {
        let node = this.path[i3];
        !transformOnly && node.options.layoutScroll && node.scroll && node !== node.root && transformBox(withTransforms, {
          x: -node.scroll.offset.x,
          y: -node.scroll.offset.y
        }), hasTransform(node.latestValues) && transformBox(withTransforms, node.latestValues);
      }
      return hasTransform(this.latestValues) && transformBox(withTransforms, this.latestValues), withTransforms;
    }
    removeTransform(box) {
      let boxWithoutTransform = createBox();
      copyBoxInto(boxWithoutTransform, box);
      for (let i3 = 0; i3 < this.path.length; i3++) {
        let node = this.path[i3];
        if (!node.instance || !hasTransform(node.latestValues))
          continue;
        hasScale(node.latestValues) && node.updateSnapshot();
        let sourceBox = createBox(), nodeBox = node.measurePageBox();
        copyBoxInto(sourceBox, nodeBox), removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : void 0, sourceBox);
      }
      return hasTransform(this.latestValues) && removeBoxTransforms(boxWithoutTransform, this.latestValues), boxWithoutTransform;
    }
    setTargetDelta(delta) {
      this.targetDelta = delta, this.root.scheduleUpdateProjection(), this.isProjectionDirty = !0;
    }
    setOptions(options) {
      this.options = {
        ...this.options,
        ...options,
        crossfade: options.crossfade !== void 0 ? options.crossfade : !0
      };
    }
    clearMeasurements() {
      this.scroll = void 0, this.layout = void 0, this.snapshot = void 0, this.prevTransformTemplateValue = void 0, this.targetDelta = void 0, this.target = void 0, this.isLayoutDirty = !1;
    }
    forceRelativeParentToResolveTarget() {
      this.relativeParent && this.relativeParent.resolvedRelativeTargetAt !== frameData.timestamp && this.relativeParent.resolveTargetDelta(!0);
    }
    resolveTargetDelta(forceRecalculation = !1) {
      var _a;
      let lead = this.getLead();
      this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty), this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty), this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);
      let isShared = Boolean(this.resumingFrom) || this !== lead;
      if (!(forceRecalculation || isShared && this.isSharedProjectionDirty || this.isProjectionDirty || !((_a = this.parent) === null || _a === void 0) && _a.isProjectionDirty || this.attemptToResolveRelativeTarget))
        return;
      let { layout: layout2, layoutId } = this.options;
      if (!(!this.layout || !(layout2 || layoutId))) {
        if (this.resolvedRelativeTargetAt = frameData.timestamp, !this.targetDelta && !this.relativeTarget) {
          let relativeParent = this.getClosestProjectingParent();
          relativeParent && relativeParent.layout && this.animationProgress !== 1 ? (this.relativeParent = relativeParent, this.forceRelativeParentToResolveTarget(), this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
        }
        if (!(!this.relativeTarget && !this.targetDelta)) {
          if (this.target || (this.target = createBox(), this.targetWithTransforms = createBox()), this.relativeTarget && this.relativeTargetOrigin && this.relativeParent && this.relativeParent.target ? (this.forceRelativeParentToResolveTarget(), calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target)) : this.targetDelta ? (Boolean(this.resumingFrom) ? this.target = this.applyTransform(this.layout.layoutBox) : copyBoxInto(this.target, this.layout.layoutBox), applyBoxDelta(this.target, this.targetDelta)) : copyBoxInto(this.target, this.layout.layoutBox), this.attemptToResolveRelativeTarget) {
            this.attemptToResolveRelativeTarget = !1;
            let relativeParent = this.getClosestProjectingParent();
            relativeParent && Boolean(relativeParent.resumingFrom) === Boolean(this.resumingFrom) && !relativeParent.options.layoutScroll && relativeParent.target && this.animationProgress !== 1 ? (this.relativeParent = relativeParent, this.forceRelativeParentToResolveTarget(), this.relativeTarget = createBox(), this.relativeTargetOrigin = createBox(), calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target), copyBoxInto(this.relativeTarget, this.relativeTargetOrigin)) : this.relativeParent = this.relativeTarget = void 0;
          }
          projectionFrameData.resolvedTargetDeltas++;
        }
      }
    }
    getClosestProjectingParent() {
      if (!(!this.parent || hasScale(this.parent.latestValues) || has2DTranslate(this.parent.latestValues)))
        return this.parent.isProjecting() ? this.parent : this.parent.getClosestProjectingParent();
    }
    isProjecting() {
      return Boolean((this.relativeTarget || this.targetDelta || this.options.layoutRoot) && this.layout);
    }
    calcProjection() {
      var _a;
      let lead = this.getLead(), isShared = Boolean(this.resumingFrom) || this !== lead, canSkip = !0;
      if ((this.isProjectionDirty || !((_a = this.parent) === null || _a === void 0) && _a.isProjectionDirty) && (canSkip = !1), isShared && (this.isSharedProjectionDirty || this.isTransformDirty) && (canSkip = !1), this.resolvedRelativeTargetAt === frameData.timestamp && (canSkip = !1), canSkip)
        return;
      let { layout: layout2, layoutId } = this.options;
      if (this.isTreeAnimating = Boolean(this.parent && this.parent.isTreeAnimating || this.currentAnimation || this.pendingAnimation), this.isTreeAnimating || (this.targetDelta = this.relativeTarget = void 0), !this.layout || !(layout2 || layoutId))
        return;
      copyBoxInto(this.layoutCorrected, this.layout.layoutBox);
      let prevTreeScaleX = this.treeScale.x, prevTreeScaleY = this.treeScale.y;
      applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared), lead.layout && !lead.target && (this.treeScale.x !== 1 || this.treeScale.y !== 1) && (lead.target = lead.layout.layoutBox);
      let { target } = lead;
      if (!target) {
        this.projectionTransform && (this.projectionDelta = createDelta(), this.projectionTransform = "none", this.scheduleRender());
        return;
      }
      this.projectionDelta || (this.projectionDelta = createDelta(), this.projectionDeltaWithTransform = createDelta());
      let prevProjectionTransform = this.projectionTransform;
      calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues), this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale), (this.projectionTransform !== prevProjectionTransform || this.treeScale.x !== prevTreeScaleX || this.treeScale.y !== prevTreeScaleY) && (this.hasProjected = !0, this.scheduleRender(), this.notifyListeners("projectionUpdate", target)), projectionFrameData.recalculatedProjection++;
    }
    hide() {
      this.isVisible = !1;
    }
    show() {
      this.isVisible = !0;
    }
    scheduleRender(notifyAll = !0) {
      if (this.options.scheduleRender && this.options.scheduleRender(), notifyAll) {
        let stack = this.getStack();
        stack && stack.scheduleRender();
      }
      this.resumingFrom && !this.resumingFrom.instance && (this.resumingFrom = void 0);
    }
    setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = !1) {
      let snapshot = this.snapshot, snapshotLatestValues = snapshot ? snapshot.latestValues : {}, mixedValues = { ...this.latestValues }, targetDelta = createDelta();
      (!this.relativeParent || !this.relativeParent.options.layoutRoot) && (this.relativeTarget = this.relativeTargetOrigin = void 0), this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;
      let relativeLayout = createBox(), snapshotSource = snapshot ? snapshot.source : void 0, layoutSource = this.layout ? this.layout.source : void 0, isSharedLayoutAnimation = snapshotSource !== layoutSource, stack = this.getStack(), isOnlyMember = !stack || stack.members.length <= 1, shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation && !isOnlyMember && this.options.crossfade === !0 && !this.path.some(hasOpacityCrossfade));
      this.animationProgress = 0;
      let prevRelativeTarget;
      this.mixTargetDelta = (latest) => {
        let progress2 = latest / 1e3;
        mixAxisDelta(targetDelta.x, delta.x, progress2), mixAxisDelta(targetDelta.y, delta.y, progress2), this.setTargetDelta(targetDelta), this.relativeTarget && this.relativeTargetOrigin && this.layout && this.relativeParent && this.relativeParent.layout && (calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox), mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress2), prevRelativeTarget && boxEquals(this.relativeTarget, prevRelativeTarget) && (this.isProjectionDirty = !1), prevRelativeTarget || (prevRelativeTarget = createBox()), copyBoxInto(prevRelativeTarget, this.relativeTarget)), isSharedLayoutAnimation && (this.animationValues = mixedValues, mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress2, shouldCrossfadeOpacity, isOnlyMember)), this.root.scheduleUpdateProjection(), this.scheduleRender(), this.animationProgress = progress2;
      }, this.mixTargetDelta(this.options.layoutRoot ? 1e3 : 0);
    }
    startAnimation(options) {
      this.notifyListeners("animationStart"), this.currentAnimation && this.currentAnimation.stop(), this.resumingFrom && this.resumingFrom.currentAnimation && this.resumingFrom.currentAnimation.stop(), this.pendingAnimation && (cancelFrame(this.pendingAnimation), this.pendingAnimation = void 0), this.pendingAnimation = frame.update(() => {
        globalProjectionState.hasAnimatedSinceResize = !0, this.currentAnimation = animateSingleValue(0, animationTarget, {
          ...options,
          onUpdate: (latest) => {
            this.mixTargetDelta(latest), options.onUpdate && options.onUpdate(latest);
          },
          onComplete: () => {
            options.onComplete && options.onComplete(), this.completeAnimation();
          }
        }), this.resumingFrom && (this.resumingFrom.currentAnimation = this.currentAnimation), this.pendingAnimation = void 0;
      });
    }
    completeAnimation() {
      this.resumingFrom && (this.resumingFrom.currentAnimation = void 0, this.resumingFrom.preserveOpacity = void 0);
      let stack = this.getStack();
      stack && stack.exitAnimationComplete(), this.resumingFrom = this.currentAnimation = this.animationValues = void 0, this.notifyListeners("animationComplete");
    }
    finishAnimation() {
      this.currentAnimation && (this.mixTargetDelta && this.mixTargetDelta(animationTarget), this.currentAnimation.stop()), this.completeAnimation();
    }
    applyTransformsToTarget() {
      let lead = this.getLead(), { targetWithTransforms, target, layout: layout2, latestValues } = lead;
      if (!(!targetWithTransforms || !target || !layout2)) {
        if (this !== lead && this.layout && layout2 && shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout2.layoutBox)) {
          target = this.target || createBox();
          let xLength = calcLength(this.layout.layoutBox.x);
          target.x.min = lead.target.x.min, target.x.max = target.x.min + xLength;
          let yLength = calcLength(this.layout.layoutBox.y);
          target.y.min = lead.target.y.min, target.y.max = target.y.min + yLength;
        }
        copyBoxInto(targetWithTransforms, target), transformBox(targetWithTransforms, latestValues), calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);
      }
    }
    registerSharedNode(layoutId, node) {
      this.sharedNodes.has(layoutId) || this.sharedNodes.set(layoutId, new NodeStack()), this.sharedNodes.get(layoutId).add(node);
      let config = node.options.initialPromotionConfig;
      node.promote({
        transition: config ? config.transition : void 0,
        preserveFollowOpacity: config && config.shouldPreserveFollowOpacity ? config.shouldPreserveFollowOpacity(node) : void 0
      });
    }
    isLead() {
      let stack = this.getStack();
      return stack ? stack.lead === this : !0;
    }
    getLead() {
      var _a;
      let { layoutId } = this.options;
      return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;
    }
    getPrevLead() {
      var _a;
      let { layoutId } = this.options;
      return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : void 0;
    }
    getStack() {
      let { layoutId } = this.options;
      if (layoutId)
        return this.root.sharedNodes.get(layoutId);
    }
    promote({ needsReset, transition, preserveFollowOpacity } = {}) {
      let stack = this.getStack();
      stack && stack.promote(this, preserveFollowOpacity), needsReset && (this.projectionDelta = void 0, this.needsReset = !0), transition && this.setOptions({ transition });
    }
    relegate() {
      let stack = this.getStack();
      return stack ? stack.relegate(this) : !1;
    }
    resetRotation() {
      let { visualElement } = this.options;
      if (!visualElement)
        return;
      let hasRotate = !1, { latestValues } = visualElement;
      if ((latestValues.rotate || latestValues.rotateX || latestValues.rotateY || latestValues.rotateZ) && (hasRotate = !0), !hasRotate)
        return;
      let resetValues = {};
      for (let i3 = 0; i3 < transformAxes.length; i3++) {
        let key = "rotate" + transformAxes[i3];
        latestValues[key] && (resetValues[key] = latestValues[key], visualElement.setStaticValue(key, 0));
      }
      visualElement.render();
      for (let key in resetValues)
        visualElement.setStaticValue(key, resetValues[key]);
      visualElement.scheduleRender();
    }
    getProjectionStyles(styleProp) {
      var _a, _b;
      if (!this.instance || this.isSVG)
        return;
      if (!this.isVisible)
        return hiddenVisibility;
      let styles = {
        visibility: ""
      }, transformTemplate = this.getTransformTemplate();
      if (this.needsReset)
        return this.needsReset = !1, styles.opacity = "", styles.pointerEvents = resolveMotionValue(styleProp?.pointerEvents) || "", styles.transform = transformTemplate ? transformTemplate(this.latestValues, "") : "none", styles;
      let lead = this.getLead();
      if (!this.projectionDelta || !this.layout || !lead.target) {
        let emptyStyles = {};
        return this.options.layoutId && (emptyStyles.opacity = this.latestValues.opacity !== void 0 ? this.latestValues.opacity : 1, emptyStyles.pointerEvents = resolveMotionValue(styleProp?.pointerEvents) || ""), this.hasProjected && !hasTransform(this.latestValues) && (emptyStyles.transform = transformTemplate ? transformTemplate({}, "") : "none", this.hasProjected = !1), emptyStyles;
      }
      let valuesToRender = lead.animationValues || lead.latestValues;
      this.applyTransformsToTarget(), styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender), transformTemplate && (styles.transform = transformTemplate(valuesToRender, styles.transform));
      let { x: x3, y: y4 } = this.projectionDelta;
      styles.transformOrigin = `${x3.origin * 100}% ${y4.origin * 100}% 0`, lead.animationValues ? styles.opacity = lead === this ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1 : this.preserveOpacity ? this.latestValues.opacity : valuesToRender.opacityExit : styles.opacity = lead === this ? valuesToRender.opacity !== void 0 ? valuesToRender.opacity : "" : valuesToRender.opacityExit !== void 0 ? valuesToRender.opacityExit : 0;
      for (let key in scaleCorrectors) {
        if (valuesToRender[key] === void 0)
          continue;
        let { correct, applyTo } = scaleCorrectors[key], corrected = styles.transform === "none" ? valuesToRender[key] : correct(valuesToRender[key], lead);
        if (applyTo) {
          let num = applyTo.length;
          for (let i3 = 0; i3 < num; i3++)
            styles[applyTo[i3]] = corrected;
        } else
          styles[key] = corrected;
      }
      return this.options.layoutId && (styles.pointerEvents = lead === this ? resolveMotionValue(styleProp?.pointerEvents) || "" : "none"), styles;
    }
    clearSnapshot() {
      this.resumeFrom = this.snapshot = void 0;
    }
    // Only run on root
    resetTree() {
      this.root.nodes.forEach((node) => {
        var _a;
        return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop();
      }), this.root.nodes.forEach(clearMeasurements), this.root.sharedNodes.clear();
    }
  };
}
function updateLayout(node) {
  node.updateLayout();
}
function notifyLayoutUpdate(node) {
  var _a;
  let snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;
  if (node.isLead() && node.layout && snapshot && node.hasListeners("didUpdate")) {
    let { layoutBox: layout2, measuredBox: measuredLayout } = node.layout, { animationType } = node.options, isShared = snapshot.source !== node.layout.source;
    animationType === "size" ? eachAxis((axis) => {
      let axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis], length = calcLength(axisSnapshot);
      axisSnapshot.min = layout2[axis].min, axisSnapshot.max = axisSnapshot.min + length;
    }) : shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout2) && eachAxis((axis) => {
      let axisSnapshot = isShared ? snapshot.measuredBox[axis] : snapshot.layoutBox[axis], length = calcLength(layout2[axis]);
      axisSnapshot.max = axisSnapshot.min + length, node.relativeTarget && !node.currentAnimation && (node.isProjectionDirty = !0, node.relativeTarget[axis].max = node.relativeTarget[axis].min + length);
    });
    let layoutDelta = createDelta();
    calcBoxDelta(layoutDelta, layout2, snapshot.layoutBox);
    let visualDelta = createDelta();
    isShared ? calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, !0), snapshot.measuredBox) : calcBoxDelta(visualDelta, layout2, snapshot.layoutBox);
    let hasLayoutChanged = !isDeltaZero(layoutDelta), hasRelativeTargetChanged = !1;
    if (!node.resumeFrom) {
      let relativeParent = node.getClosestProjectingParent();
      if (relativeParent && !relativeParent.resumeFrom) {
        let { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;
        if (parentSnapshot && parentLayout) {
          let relativeSnapshot = createBox();
          calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);
          let relativeLayout = createBox();
          calcRelativePosition(relativeLayout, layout2, parentLayout.layoutBox), boxEqualsRounded(relativeSnapshot, relativeLayout) || (hasRelativeTargetChanged = !0), relativeParent.options.layoutRoot && (node.relativeTarget = relativeLayout, node.relativeTargetOrigin = relativeSnapshot, node.relativeParent = relativeParent);
        }
      }
    }
    node.notifyListeners("didUpdate", {
      layout: layout2,
      snapshot,
      delta: visualDelta,
      layoutDelta,
      hasLayoutChanged,
      hasRelativeTargetChanged
    });
  } else if (node.isLead()) {
    let { onExitComplete } = node.options;
    onExitComplete && onExitComplete();
  }
  node.options.transition = void 0;
}
function propagateDirtyNodes(node) {
  projectionFrameData.totalNodes++, node.parent && (node.isProjecting() || (node.isProjectionDirty = node.parent.isProjectionDirty), node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty || node.parent.isProjectionDirty || node.parent.isSharedProjectionDirty)), node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty));
}
function cleanDirtyNodes(node) {
  node.isProjectionDirty = node.isSharedProjectionDirty = node.isTransformDirty = !1;
}
function clearSnapshot(node) {
  node.clearSnapshot();
}
function clearMeasurements(node) {
  node.clearMeasurements();
}
function clearIsLayoutDirty(node) {
  node.isLayoutDirty = !1;
}
function resetTransformStyle(node) {
  let { visualElement } = node.options;
  visualElement && visualElement.getProps().onBeforeLayoutMeasure && visualElement.notify("BeforeLayoutMeasure"), node.resetTransform();
}
function finishAnimation(node) {
  node.finishAnimation(), node.targetDelta = node.relativeTarget = node.target = void 0, node.isProjectionDirty = !0;
}
function resolveTargetDelta(node) {
  node.resolveTargetDelta();
}
function calcProjection(node) {
  node.calcProjection();
}
function resetRotation(node) {
  node.resetRotation();
}
function removeLeadSnapshots(stack) {
  stack.removeLeadSnapshot();
}
function mixAxisDelta(output, delta, p2) {
  output.translate = mix(delta.translate, 0, p2), output.scale = mix(delta.scale, 1, p2), output.origin = delta.origin, output.originPoint = delta.originPoint;
}
function mixAxis(output, from, to, p2) {
  output.min = mix(from.min, to.min, p2), output.max = mix(from.max, to.max, p2);
}
function mixBox(output, from, to, p2) {
  mixAxis(output.x, from.x, to.x, p2), mixAxis(output.y, from.y, to.y, p2);
}
function hasOpacityCrossfade(node) {
  return node.animationValues && node.animationValues.opacityExit !== void 0;
}
var defaultLayoutTransition = {
  duration: 0.45,
  ease: [0.4, 0, 0.1, 1]
}, userAgentContains = (string) => typeof navigator < "u" && navigator.userAgent.toLowerCase().includes(string), roundPoint = userAgentContains("applewebkit/") && !userAgentContains("chrome/") ? Math.round : noop4;
function roundAxis(axis) {
  axis.min = roundPoint(axis.min), axis.max = roundPoint(axis.max);
}
function roundBox(box) {
  roundAxis(box.x), roundAxis(box.y);
}
function shouldAnimatePositionOnly(animationType, snapshot, layout2) {
  return animationType === "position" || animationType === "preserve-aspect" && !isNear(aspectRatio(snapshot), aspectRatio(layout2), 0.2);
}

// ../../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs
var DocumentProjectionNode = createProjectionNode({
  attachResizeListener: (ref, notify) => addDomEvent(ref, "resize", notify),
  measureScroll: () => ({
    x: document.documentElement.scrollLeft || document.body.scrollLeft,
    y: document.documentElement.scrollTop || document.body.scrollTop
  }),
  checkIsScrollRoot: () => !0
});

// ../../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs
var rootProjectionNode = {
  current: void 0
}, HTMLProjectionNode = createProjectionNode({
  measureScroll: (instance) => ({
    x: instance.scrollLeft,
    y: instance.scrollTop
  }),
  defaultParent: () => {
    if (!rootProjectionNode.current) {
      let documentNode = new DocumentProjectionNode({});
      documentNode.mount(window), documentNode.setOptions({ layoutScroll: !0 }), rootProjectionNode.current = documentNode;
    }
    return rootProjectionNode.current;
  },
  resetTransform: (instance, value) => {
    instance.style.transform = value !== void 0 ? value : "none";
  },
  checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === "fixed")
});

// ../../node_modules/framer-motion/dist/es/motion/features/drag.mjs
var drag = {
  pan: {
    Feature: PanGesture
  },
  drag: {
    Feature: DragGesture,
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// ../../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs
var splitCSSVariableRegex = /var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/;
function parseCSSVariable(current) {
  let match2 = splitCSSVariableRegex.exec(current);
  if (!match2)
    return [,];
  let [, token, fallback] = match2;
  return [token, fallback];
}
var maxDepth = 4;
function getVariableValue(current, element, depth = 1) {
  invariant5(depth <= maxDepth, `Max CSS variable fallback depth detected in property "${current}". This may indicate a circular fallback dependency.`);
  let [token, fallback] = parseCSSVariable(current);
  if (!token)
    return;
  let resolved = window.getComputedStyle(element).getPropertyValue(token);
  if (resolved) {
    let trimmed = resolved.trim();
    return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;
  } else
    return isCSSVariableToken(fallback) ? getVariableValue(fallback, element, depth + 1) : fallback;
}
function resolveCSSVariables(visualElement, { ...target }, transitionEnd) {
  let element = visualElement.current;
  if (!(element instanceof Element))
    return { target, transitionEnd };
  transitionEnd && (transitionEnd = { ...transitionEnd }), visualElement.values.forEach((value) => {
    let current = value.get();
    if (!isCSSVariableToken(current))
      return;
    let resolved = getVariableValue(current, element);
    resolved && value.set(resolved);
  });
  for (let key in target) {
    let current = target[key];
    if (!isCSSVariableToken(current))
      continue;
    let resolved = getVariableValue(current, element);
    resolved && (target[key] = resolved, transitionEnd || (transitionEnd = {}), transitionEnd[key] === void 0 && (transitionEnd[key] = current));
  }
  return { target, transitionEnd };
}

// ../../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs
var positionalKeys = /* @__PURE__ */ new Set([
  "width",
  "height",
  "top",
  "left",
  "right",
  "bottom",
  "x",
  "y",
  "translateX",
  "translateY"
]), isPositionalKey = (key) => positionalKeys.has(key), hasPositionalKey = (target) => Object.keys(target).some(isPositionalKey), isNumOrPxType = (v2) => v2 === number || v2 === px, getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(", ")[pos]), getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {
  if (transform === "none" || !transform)
    return 0;
  let matrix3d = transform.match(/^matrix3d\((.+)\)$/);
  if (matrix3d)
    return getPosFromMatrix(matrix3d[1], pos3);
  {
    let matrix = transform.match(/^matrix\((.+)\)$/);
    return matrix ? getPosFromMatrix(matrix[1], pos2) : 0;
  }
}, transformKeys = /* @__PURE__ */ new Set(["x", "y", "z"]), nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));
function removeNonTranslationalTransform(visualElement) {
  let removedTransforms = [];
  return nonTranslationalTransformKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    value !== void 0 && (removedTransforms.push([key, value.get()]), value.set(key.startsWith("scale") ? 1 : 0));
  }), removedTransforms.length && visualElement.render(), removedTransforms;
}
var positionalValues = {
  // Dimensions
  width: ({ x: x3 }, { paddingLeft = "0", paddingRight = "0" }) => x3.max - x3.min - parseFloat(paddingLeft) - parseFloat(paddingRight),
  height: ({ y: y4 }, { paddingTop = "0", paddingBottom = "0" }) => y4.max - y4.min - parseFloat(paddingTop) - parseFloat(paddingBottom),
  top: (_bbox, { top }) => parseFloat(top),
  left: (_bbox, { left }) => parseFloat(left),
  bottom: ({ y: y4 }, { top }) => parseFloat(top) + (y4.max - y4.min),
  right: ({ x: x3 }, { left }) => parseFloat(left) + (x3.max - x3.min),
  // Transform
  x: getTranslateFromMatrix(4, 13),
  y: getTranslateFromMatrix(5, 14)
};
positionalValues.translateX = positionalValues.x;
positionalValues.translateY = positionalValues.y;
var convertChangedValueTypes = (target, visualElement, changedKeys) => {
  let originBbox = visualElement.measureViewportBox(), element = visualElement.current, elementComputedStyle = getComputedStyle(element), { display } = elementComputedStyle, origin = {};
  display === "none" && visualElement.setStaticValue("display", target.display || "block"), changedKeys.forEach((key) => {
    origin[key] = positionalValues[key](originBbox, elementComputedStyle);
  }), visualElement.render();
  let targetBbox = visualElement.measureViewportBox();
  return changedKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    value && value.jump(origin[key]), target[key] = positionalValues[key](targetBbox, elementComputedStyle);
  }), target;
}, checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {
  target = { ...target }, transitionEnd = { ...transitionEnd };
  let targetPositionalKeys = Object.keys(target).filter(isPositionalKey), removedTransformValues = [], hasAttemptedToRemoveTransformValues = !1, changedValueTypeKeys = [];
  if (targetPositionalKeys.forEach((key) => {
    let value = visualElement.getValue(key);
    if (!visualElement.hasValue(key))
      return;
    let from = origin[key], fromType = findDimensionValueType(from), to = target[key], toType;
    if (isKeyframesTarget(to)) {
      let numKeyframes = to.length, fromIndex = to[0] === null ? 1 : 0;
      from = to[fromIndex], fromType = findDimensionValueType(from);
      for (let i3 = fromIndex; i3 < numKeyframes && to[i3] !== null; i3++)
        toType ? invariant5(findDimensionValueType(to[i3]) === toType, "All keyframes must be of the same type") : (toType = findDimensionValueType(to[i3]), invariant5(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), "Keyframes must be of the same dimension as the current value"));
    } else
      toType = findDimensionValueType(to);
    if (fromType !== toType)
      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {
        let current = value.get();
        typeof current == "string" && value.set(parseFloat(current)), typeof to == "string" ? target[key] = parseFloat(to) : Array.isArray(to) && toType === px && (target[key] = to.map(parseFloat));
      } else
        fromType?.transform && toType?.transform && (from === 0 || to === 0) ? from === 0 ? value.set(toType.transform(from)) : target[key] = fromType.transform(to) : (hasAttemptedToRemoveTransformValues || (removedTransformValues = removeNonTranslationalTransform(visualElement), hasAttemptedToRemoveTransformValues = !0), changedValueTypeKeys.push(key), transitionEnd[key] = transitionEnd[key] !== void 0 ? transitionEnd[key] : target[key], value.jump(to));
  }), changedValueTypeKeys.length) {
    let scrollY = changedValueTypeKeys.indexOf("height") >= 0 ? window.pageYOffset : null, convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);
    return removedTransformValues.length && removedTransformValues.forEach(([key, value]) => {
      visualElement.getValue(key).set(value);
    }), visualElement.render(), isBrowser2 && scrollY !== null && window.scrollTo({ top: scrollY }), { target: convertedTarget, transitionEnd };
  } else
    return { target, transitionEnd };
};
function unitConversion(visualElement, target, origin, transitionEnd) {
  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd) : { target, transitionEnd };
}

// ../../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs
var parseDomVariant = (visualElement, target, origin, transitionEnd) => {
  let resolved = resolveCSSVariables(visualElement, target, transitionEnd);
  return target = resolved.target, transitionEnd = resolved.transitionEnd, unitConversion(visualElement, target, origin, transitionEnd);
};

// ../../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs
var prefersReducedMotion = { current: null }, hasReducedMotionListener = { current: !1 };

// ../../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs
function initPrefersReducedMotion() {
  if (hasReducedMotionListener.current = !0, !!isBrowser2)
    if (window.matchMedia) {
      let motionMediaQuery = window.matchMedia("(prefers-reduced-motion)"), setReducedMotionPreferences = () => prefersReducedMotion.current = motionMediaQuery.matches;
      motionMediaQuery.addListener(setReducedMotionPreferences), setReducedMotionPreferences();
    } else
      prefersReducedMotion.current = !1;
}

// ../../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs
function updateMotionValuesFromProps(element, next, prev) {
  let { willChange } = next;
  for (let key in next) {
    let nextValue = next[key], prevValue = prev[key];
    if (isMotionValue(nextValue))
      element.addValue(key, nextValue), isWillChangeMotionValue(willChange) && willChange.add(key);
    else if (isMotionValue(prevValue))
      element.addValue(key, motionValue(nextValue, { owner: element })), isWillChangeMotionValue(willChange) && willChange.remove(key);
    else if (prevValue !== nextValue)
      if (element.hasValue(key)) {
        let existingValue = element.getValue(key);
        !existingValue.hasAnimated && existingValue.set(nextValue);
      } else {
        let latestValue = element.getStaticValue(key);
        element.addValue(key, motionValue(latestValue !== void 0 ? latestValue : nextValue, { owner: element }));
      }
  }
  for (let key in prev)
    next[key] === void 0 && element.removeValue(key);
  return next;
}

// ../../node_modules/framer-motion/dist/es/render/store.mjs
var visualElementStore = /* @__PURE__ */ new WeakMap();

// ../../node_modules/framer-motion/dist/es/render/VisualElement.mjs
var featureNames = Object.keys(featureDefinitions), numFeatures = featureNames.length, propEventHandlers = [
  "AnimationStart",
  "AnimationComplete",
  "Update",
  "BeforeLayoutMeasure",
  "LayoutMeasure",
  "LayoutAnimationStart",
  "LayoutAnimationComplete"
], numVariantProps = variantProps.length, VisualElement = class {
  constructor({ parent, props, presenceContext, reducedMotionConfig, visualState }, options = {}) {
    this.current = null, this.children = /* @__PURE__ */ new Set(), this.isVariantNode = !1, this.isControllingVariants = !1, this.shouldReduceMotion = null, this.values = /* @__PURE__ */ new Map(), this.features = {}, this.valueSubscriptions = /* @__PURE__ */ new Map(), this.prevMotionValues = {}, this.events = {}, this.propEventSubscriptions = {}, this.notifyUpdate = () => this.notify("Update", this.latestValues), this.render = () => {
      this.current && (this.triggerBuild(), this.renderInstance(this.current, this.renderState, this.props.style, this.projection));
    }, this.scheduleRender = () => frame.render(this.render, !1, !0);
    let { latestValues, renderState } = visualState;
    this.latestValues = latestValues, this.baseTarget = { ...latestValues }, this.initialValues = props.initial ? { ...latestValues } : {}, this.renderState = renderState, this.parent = parent, this.props = props, this.presenceContext = presenceContext, this.depth = parent ? parent.depth + 1 : 0, this.reducedMotionConfig = reducedMotionConfig, this.options = options, this.isControllingVariants = isControllingVariants(props), this.isVariantNode = isVariantNode(props), this.isVariantNode && (this.variantChildren = /* @__PURE__ */ new Set()), this.manuallyAnimateOnMount = Boolean(parent && parent.current);
    let { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});
    for (let key in initialMotionValues) {
      let value = initialMotionValues[key];
      latestValues[key] !== void 0 && isMotionValue(value) && (value.set(latestValues[key], !1), isWillChangeMotionValue(willChange) && willChange.add(key));
    }
  }
  /**
   * This method takes React props and returns found MotionValues. For example, HTML
   * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.
   *
   * This isn't an abstract method as it needs calling in the constructor, but it is
   * intended to be one.
   */
  scrapeMotionValuesFromProps(_props, _prevProps) {
    return {};
  }
  mount(instance) {
    this.current = instance, visualElementStore.set(instance, this), this.projection && !this.projection.instance && this.projection.mount(instance), this.parent && this.isVariantNode && !this.isControllingVariants && (this.removeFromVariantTree = this.parent.addVariantChild(this)), this.values.forEach((value, key) => this.bindToMotionValue(key, value)), hasReducedMotionListener.current || initPrefersReducedMotion(), this.shouldReduceMotion = this.reducedMotionConfig === "never" ? !1 : this.reducedMotionConfig === "always" ? !0 : prefersReducedMotion.current, this.parent && this.parent.children.add(this), this.update(this.props, this.presenceContext);
  }
  unmount() {
    visualElementStore.delete(this.current), this.projection && this.projection.unmount(), cancelFrame(this.notifyUpdate), cancelFrame(this.render), this.valueSubscriptions.forEach((remove) => remove()), this.removeFromVariantTree && this.removeFromVariantTree(), this.parent && this.parent.children.delete(this);
    for (let key in this.events)
      this.events[key].clear();
    for (let key in this.features)
      this.features[key].unmount();
    this.current = null;
  }
  bindToMotionValue(key, value) {
    let valueIsTransform = transformProps.has(key), removeOnChange = value.on("change", (latestValue) => {
      this.latestValues[key] = latestValue, this.props.onUpdate && frame.update(this.notifyUpdate, !1, !0), valueIsTransform && this.projection && (this.projection.isTransformDirty = !0);
    }), removeOnRenderRequest = value.on("renderRequest", this.scheduleRender);
    this.valueSubscriptions.set(key, () => {
      removeOnChange(), removeOnRenderRequest();
    });
  }
  sortNodePosition(other) {
    return !this.current || !this.sortInstanceNodePosition || this.type !== other.type ? 0 : this.sortInstanceNodePosition(this.current, other.current);
  }
  loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures2, initialLayoutGroupConfig) {
    let ProjectionNodeConstructor, MeasureLayout2;
    for (let i3 = 0; i3 < numFeatures; i3++) {
      let name = featureNames[i3], { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent } = featureDefinitions[name];
      ProjectionNode && (ProjectionNodeConstructor = ProjectionNode), isEnabled(renderedProps) && (!this.features[name] && FeatureConstructor && (this.features[name] = new FeatureConstructor(this)), MeasureLayoutComponent && (MeasureLayout2 = MeasureLayoutComponent));
    }
    if (!this.projection && ProjectionNodeConstructor) {
      this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);
      let { layoutId, layout: layout2, drag: drag2, dragConstraints, layoutScroll, layoutRoot } = renderedProps;
      this.projection.setOptions({
        layoutId,
        layout: layout2,
        alwaysMeasureLayout: Boolean(drag2) || dragConstraints && isRefObject(dragConstraints),
        visualElement: this,
        scheduleRender: () => this.scheduleRender(),
        /**
         * TODO: Update options in an effect. This could be tricky as it'll be too late
         * to update by the time layout animations run.
         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,
         * ensuring it gets called if there's no potential layout animations.
         *
         */
        animationType: typeof layout2 == "string" ? layout2 : "both",
        initialPromotionConfig: initialLayoutGroupConfig,
        layoutScroll,
        layoutRoot
      });
    }
    return MeasureLayout2;
  }
  updateFeatures() {
    for (let key in this.features) {
      let feature = this.features[key];
      feature.isMounted ? feature.update() : (feature.mount(), feature.isMounted = !0);
    }
  }
  triggerBuild() {
    this.build(this.renderState, this.latestValues, this.options, this.props);
  }
  /**
   * Measure the current viewport box with or without transforms.
   * Only measures axis-aligned boxes, rotate and skew must be manually
   * removed with a re-render to work.
   */
  measureViewportBox() {
    return this.current ? this.measureInstanceViewportBox(this.current, this.props) : createBox();
  }
  getStaticValue(key) {
    return this.latestValues[key];
  }
  setStaticValue(key, value) {
    this.latestValues[key] = value;
  }
  /**
   * Make a target animatable by Popmotion. For instance, if we're
   * trying to animate width from 100px to 100vw we need to measure 100vw
   * in pixels to determine what we really need to animate to. This is also
   * pluggable to support Framer's custom value types like Color,
   * and CSS variables.
   */
  makeTargetAnimatable(target, canMutate = !0) {
    return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);
  }
  /**
   * Update the provided props. Ensure any newly-added motion values are
   * added to our map, old ones removed, and listeners updated.
   */
  update(props, presenceContext) {
    (props.transformTemplate || this.props.transformTemplate) && this.scheduleRender(), this.prevProps = this.props, this.props = props, this.prevPresenceContext = this.presenceContext, this.presenceContext = presenceContext;
    for (let i3 = 0; i3 < propEventHandlers.length; i3++) {
      let key = propEventHandlers[i3];
      this.propEventSubscriptions[key] && (this.propEventSubscriptions[key](), delete this.propEventSubscriptions[key]);
      let listener = props["on" + key];
      listener && (this.propEventSubscriptions[key] = this.on(key, listener));
    }
    this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues), this.handleChildMotionValue && this.handleChildMotionValue();
  }
  getProps() {
    return this.props;
  }
  /**
   * Returns the variant definition with a given name.
   */
  getVariant(name) {
    return this.props.variants ? this.props.variants[name] : void 0;
  }
  /**
   * Returns the defined default transition on this component.
   */
  getDefaultTransition() {
    return this.props.transition;
  }
  getTransformPagePoint() {
    return this.props.transformPagePoint;
  }
  getClosestVariantNode() {
    return this.isVariantNode ? this : this.parent ? this.parent.getClosestVariantNode() : void 0;
  }
  getVariantContext(startAtParent = !1) {
    if (startAtParent)
      return this.parent ? this.parent.getVariantContext() : void 0;
    if (!this.isControllingVariants) {
      let context2 = this.parent ? this.parent.getVariantContext() || {} : {};
      return this.props.initial !== void 0 && (context2.initial = this.props.initial), context2;
    }
    let context = {};
    for (let i3 = 0; i3 < numVariantProps; i3++) {
      let name = variantProps[i3], prop = this.props[name];
      (isVariantLabel(prop) || prop === !1) && (context[name] = prop);
    }
    return context;
  }
  /**
   * Add a child visual element to our set of children.
   */
  addVariantChild(child) {
    let closestVariantNode = this.getClosestVariantNode();
    if (closestVariantNode)
      return closestVariantNode.variantChildren && closestVariantNode.variantChildren.add(child), () => closestVariantNode.variantChildren.delete(child);
  }
  /**
   * Add a motion value and bind it to this visual element.
   */
  addValue(key, value) {
    value !== this.values.get(key) && (this.removeValue(key), this.bindToMotionValue(key, value)), this.values.set(key, value), this.latestValues[key] = value.get();
  }
  /**
   * Remove a motion value and unbind any active subscriptions.
   */
  removeValue(key) {
    this.values.delete(key);
    let unsubscribe = this.valueSubscriptions.get(key);
    unsubscribe && (unsubscribe(), this.valueSubscriptions.delete(key)), delete this.latestValues[key], this.removeValueFromRenderState(key, this.renderState);
  }
  /**
   * Check whether we have a motion value for this key
   */
  hasValue(key) {
    return this.values.has(key);
  }
  getValue(key, defaultValue) {
    if (this.props.values && this.props.values[key])
      return this.props.values[key];
    let value = this.values.get(key);
    return value === void 0 && defaultValue !== void 0 && (value = motionValue(defaultValue, { owner: this }), this.addValue(key, value)), value;
  }
  /**
   * If we're trying to animate to a previously unencountered value,
   * we need to check for it in our state and as a last resort read it
   * directly from the instance (which might have performance implications).
   */
  readValue(key) {
    var _a;
    return this.latestValues[key] !== void 0 || !this.current ? this.latestValues[key] : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);
  }
  /**
   * Set the base target to later animate back to. This is currently
   * only hydrated on creation and when we first read a value.
   */
  setBaseTarget(key, value) {
    this.baseTarget[key] = value;
  }
  /**
   * Find the base target for a value thats been removed from all animation
   * props.
   */
  getBaseTarget(key) {
    var _a;
    let { initial } = this.props, valueFromInitial = typeof initial == "string" || typeof initial == "object" ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key] : void 0;
    if (initial && valueFromInitial !== void 0)
      return valueFromInitial;
    let target = this.getBaseTargetFromProps(this.props, key);
    return target !== void 0 && !isMotionValue(target) ? target : this.initialValues[key] !== void 0 && valueFromInitial === void 0 ? void 0 : this.baseTarget[key];
  }
  on(eventName, callback) {
    return this.events[eventName] || (this.events[eventName] = new SubscriptionManager()), this.events[eventName].add(callback);
  }
  notify(eventName, ...args) {
    this.events[eventName] && this.events[eventName].notify(...args);
  }
};

// ../../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs
var DOMVisualElement = class extends VisualElement {
  sortInstanceNodePosition(a4, b3) {
    return a4.compareDocumentPosition(b3) & 2 ? 1 : -1;
  }
  getBaseTargetFromProps(props, key) {
    return props.style ? props.style[key] : void 0;
  }
  removeValueFromRenderState(key, { vars, style }) {
    delete vars[key], delete style[key];
  }
  makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {
    let origin = getOrigin(target, transition || {}, this);
    if (transformValues && (transitionEnd && (transitionEnd = transformValues(transitionEnd)), target && (target = transformValues(target)), origin && (origin = transformValues(origin))), isMounted) {
      checkTargetForNewValues(this, target, origin);
      let parsed = parseDomVariant(this, target, origin, transitionEnd);
      transitionEnd = parsed.transitionEnd, target = parsed.target;
    }
    return {
      transition,
      transitionEnd,
      ...target
    };
  }
};

// ../../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs
function getComputedStyle2(element) {
  return window.getComputedStyle(element);
}
var HTMLVisualElement = class extends DOMVisualElement {
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      let defaultType = getDefaultValueType(key);
      return defaultType && defaultType.default || 0;
    } else {
      let computedStyle = getComputedStyle2(instance), value = (isCSSVariableName(key) ? computedStyle.getPropertyValue(key) : computedStyle[key]) || 0;
      return typeof value == "string" ? value.trim() : value;
    }
  }
  measureInstanceViewportBox(instance, { transformPagePoint }) {
    return measureViewportBox(instance, transformPagePoint);
  }
  build(renderState, latestValues, options, props) {
    buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);
  }
  scrapeMotionValuesFromProps(props, prevProps) {
    return scrapeMotionValuesFromProps(props, prevProps);
  }
  handleChildMotionValue() {
    this.childSubscription && (this.childSubscription(), delete this.childSubscription);
    let { children } = this.props;
    isMotionValue(children) && (this.childSubscription = children.on("change", (latest) => {
      this.current && (this.current.textContent = `${latest}`);
    }));
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderHTML(instance, renderState, styleProp, projection);
  }
};

// ../../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs
var SVGVisualElement = class extends DOMVisualElement {
  constructor() {
    super(...arguments), this.isSVGTag = !1;
  }
  getBaseTargetFromProps(props, key) {
    return props[key];
  }
  readValueFromInstance(instance, key) {
    if (transformProps.has(key)) {
      let defaultType = getDefaultValueType(key);
      return defaultType && defaultType.default || 0;
    }
    return key = camelCaseAttributes.has(key) ? key : camelToDash(key), instance.getAttribute(key);
  }
  measureInstanceViewportBox() {
    return createBox();
  }
  scrapeMotionValuesFromProps(props, prevProps) {
    return scrapeMotionValuesFromProps2(props, prevProps);
  }
  build(renderState, latestValues, options, props) {
    buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);
  }
  renderInstance(instance, renderState, styleProp, projection) {
    renderSVG(instance, renderState, styleProp, projection);
  }
  mount(instance) {
    this.isSVGTag = isSVGTag(instance.tagName), super.mount(instance);
  }
};

// ../../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs
var createDomVisualElement = (Component5, options) => isSVGComponent(Component5) ? new SVGVisualElement(options, { enableHardwareAcceleration: !1 }) : new HTMLVisualElement(options, { enableHardwareAcceleration: !0 });

// ../../node_modules/framer-motion/dist/es/motion/features/layout.mjs
var layout = {
  layout: {
    ProjectionNode: HTMLProjectionNode,
    MeasureLayout
  }
};

// ../../node_modules/framer-motion/dist/es/render/dom/motion.mjs
var preloadedFeatures = {
  ...animations,
  ...gestureAnimations,
  ...drag,
  ...layout
}, motion = /* @__PURE__ */ createMotionProxy((Component5, config) => createDomMotionConfig(Component5, config, preloadedFeatures, createDomVisualElement));

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var React35 = __toESM(require_react(), 1), import_react53 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs
var import_react49 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/utils/use-is-mounted.mjs
var import_react48 = __toESM(require_react(), 1);
function useIsMounted() {
  let isMounted = (0, import_react48.useRef)(!1);
  return useIsomorphicLayoutEffect2(() => (isMounted.current = !0, () => {
    isMounted.current = !1;
  }), []), isMounted;
}

// ../../node_modules/framer-motion/dist/es/utils/use-force-update.mjs
function useForceUpdate() {
  let isMounted = useIsMounted(), [forcedRenderCount, setForcedRenderCount] = (0, import_react49.useState)(0), forceRender = (0, import_react49.useCallback)(() => {
    isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
  }, [forcedRenderCount]);
  return [(0, import_react49.useCallback)(() => frame.postRender(forceRender), [forceRender]), forcedRenderCount];
}

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var React34 = __toESM(require_react(), 1), import_react51 = __toESM(require_react(), 1);

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/PopChild.mjs
var React33 = __toESM(require_react(), 1), import_react50 = __toESM(require_react(), 1), PopChildMeasure = class extends React33.Component {
  getSnapshotBeforeUpdate(prevProps) {
    let element = this.props.childRef.current;
    if (element && prevProps.isPresent && !this.props.isPresent) {
      let size2 = this.props.sizeRef.current;
      size2.height = element.offsetHeight || 0, size2.width = element.offsetWidth || 0, size2.top = element.offsetTop, size2.left = element.offsetLeft;
    }
    return null;
  }
  /**
   * Required with getSnapshotBeforeUpdate to stop React complaining.
   */
  componentDidUpdate() {
  }
  render() {
    return this.props.children;
  }
};
function PopChild({ children, isPresent }) {
  let id3 = (0, import_react50.useId)(), ref = (0, import_react50.useRef)(null), size2 = (0, import_react50.useRef)({
    width: 0,
    height: 0,
    top: 0,
    left: 0
  });
  return (0, import_react50.useInsertionEffect)(() => {
    let { width, height, top, left } = size2.current;
    if (isPresent || !ref.current || !width || !height)
      return;
    ref.current.dataset.motionPopId = id3;
    let style = document.createElement("style");
    return document.head.appendChild(style), style.sheet && style.sheet.insertRule(`
          [data-motion-pop-id="${id3}"] {
            position: absolute !important;
            width: ${width}px !important;
            height: ${height}px !important;
            top: ${top}px !important;
            left: ${left}px !important;
          }
        `), () => {
      document.head.removeChild(style);
    };
  }, [isPresent]), React33.createElement(PopChildMeasure, { isPresent, childRef: ref, sizeRef: size2 }, React33.cloneElement(children, { ref }));
}

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.mjs
var PresenceChild = ({ children, initial, isPresent, onExitComplete, custom, presenceAffectsLayout, mode: mode2 }) => {
  let presenceChildren = useConstant(newChildrenMap), id3 = (0, import_react51.useId)(), context = (0, import_react51.useMemo)(
    () => ({
      id: id3,
      initial,
      isPresent,
      custom,
      onExitComplete: (childId) => {
        presenceChildren.set(childId, !0);
        for (let isComplete of presenceChildren.values())
          if (!isComplete)
            return;
        onExitComplete && onExitComplete();
      },
      register: (childId) => (presenceChildren.set(childId, !1), () => presenceChildren.delete(childId))
    }),
    /**
     * If the presence of a child affects the layout of the components around it,
     * we want to make a new context value to ensure they get re-rendered
     * so they can detect that layout change.
     */
    presenceAffectsLayout ? void 0 : [isPresent]
  );
  return (0, import_react51.useMemo)(() => {
    presenceChildren.forEach((_, key) => presenceChildren.set(key, !1));
  }, [isPresent]), React34.useEffect(() => {
    !isPresent && !presenceChildren.size && onExitComplete && onExitComplete();
  }, [isPresent]), mode2 === "popLayout" && (children = React34.createElement(PopChild, { isPresent }, children)), React34.createElement(PresenceContext.Provider, { value: context }, children);
};
function newChildrenMap() {
  return /* @__PURE__ */ new Map();
}

// ../../node_modules/framer-motion/dist/es/utils/use-unmount-effect.mjs
var import_react52 = __toESM(require_react(), 1);
function useUnmountEffect(callback) {
  return (0, import_react52.useEffect)(() => () => callback(), []);
}

// ../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs
var getChildKey = (child) => child.key || "";
function updateChildLookup(children, allChildren) {
  children.forEach((child) => {
    let key = getChildKey(child);
    allChildren.set(key, child);
  });
}
function onlyElements(children) {
  let filtered = [];
  return import_react53.Children.forEach(children, (child) => {
    (0, import_react53.isValidElement)(child) && filtered.push(child);
  }), filtered;
}
var AnimatePresence = ({ children, custom, initial = !0, onExitComplete, exitBeforeEnter, presenceAffectsLayout = !0, mode: mode2 = "sync" }) => {
  invariant5(!exitBeforeEnter, "Replace exitBeforeEnter with mode='wait'");
  let forceRender = (0, import_react53.useContext)(LayoutGroupContext).forceRender || useForceUpdate()[0], isMounted = useIsMounted(), filteredChildren = onlyElements(children), childrenToRender = filteredChildren, exitingChildren = (0, import_react53.useRef)(/* @__PURE__ */ new Map()).current, presentChildren = (0, import_react53.useRef)(childrenToRender), allChildren = (0, import_react53.useRef)(/* @__PURE__ */ new Map()).current, isInitialRender = (0, import_react53.useRef)(!0);
  if (useIsomorphicLayoutEffect2(() => {
    isInitialRender.current = !1, updateChildLookup(filteredChildren, allChildren), presentChildren.current = childrenToRender;
  }), useUnmountEffect(() => {
    isInitialRender.current = !0, allChildren.clear(), exitingChildren.clear();
  }), isInitialRender.current)
    return React35.createElement(React35.Fragment, null, childrenToRender.map((child) => React35.createElement(PresenceChild, { key: getChildKey(child), isPresent: !0, initial: initial ? void 0 : !1, presenceAffectsLayout, mode: mode2 }, child)));
  childrenToRender = [...childrenToRender];
  let presentKeys = presentChildren.current.map(getChildKey), targetKeys = filteredChildren.map(getChildKey), numPresent = presentKeys.length;
  for (let i3 = 0; i3 < numPresent; i3++) {
    let key = presentKeys[i3];
    targetKeys.indexOf(key) === -1 && !exitingChildren.has(key) && exitingChildren.set(key, void 0);
  }
  return mode2 === "wait" && exitingChildren.size && (childrenToRender = []), exitingChildren.forEach((component, key) => {
    if (targetKeys.indexOf(key) !== -1)
      return;
    let child = allChildren.get(key);
    if (!child)
      return;
    let insertionIndex = presentKeys.indexOf(key), exitingComponent = component;
    if (!exitingComponent) {
      let onExit = () => {
        exitingChildren.delete(key);
        let leftOverKeys = Array.from(allChildren.keys()).filter((childKey) => !targetKeys.includes(childKey));
        if (leftOverKeys.forEach((leftOverKey) => allChildren.delete(leftOverKey)), presentChildren.current = filteredChildren.filter((presentChild) => {
          let presentChildKey = getChildKey(presentChild);
          return (
            // filter out the node exiting
            presentChildKey === key || // filter out the leftover children
            leftOverKeys.includes(presentChildKey)
          );
        }), !exitingChildren.size) {
          if (isMounted.current === !1)
            return;
          forceRender(), onExitComplete && onExitComplete();
        }
      };
      exitingComponent = React35.createElement(PresenceChild, { key: getChildKey(child), isPresent: !1, onExitComplete: onExit, custom, presenceAffectsLayout, mode: mode2 }, child), exitingChildren.set(key, exitingComponent);
    }
    childrenToRender.splice(insertionIndex, 0, exitingComponent);
  }), childrenToRender = childrenToRender.map((child) => {
    let key = child.key;
    return exitingChildren.has(key) ? child : React35.createElement(PresenceChild, { key: getChildKey(child), isPresent: !0, presenceAffectsLayout, mode: mode2 }, child);
  }), React35.createElement(React35.Fragment, null, exitingChildren.size ? childrenToRender : childrenToRender.map((child) => (0, import_react53.cloneElement)(child)));
};

// app/components/ui/popover.tsx
var React37 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-popover/dist/index.mjs
var import_react57 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-popper/dist/index.mjs
var import_react56 = __toESM(require_react(), 1);

// ../../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs
var sides = ["top", "right", "bottom", "left"];
var min = Math.min, max = Math.max, round = Math.round, floor = Math.floor, createCoords = (v2) => ({
  x: v2,
  y: v2
}), oppositeSideMap = {
  left: "right",
  right: "left",
  bottom: "top",
  top: "bottom"
}, oppositeAlignmentMap = {
  start: "end",
  end: "start"
};
function clamp2(start, value, end) {
  return max(start, min(value, end));
}
function evaluate(value, param) {
  return typeof value == "function" ? value(param) : value;
}
function getSide(placement) {
  return placement.split("-")[0];
}
function getAlignment(placement) {
  return placement.split("-")[1];
}
function getOppositeAxis(axis) {
  return axis === "x" ? "y" : "x";
}
function getAxisLength(axis) {
  return axis === "y" ? "height" : "width";
}
function getSideAxis(placement) {
  return ["top", "bottom"].includes(getSide(placement)) ? "y" : "x";
}
function getAlignmentAxis(placement) {
  return getOppositeAxis(getSideAxis(placement));
}
function getAlignmentSides(placement, rects, rtl) {
  rtl === void 0 && (rtl = !1);
  let alignment = getAlignment(placement), alignmentAxis = getAlignmentAxis(placement), length = getAxisLength(alignmentAxis), mainAlignmentSide = alignmentAxis === "x" ? alignment === (rtl ? "end" : "start") ? "right" : "left" : alignment === "start" ? "bottom" : "top";
  return rects.reference[length] > rects.floating[length] && (mainAlignmentSide = getOppositePlacement(mainAlignmentSide)), [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];
}
function getExpandedPlacements(placement) {
  let oppositePlacement = getOppositePlacement(placement);
  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];
}
function getOppositeAlignmentPlacement(placement) {
  return placement.replace(/start|end/g, (alignment) => oppositeAlignmentMap[alignment]);
}
function getSideList(side, isStart, rtl) {
  let lr = ["left", "right"], rl = ["right", "left"], tb = ["top", "bottom"], bt = ["bottom", "top"];
  switch (side) {
    case "top":
    case "bottom":
      return rtl ? isStart ? rl : lr : isStart ? lr : rl;
    case "left":
    case "right":
      return isStart ? tb : bt;
    default:
      return [];
  }
}
function getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {
  let alignment = getAlignment(placement), list2 = getSideList(getSide(placement), direction === "start", rtl);
  return alignment && (list2 = list2.map((side) => side + "-" + alignment), flipAlignment && (list2 = list2.concat(list2.map(getOppositeAlignmentPlacement)))), list2;
}
function getOppositePlacement(placement) {
  return placement.replace(/left|right|bottom|top/g, (side) => oppositeSideMap[side]);
}
function expandPaddingObject(padding) {
  return {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...padding
  };
}
function getPaddingObject(padding) {
  return typeof padding != "number" ? expandPaddingObject(padding) : {
    top: padding,
    right: padding,
    bottom: padding,
    left: padding
  };
}
function rectToClientRect(rect) {
  return {
    ...rect,
    top: rect.y,
    left: rect.x,
    right: rect.x + rect.width,
    bottom: rect.y + rect.height
  };
}

// ../../node_modules/@floating-ui/core/dist/floating-ui.core.mjs
function computeCoordsFromPlacement(_ref, placement, rtl) {
  let {
    reference,
    floating
  } = _ref, sideAxis = getSideAxis(placement), alignmentAxis = getAlignmentAxis(placement), alignLength = getAxisLength(alignmentAxis), side = getSide(placement), isVertical = sideAxis === "y", commonX = reference.x + reference.width / 2 - floating.width / 2, commonY = reference.y + reference.height / 2 - floating.height / 2, commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2, coords;
  switch (side) {
    case "top":
      coords = {
        x: commonX,
        y: reference.y - floating.height
      };
      break;
    case "bottom":
      coords = {
        x: commonX,
        y: reference.y + reference.height
      };
      break;
    case "right":
      coords = {
        x: reference.x + reference.width,
        y: commonY
      };
      break;
    case "left":
      coords = {
        x: reference.x - floating.width,
        y: commonY
      };
      break;
    default:
      coords = {
        x: reference.x,
        y: reference.y
      };
  }
  switch (getAlignment(placement)) {
    case "start":
      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);
      break;
    case "end":
      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);
      break;
  }
  return coords;
}
var computePosition = async (reference, floating, config) => {
  let {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2
  } = config, validMiddleware = middleware.filter(Boolean), rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(floating)), rects = await platform2.getElementRects({
    reference,
    floating,
    strategy
  }), {
    x: x3,
    y: y4
  } = computeCoordsFromPlacement(rects, placement, rtl), statefulPlacement = placement, middlewareData = {}, resetCount = 0;
  for (let i3 = 0; i3 < validMiddleware.length; i3++) {
    let {
      name,
      fn
    } = validMiddleware[i3], {
      x: nextX,
      y: nextY,
      data,
      reset
    } = await fn({
      x: x3,
      y: y4,
      initialPlacement: placement,
      placement: statefulPlacement,
      strategy,
      middlewareData,
      rects,
      platform: platform2,
      elements: {
        reference,
        floating
      }
    });
    if (x3 = nextX ?? x3, y4 = nextY ?? y4, middlewareData = {
      ...middlewareData,
      [name]: {
        ...middlewareData[name],
        ...data
      }
    }, reset && resetCount <= 50) {
      resetCount++, typeof reset == "object" && (reset.placement && (statefulPlacement = reset.placement), reset.rects && (rects = reset.rects === !0 ? await platform2.getElementRects({
        reference,
        floating,
        strategy
      }) : reset.rects), {
        x: x3,
        y: y4
      } = computeCoordsFromPlacement(rects, statefulPlacement, rtl)), i3 = -1;
      continue;
    }
  }
  return {
    x: x3,
    y: y4,
    placement: statefulPlacement,
    strategy,
    middlewareData
  };
};
async function detectOverflow(state, options) {
  var _await$platform$isEle;
  options === void 0 && (options = {});
  let {
    x: x3,
    y: y4,
    platform: platform2,
    rects,
    elements,
    strategy
  } = state, {
    boundary = "clippingAncestors",
    rootBoundary = "viewport",
    elementContext = "floating",
    altBoundary = !1,
    padding = 0
  } = evaluate(options, state), paddingObject = getPaddingObject(padding), element = elements[altBoundary ? elementContext === "floating" ? "reference" : "floating" : elementContext], clippingClientRect = rectToClientRect(await platform2.getClippingRect({
    element: (_await$platform$isEle = await (platform2.isElement == null ? void 0 : platform2.isElement(element))) == null || _await$platform$isEle ? element : element.contextElement || await (platform2.getDocumentElement == null ? void 0 : platform2.getDocumentElement(elements.floating)),
    boundary,
    rootBoundary,
    strategy
  })), rect = elementContext === "floating" ? {
    ...rects.floating,
    x: x3,
    y: y4
  } : rects.reference, offsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(elements.floating)), offsetScale = await (platform2.isElement == null ? void 0 : platform2.isElement(offsetParent)) ? await (platform2.getScale == null ? void 0 : platform2.getScale(offsetParent)) || {
    x: 1,
    y: 1
  } : {
    x: 1,
    y: 1
  }, elementClientRect = rectToClientRect(platform2.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform2.convertOffsetParentRelativeRectToViewportRelativeRect({
    rect,
    offsetParent,
    strategy
  }) : rect);
  return {
    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,
    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,
    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,
    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x
  };
}
var arrow = (options) => ({
  name: "arrow",
  options,
  async fn(state) {
    let {
      x: x3,
      y: y4,
      placement,
      rects,
      platform: platform2,
      elements,
      middlewareData
    } = state, {
      element,
      padding = 0
    } = evaluate(options, state) || {};
    if (element == null)
      return {};
    let paddingObject = getPaddingObject(padding), coords = {
      x: x3,
      y: y4
    }, axis = getAlignmentAxis(placement), length = getAxisLength(axis), arrowDimensions = await platform2.getDimensions(element), isYAxis = axis === "y", minProp = isYAxis ? "top" : "left", maxProp = isYAxis ? "bottom" : "right", clientProp = isYAxis ? "clientHeight" : "clientWidth", endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length], startDiff = coords[axis] - rects.reference[axis], arrowOffsetParent = await (platform2.getOffsetParent == null ? void 0 : platform2.getOffsetParent(element)), clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;
    (!clientSize || !await (platform2.isElement == null ? void 0 : platform2.isElement(arrowOffsetParent))) && (clientSize = elements.floating[clientProp] || rects.floating[length]);
    let centerToReference = endDiff / 2 - startDiff / 2, largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1, minPadding = min(paddingObject[minProp], largestPossiblePadding), maxPadding = min(paddingObject[maxProp], largestPossiblePadding), min$1 = minPadding, max2 = clientSize - arrowDimensions[length] - maxPadding, center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference, offset2 = clamp2(min$1, center, max2), shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center != offset2 && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0, alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max2 : 0;
    return {
      [axis]: coords[axis] + alignmentOffset,
      data: {
        [axis]: offset2,
        centerOffset: center - offset2 - alignmentOffset,
        ...shouldAddOffset && {
          alignmentOffset
        }
      },
      reset: shouldAddOffset
    };
  }
});
var flip = function(options) {
  return options === void 0 && (options = {}), {
    name: "flip",
    options,
    async fn(state) {
      var _middlewareData$arrow, _middlewareData$flip;
      let {
        placement,
        middlewareData,
        rects,
        initialPlacement,
        platform: platform2,
        elements
      } = state, {
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !0,
        fallbackPlacements: specifiedFallbackPlacements,
        fallbackStrategy = "bestFit",
        fallbackAxisSideDirection = "none",
        flipAlignment = !0,
        ...detectOverflowOptions
      } = evaluate(options, state);
      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset)
        return {};
      let side = getSide(placement), isBasePlacement = getSide(initialPlacement) === initialPlacement, rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)), fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));
      !specifiedFallbackPlacements && fallbackAxisSideDirection !== "none" && fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));
      let placements2 = [initialPlacement, ...fallbackPlacements], overflow = await detectOverflow(state, detectOverflowOptions), overflows = [], overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];
      if (checkMainAxis && overflows.push(overflow[side]), checkCrossAxis) {
        let sides2 = getAlignmentSides(placement, rects, rtl);
        overflows.push(overflow[sides2[0]], overflow[sides2[1]]);
      }
      if (overflowsData = [...overflowsData, {
        placement,
        overflows
      }], !overflows.every((side2) => side2 <= 0)) {
        var _middlewareData$flip2, _overflowsData$filter;
        let nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1, nextPlacement = placements2[nextIndex];
        if (nextPlacement)
          return {
            data: {
              index: nextIndex,
              overflows: overflowsData
            },
            reset: {
              placement: nextPlacement
            }
          };
        let resetPlacement = (_overflowsData$filter = overflowsData.filter((d4) => d4.overflows[0] <= 0).sort((a4, b3) => a4.overflows[1] - b3.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;
        if (!resetPlacement)
          switch (fallbackStrategy) {
            case "bestFit": {
              var _overflowsData$map$so;
              let placement2 = (_overflowsData$map$so = overflowsData.map((d4) => [d4.placement, d4.overflows.filter((overflow2) => overflow2 > 0).reduce((acc, overflow2) => acc + overflow2, 0)]).sort((a4, b3) => a4[1] - b3[1])[0]) == null ? void 0 : _overflowsData$map$so[0];
              placement2 && (resetPlacement = placement2);
              break;
            }
            case "initialPlacement":
              resetPlacement = initialPlacement;
              break;
          }
        if (placement !== resetPlacement)
          return {
            reset: {
              placement: resetPlacement
            }
          };
      }
      return {};
    }
  };
};
function getSideOffsets(overflow, rect) {
  return {
    top: overflow.top - rect.height,
    right: overflow.right - rect.width,
    bottom: overflow.bottom - rect.height,
    left: overflow.left - rect.width
  };
}
function isAnySideFullyClipped(overflow) {
  return sides.some((side) => overflow[side] >= 0);
}
var hide = function(options) {
  return options === void 0 && (options = {}), {
    name: "hide",
    options,
    async fn(state) {
      let {
        rects
      } = state, {
        strategy = "referenceHidden",
        ...detectOverflowOptions
      } = evaluate(options, state);
      switch (strategy) {
        case "referenceHidden": {
          let overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            elementContext: "reference"
          }), offsets = getSideOffsets(overflow, rects.reference);
          return {
            data: {
              referenceHiddenOffsets: offsets,
              referenceHidden: isAnySideFullyClipped(offsets)
            }
          };
        }
        case "escaped": {
          let overflow = await detectOverflow(state, {
            ...detectOverflowOptions,
            altBoundary: !0
          }), offsets = getSideOffsets(overflow, rects.floating);
          return {
            data: {
              escapedOffsets: offsets,
              escaped: isAnySideFullyClipped(offsets)
            }
          };
        }
        default:
          return {};
      }
    }
  };
};
async function convertValueToCoords(state, options) {
  let {
    placement,
    platform: platform2,
    elements
  } = state, rtl = await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)), side = getSide(placement), alignment = getAlignment(placement), isVertical = getSideAxis(placement) === "y", mainAxisMulti = ["left", "top"].includes(side) ? -1 : 1, crossAxisMulti = rtl && isVertical ? -1 : 1, rawValue = evaluate(options, state), {
    mainAxis,
    crossAxis,
    alignmentAxis
  } = typeof rawValue == "number" ? {
    mainAxis: rawValue,
    crossAxis: 0,
    alignmentAxis: null
  } : {
    mainAxis: 0,
    crossAxis: 0,
    alignmentAxis: null,
    ...rawValue
  };
  return alignment && typeof alignmentAxis == "number" && (crossAxis = alignment === "end" ? alignmentAxis * -1 : alignmentAxis), isVertical ? {
    x: crossAxis * crossAxisMulti,
    y: mainAxis * mainAxisMulti
  } : {
    x: mainAxis * mainAxisMulti,
    y: crossAxis * crossAxisMulti
  };
}
var offset = function(options) {
  return options === void 0 && (options = 0), {
    name: "offset",
    options,
    async fn(state) {
      var _middlewareData$offse, _middlewareData$arrow;
      let {
        x: x3,
        y: y4,
        placement,
        middlewareData
      } = state, diffCoords = await convertValueToCoords(state, options);
      return placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset ? {} : {
        x: x3 + diffCoords.x,
        y: y4 + diffCoords.y,
        data: {
          ...diffCoords,
          placement
        }
      };
    }
  };
}, shift = function(options) {
  return options === void 0 && (options = {}), {
    name: "shift",
    options,
    async fn(state) {
      let {
        x: x3,
        y: y4,
        placement
      } = state, {
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !1,
        limiter = {
          fn: (_ref) => {
            let {
              x: x4,
              y: y5
            } = _ref;
            return {
              x: x4,
              y: y5
            };
          }
        },
        ...detectOverflowOptions
      } = evaluate(options, state), coords = {
        x: x3,
        y: y4
      }, overflow = await detectOverflow(state, detectOverflowOptions), crossAxis = getSideAxis(getSide(placement)), mainAxis = getOppositeAxis(crossAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis];
      if (checkMainAxis) {
        let minSide = mainAxis === "y" ? "top" : "left", maxSide = mainAxis === "y" ? "bottom" : "right", min2 = mainAxisCoord + overflow[minSide], max2 = mainAxisCoord - overflow[maxSide];
        mainAxisCoord = clamp2(min2, mainAxisCoord, max2);
      }
      if (checkCrossAxis) {
        let minSide = crossAxis === "y" ? "top" : "left", maxSide = crossAxis === "y" ? "bottom" : "right", min2 = crossAxisCoord + overflow[minSide], max2 = crossAxisCoord - overflow[maxSide];
        crossAxisCoord = clamp2(min2, crossAxisCoord, max2);
      }
      let limitedCoords = limiter.fn({
        ...state,
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      });
      return {
        ...limitedCoords,
        data: {
          x: limitedCoords.x - x3,
          y: limitedCoords.y - y4
        }
      };
    }
  };
}, limitShift = function(options) {
  return options === void 0 && (options = {}), {
    options,
    fn(state) {
      let {
        x: x3,
        y: y4,
        placement,
        rects,
        middlewareData
      } = state, {
        offset: offset2 = 0,
        mainAxis: checkMainAxis = !0,
        crossAxis: checkCrossAxis = !0
      } = evaluate(options, state), coords = {
        x: x3,
        y: y4
      }, crossAxis = getSideAxis(placement), mainAxis = getOppositeAxis(crossAxis), mainAxisCoord = coords[mainAxis], crossAxisCoord = coords[crossAxis], rawOffset = evaluate(offset2, state), computedOffset = typeof rawOffset == "number" ? {
        mainAxis: rawOffset,
        crossAxis: 0
      } : {
        mainAxis: 0,
        crossAxis: 0,
        ...rawOffset
      };
      if (checkMainAxis) {
        let len = mainAxis === "y" ? "height" : "width", limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis, limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;
        mainAxisCoord < limitMin ? mainAxisCoord = limitMin : mainAxisCoord > limitMax && (mainAxisCoord = limitMax);
      }
      if (checkCrossAxis) {
        var _middlewareData$offse, _middlewareData$offse2;
        let len = mainAxis === "y" ? "width" : "height", isOriginSide = ["top", "left"].includes(getSide(placement)), limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide && ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0) + (isOriginSide ? 0 : computedOffset.crossAxis), limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);
        crossAxisCoord < limitMin ? crossAxisCoord = limitMin : crossAxisCoord > limitMax && (crossAxisCoord = limitMax);
      }
      return {
        [mainAxis]: mainAxisCoord,
        [crossAxis]: crossAxisCoord
      };
    }
  };
}, size = function(options) {
  return options === void 0 && (options = {}), {
    name: "size",
    options,
    async fn(state) {
      let {
        placement,
        rects,
        platform: platform2,
        elements
      } = state, {
        apply = () => {
        },
        ...detectOverflowOptions
      } = evaluate(options, state), overflow = await detectOverflow(state, detectOverflowOptions), side = getSide(placement), alignment = getAlignment(placement), isYAxis = getSideAxis(placement) === "y", {
        width,
        height
      } = rects.floating, heightSide, widthSide;
      side === "top" || side === "bottom" ? (heightSide = side, widthSide = alignment === (await (platform2.isRTL == null ? void 0 : platform2.isRTL(elements.floating)) ? "start" : "end") ? "left" : "right") : (widthSide = side, heightSide = alignment === "end" ? "top" : "bottom");
      let overflowAvailableHeight = height - overflow[heightSide], overflowAvailableWidth = width - overflow[widthSide], noShift = !state.middlewareData.shift, availableHeight = overflowAvailableHeight, availableWidth = overflowAvailableWidth;
      if (isYAxis) {
        let maximumClippingWidth = width - overflow.left - overflow.right;
        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;
      } else {
        let maximumClippingHeight = height - overflow.top - overflow.bottom;
        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;
      }
      if (noShift && !alignment) {
        let xMin = max(overflow.left, 0), xMax = max(overflow.right, 0), yMin = max(overflow.top, 0), yMax = max(overflow.bottom, 0);
        isYAxis ? availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));
      }
      await apply({
        ...state,
        availableWidth,
        availableHeight
      });
      let nextDimensions = await platform2.getDimensions(elements.floating);
      return width !== nextDimensions.width || height !== nextDimensions.height ? {
        reset: {
          rects: !0
        }
      } : {};
    }
  };
};

// ../../node_modules/@floating-ui/utils/dom/dist/floating-ui.utils.dom.mjs
function getNodeName(node) {
  return isNode(node) ? (node.nodeName || "").toLowerCase() : "#document";
}
function getWindow(node) {
  var _node$ownerDocument;
  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;
}
function getDocumentElement(node) {
  var _ref;
  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;
}
function isNode(value) {
  return value instanceof Node || value instanceof getWindow(value).Node;
}
function isElement(value) {
  return value instanceof Element || value instanceof getWindow(value).Element;
}
function isHTMLElement2(value) {
  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;
}
function isShadowRoot(value) {
  return typeof ShadowRoot > "u" ? !1 : value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;
}
function isOverflowElement(element) {
  let {
    overflow,
    overflowX,
    overflowY,
    display
  } = getComputedStyle3(element);
  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !["inline", "contents"].includes(display);
}
function isTableElement(element) {
  return ["table", "td", "th"].includes(getNodeName(element));
}
function isContainingBlock(element) {
  let webkit = isWebKit(), css = getComputedStyle3(element);
  return css.transform !== "none" || css.perspective !== "none" || (css.containerType ? css.containerType !== "normal" : !1) || !webkit && (css.backdropFilter ? css.backdropFilter !== "none" : !1) || !webkit && (css.filter ? css.filter !== "none" : !1) || ["transform", "perspective", "filter"].some((value) => (css.willChange || "").includes(value)) || ["paint", "layout", "strict", "content"].some((value) => (css.contain || "").includes(value));
}
function getContainingBlock(element) {
  let currentNode = getParentNode(element);
  for (; isHTMLElement2(currentNode) && !isLastTraversableNode(currentNode); ) {
    if (isContainingBlock(currentNode))
      return currentNode;
    currentNode = getParentNode(currentNode);
  }
  return null;
}
function isWebKit() {
  return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none");
}
function isLastTraversableNode(node) {
  return ["html", "body", "#document"].includes(getNodeName(node));
}
function getComputedStyle3(element) {
  return getWindow(element).getComputedStyle(element);
}
function getNodeScroll(element) {
  return isElement(element) ? {
    scrollLeft: element.scrollLeft,
    scrollTop: element.scrollTop
  } : {
    scrollLeft: element.pageXOffset,
    scrollTop: element.pageYOffset
  };
}
function getParentNode(node) {
  if (getNodeName(node) === "html")
    return node;
  let result = (
    // Step into the shadow DOM of the parent of a slotted node.
    node.assignedSlot || // DOM Element detected.
    node.parentNode || // ShadowRoot detected.
    isShadowRoot(node) && node.host || // Fallback.
    getDocumentElement(node)
  );
  return isShadowRoot(result) ? result.host : result;
}
function getNearestOverflowAncestor(node) {
  let parentNode = getParentNode(node);
  return isLastTraversableNode(parentNode) ? node.ownerDocument ? node.ownerDocument.body : node.body : isHTMLElement2(parentNode) && isOverflowElement(parentNode) ? parentNode : getNearestOverflowAncestor(parentNode);
}
function getOverflowAncestors(node, list2, traverseIframes) {
  var _node$ownerDocument2;
  list2 === void 0 && (list2 = []), traverseIframes === void 0 && (traverseIframes = !0);
  let scrollableAncestor = getNearestOverflowAncestor(node), isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body), win = getWindow(scrollableAncestor);
  return isBody ? list2.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []) : list2.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));
}

// ../../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs
function getCssDimensions(element) {
  let css = getComputedStyle3(element), width = parseFloat(css.width) || 0, height = parseFloat(css.height) || 0, hasOffset = isHTMLElement2(element), offsetWidth = hasOffset ? element.offsetWidth : width, offsetHeight = hasOffset ? element.offsetHeight : height, shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;
  return shouldFallback && (width = offsetWidth, height = offsetHeight), {
    width,
    height,
    $: shouldFallback
  };
}
function unwrapElement(element) {
  return isElement(element) ? element : element.contextElement;
}
function getScale(element) {
  let domElement = unwrapElement(element);
  if (!isHTMLElement2(domElement))
    return createCoords(1);
  let rect = domElement.getBoundingClientRect(), {
    width,
    height,
    $: $2
  } = getCssDimensions(domElement), x3 = ($2 ? round(rect.width) : rect.width) / width, y4 = ($2 ? round(rect.height) : rect.height) / height;
  return (!x3 || !Number.isFinite(x3)) && (x3 = 1), (!y4 || !Number.isFinite(y4)) && (y4 = 1), {
    x: x3,
    y: y4
  };
}
var noOffsets = /* @__PURE__ */ createCoords(0);
function getVisualOffsets(element) {
  let win = getWindow(element);
  return !isWebKit() || !win.visualViewport ? noOffsets : {
    x: win.visualViewport.offsetLeft,
    y: win.visualViewport.offsetTop
  };
}
function shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {
  return isFixed === void 0 && (isFixed = !1), !floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element) ? !1 : isFixed;
}
function getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {
  includeScale === void 0 && (includeScale = !1), isFixedStrategy === void 0 && (isFixedStrategy = !1);
  let clientRect = element.getBoundingClientRect(), domElement = unwrapElement(element), scale2 = createCoords(1);
  includeScale && (offsetParent ? isElement(offsetParent) && (scale2 = getScale(offsetParent)) : scale2 = getScale(element));
  let visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0), x3 = (clientRect.left + visualOffsets.x) / scale2.x, y4 = (clientRect.top + visualOffsets.y) / scale2.y, width = clientRect.width / scale2.x, height = clientRect.height / scale2.y;
  if (domElement) {
    let win = getWindow(domElement), offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent, currentIFrame = win.frameElement;
    for (; currentIFrame && offsetParent && offsetWin !== win; ) {
      let iframeScale = getScale(currentIFrame), iframeRect = currentIFrame.getBoundingClientRect(), css = getComputedStyle3(currentIFrame), left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x, top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;
      x3 *= iframeScale.x, y4 *= iframeScale.y, width *= iframeScale.x, height *= iframeScale.y, x3 += left, y4 += top, currentIFrame = getWindow(currentIFrame).frameElement;
    }
  }
  return rectToClientRect({
    width,
    height,
    x: x3,
    y: y4
  });
}
function convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {
  let {
    rect,
    offsetParent,
    strategy
  } = _ref, isOffsetParentAnElement = isHTMLElement2(offsetParent), documentElement = getDocumentElement(offsetParent);
  if (offsetParent === documentElement)
    return rect;
  let scroll = {
    scrollLeft: 0,
    scrollTop: 0
  }, scale2 = createCoords(1), offsets = createCoords(0);
  if ((isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== "fixed") && ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll = getNodeScroll(offsetParent)), isHTMLElement2(offsetParent))) {
    let offsetRect = getBoundingClientRect(offsetParent);
    scale2 = getScale(offsetParent), offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
  }
  return {
    width: rect.width * scale2.x,
    height: rect.height * scale2.y,
    x: rect.x * scale2.x - scroll.scrollLeft * scale2.x + offsets.x,
    y: rect.y * scale2.y - scroll.scrollTop * scale2.y + offsets.y
  };
}
function getClientRects(element) {
  return Array.from(element.getClientRects());
}
function getWindowScrollBarX(element) {
  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;
}
function getDocumentRect(element) {
  let html = getDocumentElement(element), scroll = getNodeScroll(element), body = element.ownerDocument.body, width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth), height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight), x3 = -scroll.scrollLeft + getWindowScrollBarX(element), y4 = -scroll.scrollTop;
  return getComputedStyle3(body).direction === "rtl" && (x3 += max(html.clientWidth, body.clientWidth) - width), {
    width,
    height,
    x: x3,
    y: y4
  };
}
function getViewportRect(element, strategy) {
  let win = getWindow(element), html = getDocumentElement(element), visualViewport = win.visualViewport, width = html.clientWidth, height = html.clientHeight, x3 = 0, y4 = 0;
  if (visualViewport) {
    width = visualViewport.width, height = visualViewport.height;
    let visualViewportBased = isWebKit();
    (!visualViewportBased || visualViewportBased && strategy === "fixed") && (x3 = visualViewport.offsetLeft, y4 = visualViewport.offsetTop);
  }
  return {
    width,
    height,
    x: x3,
    y: y4
  };
}
function getInnerBoundingClientRect(element, strategy) {
  let clientRect = getBoundingClientRect(element, !0, strategy === "fixed"), top = clientRect.top + element.clientTop, left = clientRect.left + element.clientLeft, scale2 = isHTMLElement2(element) ? getScale(element) : createCoords(1), width = element.clientWidth * scale2.x, height = element.clientHeight * scale2.y, x3 = left * scale2.x, y4 = top * scale2.y;
  return {
    width,
    height,
    x: x3,
    y: y4
  };
}
function getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {
  let rect;
  if (clippingAncestor === "viewport")
    rect = getViewportRect(element, strategy);
  else if (clippingAncestor === "document")
    rect = getDocumentRect(getDocumentElement(element));
  else if (isElement(clippingAncestor))
    rect = getInnerBoundingClientRect(clippingAncestor, strategy);
  else {
    let visualOffsets = getVisualOffsets(element);
    rect = {
      ...clippingAncestor,
      x: clippingAncestor.x - visualOffsets.x,
      y: clippingAncestor.y - visualOffsets.y
    };
  }
  return rectToClientRect(rect);
}
function hasFixedPositionAncestor(element, stopNode) {
  let parentNode = getParentNode(element);
  return parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode) ? !1 : getComputedStyle3(parentNode).position === "fixed" || hasFixedPositionAncestor(parentNode, stopNode);
}
function getClippingElementAncestors(element, cache) {
  let cachedResult = cache.get(element);
  if (cachedResult)
    return cachedResult;
  let result = getOverflowAncestors(element, [], !1).filter((el) => isElement(el) && getNodeName(el) !== "body"), currentContainingBlockComputedStyle = null, elementIsFixed = getComputedStyle3(element).position === "fixed", currentNode = elementIsFixed ? getParentNode(element) : element;
  for (; isElement(currentNode) && !isLastTraversableNode(currentNode); ) {
    let computedStyle = getComputedStyle3(currentNode), currentNodeIsContaining = isContainingBlock(currentNode);
    !currentNodeIsContaining && computedStyle.position === "fixed" && (currentContainingBlockComputedStyle = null), (elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === "static" && !!currentContainingBlockComputedStyle && ["absolute", "fixed"].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode)) ? result = result.filter((ancestor) => ancestor !== currentNode) : currentContainingBlockComputedStyle = computedStyle, currentNode = getParentNode(currentNode);
  }
  return cache.set(element, result), result;
}
function getClippingRect(_ref) {
  let {
    element,
    boundary,
    rootBoundary,
    strategy
  } = _ref, clippingAncestors = [...boundary === "clippingAncestors" ? getClippingElementAncestors(element, this._c) : [].concat(boundary), rootBoundary], firstClippingAncestor = clippingAncestors[0], clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {
    let rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);
    return accRect.top = max(rect.top, accRect.top), accRect.right = min(rect.right, accRect.right), accRect.bottom = min(rect.bottom, accRect.bottom), accRect.left = max(rect.left, accRect.left), accRect;
  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));
  return {
    width: clippingRect.right - clippingRect.left,
    height: clippingRect.bottom - clippingRect.top,
    x: clippingRect.left,
    y: clippingRect.top
  };
}
function getDimensions(element) {
  return getCssDimensions(element);
}
function getRectRelativeToOffsetParent(element, offsetParent, strategy) {
  let isOffsetParentAnElement = isHTMLElement2(offsetParent), documentElement = getDocumentElement(offsetParent), isFixed = strategy === "fixed", rect = getBoundingClientRect(element, !0, isFixed, offsetParent), scroll = {
    scrollLeft: 0,
    scrollTop: 0
  }, offsets = createCoords(0);
  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed)
    if ((getNodeName(offsetParent) !== "body" || isOverflowElement(documentElement)) && (scroll = getNodeScroll(offsetParent)), isOffsetParentAnElement) {
      let offsetRect = getBoundingClientRect(offsetParent, !0, isFixed, offsetParent);
      offsets.x = offsetRect.x + offsetParent.clientLeft, offsets.y = offsetRect.y + offsetParent.clientTop;
    } else
      documentElement && (offsets.x = getWindowScrollBarX(documentElement));
  return {
    x: rect.left + scroll.scrollLeft - offsets.x,
    y: rect.top + scroll.scrollTop - offsets.y,
    width: rect.width,
    height: rect.height
  };
}
function getTrueOffsetParent(element, polyfill) {
  return !isHTMLElement2(element) || getComputedStyle3(element).position === "fixed" ? null : polyfill ? polyfill(element) : element.offsetParent;
}
function getOffsetParent(element, polyfill) {
  let window2 = getWindow(element);
  if (!isHTMLElement2(element))
    return window2;
  let offsetParent = getTrueOffsetParent(element, polyfill);
  for (; offsetParent && isTableElement(offsetParent) && getComputedStyle3(offsetParent).position === "static"; )
    offsetParent = getTrueOffsetParent(offsetParent, polyfill);
  return offsetParent && (getNodeName(offsetParent) === "html" || getNodeName(offsetParent) === "body" && getComputedStyle3(offsetParent).position === "static" && !isContainingBlock(offsetParent)) ? window2 : offsetParent || getContainingBlock(element) || window2;
}
var getElementRects = async function(_ref) {
  let {
    reference,
    floating,
    strategy
  } = _ref, getOffsetParentFn = this.getOffsetParent || getOffsetParent, getDimensionsFn = this.getDimensions;
  return {
    reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),
    floating: {
      x: 0,
      y: 0,
      ...await getDimensionsFn(floating)
    }
  };
};
function isRTL(element) {
  return getComputedStyle3(element).direction === "rtl";
}
var platform = {
  convertOffsetParentRelativeRectToViewportRelativeRect,
  getDocumentElement,
  getClippingRect,
  getOffsetParent,
  getElementRects,
  getClientRects,
  getDimensions,
  getScale,
  isElement,
  isRTL
};
function observeMove(element, onMove) {
  let io = null, timeoutId, root = getDocumentElement(element);
  function cleanup() {
    clearTimeout(timeoutId), io && io.disconnect(), io = null;
  }
  function refresh(skip, threshold) {
    skip === void 0 && (skip = !1), threshold === void 0 && (threshold = 1), cleanup();
    let {
      left,
      top,
      width,
      height
    } = element.getBoundingClientRect();
    if (skip || onMove(), !width || !height)
      return;
    let insetTop = floor(top), insetRight = floor(root.clientWidth - (left + width)), insetBottom = floor(root.clientHeight - (top + height)), insetLeft = floor(left), options = {
      rootMargin: -insetTop + "px " + -insetRight + "px " + -insetBottom + "px " + -insetLeft + "px",
      threshold: max(0, min(1, threshold)) || 1
    }, isFirstUpdate = !0;
    function handleObserve(entries) {
      let ratio = entries[0].intersectionRatio;
      if (ratio !== threshold) {
        if (!isFirstUpdate)
          return refresh();
        ratio ? refresh(!1, ratio) : timeoutId = setTimeout(() => {
          refresh(!1, 1e-7);
        }, 100);
      }
      isFirstUpdate = !1;
    }
    try {
      io = new IntersectionObserver(handleObserve, {
        ...options,
        // Handle <iframe>s
        root: root.ownerDocument
      });
    } catch {
      io = new IntersectionObserver(handleObserve, options);
    }
    io.observe(element);
  }
  return refresh(!0), cleanup;
}
function autoUpdate(reference, floating, update, options) {
  options === void 0 && (options = {});
  let {
    ancestorScroll = !0,
    ancestorResize = !0,
    elementResize = typeof ResizeObserver == "function",
    layoutShift = typeof IntersectionObserver == "function",
    animationFrame = !1
  } = options, referenceEl = unwrapElement(reference), ancestors = ancestorScroll || ancestorResize ? [...referenceEl ? getOverflowAncestors(referenceEl) : [], ...getOverflowAncestors(floating)] : [];
  ancestors.forEach((ancestor) => {
    ancestorScroll && ancestor.addEventListener("scroll", update, {
      passive: !0
    }), ancestorResize && ancestor.addEventListener("resize", update);
  });
  let cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null, reobserveFrame = -1, resizeObserver = null;
  elementResize && (resizeObserver = new ResizeObserver((_ref) => {
    let [firstEntry] = _ref;
    firstEntry && firstEntry.target === referenceEl && resizeObserver && (resizeObserver.unobserve(floating), cancelAnimationFrame(reobserveFrame), reobserveFrame = requestAnimationFrame(() => {
      resizeObserver && resizeObserver.observe(floating);
    })), update();
  }), referenceEl && !animationFrame && resizeObserver.observe(referenceEl), resizeObserver.observe(floating));
  let frameId, prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;
  animationFrame && frameLoop();
  function frameLoop() {
    let nextRefRect = getBoundingClientRect(reference);
    prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height) && update(), prevRefRect = nextRefRect, frameId = requestAnimationFrame(frameLoop);
  }
  return update(), () => {
    ancestors.forEach((ancestor) => {
      ancestorScroll && ancestor.removeEventListener("scroll", update), ancestorResize && ancestor.removeEventListener("resize", update);
    }), cleanupIo && cleanupIo(), resizeObserver && resizeObserver.disconnect(), resizeObserver = null, animationFrame && cancelAnimationFrame(frameId);
  };
}
var computePosition2 = (reference, floating, options) => {
  let cache = /* @__PURE__ */ new Map(), mergedOptions = {
    platform,
    ...options
  }, platformWithCache = {
    ...mergedOptions.platform,
    _c: cache
  };
  return computePosition(reference, floating, {
    ...mergedOptions,
    platform: platformWithCache
  });
};

// ../../node_modules/@floating-ui/react-dom/dist/floating-ui.react-dom.mjs
var React36 = __toESM(require_react(), 1), import_react54 = __toESM(require_react(), 1), ReactDOM2 = __toESM(require_react_dom(), 1), arrow2 = (options) => {
  function isRef(value) {
    return {}.hasOwnProperty.call(value, "current");
  }
  return {
    name: "arrow",
    options,
    fn(state) {
      let {
        element,
        padding
      } = typeof options == "function" ? options(state) : options;
      return element && isRef(element) ? element.current != null ? arrow({
        element: element.current,
        padding
      }).fn(state) : {} : element ? arrow({
        element,
        padding
      }).fn(state) : {};
    }
  };
}, index2 = typeof document < "u" ? import_react54.useLayoutEffect : import_react54.useEffect;
function deepEqual2(a4, b3) {
  if (a4 === b3)
    return !0;
  if (typeof a4 != typeof b3)
    return !1;
  if (typeof a4 == "function" && a4.toString() === b3.toString())
    return !0;
  let length, i3, keys;
  if (a4 && b3 && typeof a4 == "object") {
    if (Array.isArray(a4)) {
      if (length = a4.length, length != b3.length)
        return !1;
      for (i3 = length; i3-- !== 0; )
        if (!deepEqual2(a4[i3], b3[i3]))
          return !1;
      return !0;
    }
    if (keys = Object.keys(a4), length = keys.length, length !== Object.keys(b3).length)
      return !1;
    for (i3 = length; i3-- !== 0; )
      if (!{}.hasOwnProperty.call(b3, keys[i3]))
        return !1;
    for (i3 = length; i3-- !== 0; ) {
      let key = keys[i3];
      if (!(key === "_owner" && a4.$$typeof) && !deepEqual2(a4[key], b3[key]))
        return !1;
    }
    return !0;
  }
  return a4 !== a4 && b3 !== b3;
}
function getDPR(element) {
  return typeof window > "u" ? 1 : (element.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function roundByDPR(element, value) {
  let dpr = getDPR(element);
  return Math.round(value * dpr) / dpr;
}
function useLatestRef(value) {
  let ref = React36.useRef(value);
  return index2(() => {
    ref.current = value;
  }), ref;
}
function useFloating(options) {
  options === void 0 && (options = {});
  let {
    placement = "bottom",
    strategy = "absolute",
    middleware = [],
    platform: platform2,
    elements: {
      reference: externalReference,
      floating: externalFloating
    } = {},
    transform = !0,
    whileElementsMounted,
    open
  } = options, [data, setData] = React36.useState({
    x: 0,
    y: 0,
    strategy,
    placement,
    middlewareData: {},
    isPositioned: !1
  }), [latestMiddleware, setLatestMiddleware] = React36.useState(middleware);
  deepEqual2(latestMiddleware, middleware) || setLatestMiddleware(middleware);
  let [_reference, _setReference] = React36.useState(null), [_floating, _setFloating] = React36.useState(null), setReference = React36.useCallback((node) => {
    node != referenceRef.current && (referenceRef.current = node, _setReference(node));
  }, [_setReference]), setFloating = React36.useCallback((node) => {
    node !== floatingRef.current && (floatingRef.current = node, _setFloating(node));
  }, [_setFloating]), referenceEl = externalReference || _reference, floatingEl = externalFloating || _floating, referenceRef = React36.useRef(null), floatingRef = React36.useRef(null), dataRef = React36.useRef(data), whileElementsMountedRef = useLatestRef(whileElementsMounted), platformRef = useLatestRef(platform2), update = React36.useCallback(() => {
    if (!referenceRef.current || !floatingRef.current)
      return;
    let config = {
      placement,
      strategy,
      middleware: latestMiddleware
    };
    platformRef.current && (config.platform = platformRef.current), computePosition2(referenceRef.current, floatingRef.current, config).then((data2) => {
      let fullData = {
        ...data2,
        isPositioned: !0
      };
      isMountedRef.current && !deepEqual2(dataRef.current, fullData) && (dataRef.current = fullData, ReactDOM2.flushSync(() => {
        setData(fullData);
      }));
    });
  }, [latestMiddleware, placement, strategy, platformRef]);
  index2(() => {
    open === !1 && dataRef.current.isPositioned && (dataRef.current.isPositioned = !1, setData((data2) => ({
      ...data2,
      isPositioned: !1
    })));
  }, [open]);
  let isMountedRef = React36.useRef(!1);
  index2(() => (isMountedRef.current = !0, () => {
    isMountedRef.current = !1;
  }), []), index2(() => {
    if (referenceEl && (referenceRef.current = referenceEl), floatingEl && (floatingRef.current = floatingEl), referenceEl && floatingEl) {
      if (whileElementsMountedRef.current)
        return whileElementsMountedRef.current(referenceEl, floatingEl, update);
      update();
    }
  }, [referenceEl, floatingEl, update, whileElementsMountedRef]);
  let refs = React36.useMemo(() => ({
    reference: referenceRef,
    floating: floatingRef,
    setReference,
    setFloating
  }), [setReference, setFloating]), elements = React36.useMemo(() => ({
    reference: referenceEl,
    floating: floatingEl
  }), [referenceEl, floatingEl]), floatingStyles = React36.useMemo(() => {
    let initialStyles = {
      position: strategy,
      left: 0,
      top: 0
    };
    if (!elements.floating)
      return initialStyles;
    let x3 = roundByDPR(elements.floating, data.x), y4 = roundByDPR(elements.floating, data.y);
    return transform ? {
      ...initialStyles,
      transform: "translate(" + x3 + "px, " + y4 + "px)",
      ...getDPR(elements.floating) >= 1.5 && {
        willChange: "transform"
      }
    } : {
      position: strategy,
      left: x3,
      top: y4
    };
  }, [strategy, transform, elements.floating, data.x, data.y]);
  return React36.useMemo(() => ({
    ...data,
    update,
    refs,
    elements,
    floatingStyles
  }), [data, update, refs, elements, floatingStyles]);
}

// ../../node_modules/@radix-ui/react-use-size/dist/index.mjs
var import_react55 = __toESM(require_react(), 1);
function $db6c3485150b8e66$export$1ab7ae714698c4b8(element) {
  let [size2, setSize] = (0, import_react55.useState)(void 0);
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (element) {
      setSize({
        width: element.offsetWidth,
        height: element.offsetHeight
      });
      let resizeObserver = new ResizeObserver((entries) => {
        if (!Array.isArray(entries) || !entries.length)
          return;
        let entry2 = entries[0], width, height;
        if ("borderBoxSize" in entry2) {
          let borderSizeEntry = entry2.borderBoxSize, borderSize = Array.isArray(borderSizeEntry) ? borderSizeEntry[0] : borderSizeEntry;
          width = borderSize.inlineSize, height = borderSize.blockSize;
        } else
          width = element.offsetWidth, height = element.offsetHeight;
        setSize({
          width,
          height
        });
      });
      return resizeObserver.observe(element, {
        box: "border-box"
      }), () => resizeObserver.unobserve(element);
    } else
      setSize(void 0);
  }, [
    element
  ]), size2;
}

// ../../node_modules/@radix-ui/react-popper/dist/index.mjs
var $cf1ac5d9fe0e8206$var$POPPER_NAME = "Popper", [$cf1ac5d9fe0e8206$var$createPopperContext, $cf1ac5d9fe0e8206$export$722aac194ae923] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cf1ac5d9fe0e8206$var$POPPER_NAME), [$cf1ac5d9fe0e8206$var$PopperProvider, $cf1ac5d9fe0e8206$var$usePopperContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$POPPER_NAME), $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9 = (props) => {
  let { __scopePopper, children } = props, [anchor, setAnchor] = (0, import_react56.useState)(null);
  return /* @__PURE__ */ (0, import_react56.createElement)($cf1ac5d9fe0e8206$var$PopperProvider, {
    scope: __scopePopper,
    anchor,
    onAnchorChange: setAnchor
  }, children);
}, $cf1ac5d9fe0e8206$var$ANCHOR_NAME = "PopperAnchor", $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d = /* @__PURE__ */ (0, import_react56.forwardRef)((props, forwardedRef) => {
  let { __scopePopper, virtualRef, ...anchorProps } = props, context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$ANCHOR_NAME, __scopePopper), ref = (0, import_react56.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react56.useEffect)(() => {
    context.onAnchorChange(virtualRef?.current || ref.current);
  }), virtualRef ? null : /* @__PURE__ */ (0, import_react56.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, anchorProps, {
    ref: composedRefs
  }));
}), $cf1ac5d9fe0e8206$var$CONTENT_NAME = "PopperContent", [$cf1ac5d9fe0e8206$var$PopperContentProvider, $cf1ac5d9fe0e8206$var$useContentContext] = $cf1ac5d9fe0e8206$var$createPopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME), $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc = /* @__PURE__ */ (0, import_react56.forwardRef)((props, forwardedRef) => {
  var _arrowSize$width, _arrowSize$height, _middlewareData$arrow, _middlewareData$arrow2, _middlewareData$arrow3, _middlewareData$trans, _middlewareData$trans2, _middlewareData$hide;
  let { __scopePopper, side = "bottom", sideOffset = 0, align = "center", alignOffset = 0, arrowPadding = 0, avoidCollisions = !0, collisionBoundary = [], collisionPadding: collisionPaddingProp = 0, sticky = "partial", hideWhenDetached = !1, updatePositionStrategy = "optimized", onPlaced, ...contentProps } = props, context = $cf1ac5d9fe0e8206$var$usePopperContext($cf1ac5d9fe0e8206$var$CONTENT_NAME, __scopePopper), [content, setContent] = (0, import_react56.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  ), [arrow3, setArrow] = (0, import_react56.useState)(null), arrowSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(arrow3), arrowWidth = (_arrowSize$width = arrowSize?.width) !== null && _arrowSize$width !== void 0 ? _arrowSize$width : 0, arrowHeight = (_arrowSize$height = arrowSize?.height) !== null && _arrowSize$height !== void 0 ? _arrowSize$height : 0, desiredPlacement = side + (align !== "center" ? "-" + align : ""), collisionPadding = typeof collisionPaddingProp == "number" ? collisionPaddingProp : {
    top: 0,
    right: 0,
    bottom: 0,
    left: 0,
    ...collisionPaddingProp
  }, boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [
    collisionBoundary
  ], hasExplicitBoundaries = boundary.length > 0, detectOverflowOptions = {
    padding: collisionPadding,
    boundary: boundary.filter($cf1ac5d9fe0e8206$var$isNotNull),
    // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries
    altBoundary: hasExplicitBoundaries
  }, { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({
    // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues
    strategy: "fixed",
    placement: desiredPlacement,
    whileElementsMounted: (...args) => autoUpdate(...args, {
      animationFrame: updatePositionStrategy === "always"
    }),
    elements: {
      reference: context.anchor
    },
    middleware: [
      offset({
        mainAxis: sideOffset + arrowHeight,
        alignmentAxis: alignOffset
      }),
      avoidCollisions && shift({
        mainAxis: !0,
        crossAxis: !1,
        limiter: sticky === "partial" ? limitShift() : void 0,
        ...detectOverflowOptions
      }),
      avoidCollisions && flip({
        ...detectOverflowOptions
      }),
      size({
        ...detectOverflowOptions,
        apply: ({ elements, rects, availableWidth, availableHeight }) => {
          let { width: anchorWidth, height: anchorHeight } = rects.reference, contentStyle = elements.floating.style;
          contentStyle.setProperty("--radix-popper-available-width", `${availableWidth}px`), contentStyle.setProperty("--radix-popper-available-height", `${availableHeight}px`), contentStyle.setProperty("--radix-popper-anchor-width", `${anchorWidth}px`), contentStyle.setProperty("--radix-popper-anchor-height", `${anchorHeight}px`);
        }
      }),
      arrow3 && arrow2({
        element: arrow3,
        padding: arrowPadding
      }),
      $cf1ac5d9fe0e8206$var$transformOrigin({
        arrowWidth,
        arrowHeight
      }),
      hideWhenDetached && hide({
        strategy: "referenceHidden",
        ...detectOverflowOptions
      })
    ]
  }), [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement), handlePlaced = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onPlaced);
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    isPositioned && handlePlaced?.();
  }, [
    isPositioned,
    handlePlaced
  ]);
  let arrowX = (_middlewareData$arrow = middlewareData.arrow) === null || _middlewareData$arrow === void 0 ? void 0 : _middlewareData$arrow.x, arrowY = (_middlewareData$arrow2 = middlewareData.arrow) === null || _middlewareData$arrow2 === void 0 ? void 0 : _middlewareData$arrow2.y, cannotCenterArrow = ((_middlewareData$arrow3 = middlewareData.arrow) === null || _middlewareData$arrow3 === void 0 ? void 0 : _middlewareData$arrow3.centerOffset) !== 0, [contentZIndex, setContentZIndex] = (0, import_react56.useState)();
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    content && setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]), /* @__PURE__ */ (0, import_react56.createElement)("div", {
    ref: refs.setFloating,
    "data-radix-popper-content-wrapper": "",
    style: {
      ...floatingStyles,
      transform: isPositioned ? floatingStyles.transform : "translate(0, -200%)",
      // keep off the page when measuring
      minWidth: "max-content",
      zIndex: contentZIndex,
      ["--radix-popper-transform-origin"]: [
        (_middlewareData$trans = middlewareData.transformOrigin) === null || _middlewareData$trans === void 0 ? void 0 : _middlewareData$trans.x,
        (_middlewareData$trans2 = middlewareData.transformOrigin) === null || _middlewareData$trans2 === void 0 ? void 0 : _middlewareData$trans2.y
      ].join(" ")
    },
    dir: props.dir
  }, /* @__PURE__ */ (0, import_react56.createElement)($cf1ac5d9fe0e8206$var$PopperContentProvider, {
    scope: __scopePopper,
    placedSide,
    onArrowChange: setArrow,
    arrowX,
    arrowY,
    shouldHideArrow: cannotCenterArrow
  }, /* @__PURE__ */ (0, import_react56.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-side": placedSide,
    "data-align": placedAlign
  }, contentProps, {
    ref: composedRefs,
    style: {
      ...contentProps.style,
      // if the PopperContent hasn't been placed yet (not all measurements done)
      // we prevent animations so that users's animation don't kick in too early referring wrong sides
      animation: isPositioned ? void 0 : "none",
      // hide the content if using the hide middleware and should be hidden
      opacity: (_middlewareData$hide = middlewareData.hide) !== null && _middlewareData$hide !== void 0 && _middlewareData$hide.referenceHidden ? 0 : void 0
    }
  }))));
});
function $cf1ac5d9fe0e8206$var$isNotNull(value) {
  return value !== null;
}
var $cf1ac5d9fe0e8206$var$transformOrigin = (options) => ({
  name: "transformOrigin",
  options,
  fn(data) {
    var _middlewareData$arrow4, _middlewareData$arrow5, _middlewareData$arrow6, _middlewareData$arrow7, _middlewareData$arrow8;
    let { placement, rects, middlewareData } = data, isArrowHidden = ((_middlewareData$arrow4 = middlewareData.arrow) === null || _middlewareData$arrow4 === void 0 ? void 0 : _middlewareData$arrow4.centerOffset) !== 0, arrowWidth = isArrowHidden ? 0 : options.arrowWidth, arrowHeight = isArrowHidden ? 0 : options.arrowHeight, [placedSide, placedAlign] = $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement), noArrowAlign = {
      start: "0%",
      center: "50%",
      end: "100%"
    }[placedAlign], arrowXCenter = ((_middlewareData$arrow5 = (_middlewareData$arrow6 = middlewareData.arrow) === null || _middlewareData$arrow6 === void 0 ? void 0 : _middlewareData$arrow6.x) !== null && _middlewareData$arrow5 !== void 0 ? _middlewareData$arrow5 : 0) + arrowWidth / 2, arrowYCenter = ((_middlewareData$arrow7 = (_middlewareData$arrow8 = middlewareData.arrow) === null || _middlewareData$arrow8 === void 0 ? void 0 : _middlewareData$arrow8.y) !== null && _middlewareData$arrow7 !== void 0 ? _middlewareData$arrow7 : 0) + arrowHeight / 2, x3 = "", y4 = "";
    return placedSide === "bottom" ? (x3 = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`, y4 = `${-arrowHeight}px`) : placedSide === "top" ? (x3 = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`, y4 = `${rects.floating.height + arrowHeight}px`) : placedSide === "right" ? (x3 = `${-arrowHeight}px`, y4 = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`) : placedSide === "left" && (x3 = `${rects.floating.width + arrowHeight}px`, y4 = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`), {
      data: {
        x: x3,
        y: y4
      }
    };
  }
});
function $cf1ac5d9fe0e8206$var$getSideAndAlignFromPlacement(placement) {
  let [side, align = "center"] = placement.split("-");
  return [
    side,
    align
  ];
}
var $cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9 = $cf1ac5d9fe0e8206$export$badac9ada3a0bdf9, $cf1ac5d9fe0e8206$export$b688253958b8dfe7 = $cf1ac5d9fe0e8206$export$ecd4e1ccab6ed6d, $cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2 = $cf1ac5d9fe0e8206$export$bc4ae5855d3c4fc;

// ../../node_modules/@radix-ui/react-popover/dist/index.mjs
var $cb5cc270b50c6fcd$var$POPOVER_NAME = "Popover", [$cb5cc270b50c6fcd$var$createPopoverContext, $cb5cc270b50c6fcd$export$c8393c9e73286932] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cb5cc270b50c6fcd$var$POPOVER_NAME, [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]), $cb5cc270b50c6fcd$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923(), [$cb5cc270b50c6fcd$var$PopoverProvider, $cb5cc270b50c6fcd$var$usePopoverContext] = $cb5cc270b50c6fcd$var$createPopoverContext($cb5cc270b50c6fcd$var$POPOVER_NAME), $cb5cc270b50c6fcd$export$5b6b19405a83ff9d = (props) => {
  let { __scopePopover, children, open: openProp, defaultOpen, onOpenChange, modal = !1 } = props, popperScope = $cb5cc270b50c6fcd$var$usePopperScope(__scopePopover), triggerRef = (0, import_react57.useRef)(null), [hasCustomAnchor, setHasCustomAnchor] = (0, import_react57.useState)(!1), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react57.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PopoverProvider, {
    scope: __scopePopover,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerRef,
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react57.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    hasCustomAnchor,
    onCustomAnchorAdd: (0, import_react57.useCallback)(
      () => setHasCustomAnchor(!0),
      []
    ),
    onCustomAnchorRemove: (0, import_react57.useCallback)(
      () => setHasCustomAnchor(!1),
      []
    ),
    modal
  }, children));
};
var $cb5cc270b50c6fcd$var$TRIGGER_NAME = "PopoverTrigger", $cb5cc270b50c6fcd$export$7dacb05d26466c3 = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let { __scopePopover, ...triggerProps } = props, context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$TRIGGER_NAME, __scopePopover), popperScope = $cb5cc270b50c6fcd$var$usePopperScope(__scopePopover), composedTriggerRef = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.triggerRef), trigger = /* @__PURE__ */ (0, import_react57.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    "aria-haspopup": "dialog",
    "aria-expanded": context.open,
    "aria-controls": context.contentId,
    "data-state": $cb5cc270b50c6fcd$var$getState(context.open)
  }, triggerProps, {
    ref: composedTriggerRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
  return context.hasCustomAnchor ? trigger : /* @__PURE__ */ (0, import_react57.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends6({
    asChild: !0
  }, popperScope), trigger);
}), $cb5cc270b50c6fcd$var$PORTAL_NAME = "PopoverPortal", [$cb5cc270b50c6fcd$var$PortalProvider, $cb5cc270b50c6fcd$var$usePortalContext] = $cb5cc270b50c6fcd$var$createPopoverContext($cb5cc270b50c6fcd$var$PORTAL_NAME, {
  forceMount: void 0
}), $cb5cc270b50c6fcd$export$dd679ffb4362d2d4 = (props) => {
  let { __scopePopover, forceMount, children, container } = props, context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$PORTAL_NAME, __scopePopover);
  return /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PortalProvider, {
    scope: __scopePopover,
    forceMount
  }, /* @__PURE__ */ (0, import_react57.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react57.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: !0,
    container
  }, children)));
}, $cb5cc270b50c6fcd$var$CONTENT_NAME = "PopoverContent", $cb5cc270b50c6fcd$export$d7e1f420b25549ff = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let portalContext = $cb5cc270b50c6fcd$var$usePortalContext($cb5cc270b50c6fcd$var$CONTENT_NAME, props.__scopePopover), { forceMount = portalContext.forceMount, ...contentProps } = props, context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$CONTENT_NAME, props.__scopePopover);
  return /* @__PURE__ */ (0, import_react57.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.modal ? /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PopoverContentModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PopoverContentNonModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })));
}), $cb5cc270b50c6fcd$var$PopoverContentModal = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$CONTENT_NAME, props.__scopePopover), contentRef = (0, import_react57.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef), isRightClickOutsideRef = (0, import_react57.useRef)(!1);
  return (0, import_react57.useEffect)(() => {
    let content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []), /* @__PURE__ */ (0, import_react57.createElement)(Combination_default, {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: !0
  }, /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PopoverContentImpl, _extends6({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: !0,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault(), isRightClickOutsideRef.current || (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDownOutside, (event) => {
      let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0, isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      isRightClickOutsideRef.current = isRightClick;
    }, {
      checkForDefaultPrevented: !1
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault(),
      {
        checkForDefaultPrevented: !1
      }
    )
  })));
}), $cb5cc270b50c6fcd$var$PopoverContentNonModal = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$CONTENT_NAME, props.__scopePopover), hasInteractedOutsideRef = (0, import_react57.useRef)(!1), hasPointerDownOutsideRef = (0, import_react57.useRef)(!1);
  return /* @__PURE__ */ (0, import_react57.createElement)($cb5cc270b50c6fcd$var$PopoverContentImpl, _extends6({}, props, {
    ref: forwardedRef,
    trapFocus: !1,
    disableOutsidePointerEvents: !1,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      if ((_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event), !event.defaultPrevented) {
        var _context$triggerRef$c2;
        hasInteractedOutsideRef.current || (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(), event.preventDefault();
      }
      hasInteractedOutsideRef.current = !1, hasPointerDownOutsideRef.current = !1;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event), event.defaultPrevented || (hasInteractedOutsideRef.current = !0, event.detail.originalEvent.type === "pointerdown" && (hasPointerDownOutsideRef.current = !0));
      let target = event.target;
      ((_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target)) && event.preventDefault(), event.detail.originalEvent.type === "focusin" && hasPointerDownOutsideRef.current && event.preventDefault();
    }
  }));
}), $cb5cc270b50c6fcd$var$PopoverContentImpl = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let { __scopePopover, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, ...contentProps } = props, context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$CONTENT_NAME, __scopePopover), popperScope = $cb5cc270b50c6fcd$var$usePopperScope(__scopePopover);
  return $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c(), /* @__PURE__ */ (0, import_react57.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: !0,
    loop: !0,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ (0, import_react57.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: !0,
    disableOutsidePointerEvents,
    onInteractOutside,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside,
    onDismiss: () => context.onOpenChange(!1)
  }, /* @__PURE__ */ (0, import_react57.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends6({
    "data-state": $cb5cc270b50c6fcd$var$getState(context.open),
    role: "dialog",
    id: context.contentId
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-popover-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-popover-content-available-width": "var(--radix-popper-available-width)",
      "--radix-popover-content-available-height": "var(--radix-popper-available-height)",
      "--radix-popover-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-popover-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }))));
}), $cb5cc270b50c6fcd$var$CLOSE_NAME = "PopoverClose", $cb5cc270b50c6fcd$export$d6ac43ebaa40d53e = /* @__PURE__ */ (0, import_react57.forwardRef)((props, forwardedRef) => {
  let { __scopePopover, ...closeProps } = props, context = $cb5cc270b50c6fcd$var$usePopoverContext($cb5cc270b50c6fcd$var$CLOSE_NAME, __scopePopover);
  return /* @__PURE__ */ (0, import_react57.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button"
  }, closeProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onClick,
      () => context.onOpenChange(!1)
    )
  }));
});
function $cb5cc270b50c6fcd$var$getState(open) {
  return open ? "open" : "closed";
}
var $cb5cc270b50c6fcd$export$be92b6f5f03c0fe9 = $cb5cc270b50c6fcd$export$5b6b19405a83ff9d;
var $cb5cc270b50c6fcd$export$41fb9f06171c75f4 = $cb5cc270b50c6fcd$export$7dacb05d26466c3, $cb5cc270b50c6fcd$export$602eac185826482c = $cb5cc270b50c6fcd$export$dd679ffb4362d2d4, $cb5cc270b50c6fcd$export$7c6e2c02157bb7d2 = $cb5cc270b50c6fcd$export$d7e1f420b25549ff, $cb5cc270b50c6fcd$export$f39c2d165cd861fe = $cb5cc270b50c6fcd$export$d6ac43ebaa40d53e;

// app/components/ui/popover.tsx
var import_jsx_runtime15 = __toESM(require_jsx_runtime(), 1), Popover = $cb5cc270b50c6fcd$export$be92b6f5f03c0fe9, PopoverTrigger = $cb5cc270b50c6fcd$export$41fb9f06171c75f4, PopoverContent = React37.forwardRef(({ className, align = "center", sideOffset = 4, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime15.jsx)($cb5cc270b50c6fcd$export$602eac185826482c, { children: /* @__PURE__ */ (0, import_jsx_runtime15.jsx)(
  $cb5cc270b50c6fcd$export$7c6e2c02157bb7d2,
  {
    ref,
    align,
    sideOffset,
    className: cn(
      "z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
) }));
PopoverContent.displayName = $cb5cc270b50c6fcd$export$7c6e2c02157bb7d2.displayName;

// app/components/user-invite-card.tsx
var import_jsx_runtime16 = __toESM(require_jsx_runtime(), 1);
function UserInviteCard({ projectName, projectId }) {
  let queryClient = useQueryClient(), { mutate: acceptInvite2 } = useMutation({
    mutationFn: fetchers.acceptInvite,
    onSuccess: async () => {
      await Promise.all([
        queryClient.invalidateQueries({ queryKey: ["projects"] }),
        queryClient.invalidateQueries({ queryKey: ["user-invites"] })
      ]);
    }
  }), { mutate: rejectInvite2 } = useMutation({
    mutationFn: fetchers.rejectInvite,
    onSuccess: async () => {
      queryClient.invalidateQueries({ queryKey: ["user-invites"] });
    }
  }), handleAcceptInvite = () => {
    acceptInvite2({ projectId });
  }, handleRejectInvite = () => {
    rejectInvite2({ projectId });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("div", { className: "bg-amber-foreground border-b p-2", children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
    motion.div,
    {
      className: "container",
      exit: { opacity: 0, x: "100%", transition: { duration: 0.2 } },
      children: /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex flex-wrap items-center justify-between gap-y-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("p", { children: [
          "You have been invited to the project",
          " ",
          /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("span", { className: "font-semibold", children: projectName }),
          "."
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "space-x-2", children: [
          /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Button, { variant: "default", onClick: handleAcceptInvite, size: "sm", children: "Accept" }),
          /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(Popover, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(PopoverTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Button, { variant: "destructive", size: "sm", children: "Reject" }) }),
            /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)(PopoverContent, { side: "bottom", align: "center", className: "p-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime16.jsx)("p", { className: "font-medium text-primary", children: "Are you sure you want to reject this invite?" }),
              /* @__PURE__ */ (0, import_jsx_runtime16.jsxs)("div", { className: "flex justify-end gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(
                  Button,
                  {
                    variant: "default",
                    onClick: handleRejectInvite,
                    size: "sm",
                    className: "h-7",
                    children: "Yes"
                  }
                ),
                /* @__PURE__ */ (0, import_jsx_runtime16.jsx)($cb5cc270b50c6fcd$export$f39c2d165cd861fe, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime16.jsx)(Button, { variant: "outline", size: "sm", className: "h-7", children: "No" }) })
              ] })
            ] })
          ] })
        ] })
      ] })
    }
  ) });
}

// app/components/user-invite-list.tsx
var import_jsx_runtime17 = __toESM(require_jsx_runtime(), 1), UserInviteList = ({ className }) => {
  let { data: invites } = useQuery({
    queryKey: ["user-invites"],
    queryFn: () => fetchers.getUserInvites()
  });
  return /* @__PURE__ */ (0, import_jsx_runtime17.jsx)("div", { className: cn(className, "flex flex-col"), children: /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(AnimatePresence, { initial: !1, children: invites?.map((invite) => /* @__PURE__ */ (0, import_jsx_runtime17.jsx)(UserInviteCard, { ...invite }, invite.id)) }) });
};

// app/components/ui/card.tsx
var React38 = __toESM(require_react(), 1);
var import_jsx_runtime18 = __toESM(require_jsx_runtime(), 1), Card = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "div",
  {
    ref,
    className: cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    ),
    ...props
  }
));
Card.displayName = "Card";
var CardHeader = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "div",
  {
    ref,
    className: cn("flex flex-col space-y-1.5 p-6", className),
    ...props
  }
));
CardHeader.displayName = "CardHeader";
var CardTitle = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "h3",
  {
    ref,
    className: cn("font-semibold leading-none tracking-tight", className),
    ...props
  }
));
CardTitle.displayName = "CardTitle";
var CardDescription = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "p",
  {
    ref,
    className: cn("text-sm text-muted-foreground", className),
    ...props
  }
));
CardDescription.displayName = "CardDescription";
var CardContent = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)("div", { ref, className: cn("p-6 pt-0", className), ...props }));
CardContent.displayName = "CardContent";
var CardFooter = React38.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime18.jsx)(
  "div",
  {
    ref,
    className: cn("flex items-center p-6 pt-0", className),
    ...props
  }
));
CardFooter.displayName = "CardFooter";

// app/components/project-card.tsx
var import_jsx_runtime19 = __toESM(require_jsx_runtime(), 1);
function ProjectCard({ id: id3, name, feedbackCount, createdAt }) {
  let localCreatedAt = format(
    parseISO(createdAt),
    "MMM dd, yyyy"
  );
  return /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(Link2, { to: `/dashboard/${id3}`, children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(Card, { className: "group rounded-lg shadow-none", children: [
    /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)(CardHeader, { className: "flex flex-row items-center justify-between space-y-0 pb-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(CardTitle, { className: "text-sm font-medium", children: name }),
      /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(ChevronRightIcon, { className: "h-4 w-4 text-muted-foreground transition-transform group-hover:translate-x-1" })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime19.jsx)(CardContent, { children: /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "mt-2 flex items-end justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "font-bold", children: [
          "+",
          feedbackCount
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("p", { className: "text-xs text-muted-foreground", children: "total feedback" })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime19.jsxs)("div", { className: "text-right", children: [
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("div", { className: "text-xs", children: localCreatedAt }),
        /* @__PURE__ */ (0, import_jsx_runtime19.jsx)("p", { className: "text-xs text-muted-foreground", children: "created at" })
      ] })
    ] }) })
  ] }) });
}

// app/components/ui/skeleton.tsx
var import_jsx_runtime20 = __toESM(require_jsx_runtime(), 1);
function Skeleton({
  className,
  ...props
}) {
  return /* @__PURE__ */ (0, import_jsx_runtime20.jsx)(
    "div",
    {
      className: cn("animate-pulse rounded-md bg-primary/10", className),
      ...props
    }
  );
}

// app/components/project-card-skeleton.tsx
var import_jsx_runtime21 = __toESM(require_jsx_runtime(), 1);
function ProjectCardSkeleton() {
  return /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)("div", { className: "rounded-lg border p-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Skeleton, { className: "h-5" }),
    /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)("div", { className: "mt-4 flex items-end justify-between", children: [
      /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)("div", { className: "w-full space-y-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Skeleton, { className: "h-4 w-1/4" }),
        /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Skeleton, { className: "h-4 w-2/4" })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime21.jsxs)("div", { className: "flex w-full flex-col items-end gap-1", children: [
        /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Skeleton, { className: "h-4 w-2/4" }),
        /* @__PURE__ */ (0, import_jsx_runtime21.jsx)(Skeleton, { className: "h-4 w-1/4" })
      ] })
    ] })
  ] });
}

// app/components/project-empty-view.tsx
var import_jsx_runtime22 = __toESM(require_jsx_runtime(), 1);
function ProjectEmptyView() {
  return /* @__PURE__ */ (0, import_jsx_runtime22.jsxs)("div", { className: "flex w-full flex-col items-center justify-center border border-dashed bg-accent/70 px-4 py-16 text-center dark:bg-accent/10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime22.jsx)(CubeIcon, { className: "h-12 w-12" }),
    /* @__PURE__ */ (0, import_jsx_runtime22.jsx)("h3", { className: "mt-4 text-lg font-medium", children: "You don't have any projects yet." }),
    /* @__PURE__ */ (0, import_jsx_runtime22.jsx)("p", { className: "mt-2 text-muted-foreground", children: "Create your first project and start tracking your feedback." })
  ] });
}

// app/components/project-list.tsx
var import_jsx_runtime23 = __toESM(require_jsx_runtime(), 1);
function ProjectList() {
  let {
    data: projects,
    isPending,
    isError
  } = useQuery({
    queryKey: ["projects"],
    queryFn: () => fetchers.getProjects()
  });
  return isError ? /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("p", { children: "An error occurred while fetching your projects." }) : isPending ? /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "grid gap-5 md:grid-cols-2 lg:grid-cols-3", children: Array.from({ length: 6 }).map((_, index3) => /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(ProjectCardSkeleton, {}, index3)) }) : projects.length === 0 ? /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(ProjectEmptyView, {}) : /* @__PURE__ */ (0, import_jsx_runtime23.jsx)("div", { className: "grid gap-5 md:grid-cols-2 lg:grid-cols-3", children: projects.map((project) => /* @__PURE__ */ (0, import_jsx_runtime23.jsx)(ProjectCard, { ...project }, project.id)) });
}

// app/routes/dashboard/route.tsx
var import_jsx_runtime24 = __toESM(require_jsx_runtime(), 1);
function Dashboard() {
  let [_, setSearchParams] = useSearchParams();
  return /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)(import_jsx_runtime24.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)("div", { className: "container flex flex-wrap items-center justify-between gap-4 py-8 ", children: [
      /* @__PURE__ */ (0, import_jsx_runtime24.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("h2", { className: "text-3xl tracking-wide", children: "Projects" }),
        /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("p", { className: "mt-1 text-muted-foreground", children: "List of projects you have access to." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(
        Button,
        {
          onClick: () => {
            setSearchParams(
              (prev) => (prev.set("modal", "create-project"), prev),
              { replace: !0 }
            );
          },
          children: "Create Project"
        }
      )
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(Separator, {}),
    /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(UserInviteList, {}),
    /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("div", { className: "h-full bg-accent/50 py-4 dark:bg-background md:py-8", children: /* @__PURE__ */ (0, import_jsx_runtime24.jsx)("div", { className: "container", children: /* @__PURE__ */ (0, import_jsx_runtime24.jsx)(ProjectList, {}) }) })
  ] });
}

// app/routes/landing/route.tsx
var route_exports2 = {};
__export(route_exports2, {
  default: () => Index,
  meta: () => meta
});

// app/components/ui/select.tsx
var React39 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-select/dist/index.mjs
var import_react62 = __toESM(require_react(), 1), import_react_dom6 = __toESM(require_react_dom(), 1);

// ../../node_modules/@radix-ui/number/dist/index.mjs
function $ae6933e535247d3d$export$7d15b64cf5a3a4c4(value, [min2, max2]) {
  return Math.min(max2, Math.max(min2, value));
}

// ../../node_modules/@radix-ui/react-direction/dist/index.mjs
var import_react60 = __toESM(require_react(), 1), $f631663db3294ace$var$DirectionContext = /* @__PURE__ */ (0, import_react60.createContext)(void 0);
function $f631663db3294ace$export$b39126d51d94e6f3(localDir) {
  let globalDir = (0, import_react60.useContext)($f631663db3294ace$var$DirectionContext);
  return localDir || globalDir || "ltr";
}

// ../../node_modules/@radix-ui/react-use-previous/dist/index.mjs
var import_react61 = __toESM(require_react(), 1);
function $010c2913dbd2fe3d$export$5cae361ad82dce8b(value) {
  let ref = (0, import_react61.useRef)({
    value,
    previous: value
  });
  return (0, import_react61.useMemo)(() => (ref.current.value !== value && (ref.current.previous = ref.current.value, ref.current.value = value), ref.current.previous), [
    value
  ]);
}

// ../../node_modules/@radix-ui/react-select/dist/index.mjs
var $cc7e05a45900e73f$var$OPEN_KEYS = [
  " ",
  "Enter",
  "ArrowUp",
  "ArrowDown"
], $cc7e05a45900e73f$var$SELECTION_KEYS = [
  " ",
  "Enter"
], $cc7e05a45900e73f$var$SELECT_NAME = "Select", [$cc7e05a45900e73f$var$Collection, $cc7e05a45900e73f$var$useCollection, $cc7e05a45900e73f$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($cc7e05a45900e73f$var$SELECT_NAME), [$cc7e05a45900e73f$var$createSelectContext, $cc7e05a45900e73f$export$286727a75dc039bd] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cc7e05a45900e73f$var$SELECT_NAME, [
  $cc7e05a45900e73f$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923
]), $cc7e05a45900e73f$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923(), [$cc7e05a45900e73f$var$SelectProvider, $cc7e05a45900e73f$var$useSelectContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME), [$cc7e05a45900e73f$var$SelectNativeOptionsProvider, $cc7e05a45900e73f$var$useSelectNativeOptionsContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$SELECT_NAME), $cc7e05a45900e73f$export$ef9b1a59e592288f = (props) => {
  let { __scopeSelect, children, open: openProp, defaultOpen, onOpenChange, value: valueProp, defaultValue, onValueChange, dir, name, autoComplete, disabled, required } = props, popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect), [trigger, setTrigger] = (0, import_react62.useState)(null), [valueNode, setValueNode] = (0, import_react62.useState)(null), [valueNodeHasChildren, setValueNodeHasChildren] = (0, import_react62.useState)(!1), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  }), [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange
  }), triggerPointerDownPosRef = (0, import_react62.useRef)(null), isFormControl = trigger ? Boolean(trigger.closest("form")) : !0, [nativeOptionsSet, setNativeOptionsSet] = (0, import_react62.useState)(/* @__PURE__ */ new Set()), nativeSelectKey = Array.from(nativeOptionsSet).map(
    (option) => option.props.value
  ).join(";");
  return /* @__PURE__ */ (0, import_react62.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectProvider, {
    required,
    scope: __scopeSelect,
    trigger,
    onTriggerChange: setTrigger,
    valueNode,
    onValueNodeChange: setValueNode,
    valueNodeHasChildren,
    onValueNodeHasChildrenChange: setValueNodeHasChildren,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    value,
    onValueChange: setValue,
    open,
    onOpenChange: setOpen,
    dir: direction,
    triggerPointerDownPosRef,
    disabled
  }, /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$Collection.Provider, {
    scope: __scopeSelect
  }, /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectNativeOptionsProvider, {
    scope: props.__scopeSelect,
    onNativeOptionAdd: (0, import_react62.useCallback)((option) => {
      setNativeOptionsSet(
        (prev) => new Set(prev).add(option)
      );
    }, []),
    onNativeOptionRemove: (0, import_react62.useCallback)((option) => {
      setNativeOptionsSet((prev) => {
        let optionsSet = new Set(prev);
        return optionsSet.delete(option), optionsSet;
      });
    }, [])
  }, children)), isFormControl ? /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$BubbleSelect, {
    key: nativeSelectKey,
    "aria-hidden": !0,
    required,
    tabIndex: -1,
    name,
    autoComplete,
    value,
    onChange: (event) => setValue(event.target.value),
    disabled
  }, value === void 0 ? /* @__PURE__ */ (0, import_react62.createElement)("option", {
    value: ""
  }) : null, Array.from(nativeOptionsSet)) : null));
}, $cc7e05a45900e73f$var$TRIGGER_NAME = "SelectTrigger", $cc7e05a45900e73f$export$3ac1e88a1c0b9f1 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, disabled = !1, ...triggerProps } = props, popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect), context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$TRIGGER_NAME, __scopeSelect), isDisabled = context.disabled || disabled, composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.onTriggerChange), getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect), [searchRef, handleTypeaheadSearch, resetTypeahead] = $cc7e05a45900e73f$var$useTypeaheadSearch((search) => {
    let enabledItems = getItems().filter(
      (item) => !item.disabled
    ), currentItem = enabledItems.find(
      (item) => item.value === context.value
    ), nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);
    nextItem !== void 0 && context.onValueChange(nextItem.value);
  }), handleOpen = () => {
    isDisabled || (context.onOpenChange(!0), resetTypeahead());
  };
  return /* @__PURE__ */ (0, import_react62.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends6({
    asChild: !0
  }, popperScope), /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    role: "combobox",
    "aria-controls": context.contentId,
    "aria-expanded": context.open,
    "aria-required": context.required,
    "aria-autocomplete": "none",
    dir: context.dir,
    "data-state": context.open ? "open" : "closed",
    disabled: isDisabled,
    "data-disabled": isDisabled ? "" : void 0,
    "data-placeholder": $cc7e05a45900e73f$var$shouldShowPlaceholder(context.value) ? "" : void 0
  }, triggerProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onClick, (event) => {
      event.currentTarget.focus();
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onPointerDown, (event) => {
      let target = event.target;
      target.hasPointerCapture(event.pointerId) && target.releasePointerCapture(event.pointerId), event.button === 0 && event.ctrlKey === !1 && (handleOpen(), context.triggerPointerDownPosRef.current = {
        x: Math.round(event.pageX),
        y: Math.round(event.pageY)
      }, event.preventDefault());
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(triggerProps.onKeyDown, (event) => {
      let isTypingAhead = searchRef.current !== "";
      !(event.ctrlKey || event.altKey || event.metaKey) && event.key.length === 1 && handleTypeaheadSearch(event.key), !(isTypingAhead && event.key === " ") && $cc7e05a45900e73f$var$OPEN_KEYS.includes(event.key) && (handleOpen(), event.preventDefault());
    })
  })));
}), $cc7e05a45900e73f$var$VALUE_NAME = "SelectValue", $cc7e05a45900e73f$export$e288731fd71264f0 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, className, style, children, placeholder = "", ...valueProps } = props, context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$VALUE_NAME, __scopeSelect), { onValueNodeHasChildrenChange } = context, hasChildren = children !== void 0, composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, context.onValueNodeChange);
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    onValueNodeHasChildrenChange(hasChildren);
  }, [
    onValueNodeHasChildrenChange,
    hasChildren
  ]), /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({}, valueProps, {
    ref: composedRefs,
    style: {
      pointerEvents: "none"
    }
  }), $cc7e05a45900e73f$var$shouldShowPlaceholder(context.value) ? /* @__PURE__ */ (0, import_react62.createElement)(import_react62.Fragment, null, placeholder) : children);
});
var $cc7e05a45900e73f$export$99b400cabb58c515 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, children, ...iconProps } = props;
  return /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({
    "aria-hidden": !0
  }, iconProps, {
    ref: forwardedRef
  }), children || "\u25BC");
});
var $cc7e05a45900e73f$export$b2af6c9944296213 = (props) => /* @__PURE__ */ (0, import_react62.createElement)($f1701beae083dbae$export$602eac185826482c, _extends6({
  asChild: !0
}, props)), $cc7e05a45900e73f$var$CONTENT_NAME = "SelectContent", $cc7e05a45900e73f$export$c973a4b3cb86a03d = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, props.__scopeSelect), [fragment, setFragment] = (0, import_react62.useState)();
  if ($9f79659886946c16$export$e5c5a5f917a5871c(() => {
    setFragment(new DocumentFragment());
  }, []), !context.open) {
    let frag = fragment;
    return frag ? /* @__PURE__ */ (0, import_react_dom6.createPortal)(/* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectContentProvider, {
      scope: props.__scopeSelect
    }, /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$Collection.Slot, {
      scope: props.__scopeSelect
    }, /* @__PURE__ */ (0, import_react62.createElement)("div", null, props.children))), frag) : null;
  }
  return /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectContentImpl, _extends6({}, props, {
    ref: forwardedRef
  }));
}), $cc7e05a45900e73f$var$CONTENT_MARGIN = 10, [$cc7e05a45900e73f$var$SelectContentProvider, $cc7e05a45900e73f$var$useSelectContentContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$CONTENT_NAME);
var $cc7e05a45900e73f$var$SelectContentImpl = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let {
    __scopeSelect,
    position = "item-aligned",
    onCloseAutoFocus,
    onEscapeKeyDown,
    onPointerDownOutside,
    side,
    sideOffset,
    align,
    alignOffset,
    arrowPadding,
    collisionBoundary,
    collisionPadding,
    sticky,
    hideWhenDetached,
    avoidCollisions,
    //
    ...contentProps
  } = props, context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect), [content, setContent] = (0, import_react62.useState)(null), [viewport, setViewport] = (0, import_react62.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  ), [selectedItem, setSelectedItem] = (0, import_react62.useState)(null), [selectedItemText, setSelectedItemText] = (0, import_react62.useState)(null), getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect), [isPositioned, setIsPositioned] = (0, import_react62.useState)(!1), firstValidItemFoundRef = (0, import_react62.useRef)(!1);
  (0, import_react62.useEffect)(() => {
    if (content)
      return hideOthers(content);
  }, [
    content
  ]), $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  let focusFirst = (0, import_react62.useCallback)((candidates) => {
    let [firstItem, ...restItems] = getItems().map(
      (item) => item.ref.current
    ), [lastItem] = restItems.slice(-1), PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
    for (let candidate of candidates)
      if (candidate === PREVIOUSLY_FOCUSED_ELEMENT || (candidate?.scrollIntoView({
        block: "nearest"
      }), candidate === firstItem && viewport && (viewport.scrollTop = 0), candidate === lastItem && viewport && (viewport.scrollTop = viewport.scrollHeight), candidate?.focus(), document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT))
        return;
  }, [
    getItems,
    viewport
  ]), focusSelectedItem = (0, import_react62.useCallback)(
    () => focusFirst([
      selectedItem,
      content
    ]),
    [
      focusFirst,
      selectedItem,
      content
    ]
  );
  (0, import_react62.useEffect)(() => {
    isPositioned && focusSelectedItem();
  }, [
    isPositioned,
    focusSelectedItem
  ]);
  let { onOpenChange, triggerPointerDownPosRef } = context;
  (0, import_react62.useEffect)(() => {
    if (content) {
      let pointerMoveDelta = {
        x: 0,
        y: 0
      }, handlePointerMove = (event) => {
        var _triggerPointerDownPo, _triggerPointerDownPo2, _triggerPointerDownPo3, _triggerPointerDownPo4;
        pointerMoveDelta = {
          x: Math.abs(Math.round(event.pageX) - ((_triggerPointerDownPo = (_triggerPointerDownPo2 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo2 === void 0 ? void 0 : _triggerPointerDownPo2.x) !== null && _triggerPointerDownPo !== void 0 ? _triggerPointerDownPo : 0)),
          y: Math.abs(Math.round(event.pageY) - ((_triggerPointerDownPo3 = (_triggerPointerDownPo4 = triggerPointerDownPosRef.current) === null || _triggerPointerDownPo4 === void 0 ? void 0 : _triggerPointerDownPo4.y) !== null && _triggerPointerDownPo3 !== void 0 ? _triggerPointerDownPo3 : 0))
        };
      }, handlePointerUp = (event) => {
        pointerMoveDelta.x <= 10 && pointerMoveDelta.y <= 10 ? event.preventDefault() : content.contains(event.target) || onOpenChange(!1), document.removeEventListener("pointermove", handlePointerMove), triggerPointerDownPosRef.current = null;
      };
      return triggerPointerDownPosRef.current !== null && (document.addEventListener("pointermove", handlePointerMove), document.addEventListener("pointerup", handlePointerUp, {
        capture: !0,
        once: !0
      })), () => {
        document.removeEventListener("pointermove", handlePointerMove), document.removeEventListener("pointerup", handlePointerUp, {
          capture: !0
        });
      };
    }
  }, [
    content,
    onOpenChange,
    triggerPointerDownPosRef
  ]), (0, import_react62.useEffect)(() => {
    let close = () => onOpenChange(!1);
    return window.addEventListener("blur", close), window.addEventListener("resize", close), () => {
      window.removeEventListener("blur", close), window.removeEventListener("resize", close);
    };
  }, [
    onOpenChange
  ]);
  let [searchRef, handleTypeaheadSearch] = $cc7e05a45900e73f$var$useTypeaheadSearch((search) => {
    let enabledItems = getItems().filter(
      (item) => !item.disabled
    ), currentItem = enabledItems.find(
      (item) => item.ref.current === document.activeElement
    ), nextItem = $cc7e05a45900e73f$var$findNextItem(enabledItems, search, currentItem);
    nextItem && setTimeout(
      () => nextItem.ref.current.focus()
    );
  }), itemRefCallback = (0, import_react62.useCallback)((node, value, disabled) => {
    let isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
    (context.value !== void 0 && context.value === value || isFirstValidItem) && (setSelectedItem(node), isFirstValidItem && (firstValidItemFoundRef.current = !0));
  }, [
    context.value
  ]), handleItemLeave = (0, import_react62.useCallback)(
    () => content?.focus(),
    [
      content
    ]
  ), itemTextRefCallback = (0, import_react62.useCallback)((node, value, disabled) => {
    let isFirstValidItem = !firstValidItemFoundRef.current && !disabled;
    (context.value !== void 0 && context.value === value || isFirstValidItem) && setSelectedItemText(node);
  }, [
    context.value
  ]), SelectPosition = position === "popper" ? $cc7e05a45900e73f$var$SelectPopperPosition : $cc7e05a45900e73f$var$SelectItemAlignedPosition, popperContentProps = SelectPosition === $cc7e05a45900e73f$var$SelectPopperPosition ? {
    side,
    sideOffset,
    align,
    alignOffset,
    arrowPadding,
    collisionBoundary,
    collisionPadding,
    sticky,
    hideWhenDetached,
    avoidCollisions
  } : {};
  return /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectContentProvider, {
    scope: __scopeSelect,
    content,
    viewport,
    onViewportChange: setViewport,
    itemRefCallback,
    selectedItem,
    onItemLeave: handleItemLeave,
    itemTextRefCallback,
    focusSelectedItem,
    selectedItemText,
    position,
    isPositioned,
    searchRef
  }, /* @__PURE__ */ (0, import_react62.createElement)(Combination_default, {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: !0
  }, /* @__PURE__ */ (0, import_react62.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: !0,
    trapped: context.open,
    onMountAutoFocus: (event) => {
      event.preventDefault();
    },
    onUnmountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onCloseAutoFocus, (event) => {
      var _context$trigger;
      (_context$trigger = context.trigger) === null || _context$trigger === void 0 || _context$trigger.focus({
        preventScroll: !0
      }), event.preventDefault();
    })
  }, /* @__PURE__ */ (0, import_react62.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: !0,
    disableOutsidePointerEvents: !0,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: () => context.onOpenChange(!1)
  }, /* @__PURE__ */ (0, import_react62.createElement)(SelectPosition, _extends6({
    role: "listbox",
    id: context.contentId,
    "data-state": context.open ? "open" : "closed",
    dir: context.dir,
    onContextMenu: (event) => event.preventDefault()
  }, contentProps, popperContentProps, {
    onPlaced: () => setIsPositioned(!0),
    ref: composedRefs,
    style: {
      // flex layout so we can place the scroll buttons properly
      display: "flex",
      flexDirection: "column",
      // reset the outline by default as the content MAY get focused
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      let isModifierKey = event.ctrlKey || event.altKey || event.metaKey;
      if (event.key === "Tab" && event.preventDefault(), !isModifierKey && event.key.length === 1 && handleTypeaheadSearch(event.key), [
        "ArrowUp",
        "ArrowDown",
        "Home",
        "End"
      ].includes(event.key)) {
        let candidateNodes = getItems().filter(
          (item) => !item.disabled
        ).map(
          (item) => item.ref.current
        );
        if ([
          "ArrowUp",
          "End"
        ].includes(event.key) && (candidateNodes = candidateNodes.slice().reverse()), [
          "ArrowUp",
          "ArrowDown"
        ].includes(event.key)) {
          let currentElement = event.target, currentIndex = candidateNodes.indexOf(currentElement);
          candidateNodes = candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => focusFirst(candidateNodes)
        ), event.preventDefault();
      }
    })
  }))))));
});
var $cc7e05a45900e73f$var$SelectItemAlignedPosition = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, onPlaced, ...popperProps } = props, context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect), contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$CONTENT_NAME, __scopeSelect), [contentWrapper, setContentWrapper] = (0, import_react62.useState)(null), [content, setContent] = (0, import_react62.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setContent(node)
  ), getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect), shouldExpandOnScrollRef = (0, import_react62.useRef)(!1), shouldRepositionRef = (0, import_react62.useRef)(!0), { viewport, selectedItem, selectedItemText, focusSelectedItem } = contentContext, position = (0, import_react62.useCallback)(() => {
    if (context.trigger && context.valueNode && contentWrapper && content && viewport && selectedItem && selectedItemText) {
      let triggerRect = context.trigger.getBoundingClientRect(), contentRect = content.getBoundingClientRect(), valueNodeRect = context.valueNode.getBoundingClientRect(), itemTextRect = selectedItemText.getBoundingClientRect();
      if (context.dir !== "rtl") {
        let itemTextOffset = itemTextRect.left - contentRect.left, left = valueNodeRect.left - itemTextOffset, leftDelta = triggerRect.left - left, minContentWidth = triggerRect.width + leftDelta, contentWidth = Math.max(minContentWidth, contentRect.width), rightEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN, clampedLeft = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(left, [
          $cc7e05a45900e73f$var$CONTENT_MARGIN,
          rightEdge - contentWidth
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px", contentWrapper.style.left = clampedLeft + "px";
      } else {
        let itemTextOffset = contentRect.right - itemTextRect.right, right = window.innerWidth - valueNodeRect.right - itemTextOffset, rightDelta = window.innerWidth - triggerRect.right - right, minContentWidth = triggerRect.width + rightDelta, contentWidth = Math.max(minContentWidth, contentRect.width), leftEdge = window.innerWidth - $cc7e05a45900e73f$var$CONTENT_MARGIN, clampedRight = $ae6933e535247d3d$export$7d15b64cf5a3a4c4(right, [
          $cc7e05a45900e73f$var$CONTENT_MARGIN,
          leftEdge - contentWidth
        ]);
        contentWrapper.style.minWidth = minContentWidth + "px", contentWrapper.style.right = clampedRight + "px";
      }
      let items = getItems(), availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2, itemsHeight = viewport.scrollHeight, contentStyles = window.getComputedStyle(content), contentBorderTopWidth = parseInt(contentStyles.borderTopWidth, 10), contentPaddingTop = parseInt(contentStyles.paddingTop, 10), contentBorderBottomWidth = parseInt(contentStyles.borderBottomWidth, 10), contentPaddingBottom = parseInt(contentStyles.paddingBottom, 10), fullContentHeight = contentBorderTopWidth + contentPaddingTop + itemsHeight + contentPaddingBottom + contentBorderBottomWidth, minContentHeight = Math.min(selectedItem.offsetHeight * 5, fullContentHeight), viewportStyles = window.getComputedStyle(viewport), viewportPaddingTop = parseInt(viewportStyles.paddingTop, 10), viewportPaddingBottom = parseInt(viewportStyles.paddingBottom, 10), topEdgeToTriggerMiddle = triggerRect.top + triggerRect.height / 2 - $cc7e05a45900e73f$var$CONTENT_MARGIN, triggerMiddleToBottomEdge = availableHeight - topEdgeToTriggerMiddle, selectedItemHalfHeight = selectedItem.offsetHeight / 2, itemOffsetMiddle = selectedItem.offsetTop + selectedItemHalfHeight, contentTopToItemMiddle = contentBorderTopWidth + contentPaddingTop + itemOffsetMiddle, itemMiddleToContentBottom = fullContentHeight - contentTopToItemMiddle;
      if (contentTopToItemMiddle <= topEdgeToTriggerMiddle) {
        let isLastItem = selectedItem === items[items.length - 1].ref.current;
        contentWrapper.style.bottom = "0px";
        let viewportOffsetBottom = content.clientHeight - viewport.offsetTop - viewport.offsetHeight, clampedTriggerMiddleToBottomEdge = Math.max(triggerMiddleToBottomEdge, selectedItemHalfHeight + (isLastItem ? viewportPaddingBottom : 0) + viewportOffsetBottom + contentBorderBottomWidth), height = contentTopToItemMiddle + clampedTriggerMiddleToBottomEdge;
        contentWrapper.style.height = height + "px";
      } else {
        let isFirstItem = selectedItem === items[0].ref.current;
        contentWrapper.style.top = "0px";
        let height = Math.max(topEdgeToTriggerMiddle, contentBorderTopWidth + viewport.offsetTop + (isFirstItem ? viewportPaddingTop : 0) + selectedItemHalfHeight) + itemMiddleToContentBottom;
        contentWrapper.style.height = height + "px", viewport.scrollTop = contentTopToItemMiddle - topEdgeToTriggerMiddle + viewport.offsetTop;
      }
      contentWrapper.style.margin = `${$cc7e05a45900e73f$var$CONTENT_MARGIN}px 0`, contentWrapper.style.minHeight = minContentHeight + "px", contentWrapper.style.maxHeight = availableHeight + "px", onPlaced?.(), requestAnimationFrame(
        () => shouldExpandOnScrollRef.current = !0
      );
    }
  }, [
    getItems,
    context.trigger,
    context.valueNode,
    contentWrapper,
    content,
    viewport,
    selectedItem,
    selectedItemText,
    context.dir,
    onPlaced
  ]);
  $9f79659886946c16$export$e5c5a5f917a5871c(
    () => position(),
    [
      position
    ]
  );
  let [contentZIndex, setContentZIndex] = (0, import_react62.useState)();
  $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    content && setContentZIndex(window.getComputedStyle(content).zIndex);
  }, [
    content
  ]);
  let handleScrollButtonChange = (0, import_react62.useCallback)((node) => {
    node && shouldRepositionRef.current === !0 && (position(), focusSelectedItem?.(), shouldRepositionRef.current = !1);
  }, [
    position,
    focusSelectedItem
  ]);
  return /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectViewportProvider, {
    scope: __scopeSelect,
    contentWrapper,
    shouldExpandOnScrollRef,
    onScrollButtonChange: handleScrollButtonChange
  }, /* @__PURE__ */ (0, import_react62.createElement)("div", {
    ref: setContentWrapper,
    style: {
      display: "flex",
      flexDirection: "column",
      position: "fixed",
      zIndex: contentZIndex
    }
  }, /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, popperProps, {
    ref: composedRefs,
    style: {
      // When we get the height of the content, it includes borders. If we were to set
      // the height without having `boxSizing: 'border-box'` it would be too big.
      boxSizing: "border-box",
      // We need to ensure the content doesn't get taller than the wrapper
      maxHeight: "100%",
      ...popperProps.style
    }
  }))));
});
var $cc7e05a45900e73f$var$SelectPopperPosition = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, align = "start", collisionPadding = $cc7e05a45900e73f$var$CONTENT_MARGIN, ...popperProps } = props, popperScope = $cc7e05a45900e73f$var$usePopperScope(__scopeSelect);
  return /* @__PURE__ */ (0, import_react62.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends6({}, popperScope, popperProps, {
    ref: forwardedRef,
    align,
    collisionPadding,
    style: {
      // Ensure border-box for floating-ui calculations
      boxSizing: "border-box",
      ...popperProps.style,
      "--radix-select-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-select-content-available-width": "var(--radix-popper-available-width)",
      "--radix-select-content-available-height": "var(--radix-popper-available-height)",
      "--radix-select-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-select-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
}), [$cc7e05a45900e73f$var$SelectViewportProvider, $cc7e05a45900e73f$var$useSelectViewportContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$CONTENT_NAME, {}), $cc7e05a45900e73f$var$VIEWPORT_NAME = "SelectViewport", $cc7e05a45900e73f$export$9ed6e7b40248d36d = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, ...viewportProps } = props, contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$VIEWPORT_NAME, __scopeSelect), viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$VIEWPORT_NAME, __scopeSelect), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentContext.onViewportChange), prevScrollTopRef = (0, import_react62.useRef)(0);
  return /* @__PURE__ */ (0, import_react62.createElement)(import_react62.Fragment, null, /* @__PURE__ */ (0, import_react62.createElement)("style", {
    dangerouslySetInnerHTML: {
      __html: "[data-radix-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-select-viewport]::-webkit-scrollbar{display:none}"
    }
  }), /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$Collection.Slot, {
    scope: __scopeSelect
  }, /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-radix-select-viewport": "",
    role: "presentation"
  }, viewportProps, {
    ref: composedRefs,
    style: {
      // we use position: 'relative' here on the `viewport` so that when we call
      // `selectedItem.offsetTop` in calculations, the offset is relative to the viewport
      // (independent of the scrollUpButton).
      position: "relative",
      flex: 1,
      overflow: "auto",
      ...viewportProps.style
    },
    onScroll: $e42e1063c40fb3ef$export$b9ecd428b558ff10(viewportProps.onScroll, (event) => {
      let viewport = event.currentTarget, { contentWrapper, shouldExpandOnScrollRef } = viewportContext;
      if (shouldExpandOnScrollRef != null && shouldExpandOnScrollRef.current && contentWrapper) {
        let scrolledBy = Math.abs(prevScrollTopRef.current - viewport.scrollTop);
        if (scrolledBy > 0) {
          let availableHeight = window.innerHeight - $cc7e05a45900e73f$var$CONTENT_MARGIN * 2, cssMinHeight = parseFloat(contentWrapper.style.minHeight), cssHeight = parseFloat(contentWrapper.style.height), prevHeight = Math.max(cssMinHeight, cssHeight);
          if (prevHeight < availableHeight) {
            let nextHeight = prevHeight + scrolledBy, clampedNextHeight = Math.min(availableHeight, nextHeight), heightDiff = nextHeight - clampedNextHeight;
            contentWrapper.style.height = clampedNextHeight + "px", contentWrapper.style.bottom === "0px" && (viewport.scrollTop = heightDiff > 0 ? heightDiff : 0, contentWrapper.style.justifyContent = "flex-end");
          }
        }
      }
      prevScrollTopRef.current = viewport.scrollTop;
    })
  }))));
}), $cc7e05a45900e73f$var$GROUP_NAME = "SelectGroup", [$cc7e05a45900e73f$var$SelectGroupContextProvider, $cc7e05a45900e73f$var$useSelectGroupContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$GROUP_NAME);
var $cc7e05a45900e73f$var$LABEL_NAME = "SelectLabel", $cc7e05a45900e73f$export$f67338d29bd972f8 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, ...labelProps } = props, groupContext = $cc7e05a45900e73f$var$useSelectGroupContext($cc7e05a45900e73f$var$LABEL_NAME, __scopeSelect);
  return /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    id: groupContext.id
  }, labelProps, {
    ref: forwardedRef
  }));
}), $cc7e05a45900e73f$var$ITEM_NAME = "SelectItem", [$cc7e05a45900e73f$var$SelectItemContextProvider, $cc7e05a45900e73f$var$useSelectItemContext] = $cc7e05a45900e73f$var$createSelectContext($cc7e05a45900e73f$var$ITEM_NAME), $cc7e05a45900e73f$export$13ef48a934230896 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, value, disabled = !1, textValue: textValueProp, ...itemProps } = props, context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect), contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_NAME, __scopeSelect), isSelected = context.value === value, [textValue, setTextValue] = (0, import_react62.useState)(textValueProp ?? ""), [isFocused, setIsFocused] = (0, import_react62.useState)(!1), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, (node) => {
    var _contentContext$itemR;
    return (_contentContext$itemR = contentContext.itemRefCallback) === null || _contentContext$itemR === void 0 ? void 0 : _contentContext$itemR.call(contentContext, node, value, disabled);
  }), textId = $1746a345f3d73bb7$export$f680877a34711e37(), handleSelect = () => {
    disabled || (context.onValueChange(value), context.onOpenChange(!1));
  };
  if (value === "")
    throw new Error("A <Select.Item /> must have a value prop that is not an empty string. This is because the Select value can be set to an empty string to clear the selection and show the placeholder.");
  return /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectItemContextProvider, {
    scope: __scopeSelect,
    value,
    disabled,
    textId,
    isSelected,
    onItemTextChange: (0, import_react62.useCallback)((node) => {
      setTextValue((prevTextValue) => {
        var _node$textContent;
        return prevTextValue || ((_node$textContent = node?.textContent) !== null && _node$textContent !== void 0 ? _node$textContent : "").trim();
      });
    }, [])
  }, /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$Collection.ItemSlot, {
    scope: __scopeSelect,
    value,
    disabled,
    textValue
  }, /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    role: "option",
    "aria-labelledby": textId,
    "data-highlighted": isFocused ? "" : void 0,
    "aria-selected": isSelected && isFocused,
    "data-state": isSelected ? "checked" : "unchecked",
    "aria-disabled": disabled || void 0,
    "data-disabled": disabled ? "" : void 0,
    tabIndex: disabled ? void 0 : -1
  }, itemProps, {
    ref: composedRefs,
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      itemProps.onFocus,
      () => setIsFocused(!0)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      itemProps.onBlur,
      () => setIsFocused(!1)
    ),
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerUp, handleSelect),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerMove, (event) => {
      if (disabled) {
        var _contentContext$onIte;
        (_contentContext$onIte = contentContext.onItemLeave) === null || _contentContext$onIte === void 0 || _contentContext$onIte.call(contentContext);
      } else
        event.currentTarget.focus({
          preventScroll: !0
        });
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onPointerLeave, (event) => {
      if (event.currentTarget === document.activeElement) {
        var _contentContext$onIte2;
        (_contentContext$onIte2 = contentContext.onItemLeave) === null || _contentContext$onIte2 === void 0 || _contentContext$onIte2.call(contentContext);
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onKeyDown, (event) => {
      var _contentContext$searc;
      ((_contentContext$searc = contentContext.searchRef) === null || _contentContext$searc === void 0 ? void 0 : _contentContext$searc.current) !== "" && event.key === " " || ($cc7e05a45900e73f$var$SELECTION_KEYS.includes(event.key) && handleSelect(), event.key === " " && event.preventDefault());
    })
  }))));
}), $cc7e05a45900e73f$var$ITEM_TEXT_NAME = "SelectItemText", $cc7e05a45900e73f$export$3572fb0fb821ff49 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, className, style, ...itemTextProps } = props, context = $cc7e05a45900e73f$var$useSelectContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect), contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect), itemContext = $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect), nativeOptionsContext = $cc7e05a45900e73f$var$useSelectNativeOptionsContext($cc7e05a45900e73f$var$ITEM_TEXT_NAME, __scopeSelect), [itemTextNode, setItemTextNode] = (0, import_react62.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setItemTextNode(node),
    itemContext.onItemTextChange,
    (node) => {
      var _contentContext$itemT;
      return (_contentContext$itemT = contentContext.itemTextRefCallback) === null || _contentContext$itemT === void 0 ? void 0 : _contentContext$itemT.call(contentContext, node, itemContext.value, itemContext.disabled);
    }
  ), textContent = itemTextNode?.textContent, nativeOption = (0, import_react62.useMemo)(
    () => /* @__PURE__ */ (0, import_react62.createElement)("option", {
      key: itemContext.value,
      value: itemContext.value,
      disabled: itemContext.disabled
    }, textContent),
    [
      itemContext.disabled,
      itemContext.value,
      textContent
    ]
  ), { onNativeOptionAdd, onNativeOptionRemove } = nativeOptionsContext;
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => (onNativeOptionAdd(nativeOption), () => onNativeOptionRemove(nativeOption)), [
    onNativeOptionAdd,
    onNativeOptionRemove,
    nativeOption
  ]), /* @__PURE__ */ (0, import_react62.createElement)(import_react62.Fragment, null, /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({
    id: itemContext.textId
  }, itemTextProps, {
    ref: composedRefs
  })), itemContext.isSelected && context.valueNode && !context.valueNodeHasChildren ? /* @__PURE__ */ (0, import_react_dom6.createPortal)(itemTextProps.children, context.valueNode) : null);
}), $cc7e05a45900e73f$var$ITEM_INDICATOR_NAME = "SelectItemIndicator", $cc7e05a45900e73f$export$6b9198de19accfe6 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, ...itemIndicatorProps } = props;
  return $cc7e05a45900e73f$var$useSelectItemContext($cc7e05a45900e73f$var$ITEM_INDICATOR_NAME, __scopeSelect).isSelected ? /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({
    "aria-hidden": !0
  }, itemIndicatorProps, {
    ref: forwardedRef
  })) : null;
}), $cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME = "SelectScrollUpButton", $cc7e05a45900e73f$export$d8117927658af6d7 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME, props.__scopeSelect), viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$SCROLL_UP_BUTTON_NAME, props.__scopeSelect), [canScrollUp1, setCanScrollUp] = (0, import_react62.useState)(!1), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, viewportContext.onScrollButtonChange);
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll3 = function() {
        let canScrollUp = viewport.scrollTop > 0;
        setCanScrollUp(canScrollUp);
      }, viewport = contentContext.viewport;
      return handleScroll3(), viewport.addEventListener("scroll", handleScroll3), () => viewport.removeEventListener("scroll", handleScroll3);
    }
  }, [
    contentContext.viewport,
    contentContext.isPositioned
  ]), canScrollUp1 ? /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectScrollButtonImpl, _extends6({}, props, {
    ref: composedRefs,
    onAutoScroll: () => {
      let { viewport, selectedItem } = contentContext;
      viewport && selectedItem && (viewport.scrollTop = viewport.scrollTop - selectedItem.offsetHeight);
    }
  })) : null;
}), $cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME = "SelectScrollDownButton", $cc7e05a45900e73f$export$ff951e476c12189 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let contentContext = $cc7e05a45900e73f$var$useSelectContentContext($cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect), viewportContext = $cc7e05a45900e73f$var$useSelectViewportContext($cc7e05a45900e73f$var$SCROLL_DOWN_BUTTON_NAME, props.__scopeSelect), [canScrollDown1, setCanScrollDown] = (0, import_react62.useState)(!1), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, viewportContext.onScrollButtonChange);
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (contentContext.viewport && contentContext.isPositioned) {
      let handleScroll3 = function() {
        let maxScroll = viewport.scrollHeight - viewport.clientHeight, canScrollDown = Math.ceil(viewport.scrollTop) < maxScroll;
        setCanScrollDown(canScrollDown);
      }, viewport = contentContext.viewport;
      return handleScroll3(), viewport.addEventListener("scroll", handleScroll3), () => viewport.removeEventListener("scroll", handleScroll3);
    }
  }, [
    contentContext.viewport,
    contentContext.isPositioned
  ]), canScrollDown1 ? /* @__PURE__ */ (0, import_react62.createElement)($cc7e05a45900e73f$var$SelectScrollButtonImpl, _extends6({}, props, {
    ref: composedRefs,
    onAutoScroll: () => {
      let { viewport, selectedItem } = contentContext;
      viewport && selectedItem && (viewport.scrollTop = viewport.scrollTop + selectedItem.offsetHeight);
    }
  })) : null;
}), $cc7e05a45900e73f$var$SelectScrollButtonImpl = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, onAutoScroll, ...scrollIndicatorProps } = props, contentContext = $cc7e05a45900e73f$var$useSelectContentContext("SelectScrollButton", __scopeSelect), autoScrollTimerRef = (0, import_react62.useRef)(null), getItems = $cc7e05a45900e73f$var$useCollection(__scopeSelect), clearAutoScrollTimer = (0, import_react62.useCallback)(() => {
    autoScrollTimerRef.current !== null && (window.clearInterval(autoScrollTimerRef.current), autoScrollTimerRef.current = null);
  }, []);
  return (0, import_react62.useEffect)(() => () => clearAutoScrollTimer(), [
    clearAutoScrollTimer
  ]), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    var _activeItem$ref$curre;
    let activeItem = getItems().find(
      (item) => item.ref.current === document.activeElement
    );
    activeItem == null || (_activeItem$ref$curre = activeItem.ref.current) === null || _activeItem$ref$curre === void 0 || _activeItem$ref$curre.scrollIntoView({
      block: "nearest"
    });
  }, [
    getItems
  ]), /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "aria-hidden": !0
  }, scrollIndicatorProps, {
    ref: forwardedRef,
    style: {
      flexShrink: 0,
      ...scrollIndicatorProps.style
    },
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerDown, () => {
      autoScrollTimerRef.current === null && (autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50));
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerMove, () => {
      var _contentContext$onIte3;
      (_contentContext$onIte3 = contentContext.onItemLeave) === null || _contentContext$onIte3 === void 0 || _contentContext$onIte3.call(contentContext), autoScrollTimerRef.current === null && (autoScrollTimerRef.current = window.setInterval(onAutoScroll, 50));
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(scrollIndicatorProps.onPointerLeave, () => {
      clearAutoScrollTimer();
    })
  }));
});
var $cc7e05a45900e73f$export$eba4b1df07cb1d3 = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { __scopeSelect, ...separatorProps } = props;
  return /* @__PURE__ */ (0, import_react62.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "aria-hidden": !0
  }, separatorProps, {
    ref: forwardedRef
  }));
});
function $cc7e05a45900e73f$var$shouldShowPlaceholder(value) {
  return value === "" || value === void 0;
}
var $cc7e05a45900e73f$var$BubbleSelect = /* @__PURE__ */ (0, import_react62.forwardRef)((props, forwardedRef) => {
  let { value, ...selectProps } = props, ref = (0, import_react62.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), prevValue = $010c2913dbd2fe3d$export$5cae361ad82dce8b(value);
  return (0, import_react62.useEffect)(() => {
    let select = ref.current, selectProto = window.HTMLSelectElement.prototype, setValue = Object.getOwnPropertyDescriptor(selectProto, "value").set;
    if (prevValue !== value && setValue) {
      let event = new Event("change", {
        bubbles: !0
      });
      setValue.call(select, value), select.dispatchEvent(event);
    }
  }, [
    prevValue,
    value
  ]), /* @__PURE__ */ (0, import_react62.createElement)($ea1ef594cf570d83$export$439d29a4e110a164, {
    asChild: !0
  }, /* @__PURE__ */ (0, import_react62.createElement)("select", _extends6({}, selectProps, {
    ref: composedRefs,
    defaultValue: value
  })));
});
$cc7e05a45900e73f$var$BubbleSelect.displayName = "BubbleSelect";
function $cc7e05a45900e73f$var$useTypeaheadSearch(onSearchChange) {
  let handleSearchChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onSearchChange), searchRef = (0, import_react62.useRef)(""), timerRef = (0, import_react62.useRef)(0), handleTypeaheadSearch = (0, import_react62.useCallback)((key) => {
    let search = searchRef.current + key;
    handleSearchChange(search), function updateSearch(value) {
      searchRef.current = value, window.clearTimeout(timerRef.current), value !== "" && (timerRef.current = window.setTimeout(
        () => updateSearch(""),
        1e3
      ));
    }(search);
  }, [
    handleSearchChange
  ]), resetTypeahead = (0, import_react62.useCallback)(() => {
    searchRef.current = "", window.clearTimeout(timerRef.current);
  }, []);
  return (0, import_react62.useEffect)(() => () => window.clearTimeout(timerRef.current), []), [
    searchRef,
    handleTypeaheadSearch,
    resetTypeahead
  ];
}
function $cc7e05a45900e73f$var$findNextItem(items, search, currentItem) {
  let normalizedSearch = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  ) ? search[0] : search, currentItemIndex = currentItem ? items.indexOf(currentItem) : -1, wrappedItems = $cc7e05a45900e73f$var$wrapArray(items, Math.max(currentItemIndex, 0));
  normalizedSearch.length === 1 && (wrappedItems = wrappedItems.filter(
    (v2) => v2 !== currentItem
  ));
  let nextItem = wrappedItems.find(
    (item) => item.textValue.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextItem !== currentItem ? nextItem : void 0;
}
function $cc7e05a45900e73f$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index3) => array[(startIndex + index3) % array.length]
  );
}
var $cc7e05a45900e73f$export$be92b6f5f03c0fe9 = $cc7e05a45900e73f$export$ef9b1a59e592288f, $cc7e05a45900e73f$export$41fb9f06171c75f4 = $cc7e05a45900e73f$export$3ac1e88a1c0b9f1, $cc7e05a45900e73f$export$4c8d1a57a761ef94 = $cc7e05a45900e73f$export$e288731fd71264f0, $cc7e05a45900e73f$export$f04a61298a47a40f = $cc7e05a45900e73f$export$99b400cabb58c515, $cc7e05a45900e73f$export$602eac185826482c = $cc7e05a45900e73f$export$b2af6c9944296213, $cc7e05a45900e73f$export$7c6e2c02157bb7d2 = $cc7e05a45900e73f$export$c973a4b3cb86a03d, $cc7e05a45900e73f$export$d5c6c08dc2d3ca7 = $cc7e05a45900e73f$export$9ed6e7b40248d36d;
var $cc7e05a45900e73f$export$b04be29aa201d4f5 = $cc7e05a45900e73f$export$f67338d29bd972f8, $cc7e05a45900e73f$export$6d08773d2e66f8f2 = $cc7e05a45900e73f$export$13ef48a934230896, $cc7e05a45900e73f$export$d6e5bf9c43ea9319 = $cc7e05a45900e73f$export$3572fb0fb821ff49, $cc7e05a45900e73f$export$c3468e2714d175fa = $cc7e05a45900e73f$export$6b9198de19accfe6, $cc7e05a45900e73f$export$2f60d3ec9ad468f2 = $cc7e05a45900e73f$export$d8117927658af6d7, $cc7e05a45900e73f$export$bf1aedc3039c8d63 = $cc7e05a45900e73f$export$ff951e476c12189, $cc7e05a45900e73f$export$1ff3c3f08ae963c0 = $cc7e05a45900e73f$export$eba4b1df07cb1d3;

// app/components/ui/select.tsx
var import_jsx_runtime25 = __toESM(require_jsx_runtime(), 1), Select = $cc7e05a45900e73f$export$be92b6f5f03c0fe9;
var SelectValue = $cc7e05a45900e73f$export$4c8d1a57a761ef94, SelectTrigger = React39.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
  $cc7e05a45900e73f$export$41fb9f06171c75f4,
  {
    ref,
    className: cn(
      "flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1",
      className
    ),
    ...props,
    children: [
      children,
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)($cc7e05a45900e73f$export$f04a61298a47a40f, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(CaretSortIcon, { className: "h-4 w-4 opacity-50" }) })
    ]
  }
));
SelectTrigger.displayName = $cc7e05a45900e73f$export$41fb9f06171c75f4.displayName;
var SelectScrollUpButton = React39.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
  $cc7e05a45900e73f$export$2f60d3ec9ad468f2,
  {
    ref,
    className: cn(
      "flex cursor-default items-center justify-center py-1",
      className
    ),
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(ChevronUpIcon, {})
  }
));
SelectScrollUpButton.displayName = $cc7e05a45900e73f$export$2f60d3ec9ad468f2.displayName;
var SelectScrollDownButton = React39.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
  $cc7e05a45900e73f$export$bf1aedc3039c8d63,
  {
    ref,
    className: cn(
      "flex cursor-default items-center justify-center py-1",
      className
    ),
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(ChevronDownIcon, {})
  }
));
SelectScrollDownButton.displayName = $cc7e05a45900e73f$export$bf1aedc3039c8d63.displayName;
var SelectContent = React39.forwardRef(({ className, children, position = "popper", ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)($cc7e05a45900e73f$export$602eac185826482c, { children: /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
  $cc7e05a45900e73f$export$7c6e2c02157bb7d2,
  {
    ref,
    className: cn(
      "relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      position === "popper" && "data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1",
      className
    ),
    position,
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(SelectScrollUpButton, {}),
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
        $cc7e05a45900e73f$export$d5c6c08dc2d3ca7,
        {
          className: cn(
            "p-1",
            position === "popper" && "h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]"
          ),
          children
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(SelectScrollDownButton, {})
    ]
  }
) }));
SelectContent.displayName = $cc7e05a45900e73f$export$7c6e2c02157bb7d2.displayName;
var SelectLabel = React39.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
  $cc7e05a45900e73f$export$b04be29aa201d4f5,
  {
    ref,
    className: cn("px-2 py-1.5 text-sm font-semibold", className),
    ...props
  }
));
SelectLabel.displayName = $cc7e05a45900e73f$export$b04be29aa201d4f5.displayName;
var SelectItem = React39.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsxs)(
  $cc7e05a45900e73f$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn(
      "relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)("span", { className: "absolute right-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)($cc7e05a45900e73f$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(CheckIcon, { className: "h-4 w-4" }) }) }),
      /* @__PURE__ */ (0, import_jsx_runtime25.jsx)($cc7e05a45900e73f$export$d6e5bf9c43ea9319, { children })
    ]
  }
));
SelectItem.displayName = $cc7e05a45900e73f$export$6d08773d2e66f8f2.displayName;
var SelectSeparator = React39.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime25.jsx)(
  $cc7e05a45900e73f$export$1ff3c3f08ae963c0,
  {
    ref,
    className: cn("-mx-1 my-1 h-px bg-muted", className),
    ...props
  }
));
SelectSeparator.displayName = $cc7e05a45900e73f$export$1ff3c3f08ae963c0.displayName;

// app/components/headers/theme-switcher.tsx
var import_jsx_runtime26 = __toESM(require_jsx_runtime(), 1);
function ThemeSwitcher() {
  let { theme, setTheme } = y();
  return /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)(Select, { defaultValue: "system", value: theme, onValueChange: setTheme, children: [
    /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SelectTrigger, { className: "h-6 w-[90px] px-1.5", children: /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SelectValue, { role: "menuitem", asChild: !0, children: {
      system: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(DesktopIcon, { className: "w-3 h-3" }),
        "System"
      ] }),
      dark: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(MoonIcon, {}),
        "Dark"
      ] }),
      light: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SunIcon, {}),
        "Light"
      ] })
    }[theme ?? "system"] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)(SelectContent, { align: "end", children: [
      /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SelectItem, { value: "system", children: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(DesktopIcon, {}),
        "System"
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SelectItem, { value: "dark", children: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(MoonIcon, {}),
        "Dark"
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SelectItem, { value: "light", children: /* @__PURE__ */ (0, import_jsx_runtime26.jsxs)("div", { className: "flex items-center gap-1 text-xs", children: [
        /* @__PURE__ */ (0, import_jsx_runtime26.jsx)(SunIcon, {}),
        "Light"
      ] }) })
    ] })
  ] });
}

// app/routes/landing/route.tsx
var import_jsx_runtime27 = __toESM(require_jsx_runtime(), 1), meta = () => [
  { title: "New Remix App" },
  { name: "description", content: "Welcome to Remix!" }
];
function Index() {
  return /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("div", { className: "p-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("h1", { className: "text-4xl font-bold", children: "Welcome to Needback!" }),
    /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("br", {}),
    /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("div", { className: "flex items-center gap-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("p", { children: "This is a theme switcher" }),
      /* @__PURE__ */ (0, import_jsx_runtime27.jsx)(ThemeSwitcher, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime27.jsx)("br", {}),
    /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)("div", { className: "flex flex-col gap-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(Link2, { className: "text-blue-600", to: "/dashboard", children: [
        "->",
        " Dashboard"
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime27.jsxs)(Link2, { className: "text-blue-600", to: "/docs", children: [
        "->",
        " Docs"
      ] })
    ] })
  ] });
}

// app/routes/docs/route.tsx
var route_exports3 = {};
__export(route_exports3, {
  default: () => Docs
});
var import_jsx_runtime28 = __toESM(require_jsx_runtime(), 1);
function Docs() {
  return /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("div", { className: "p-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("h1", { className: "text-4xl font-bold", children: "Welcome to Documents!" }),
    /* @__PURE__ */ (0, import_jsx_runtime28.jsx)("br", {}),
    /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)("div", { className: "flex flex-col gap-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(Link2, { className: "text-blue-600", to: "/", children: [
        "->",
        " Home"
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime28.jsxs)(Link2, { className: "text-blue-600", to: "/dashboard", children: [
        "->",
        " Dashboard"
      ] })
    ] })
  ] });
}

// app/routes/auth/layout.tsx
var layout_exports = {};
__export(layout_exports, {
  default: () => Layout,
  loader: () => loader2
});
var import_cloudflare3 = __toESM(require_dist(), 1);

// app/components/headers/auth-header.tsx
var import_react66 = __toESM(require_react(), 1);
var import_jsx_runtime29 = __toESM(require_jsx_runtime(), 1);
function AuthHeader() {
  let location = useLocation(), [isLoginPage, setIsLoginPage] = (0, import_react66.useState)(
    location.pathname.startsWith("/login")
  );
  return (0, import_react66.useEffect)(() => {
    setIsLoginPage(location.pathname.startsWith("/login"));
  }, [location.pathname]), /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)("div", { className: "flex h-16 items-center border-b bg-background px-4 md:px-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "flex flex-1 items-center gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("div", { className: "flex items-center gap-2", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(Link2, { to: "/", children: /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)("div", { className: "flex items-center gap-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(ChatBubbleIcon, { className: "h-5 w-5" }),
      /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("span", { className: "text-lg font-bold tracking-tight", children: "DropFeedback" })
    ] }) }) }) }),
    /* @__PURE__ */ (0, import_jsx_runtime29.jsxs)("div", { className: "flex items-center justify-end gap-3", children: [
      /* @__PURE__ */ (0, import_jsx_runtime29.jsx)("button", { className: "font-normal text-muted-foreground transition-colors hover:text-primary", children: "Feedback" }),
      /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(Button, { asChild: !0, variant: "outline", children: isLoginPage ? /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(Link2, { to: "/signup", children: "Sign Up" }) : /* @__PURE__ */ (0, import_jsx_runtime29.jsx)(Link2, { to: "/login", children: "Log In" }) })
    ] })
  ] });
}

// app/routes/auth/layout.tsx
var import_jsx_runtime30 = __toESM(require_jsx_runtime(), 1);
async function loader2({ request }) {
  let cookie = request.headers.get("Cookie");
  try {
    return await fetchers.me(cookie ?? ""), (0, import_cloudflare3.redirect)("/dashboard");
  } catch {
    return null;
  }
}
function Layout() {
  return /* @__PURE__ */ (0, import_jsx_runtime30.jsxs)(import_jsx_runtime30.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(AuthHeader, {}),
    /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("div", { className: "flex min-h-[calc(100vh-4rem)] items-center justify-center overflow-hidden", children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)("div", { className: "container mx-4 w-full rounded-lg border p-4 sm:w-fit sm:p-16  ", children: /* @__PURE__ */ (0, import_jsx_runtime30.jsx)(Outlet, {}) }) })
  ] });
}

// app/routes/auth/login/route.tsx
var route_exports4 = {};
__export(route_exports4, {
  default: () => Login
});

// app/components/ui/alert.tsx
var React40 = __toESM(require_react(), 1);
var import_jsx_runtime31 = __toESM(require_jsx_runtime(), 1), alertVariants = cva(
  "relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7",
  {
    variants: {
      variant: {
        default: "bg-background text-foreground",
        destructive: "border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive"
      }
    },
    defaultVariants: {
      variant: "default"
    }
  }
), Alert = React40.forwardRef(({ className, variant, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
  "div",
  {
    ref,
    role: "alert",
    className: cn(alertVariants({ variant }), className),
    ...props
  }
));
Alert.displayName = "Alert";
var AlertTitle = React40.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
  "h5",
  {
    ref,
    className: cn("mb-1 font-medium leading-none tracking-tight", className),
    ...props
  }
));
AlertTitle.displayName = "AlertTitle";
var AlertDescription = React40.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime31.jsx)(
  "div",
  {
    ref,
    className: cn("text-sm [&_p]:leading-relaxed", className),
    ...props
  }
));
AlertDescription.displayName = "AlertDescription";

// app/components/google-oauth-button.tsx
var import_jsx_runtime32 = __toESM(require_jsx_runtime(), 1);
function GoogleOAuthButton() {
  let [searchParams] = useSearchParams(), navigate = useNavigate(), loginMutation = useMutation({
    mutationFn: fetchers.googleLogin,
    onSuccess: () => {
      let nextURL = searchParams.get("next");
      navigate(nextURL ?? "/dashboard");
    },
    meta: {
      errorToast: !1
    }
  });
  return /* @__PURE__ */ (0, import_jsx_runtime32.jsxs)("div", { className: "space-y-6", children: [
    loginMutation.isError && /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
      motion.div,
      {
        initial: { opacity: 0, y: 40 },
        animate: { opacity: 1, y: 0 },
        children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
          Alert,
          {
            variant: "destructive",
            className: "border-red text-red bg-red-foreground",
            children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(AlertDescription, { children: loginMutation.error?.response?.data?.message ?? loginMutation.error?.message })
          }
        )
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime32.jsx)("div", { style: { colorScheme: "light" }, children: /* @__PURE__ */ (0, import_jsx_runtime32.jsx)(
      GoogleLogin,
      {
        text: "continue_with",
        size: "large",
        width: 300,
        useOneTap: !0,
        theme: "filled_blue",
        onSuccess: (credentialResponse) => {
          let credential = credentialResponse.credential;
          credential && loginMutation.mutate({
            idToken: credential
          });
        }
      }
    ) })
  ] });
}

// app/routes/auth/login/route.tsx
var import_jsx_runtime33 = __toESM(require_jsx_runtime(), 1);
function Login() {
  let { search } = useLocation();
  return /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "space-y-10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("h1", { className: "text-center text-2xl font-semibold tracking-tight sm:text-3xl", children: "Log in to DropFeedback" }),
    /* @__PURE__ */ (0, import_jsx_runtime33.jsxs)("div", { className: "m-auto max-w-[325px]", children: [
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(GoogleOAuthButton, {}),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(Separator, { className: "my-6" }),
      /* @__PURE__ */ (0, import_jsx_runtime33.jsx)("div", { className: "text-center", children: /* @__PURE__ */ (0, import_jsx_runtime33.jsx)(
        Link2,
        {
          to: {
            pathname: "/login/email",
            search
          },
          className: "text-base text-link",
          children: "Continue with Email \u2192"
        }
      ) })
    ] })
  ] });
}

// app/routes/auth/login/email/route.tsx
var route_exports5 = {};
__export(route_exports5, {
  default: () => LoginWithEmail
});
var import_jsx_runtime34 = __toESM(require_jsx_runtime(), 1), useLocalLogin = () => {
  let [searchParams] = useSearchParams(), navigate = useNavigate();
  return useMutation({
    mutationFn: fetchers.signin,
    onSuccess: () => {
      let nextURL = searchParams.get("next");
      navigate(nextURL ?? "/dashboard");
    },
    meta: {
      errorToast: !1
    }
  });
};
function LoginWithEmail() {
  let { search } = useLocation(), { mutate, isPending, error, isError } = useLocalLogin(), form = useForm({
    defaultValues: {
      email: "",
      password: ""
    }
  }), onSubmit = (values) => {
    mutate(values);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "space-y-10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("h1", { className: "text-center text-2xl font-semibold tracking-tight sm:text-3xl", children: "Log in to DropFeedback" }),
    /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("div", { className: "m-auto max-w-[325px] space-y-6", children: [
      isError && /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
        motion.div,
        {
          initial: { opacity: 0, y: 40 },
          animate: { opacity: 1, y: 0 },
          children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
            Alert,
            {
              variant: "destructive",
              className: "border-red bg-red-foreground text-red",
              children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(AlertDescription, { children: error?.response?.data?.message ?? error?.message })
            }
          )
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
          FormField,
          {
            control: form.control,
            name: "email",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(FormItem, { children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
              Input,
              {
                ...field,
                placeholder: "Email address",
                className: "h-12",
                required: !0,
                type: "email"
              }
            ) }) })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
          FormField,
          {
            control: form.control,
            name: "password",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(FormItem, { children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
              Input,
              {
                ...field,
                placeholder: "Password",
                type: "password",
                required: !0,
                minLength: 4,
                className: "h-12"
              }
            ) }) })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime34.jsxs)(
          Button,
          {
            type: "submit",
            className: "w-full",
            size: "lg",
            disabled: isPending,
            children: [
              isPending && /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(LoadingIndicator, { className: "mr-2" }),
              "Log In"
            ]
          }
        )
      ] }) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime34.jsx)("div", { className: "text-center", children: /* @__PURE__ */ (0, import_jsx_runtime34.jsx)(
      Link2,
      {
        to: {
          pathname: "/login",
          search
        },
        className: "text-base text-link",
        children: "\u2190 Other Login Options"
      }
    ) })
  ] });
}

// app/routes/auth/signup/route.tsx
var route_exports6 = {};
__export(route_exports6, {
  default: () => Signup
});
var import_jsx_runtime35 = __toESM(require_jsx_runtime(), 1);
function Signup() {
  return /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "space-y-10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime35.jsx)("h1", { className: "text-center text-2xl font-semibold tracking-tight sm:text-3xl", children: "Sign up to DropFeedback" }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("div", { className: "m-auto flex w-min flex-col items-center", children: [
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(GoogleOAuthButton, {}),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Separator, { className: "my-6" }),
      /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(Link2, { to: "/signup/email", className: "text-base text-link", children: "Continue with Email \u2192" })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)("p", { className: "font-light text-muted-foreground text-center", children: [
      "By joining, you agree to our",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)(Link2, { to: "#", className: "font-semibold text-primary hover:underline", children: [
        "Terms of Service",
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(ExternalLinkIcon, { className: "ml-0.5 inline-block h-4 w-4" })
      ] }),
      " ",
      "and",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime35.jsxs)(Link2, { to: "#", className: "font-semibold text-primary hover:underline", children: [
        "Privacy Policy",
        /* @__PURE__ */ (0, import_jsx_runtime35.jsx)(ExternalLinkIcon, { className: "ml-0.5 inline-block h-4 w-4" })
      ] })
    ] })
  ] });
}

// app/routes/auth/signup/email/route.tsx
var route_exports7 = {};
__export(route_exports7, {
  default: () => SignupWithEmail
});
var import_jsx_runtime36 = __toESM(require_jsx_runtime(), 1);
function SignupWithEmail() {
  let navigate = useNavigate(), signUp = useMutation({
    mutationFn: fetchers.signup,
    onSuccess: () => {
      navigate("/dashboard");
    },
    meta: {
      errorToast: !1
    }
  }), form = useForm({
    defaultValues: {
      email: "",
      password: "",
      fullName: ""
    }
  }), onSubmit = (values) => {
    signUp.mutate(values);
  };
  return /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)("div", { className: "space-y-10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime36.jsx)("h1", { className: "text-center text-2xl font-semibold tracking-tight sm:text-3xl", children: "Sign up for DropFeedback" }),
    /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)("div", { className: "m-auto max-w-[325px] space-y-6", children: [
      signUp.isError && /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
        motion.div,
        {
          initial: { opacity: 0, y: 40 },
          animate: { opacity: 1, y: 0 },
          children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
            Alert,
            {
              variant: "destructive",
              className: "border-red bg-red-foreground text-red",
              children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(AlertDescription, { children: signUp.error?.response?.data?.message ?? signUp.error?.message })
            }
          )
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(
        "form",
        {
          onSubmit: form.handleSubmit(onSubmit),
          className: "m-auto max-w-[325px] space-y-4",
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
              FormField,
              {
                control: form.control,
                name: "fullName",
                render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(FormItem, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
                    Input,
                    {
                      ...field,
                      placeholder: "Name",
                      className: "h-12",
                      required: !0,
                      type: "text"
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormMessage, {})
                ] })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
              FormField,
              {
                control: form.control,
                name: "email",
                render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(FormItem, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
                    Input,
                    {
                      ...field,
                      placeholder: "Email address",
                      className: "h-12",
                      required: !0,
                      type: "email"
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormMessage, {})
                ] })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
              FormField,
              {
                control: form.control,
                name: "password",
                render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(FormItem, { children: [
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(
                    Input,
                    {
                      ...field,
                      placeholder: "Password",
                      type: "password",
                      className: "h-12",
                      minLength: 4
                    }
                  ) }),
                  /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(FormMessage, {})
                ] })
              }
            ),
            /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(
              Button,
              {
                type: "submit",
                className: "w-full",
                size: "lg",
                disabled: signUp.isPending,
                children: [
                  signUp.isPending && /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(LoadingIndicator, { className: "mr-2" }),
                  "Sign Up"
                ]
              }
            )
          ]
        }
      ) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime36.jsx)("div", { className: "text-center", children: /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(Link2, { to: "/signup", className: "text-base text-link", children: "\u2190 Other Sign Up Options" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)("p", { className: "text-center font-light text-muted-foreground", children: [
      "By joining, you agree to our",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(Link2, { to: "#", className: "font-semibold text-primary hover:underline", children: [
        "Terms of Service",
        /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(ExternalLinkIcon, { className: "ml-0.5 inline-block h-4 w-4" })
      ] }),
      " ",
      "and",
      " ",
      /* @__PURE__ */ (0, import_jsx_runtime36.jsxs)(Link2, { to: "#", className: "font-semibold text-primary hover:underline", children: [
        "Privacy Policy",
        /* @__PURE__ */ (0, import_jsx_runtime36.jsx)(ExternalLinkIcon, { className: "ml-0.5 inline-block h-4 w-4" })
      ] })
    ] })
  ] });
}

// app/routes/dashboard/layout.tsx
var layout_exports2 = {};
__export(layout_exports2, {
  default: () => LayoutRoute,
  loader: () => loader3
});
var import_cloudflare4 = __toESM(require_dist(), 1);

// app/components/headers/dashboard-header.tsx
var import_react94 = __toESM(require_react(), 1);

// app/components/ui/avatar.tsx
var React41 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-avatar/dist/index.mjs
var import_react73 = __toESM(require_react(), 1);
var $cddcb0b647441e34$var$AVATAR_NAME = "Avatar", [$cddcb0b647441e34$var$createAvatarContext, $cddcb0b647441e34$export$90370d16b488820f] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($cddcb0b647441e34$var$AVATAR_NAME), [$cddcb0b647441e34$var$AvatarProvider, $cddcb0b647441e34$var$useAvatarContext] = $cddcb0b647441e34$var$createAvatarContext($cddcb0b647441e34$var$AVATAR_NAME), $cddcb0b647441e34$export$e2255cf6045e8d47 = /* @__PURE__ */ (0, import_react73.forwardRef)((props, forwardedRef) => {
  let { __scopeAvatar, ...avatarProps } = props, [imageLoadingStatus, setImageLoadingStatus] = (0, import_react73.useState)("idle");
  return /* @__PURE__ */ (0, import_react73.createElement)($cddcb0b647441e34$var$AvatarProvider, {
    scope: __scopeAvatar,
    imageLoadingStatus,
    onImageLoadingStatusChange: setImageLoadingStatus
  }, /* @__PURE__ */ (0, import_react73.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({}, avatarProps, {
    ref: forwardedRef
  })));
}), $cddcb0b647441e34$var$IMAGE_NAME = "AvatarImage", $cddcb0b647441e34$export$2cd8ae1985206fe8 = /* @__PURE__ */ (0, import_react73.forwardRef)((props, forwardedRef) => {
  let { __scopeAvatar, src, onLoadingStatusChange = () => {
  }, ...imageProps } = props, context = $cddcb0b647441e34$var$useAvatarContext($cddcb0b647441e34$var$IMAGE_NAME, __scopeAvatar), imageLoadingStatus = $cddcb0b647441e34$var$useImageLoadingStatus(src), handleLoadingStatusChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a((status) => {
    onLoadingStatusChange(status), context.onImageLoadingStatusChange(status);
  });
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    imageLoadingStatus !== "idle" && handleLoadingStatusChange(imageLoadingStatus);
  }, [
    imageLoadingStatus,
    handleLoadingStatusChange
  ]), imageLoadingStatus === "loaded" ? /* @__PURE__ */ (0, import_react73.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.img, _extends6({}, imageProps, {
    ref: forwardedRef,
    src
  })) : null;
}), $cddcb0b647441e34$var$FALLBACK_NAME = "AvatarFallback", $cddcb0b647441e34$export$69fffb6a9571fbfe = /* @__PURE__ */ (0, import_react73.forwardRef)((props, forwardedRef) => {
  let { __scopeAvatar, delayMs, ...fallbackProps } = props, context = $cddcb0b647441e34$var$useAvatarContext($cddcb0b647441e34$var$FALLBACK_NAME, __scopeAvatar), [canRender, setCanRender] = (0, import_react73.useState)(delayMs === void 0);
  return (0, import_react73.useEffect)(() => {
    if (delayMs !== void 0) {
      let timerId = window.setTimeout(
        () => setCanRender(!0),
        delayMs
      );
      return () => window.clearTimeout(timerId);
    }
  }, [
    delayMs
  ]), canRender && context.imageLoadingStatus !== "loaded" ? /* @__PURE__ */ (0, import_react73.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({}, fallbackProps, {
    ref: forwardedRef
  })) : null;
});
function $cddcb0b647441e34$var$useImageLoadingStatus(src) {
  let [loadingStatus, setLoadingStatus] = (0, import_react73.useState)("idle");
  return $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    if (!src) {
      setLoadingStatus("error");
      return;
    }
    let isMounted = !0, image = new window.Image(), updateStatus = (status) => () => {
      isMounted && setLoadingStatus(status);
    };
    return setLoadingStatus("loading"), image.onload = updateStatus("loaded"), image.onerror = updateStatus("error"), image.src = src, () => {
      isMounted = !1;
    };
  }, [
    src
  ]), loadingStatus;
}
var $cddcb0b647441e34$export$be92b6f5f03c0fe9 = $cddcb0b647441e34$export$e2255cf6045e8d47, $cddcb0b647441e34$export$3e431a229df88919 = $cddcb0b647441e34$export$2cd8ae1985206fe8, $cddcb0b647441e34$export$fb8d7f40caaeea67 = $cddcb0b647441e34$export$69fffb6a9571fbfe;

// app/components/ui/avatar.tsx
var import_jsx_runtime37 = __toESM(require_jsx_runtime(), 1), Avatar = React41.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
  $cddcb0b647441e34$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(
      "relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full",
      className
    ),
    ...props
  }
));
Avatar.displayName = $cddcb0b647441e34$export$be92b6f5f03c0fe9.displayName;
var AvatarImage = React41.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
  $cddcb0b647441e34$export$3e431a229df88919,
  {
    ref,
    className: cn("aspect-square h-full w-full", className),
    ...props
  }
));
AvatarImage.displayName = $cddcb0b647441e34$export$3e431a229df88919.displayName;
var AvatarFallback = React41.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime37.jsx)(
  $cddcb0b647441e34$export$fb8d7f40caaeea67,
  {
    ref,
    className: cn(
      "flex h-full w-full items-center justify-center rounded-full bg-muted",
      className
    ),
    ...props
  }
));
AvatarFallback.displayName = $cddcb0b647441e34$export$fb8d7f40caaeea67.displayName;

// app/components/ui/dropdown-menu.tsx
var React42 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var import_react76 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-menu/dist/index.mjs
var import_react75 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-roving-focus/dist/index.mjs
var import_react74 = __toESM(require_react(), 1);
var $d7bdfb9eb0fdf311$var$ENTRY_FOCUS = "rovingFocusGroup.onEntryFocus", $d7bdfb9eb0fdf311$var$EVENT_OPTIONS = {
  bubbles: !1,
  cancelable: !0
}, $d7bdfb9eb0fdf311$var$GROUP_NAME = "RovingFocusGroup", [$d7bdfb9eb0fdf311$var$Collection, $d7bdfb9eb0fdf311$var$useCollection, $d7bdfb9eb0fdf311$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($d7bdfb9eb0fdf311$var$GROUP_NAME), [$d7bdfb9eb0fdf311$var$createRovingFocusGroupContext, $d7bdfb9eb0fdf311$export$c7109489551a4f4] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d7bdfb9eb0fdf311$var$GROUP_NAME, [
  $d7bdfb9eb0fdf311$var$createCollectionScope
]), [$d7bdfb9eb0fdf311$var$RovingFocusProvider, $d7bdfb9eb0fdf311$var$useRovingFocusContext] = $d7bdfb9eb0fdf311$var$createRovingFocusGroupContext($d7bdfb9eb0fdf311$var$GROUP_NAME), $d7bdfb9eb0fdf311$export$8699f7c8af148338 = /* @__PURE__ */ (0, import_react74.forwardRef)((props, forwardedRef) => /* @__PURE__ */ (0, import_react74.createElement)($d7bdfb9eb0fdf311$var$Collection.Provider, {
  scope: props.__scopeRovingFocusGroup
}, /* @__PURE__ */ (0, import_react74.createElement)($d7bdfb9eb0fdf311$var$Collection.Slot, {
  scope: props.__scopeRovingFocusGroup
}, /* @__PURE__ */ (0, import_react74.createElement)($d7bdfb9eb0fdf311$var$RovingFocusGroupImpl, _extends6({}, props, {
  ref: forwardedRef
}))))), $d7bdfb9eb0fdf311$var$RovingFocusGroupImpl = /* @__PURE__ */ (0, import_react74.forwardRef)((props, forwardedRef) => {
  let { __scopeRovingFocusGroup, orientation, loop = !1, dir, currentTabStopId: currentTabStopIdProp, defaultCurrentTabStopId, onCurrentTabStopIdChange, onEntryFocus, ...groupProps } = props, ref = (0, import_react74.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir), [currentTabStopId = null, setCurrentTabStopId] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: currentTabStopIdProp,
    defaultProp: defaultCurrentTabStopId,
    onChange: onCurrentTabStopIdChange
  }), [isTabbingBackOut, setIsTabbingBackOut] = (0, import_react74.useState)(!1), handleEntryFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onEntryFocus), getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup), isClickFocusRef = (0, import_react74.useRef)(!1), [focusableItemsCount, setFocusableItemsCount] = (0, import_react74.useState)(0);
  return (0, import_react74.useEffect)(() => {
    let node = ref.current;
    if (node)
      return node.addEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus), () => node.removeEventListener($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, handleEntryFocus);
  }, [
    handleEntryFocus
  ]), /* @__PURE__ */ (0, import_react74.createElement)($d7bdfb9eb0fdf311$var$RovingFocusProvider, {
    scope: __scopeRovingFocusGroup,
    orientation,
    dir: direction,
    loop,
    currentTabStopId,
    onItemFocus: (0, import_react74.useCallback)(
      (tabStopId) => setCurrentTabStopId(tabStopId),
      [
        setCurrentTabStopId
      ]
    ),
    onItemShiftTab: (0, import_react74.useCallback)(
      () => setIsTabbingBackOut(!0),
      []
    ),
    onFocusableItemAdd: (0, import_react74.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount + 1
      ),
      []
    ),
    onFocusableItemRemove: (0, import_react74.useCallback)(
      () => setFocusableItemsCount(
        (prevCount) => prevCount - 1
      ),
      []
    )
  }, /* @__PURE__ */ (0, import_react74.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    tabIndex: isTabbingBackOut || focusableItemsCount === 0 ? -1 : 0,
    "data-orientation": orientation
  }, groupProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...props.style
    },
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, () => {
      isClickFocusRef.current = !0;
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, (event) => {
      let isKeyboardFocus = !isClickFocusRef.current;
      if (event.target === event.currentTarget && isKeyboardFocus && !isTabbingBackOut) {
        let entryFocusEvent = new CustomEvent($d7bdfb9eb0fdf311$var$ENTRY_FOCUS, $d7bdfb9eb0fdf311$var$EVENT_OPTIONS);
        if (event.currentTarget.dispatchEvent(entryFocusEvent), !entryFocusEvent.defaultPrevented) {
          let items = getItems().filter(
            (item) => item.focusable
          ), activeItem = items.find(
            (item) => item.active
          ), currentItem = items.find(
            (item) => item.id === currentTabStopId
          ), candidateNodes = [
            activeItem,
            currentItem,
            ...items
          ].filter(Boolean).map(
            (item) => item.ref.current
          );
          $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes);
        }
      }
      isClickFocusRef.current = !1;
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsTabbingBackOut(!1)
    )
  })));
}), $d7bdfb9eb0fdf311$var$ITEM_NAME = "RovingFocusGroupItem", $d7bdfb9eb0fdf311$export$ab9df7c53fe8454 = /* @__PURE__ */ (0, import_react74.forwardRef)((props, forwardedRef) => {
  let { __scopeRovingFocusGroup, focusable = !0, active = !1, tabStopId, ...itemProps } = props, autoId = $1746a345f3d73bb7$export$f680877a34711e37(), id3 = tabStopId || autoId, context = $d7bdfb9eb0fdf311$var$useRovingFocusContext($d7bdfb9eb0fdf311$var$ITEM_NAME, __scopeRovingFocusGroup), isCurrentTabStop = context.currentTabStopId === id3, getItems = $d7bdfb9eb0fdf311$var$useCollection(__scopeRovingFocusGroup), { onFocusableItemAdd, onFocusableItemRemove } = context;
  return (0, import_react74.useEffect)(() => {
    if (focusable)
      return onFocusableItemAdd(), () => onFocusableItemRemove();
  }, [
    focusable,
    onFocusableItemAdd,
    onFocusableItemRemove
  ]), /* @__PURE__ */ (0, import_react74.createElement)($d7bdfb9eb0fdf311$var$Collection.ItemSlot, {
    scope: __scopeRovingFocusGroup,
    id: id3,
    focusable,
    active
  }, /* @__PURE__ */ (0, import_react74.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({
    tabIndex: isCurrentTabStop ? 0 : -1,
    "data-orientation": context.orientation
  }, itemProps, {
    ref: forwardedRef,
    onMouseDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onMouseDown, (event) => {
      focusable ? context.onItemFocus(id3) : event.preventDefault();
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => context.onItemFocus(id3)
    ),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if (event.key === "Tab" && event.shiftKey) {
        context.onItemShiftTab();
        return;
      }
      if (event.target !== event.currentTarget)
        return;
      let focusIntent = $d7bdfb9eb0fdf311$var$getFocusIntent(event, context.orientation, context.dir);
      if (focusIntent !== void 0) {
        event.preventDefault();
        let candidateNodes = getItems().filter(
          (item) => item.focusable
        ).map(
          (item) => item.ref.current
        );
        if (focusIntent === "last")
          candidateNodes.reverse();
        else if (focusIntent === "prev" || focusIntent === "next") {
          focusIntent === "prev" && candidateNodes.reverse();
          let currentIndex = candidateNodes.indexOf(event.currentTarget);
          candidateNodes = context.loop ? $d7bdfb9eb0fdf311$var$wrapArray(candidateNodes, currentIndex + 1) : candidateNodes.slice(currentIndex + 1);
        }
        setTimeout(
          () => $d7bdfb9eb0fdf311$var$focusFirst(candidateNodes)
        );
      }
    })
  })));
}), $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT = {
  ArrowLeft: "prev",
  ArrowUp: "prev",
  ArrowRight: "next",
  ArrowDown: "next",
  PageUp: "first",
  Home: "first",
  PageDown: "last",
  End: "last"
};
function $d7bdfb9eb0fdf311$var$getDirectionAwareKey(key, dir) {
  return dir !== "rtl" ? key : key === "ArrowLeft" ? "ArrowRight" : key === "ArrowRight" ? "ArrowLeft" : key;
}
function $d7bdfb9eb0fdf311$var$getFocusIntent(event, orientation, dir) {
  let key = $d7bdfb9eb0fdf311$var$getDirectionAwareKey(event.key, dir);
  if (!(orientation === "vertical" && [
    "ArrowLeft",
    "ArrowRight"
  ].includes(key)) && !(orientation === "horizontal" && [
    "ArrowUp",
    "ArrowDown"
  ].includes(key)))
    return $d7bdfb9eb0fdf311$var$MAP_KEY_TO_FOCUS_INTENT[key];
}
function $d7bdfb9eb0fdf311$var$focusFirst(candidates) {
  let PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (let candidate of candidates)
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT || (candidate.focus(), document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT))
      return;
}
function $d7bdfb9eb0fdf311$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index3) => array[(startIndex + index3) % array.length]
  );
}
var $d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9 = $d7bdfb9eb0fdf311$export$8699f7c8af148338, $d7bdfb9eb0fdf311$export$6d08773d2e66f8f2 = $d7bdfb9eb0fdf311$export$ab9df7c53fe8454;

// ../../node_modules/@radix-ui/react-menu/dist/index.mjs
var $6cc32821e9371a1c$var$SELECTION_KEYS = [
  "Enter",
  " "
], $6cc32821e9371a1c$var$FIRST_KEYS = [
  "ArrowDown",
  "PageUp",
  "Home"
], $6cc32821e9371a1c$var$LAST_KEYS = [
  "ArrowUp",
  "PageDown",
  "End"
], $6cc32821e9371a1c$var$FIRST_LAST_KEYS = [
  ...$6cc32821e9371a1c$var$FIRST_KEYS,
  ...$6cc32821e9371a1c$var$LAST_KEYS
], $6cc32821e9371a1c$var$SUB_OPEN_KEYS = {
  ltr: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowRight"
  ],
  rtl: [
    ...$6cc32821e9371a1c$var$SELECTION_KEYS,
    "ArrowLeft"
  ]
}, $6cc32821e9371a1c$var$SUB_CLOSE_KEYS = {
  ltr: [
    "ArrowLeft"
  ],
  rtl: [
    "ArrowRight"
  ]
}, $6cc32821e9371a1c$var$MENU_NAME = "Menu", [$6cc32821e9371a1c$var$Collection, $6cc32821e9371a1c$var$useCollection, $6cc32821e9371a1c$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($6cc32821e9371a1c$var$MENU_NAME), [$6cc32821e9371a1c$var$createMenuContext, $6cc32821e9371a1c$export$4027731b685e72eb] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($6cc32821e9371a1c$var$MENU_NAME, [
  $6cc32821e9371a1c$var$createCollectionScope,
  $cf1ac5d9fe0e8206$export$722aac194ae923,
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]), $6cc32821e9371a1c$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923(), $6cc32821e9371a1c$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4(), [$6cc32821e9371a1c$var$MenuProvider, $6cc32821e9371a1c$var$useMenuContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME), [$6cc32821e9371a1c$var$MenuRootProvider, $6cc32821e9371a1c$var$useMenuRootContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$MENU_NAME), $6cc32821e9371a1c$export$d9b273488cd8ce6f = (props) => {
  let { __scopeMenu, open = !1, children, dir, onOpenChange, modal = !0 } = props, popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu), [content, setContent] = (0, import_react75.useState)(null), isUsingKeyboardRef = (0, import_react75.useRef)(!1), handleOpenChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a(onOpenChange), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir);
  return (0, import_react75.useEffect)(() => {
    let handleKeyDown = () => {
      isUsingKeyboardRef.current = !0, document.addEventListener("pointerdown", handlePointer, {
        capture: !0,
        once: !0
      }), document.addEventListener("pointermove", handlePointer, {
        capture: !0,
        once: !0
      });
    }, handlePointer = () => isUsingKeyboardRef.current = !1;
    return document.addEventListener("keydown", handleKeyDown, {
      capture: !0
    }), () => {
      document.removeEventListener("keydown", handleKeyDown, {
        capture: !0
      }), document.removeEventListener("pointerdown", handlePointer, {
        capture: !0
      }), document.removeEventListener("pointermove", handlePointer, {
        capture: !0
      });
    };
  }, []), /* @__PURE__ */ (0, import_react75.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuProvider, {
    scope: __scopeMenu,
    open,
    onOpenChange: handleOpenChange,
    content,
    onContentChange: setContent
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuRootProvider, {
    scope: __scopeMenu,
    onClose: (0, import_react75.useCallback)(
      () => handleOpenChange(!1),
      [
        handleOpenChange
      ]
    ),
    isUsingKeyboardRef,
    dir: direction,
    modal
  }, children)));
};
var $6cc32821e9371a1c$export$9fa5ebd18bee4d43 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...anchorProps } = props, popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu);
  return /* @__PURE__ */ (0, import_react75.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends6({}, popperScope, anchorProps, {
    ref: forwardedRef
  }));
}), $6cc32821e9371a1c$var$PORTAL_NAME = "MenuPortal", [$6cc32821e9371a1c$var$PortalProvider, $6cc32821e9371a1c$var$usePortalContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, {
  forceMount: void 0
}), $6cc32821e9371a1c$export$793392f970497feb = (props) => {
  let { __scopeMenu, forceMount, children, container } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$PORTAL_NAME, __scopeMenu);
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$PortalProvider, {
    scope: __scopeMenu,
    forceMount
  }, /* @__PURE__ */ (0, import_react75.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react75.createElement)($f1701beae083dbae$export$602eac185826482c, {
    asChild: !0,
    container
  }, children)));
}, $6cc32821e9371a1c$var$CONTENT_NAME = "MenuContent", [$6cc32821e9371a1c$var$MenuContentProvider, $6cc32821e9371a1c$var$useMenuContentContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$CONTENT_NAME), $6cc32821e9371a1c$export$479f0f2f71193efe = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), { forceMount = portalContext.forceMount, ...contentProps } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, /* @__PURE__ */ (0, import_react75.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, rootContext.modal ? /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuRootContentModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuRootContentNonModal, _extends6({}, contentProps, {
    ref: forwardedRef
  })))));
}), $6cc32821e9371a1c$var$MenuRootContentModal = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), ref = (0, import_react75.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return (0, import_react75.useEffect)(() => {
    let content = ref.current;
    if (content)
      return hideOthers(content);
  }, []), /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends6({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: context.open,
    disableOutsideScroll: !0,
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocusOutside,
      (event) => event.preventDefault(),
      {
        checkForDefaultPrevented: !1
      }
    ),
    onDismiss: () => context.onOpenChange(!1)
  }));
}), $6cc32821e9371a1c$var$MenuRootContentNonModal = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu);
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends6({}, props, {
    ref: forwardedRef,
    trapFocus: !1,
    disableOutsidePointerEvents: !1,
    disableOutsideScroll: !1,
    onDismiss: () => context.onOpenChange(!1)
  }));
}), $6cc32821e9371a1c$var$MenuContentImpl = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, loop = !1, trapFocus, onOpenAutoFocus, onCloseAutoFocus, disableOutsidePointerEvents, onEntryFocus, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, disableOutsideScroll, ...contentProps } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, __scopeMenu), popperScope = $6cc32821e9371a1c$var$usePopperScope(__scopeMenu), rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu), getItems = $6cc32821e9371a1c$var$useCollection(__scopeMenu), [currentItemId, setCurrentItemId] = (0, import_react75.useState)(null), contentRef = (0, import_react75.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef, context.onContentChange), timerRef = (0, import_react75.useRef)(0), searchRef = (0, import_react75.useRef)(""), pointerGraceTimerRef = (0, import_react75.useRef)(0), pointerGraceIntentRef = (0, import_react75.useRef)(null), pointerDirRef = (0, import_react75.useRef)("right"), lastPointerXRef = (0, import_react75.useRef)(0), ScrollLockWrapper = disableOutsideScroll ? Combination_default : import_react75.Fragment, scrollLockWrapperProps = disableOutsideScroll ? {
    as: $5e63c961fc1ce211$export$8c6ed5c666ac1360,
    allowPinchZoom: !0
  } : void 0, handleTypeaheadSearch = (key) => {
    var _items$find, _items$find2;
    let search = searchRef.current + key, items = getItems().filter(
      (item) => !item.disabled
    ), currentItem = document.activeElement, currentMatch = (_items$find = items.find(
      (item) => item.ref.current === currentItem
    )) === null || _items$find === void 0 ? void 0 : _items$find.textValue, values = items.map(
      (item) => item.textValue
    ), nextMatch = $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch), newItem = (_items$find2 = items.find(
      (item) => item.textValue === nextMatch
    )) === null || _items$find2 === void 0 ? void 0 : _items$find2.ref.current;
    (function updateSearch(value) {
      searchRef.current = value, window.clearTimeout(timerRef.current), value !== "" && (timerRef.current = window.setTimeout(
        () => updateSearch(""),
        1e3
      ));
    })(search), newItem && setTimeout(
      () => newItem.focus()
    );
  };
  (0, import_react75.useEffect)(() => () => window.clearTimeout(timerRef.current), []), $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c();
  let isPointerMovingToSubmenu = (0, import_react75.useCallback)((event) => {
    var _pointerGraceIntentRe, _pointerGraceIntentRe2;
    return pointerDirRef.current === ((_pointerGraceIntentRe = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe === void 0 ? void 0 : _pointerGraceIntentRe.side) && $6cc32821e9371a1c$var$isPointerInGraceArea(event, (_pointerGraceIntentRe2 = pointerGraceIntentRef.current) === null || _pointerGraceIntentRe2 === void 0 ? void 0 : _pointerGraceIntentRe2.area);
  }, []);
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuContentProvider, {
    scope: __scopeMenu,
    searchRef,
    onItemEnter: (0, import_react75.useCallback)((event) => {
      isPointerMovingToSubmenu(event) && event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    onItemLeave: (0, import_react75.useCallback)((event) => {
      var _contentRef$current;
      isPointerMovingToSubmenu(event) || ((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 || _contentRef$current.focus(), setCurrentItemId(null));
    }, [
      isPointerMovingToSubmenu
    ]),
    onTriggerLeave: (0, import_react75.useCallback)((event) => {
      isPointerMovingToSubmenu(event) && event.preventDefault();
    }, [
      isPointerMovingToSubmenu
    ]),
    pointerGraceTimerRef,
    onPointerGraceIntentChange: (0, import_react75.useCallback)((intent) => {
      pointerGraceIntentRef.current = intent;
    }, [])
  }, /* @__PURE__ */ (0, import_react75.createElement)(ScrollLockWrapper, scrollLockWrapperProps, /* @__PURE__ */ (0, import_react75.createElement)($d3863c46a17e8a28$export$20e40289641fbbb6, {
    asChild: !0,
    trapped: trapFocus,
    onMountAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onOpenAutoFocus, (event) => {
      var _contentRef$current2;
      event.preventDefault(), (_contentRef$current2 = contentRef.current) === null || _contentRef$current2 === void 0 || _contentRef$current2.focus();
    }),
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ (0, import_react75.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: !0,
    disableOutsidePointerEvents,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside,
    onInteractOutside,
    onDismiss
  }, /* @__PURE__ */ (0, import_react75.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    dir: rootContext.dir,
    orientation: "vertical",
    loop,
    currentTabStopId: currentItemId,
    onCurrentTabStopIdChange: setCurrentItemId,
    onEntryFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(onEntryFocus, (event) => {
      rootContext.isUsingKeyboardRef.current || event.preventDefault();
    })
  }), /* @__PURE__ */ (0, import_react75.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends6({
    role: "menu",
    "aria-orientation": "vertical",
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open),
    "data-radix-menu-content": "",
    dir: rootContext.dir
  }, popperScope, contentProps, {
    ref: composedRefs,
    style: {
      outline: "none",
      ...contentProps.style
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onKeyDown, (event) => {
      let isKeyDownInside = event.target.closest("[data-radix-menu-content]") === event.currentTarget, isModifierKey = event.ctrlKey || event.altKey || event.metaKey, isCharacterKey = event.key.length === 1;
      isKeyDownInside && (event.key === "Tab" && event.preventDefault(), !isModifierKey && isCharacterKey && handleTypeaheadSearch(event.key));
      let content = contentRef.current;
      if (event.target !== content || !$6cc32821e9371a1c$var$FIRST_LAST_KEYS.includes(event.key))
        return;
      event.preventDefault();
      let candidateNodes = getItems().filter(
        (item) => !item.disabled
      ).map(
        (item) => item.ref.current
      );
      $6cc32821e9371a1c$var$LAST_KEYS.includes(event.key) && candidateNodes.reverse(), $6cc32821e9371a1c$var$focusFirst(candidateNodes);
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, (event) => {
      event.currentTarget.contains(event.target) || (window.clearTimeout(timerRef.current), searchRef.current = "");
    }),
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      let target = event.target, pointerXHasChanged = lastPointerXRef.current !== event.clientX;
      if (event.currentTarget.contains(target) && pointerXHasChanged) {
        let newDir = event.clientX > lastPointerXRef.current ? "right" : "left";
        pointerDirRef.current = newDir, lastPointerXRef.current = event.clientX;
      }
    }))
  })))))));
});
var $6cc32821e9371a1c$export$dd37bec0e8a99143 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...labelProps } = props;
  return /* @__PURE__ */ (0, import_react75.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({}, labelProps, {
    ref: forwardedRef
  }));
}), $6cc32821e9371a1c$var$ITEM_NAME = "MenuItem", $6cc32821e9371a1c$var$ITEM_SELECT = "menu.itemSelect", $6cc32821e9371a1c$export$2ce376c2cc3355c8 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { disabled = !1, onSelect, ...itemProps } = props, ref = (0, import_react75.useRef)(null), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu), contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, props.__scopeMenu), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), isPointerDownRef = (0, import_react75.useRef)(!1), handleSelect = () => {
    let menuItem = ref.current;
    if (!disabled && menuItem) {
      let itemSelectEvent = new CustomEvent($6cc32821e9371a1c$var$ITEM_SELECT, {
        bubbles: !0,
        cancelable: !0
      });
      menuItem.addEventListener(
        $6cc32821e9371a1c$var$ITEM_SELECT,
        (event) => onSelect?.(event),
        {
          once: !0
        }
      ), $8927f6f2acc4f386$export$6d1a0317bde7de7f(menuItem, itemSelectEvent), itemSelectEvent.defaultPrevented ? isPointerDownRef.current = !1 : rootContext.onClose();
    }
  };
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends6({}, itemProps, {
    ref: composedRefs,
    disabled,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, handleSelect),
    onPointerDown: (event) => {
      var _props$onPointerDown;
      (_props$onPointerDown = props.onPointerDown) === null || _props$onPointerDown === void 0 || _props$onPointerDown.call(props, event), isPointerDownRef.current = !0;
    },
    onPointerUp: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerUp, (event) => {
      var _event$currentTarget;
      isPointerDownRef.current || (_event$currentTarget = event.currentTarget) === null || _event$currentTarget === void 0 || _event$currentTarget.click();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      let isTypingAhead = contentContext.searchRef.current !== "";
      disabled || isTypingAhead && event.key === " " || $6cc32821e9371a1c$var$SELECTION_KEYS.includes(event.key) && (event.currentTarget.click(), event.preventDefault());
    })
  }));
}), $6cc32821e9371a1c$var$MenuItemImpl = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, disabled = !1, textValue, ...itemProps } = props, contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$ITEM_NAME, __scopeMenu), rovingFocusGroupScope = $6cc32821e9371a1c$var$useRovingFocusGroupScope(__scopeMenu), ref = (0, import_react75.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), [isFocused, setIsFocused] = (0, import_react75.useState)(!1), [textContent, setTextContent] = (0, import_react75.useState)("");
  return (0, import_react75.useEffect)(() => {
    let menuItem = ref.current;
    if (menuItem) {
      var _menuItem$textContent;
      setTextContent(((_menuItem$textContent = menuItem.textContent) !== null && _menuItem$textContent !== void 0 ? _menuItem$textContent : "").trim());
    }
  }, [
    itemProps.children
  ]), /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$Collection.ItemSlot, {
    scope: __scopeMenu,
    disabled,
    textValue: textValue ?? textContent
  }, /* @__PURE__ */ (0, import_react75.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    focusable: !disabled
  }), /* @__PURE__ */ (0, import_react75.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    role: "menuitem",
    "data-highlighted": isFocused ? "" : void 0,
    "aria-disabled": disabled || void 0,
    "data-disabled": disabled ? "" : void 0
  }, itemProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      disabled ? contentContext.onItemLeave(event) : (contentContext.onItemEnter(event), event.defaultPrevented || event.currentTarget.focus());
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse(
      (event) => contentContext.onItemLeave(event)
    )),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => setIsFocused(!0)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsFocused(!1)
    )
  }))));
});
var $6cc32821e9371a1c$export$f6f243521332502d = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { checked = !1, onCheckedChange, ...checkboxItemProps } = props;
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends6({
    role: "menuitemcheckbox",
    "aria-checked": $6cc32821e9371a1c$var$isIndeterminate(checked) ? "mixed" : checked
  }, checkboxItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      checkboxItemProps.onSelect,
      () => onCheckedChange?.($6cc32821e9371a1c$var$isIndeterminate(checked) ? !0 : !checked),
      {
        checkForDefaultPrevented: !1
      }
    )
  })));
}), $6cc32821e9371a1c$var$RADIO_GROUP_NAME = "MenuRadioGroup", [$6cc32821e9371a1c$var$RadioGroupProvider, $6cc32821e9371a1c$var$useRadioGroupContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$RADIO_GROUP_NAME, {
  value: void 0,
  onValueChange: () => {
  }
});
var $6cc32821e9371a1c$var$RADIO_ITEM_NAME = "MenuRadioItem", $6cc32821e9371a1c$export$69bd225e9817f6d0 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { value, ...radioItemProps } = props, context = $6cc32821e9371a1c$var$useRadioGroupContext($6cc32821e9371a1c$var$RADIO_ITEM_NAME, props.__scopeMenu), checked = value === context.value;
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$ItemIndicatorProvider, {
    scope: props.__scopeMenu,
    checked
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$export$2ce376c2cc3355c8, _extends6({
    role: "menuitemradio",
    "aria-checked": checked
  }, radioItemProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(checked),
    onSelect: $e42e1063c40fb3ef$export$b9ecd428b558ff10(radioItemProps.onSelect, () => {
      var _context$onValueChang;
      return (_context$onValueChang = context.onValueChange) === null || _context$onValueChang === void 0 ? void 0 : _context$onValueChang.call(context, value);
    }, {
      checkForDefaultPrevented: !1
    })
  })));
}), $6cc32821e9371a1c$var$ITEM_INDICATOR_NAME = "MenuItemIndicator", [$6cc32821e9371a1c$var$ItemIndicatorProvider, $6cc32821e9371a1c$var$useItemIndicatorContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, {
  checked: !1
}), $6cc32821e9371a1c$export$a2593e23056970a3 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, forceMount, ...itemIndicatorProps } = props, indicatorContext = $6cc32821e9371a1c$var$useItemIndicatorContext($6cc32821e9371a1c$var$ITEM_INDICATOR_NAME, __scopeMenu);
  return /* @__PURE__ */ (0, import_react75.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || $6cc32821e9371a1c$var$isIndeterminate(indicatorContext.checked) || indicatorContext.checked === !0
  }, /* @__PURE__ */ (0, import_react75.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({}, itemIndicatorProps, {
    ref: forwardedRef,
    "data-state": $6cc32821e9371a1c$var$getCheckedState(indicatorContext.checked)
  })));
});
var $6cc32821e9371a1c$export$1cec7dcdd713e220 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let { __scopeMenu, ...separatorProps } = props;
  return /* @__PURE__ */ (0, import_react75.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    role: "separator",
    "aria-orientation": "horizontal"
  }, separatorProps, {
    ref: forwardedRef
  }));
});
var $6cc32821e9371a1c$var$SUB_NAME = "MenuSub", [$6cc32821e9371a1c$var$MenuSubProvider, $6cc32821e9371a1c$var$useMenuSubContext] = $6cc32821e9371a1c$var$createMenuContext($6cc32821e9371a1c$var$SUB_NAME);
var $6cc32821e9371a1c$var$SUB_TRIGGER_NAME = "MenuSubTrigger", $6cc32821e9371a1c$export$5fbbb3ba7297405f = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu), subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu), contentContext = $6cc32821e9371a1c$var$useMenuContentContext($6cc32821e9371a1c$var$SUB_TRIGGER_NAME, props.__scopeMenu), openTimerRef = (0, import_react75.useRef)(null), { pointerGraceTimerRef, onPointerGraceIntentChange } = contentContext, scope = {
    __scopeMenu: props.__scopeMenu
  }, clearOpenTimer = (0, import_react75.useCallback)(() => {
    openTimerRef.current && window.clearTimeout(openTimerRef.current), openTimerRef.current = null;
  }, []);
  return (0, import_react75.useEffect)(
    () => clearOpenTimer,
    [
      clearOpenTimer
    ]
  ), (0, import_react75.useEffect)(() => {
    let pointerGraceTimer = pointerGraceTimerRef.current;
    return () => {
      window.clearTimeout(pointerGraceTimer), onPointerGraceIntentChange(null);
    };
  }, [
    pointerGraceTimerRef,
    onPointerGraceIntentChange
  ]), /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$export$9fa5ebd18bee4d43, _extends6({
    asChild: !0
  }, scope), /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuItemImpl, _extends6({
    id: subContext.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": subContext.contentId,
    "data-state": $6cc32821e9371a1c$var$getOpenState(context.open)
  }, props, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, subContext.onTriggerChange),
    onClick: (event) => {
      var _props$onClick;
      (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, event), !(props.disabled || event.defaultPrevented) && (event.currentTarget.focus(), context.open || context.onOpenChange(!0));
    },
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, $6cc32821e9371a1c$var$whenMouse((event) => {
      contentContext.onItemEnter(event), !event.defaultPrevented && !props.disabled && !context.open && !openTimerRef.current && (contentContext.onPointerGraceIntentChange(null), openTimerRef.current = window.setTimeout(() => {
        context.onOpenChange(!0), clearOpenTimer();
      }, 100));
    })),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, $6cc32821e9371a1c$var$whenMouse((event) => {
      var _context$content;
      clearOpenTimer();
      let contentRect = (_context$content = context.content) === null || _context$content === void 0 ? void 0 : _context$content.getBoundingClientRect();
      if (contentRect) {
        var _context$content2;
        let side = (_context$content2 = context.content) === null || _context$content2 === void 0 ? void 0 : _context$content2.dataset.side, rightSide = side === "right", bleed = rightSide ? -5 : 5, contentNearEdge = contentRect[rightSide ? "left" : "right"], contentFarEdge = contentRect[rightSide ? "right" : "left"];
        contentContext.onPointerGraceIntentChange({
          area: [
            // consistently within polygon bounds
            {
              x: event.clientX + bleed,
              y: event.clientY
            },
            {
              x: contentNearEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.top
            },
            {
              x: contentFarEdge,
              y: contentRect.bottom
            },
            {
              x: contentNearEdge,
              y: contentRect.bottom
            }
          ],
          side
        }), window.clearTimeout(pointerGraceTimerRef.current), pointerGraceTimerRef.current = window.setTimeout(
          () => contentContext.onPointerGraceIntentChange(null),
          300
        );
      } else {
        if (contentContext.onTriggerLeave(event), event.defaultPrevented)
          return;
        contentContext.onPointerGraceIntentChange(null);
      }
    })),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      let isTypingAhead = contentContext.searchRef.current !== "";
      if (!(props.disabled || isTypingAhead && event.key === " ") && $6cc32821e9371a1c$var$SUB_OPEN_KEYS[rootContext.dir].includes(event.key)) {
        var _context$content3;
        context.onOpenChange(!0), (_context$content3 = context.content) === null || _context$content3 === void 0 || _context$content3.focus(), event.preventDefault();
      }
    })
  })));
}), $6cc32821e9371a1c$var$SUB_CONTENT_NAME = "MenuSubContent", $6cc32821e9371a1c$export$e7142ab31822bde6 = /* @__PURE__ */ (0, import_react75.forwardRef)((props, forwardedRef) => {
  let portalContext = $6cc32821e9371a1c$var$usePortalContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), { forceMount = portalContext.forceMount, ...subContentProps } = props, context = $6cc32821e9371a1c$var$useMenuContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), rootContext = $6cc32821e9371a1c$var$useMenuRootContext($6cc32821e9371a1c$var$CONTENT_NAME, props.__scopeMenu), subContext = $6cc32821e9371a1c$var$useMenuSubContext($6cc32821e9371a1c$var$SUB_CONTENT_NAME, props.__scopeMenu), ref = (0, import_react75.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref);
  return /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$Collection.Provider, {
    scope: props.__scopeMenu
  }, /* @__PURE__ */ (0, import_react75.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$Collection.Slot, {
    scope: props.__scopeMenu
  }, /* @__PURE__ */ (0, import_react75.createElement)($6cc32821e9371a1c$var$MenuContentImpl, _extends6({
    id: subContext.contentId,
    "aria-labelledby": subContext.triggerId
  }, subContentProps, {
    ref: composedRefs,
    align: "start",
    side: rootContext.dir === "rtl" ? "left" : "right",
    disableOutsidePointerEvents: !1,
    disableOutsideScroll: !1,
    trapFocus: !1,
    onOpenAutoFocus: (event) => {
      var _ref$current;
      rootContext.isUsingKeyboardRef.current && ((_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus()), event.preventDefault();
    },
    onCloseAutoFocus: (event) => event.preventDefault(),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusOutside, (event) => {
      event.target !== subContext.trigger && context.onOpenChange(!1);
    }),
    onEscapeKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onEscapeKeyDown, (event) => {
      rootContext.onClose(), event.preventDefault();
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      let isKeyDownInside = event.currentTarget.contains(event.target), isCloseKey = $6cc32821e9371a1c$var$SUB_CLOSE_KEYS[rootContext.dir].includes(event.key);
      if (isKeyDownInside && isCloseKey) {
        var _subContext$trigger;
        context.onOpenChange(!1), (_subContext$trigger = subContext.trigger) === null || _subContext$trigger === void 0 || _subContext$trigger.focus(), event.preventDefault();
      }
    })
  })))));
});
function $6cc32821e9371a1c$var$getOpenState(open) {
  return open ? "open" : "closed";
}
function $6cc32821e9371a1c$var$isIndeterminate(checked) {
  return checked === "indeterminate";
}
function $6cc32821e9371a1c$var$getCheckedState(checked) {
  return $6cc32821e9371a1c$var$isIndeterminate(checked) ? "indeterminate" : checked ? "checked" : "unchecked";
}
function $6cc32821e9371a1c$var$focusFirst(candidates) {
  let PREVIOUSLY_FOCUSED_ELEMENT = document.activeElement;
  for (let candidate of candidates)
    if (candidate === PREVIOUSLY_FOCUSED_ELEMENT || (candidate.focus(), document.activeElement !== PREVIOUSLY_FOCUSED_ELEMENT))
      return;
}
function $6cc32821e9371a1c$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index3) => array[(startIndex + index3) % array.length]
  );
}
function $6cc32821e9371a1c$var$getNextMatch(values, search, currentMatch) {
  let normalizedSearch = search.length > 1 && Array.from(search).every(
    (char) => char === search[0]
  ) ? search[0] : search, currentMatchIndex = currentMatch ? values.indexOf(currentMatch) : -1, wrappedValues = $6cc32821e9371a1c$var$wrapArray(values, Math.max(currentMatchIndex, 0));
  normalizedSearch.length === 1 && (wrappedValues = wrappedValues.filter(
    (v2) => v2 !== currentMatch
  ));
  let nextMatch = wrappedValues.find(
    (value) => value.toLowerCase().startsWith(normalizedSearch.toLowerCase())
  );
  return nextMatch !== currentMatch ? nextMatch : void 0;
}
function $6cc32821e9371a1c$var$isPointInPolygon(point, polygon) {
  let { x: x3, y: y4 } = point, inside = !1;
  for (let i3 = 0, j = polygon.length - 1; i3 < polygon.length; j = i3++) {
    let xi = polygon[i3].x, yi = polygon[i3].y, xj = polygon[j].x, yj = polygon[j].y;
    yi > y4 != yj > y4 && x3 < (xj - xi) * (y4 - yi) / (yj - yi) + xi && (inside = !inside);
  }
  return inside;
}
function $6cc32821e9371a1c$var$isPointerInGraceArea(event, area) {
  if (!area)
    return !1;
  let cursorPos = {
    x: event.clientX,
    y: event.clientY
  };
  return $6cc32821e9371a1c$var$isPointInPolygon(cursorPos, area);
}
function $6cc32821e9371a1c$var$whenMouse(handler) {
  return (event) => event.pointerType === "mouse" ? handler(event) : void 0;
}
var $6cc32821e9371a1c$export$be92b6f5f03c0fe9 = $6cc32821e9371a1c$export$d9b273488cd8ce6f, $6cc32821e9371a1c$export$b688253958b8dfe7 = $6cc32821e9371a1c$export$9fa5ebd18bee4d43, $6cc32821e9371a1c$export$602eac185826482c = $6cc32821e9371a1c$export$793392f970497feb, $6cc32821e9371a1c$export$7c6e2c02157bb7d2 = $6cc32821e9371a1c$export$479f0f2f71193efe;
var $6cc32821e9371a1c$export$b04be29aa201d4f5 = $6cc32821e9371a1c$export$dd37bec0e8a99143, $6cc32821e9371a1c$export$6d08773d2e66f8f2 = $6cc32821e9371a1c$export$2ce376c2cc3355c8, $6cc32821e9371a1c$export$16ce288f89fa631c = $6cc32821e9371a1c$export$f6f243521332502d;
var $6cc32821e9371a1c$export$371ab307eab489c0 = $6cc32821e9371a1c$export$69bd225e9817f6d0, $6cc32821e9371a1c$export$c3468e2714d175fa = $6cc32821e9371a1c$export$a2593e23056970a3, $6cc32821e9371a1c$export$1ff3c3f08ae963c0 = $6cc32821e9371a1c$export$1cec7dcdd713e220;
var $6cc32821e9371a1c$export$2ea8a7a591ac5eac = $6cc32821e9371a1c$export$5fbbb3ba7297405f, $6cc32821e9371a1c$export$6d4de93b380beddf = $6cc32821e9371a1c$export$e7142ab31822bde6;

// ../../node_modules/@radix-ui/react-dropdown-menu/dist/index.mjs
var $d08ef79370b62062$var$DROPDOWN_MENU_NAME = "DropdownMenu", [$d08ef79370b62062$var$createDropdownMenuContext, $d08ef79370b62062$export$c0623cd925aeb687] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($d08ef79370b62062$var$DROPDOWN_MENU_NAME, [
  $6cc32821e9371a1c$export$4027731b685e72eb
]), $d08ef79370b62062$var$useMenuScope = $6cc32821e9371a1c$export$4027731b685e72eb(), [$d08ef79370b62062$var$DropdownMenuProvider, $d08ef79370b62062$var$useDropdownMenuContext] = $d08ef79370b62062$var$createDropdownMenuContext($d08ef79370b62062$var$DROPDOWN_MENU_NAME), $d08ef79370b62062$export$e44a253a59704894 = (props) => {
  let { __scopeDropdownMenu, children, dir, open: openProp, defaultOpen, onOpenChange, modal = !0 } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu), triggerRef = (0, import_react76.useRef)(null), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react76.createElement)($d08ef79370b62062$var$DropdownMenuProvider, {
    scope: __scopeDropdownMenu,
    triggerId: $1746a345f3d73bb7$export$f680877a34711e37(),
    triggerRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react76.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$be92b6f5f03c0fe9, _extends6({}, menuScope, {
    open,
    onOpenChange: setOpen,
    dir,
    modal
  }), children));
}, $d08ef79370b62062$var$TRIGGER_NAME = "DropdownMenuTrigger", $d08ef79370b62062$export$d2469213b3befba9 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, disabled = !1, ...triggerProps } = props, context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$TRIGGER_NAME, __scopeDropdownMenu), menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$b688253958b8dfe7, _extends6({
    asChild: !0
  }, menuScope), /* @__PURE__ */ (0, import_react76.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    id: context.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": context.open,
    "aria-controls": context.open ? context.contentId : void 0,
    "data-state": context.open ? "open" : "closed",
    "data-disabled": disabled ? "" : void 0,
    disabled
  }, triggerProps, {
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af(forwardedRef, context.triggerRef),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      !disabled && event.button === 0 && event.ctrlKey === !1 && (context.onOpenToggle(), context.open || event.preventDefault());
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      disabled || ([
        "Enter",
        " "
      ].includes(event.key) && context.onOpenToggle(), event.key === "ArrowDown" && context.onOpenChange(!0), [
        "Enter",
        " ",
        "ArrowDown"
      ].includes(event.key) && event.preventDefault());
    })
  })));
});
var $d08ef79370b62062$export$cd369b4d4d54efc9 = (props) => {
  let { __scopeDropdownMenu, ...portalProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$602eac185826482c, _extends6({}, menuScope, portalProps));
}, $d08ef79370b62062$var$CONTENT_NAME = "DropdownMenuContent", $d08ef79370b62062$export$6e76d93a37c01248 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...contentProps } = props, context = $d08ef79370b62062$var$useDropdownMenuContext($d08ef79370b62062$var$CONTENT_NAME, __scopeDropdownMenu), menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu), hasInteractedOutsideRef = (0, import_react76.useRef)(!1);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$7c6e2c02157bb7d2, _extends6({
    id: context.contentId,
    "aria-labelledby": context.triggerId
  }, menuScope, contentProps, {
    ref: forwardedRef,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      hasInteractedOutsideRef.current || (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus(), hasInteractedOutsideRef.current = !1, event.preventDefault();
    }),
    onInteractOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onInteractOutside, (event) => {
      let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0, isRightClick = originalEvent.button === 2 || ctrlLeftClick;
      (!context.modal || isRightClick) && (hasInteractedOutsideRef.current = !0);
    }),
    style: {
      ...props.style,
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
var $d08ef79370b62062$export$76e48c5b57f24495 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...labelProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$b04be29aa201d4f5, _extends6({}, menuScope, labelProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$ed97964d1871885d = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...itemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$6d08773d2e66f8f2, _extends6({}, menuScope, itemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$53a69729da201fa9 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...checkboxItemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$16ce288f89fa631c, _extends6({}, menuScope, checkboxItemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$e4f69b41b1637536 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...radioItemProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$371ab307eab489c0, _extends6({}, menuScope, radioItemProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$42355ae145153fb6 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...itemIndicatorProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$c3468e2714d175fa, _extends6({}, menuScope, itemIndicatorProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$da160178fd3bc7e9 = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...separatorProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$1ff3c3f08ae963c0, _extends6({}, menuScope, separatorProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$21dcb7ec56f874cf = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...subTriggerProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$2ea8a7a591ac5eac, _extends6({}, menuScope, subTriggerProps, {
    ref: forwardedRef
  }));
});
var $d08ef79370b62062$export$f34ec8bc2482cc5f = /* @__PURE__ */ (0, import_react76.forwardRef)((props, forwardedRef) => {
  let { __scopeDropdownMenu, ...subContentProps } = props, menuScope = $d08ef79370b62062$var$useMenuScope(__scopeDropdownMenu);
  return /* @__PURE__ */ (0, import_react76.createElement)($6cc32821e9371a1c$export$6d4de93b380beddf, _extends6({}, menuScope, subContentProps, {
    ref: forwardedRef,
    style: {
      ...props.style,
      "--radix-dropdown-menu-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-dropdown-menu-content-available-width": "var(--radix-popper-available-width)",
      "--radix-dropdown-menu-content-available-height": "var(--radix-popper-available-height)",
      "--radix-dropdown-menu-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-dropdown-menu-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
}), $d08ef79370b62062$export$be92b6f5f03c0fe9 = $d08ef79370b62062$export$e44a253a59704894, $d08ef79370b62062$export$41fb9f06171c75f4 = $d08ef79370b62062$export$d2469213b3befba9, $d08ef79370b62062$export$602eac185826482c = $d08ef79370b62062$export$cd369b4d4d54efc9, $d08ef79370b62062$export$7c6e2c02157bb7d2 = $d08ef79370b62062$export$6e76d93a37c01248;
var $d08ef79370b62062$export$b04be29aa201d4f5 = $d08ef79370b62062$export$76e48c5b57f24495, $d08ef79370b62062$export$6d08773d2e66f8f2 = $d08ef79370b62062$export$ed97964d1871885d, $d08ef79370b62062$export$16ce288f89fa631c = $d08ef79370b62062$export$53a69729da201fa9;
var $d08ef79370b62062$export$371ab307eab489c0 = $d08ef79370b62062$export$e4f69b41b1637536, $d08ef79370b62062$export$c3468e2714d175fa = $d08ef79370b62062$export$42355ae145153fb6, $d08ef79370b62062$export$1ff3c3f08ae963c0 = $d08ef79370b62062$export$da160178fd3bc7e9;
var $d08ef79370b62062$export$2ea8a7a591ac5eac = $d08ef79370b62062$export$21dcb7ec56f874cf, $d08ef79370b62062$export$6d4de93b380beddf = $d08ef79370b62062$export$f34ec8bc2482cc5f;

// app/components/ui/dropdown-menu.tsx
var import_jsx_runtime38 = __toESM(require_jsx_runtime(), 1), DropdownMenu = $d08ef79370b62062$export$be92b6f5f03c0fe9, DropdownMenuTrigger = $d08ef79370b62062$export$41fb9f06171c75f4;
var DropdownMenuSubTrigger = React42.forwardRef(({ className, inset, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsxs)(
  $d08ef79370b62062$export$2ea8a7a591ac5eac,
  {
    ref,
    className: cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent",
      inset && "pl-8",
      className
    ),
    ...props,
    children: [
      children,
      /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(ChevronRightIcon, { className: "ml-auto h-4 w-4" })
    ]
  }
));
DropdownMenuSubTrigger.displayName = $d08ef79370b62062$export$2ea8a7a591ac5eac.displayName;
var DropdownMenuSubContent = React42.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  $d08ef79370b62062$export$6d4de93b380beddf,
  {
    ref,
    className: cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
));
DropdownMenuSubContent.displayName = $d08ef79370b62062$export$6d4de93b380beddf.displayName;
var DropdownMenuContent = React42.forwardRef(({ className, sideOffset = 4, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)($d08ef79370b62062$export$602eac185826482c, { children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  $d08ef79370b62062$export$7c6e2c02157bb7d2,
  {
    ref,
    sideOffset,
    className: cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md",
      "data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
) }));
DropdownMenuContent.displayName = $d08ef79370b62062$export$7c6e2c02157bb7d2.displayName;
var DropdownMenuItem = React42.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  $d08ef79370b62062$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    ),
    ...props
  }
));
DropdownMenuItem.displayName = $d08ef79370b62062$export$6d08773d2e66f8f2.displayName;
var DropdownMenuCheckboxItem = React42.forwardRef(({ className, children, checked, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsxs)(
  $d08ef79370b62062$export$16ce288f89fa631c,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    checked,
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime38.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)($d08ef79370b62062$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(CheckIcon, { className: "h-4 w-4" }) }) }),
      children
    ]
  }
));
DropdownMenuCheckboxItem.displayName = $d08ef79370b62062$export$16ce288f89fa631c.displayName;
var DropdownMenuRadioItem = React42.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsxs)(
  $d08ef79370b62062$export$371ab307eab489c0,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime38.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)($d08ef79370b62062$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(DotFilledIcon, { className: "h-4 w-4 fill-current" }) }) }),
      children
    ]
  }
));
DropdownMenuRadioItem.displayName = $d08ef79370b62062$export$371ab307eab489c0.displayName;
var DropdownMenuLabel = React42.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  $d08ef79370b62062$export$b04be29aa201d4f5,
  {
    ref,
    className: cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    ),
    ...props
  }
));
DropdownMenuLabel.displayName = $d08ef79370b62062$export$b04be29aa201d4f5.displayName;
var DropdownMenuSeparator = React42.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  $d08ef79370b62062$export$1ff3c3f08ae963c0,
  {
    ref,
    className: cn("-mx-1 my-1 h-px bg-muted", className),
    ...props
  }
));
DropdownMenuSeparator.displayName = $d08ef79370b62062$export$1ff3c3f08ae963c0.displayName;
var DropdownMenuShortcut = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime38.jsx)(
  "span",
  {
    className: cn("ml-auto text-xs tracking-widest opacity-60", className),
    ...props
  }
);
DropdownMenuShortcut.displayName = "DropdownMenuShortcut";

// app/components/ui/menubar.tsx
var React43 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-menubar/dist/index.mjs
var import_react77 = __toESM(require_react(), 1);
var $0520064cdfc1bd2d$var$MENUBAR_NAME = "Menubar", [$0520064cdfc1bd2d$var$Collection, $0520064cdfc1bd2d$var$useCollection, $0520064cdfc1bd2d$var$createCollectionScope] = $e02a7d9cb1dc128c$export$c74125a8e3af6bb2($0520064cdfc1bd2d$var$MENUBAR_NAME), [$0520064cdfc1bd2d$var$createMenubarContext, $0520064cdfc1bd2d$export$7a4049d5555b545c] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($0520064cdfc1bd2d$var$MENUBAR_NAME, [
  $0520064cdfc1bd2d$var$createCollectionScope,
  $d7bdfb9eb0fdf311$export$c7109489551a4f4
]), $0520064cdfc1bd2d$var$useMenuScope = $6cc32821e9371a1c$export$4027731b685e72eb(), $0520064cdfc1bd2d$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4(), [$0520064cdfc1bd2d$var$MenubarContextProvider, $0520064cdfc1bd2d$var$useMenubarContext] = $0520064cdfc1bd2d$var$createMenubarContext($0520064cdfc1bd2d$var$MENUBAR_NAME), $0520064cdfc1bd2d$export$7d4583da7581e674 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, value: valueProp, onValueChange, defaultValue, loop = !0, dir, ...menubarProps } = props, direction = $f631663db3294ace$export$b39126d51d94e6f3(dir), rovingFocusGroupScope = $0520064cdfc1bd2d$var$useRovingFocusGroupScope(__scopeMenubar), [value1 = "", setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    onChange: onValueChange,
    defaultProp: defaultValue
  }), [currentTabStopId, setCurrentTabStopId] = (0, import_react77.useState)(null);
  return /* @__PURE__ */ (0, import_react77.createElement)($0520064cdfc1bd2d$var$MenubarContextProvider, {
    scope: __scopeMenubar,
    value: value1,
    onMenuOpen: (0, import_react77.useCallback)((value) => {
      setValue(value), setCurrentTabStopId(value);
    }, [
      setValue
    ]),
    onMenuClose: (0, import_react77.useCallback)(
      () => setValue(""),
      [
        setValue
      ]
    ),
    onMenuToggle: (0, import_react77.useCallback)((value) => {
      setValue(
        (prevValue) => Boolean(prevValue) ? "" : value
      ), setCurrentTabStopId(value);
    }, [
      setValue
    ]),
    dir: direction,
    loop
  }, /* @__PURE__ */ (0, import_react77.createElement)($0520064cdfc1bd2d$var$Collection.Provider, {
    scope: __scopeMenubar
  }, /* @__PURE__ */ (0, import_react77.createElement)($0520064cdfc1bd2d$var$Collection.Slot, {
    scope: __scopeMenubar
  }, /* @__PURE__ */ (0, import_react77.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    orientation: "horizontal",
    loop,
    dir: direction,
    currentTabStopId,
    onCurrentTabStopIdChange: setCurrentTabStopId
  }), /* @__PURE__ */ (0, import_react77.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    role: "menubar"
  }, menubarProps, {
    ref: forwardedRef
  }))))));
}), $0520064cdfc1bd2d$var$MENU_NAME = "MenubarMenu", [$0520064cdfc1bd2d$var$MenubarMenuProvider, $0520064cdfc1bd2d$var$useMenubarMenuContext] = $0520064cdfc1bd2d$var$createMenubarContext($0520064cdfc1bd2d$var$MENU_NAME);
var $0520064cdfc1bd2d$var$TRIGGER_NAME = "MenubarTrigger", $0520064cdfc1bd2d$export$df05cd234081ebd5 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, disabled = !1, ...triggerProps } = props, rovingFocusGroupScope = $0520064cdfc1bd2d$var$useRovingFocusGroupScope(__scopeMenubar), menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar), context = $0520064cdfc1bd2d$var$useMenubarContext($0520064cdfc1bd2d$var$TRIGGER_NAME, __scopeMenubar), menuContext = $0520064cdfc1bd2d$var$useMenubarMenuContext($0520064cdfc1bd2d$var$TRIGGER_NAME, __scopeMenubar), ref = (0, import_react77.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, menuContext.triggerRef), [isFocused, setIsFocused] = (0, import_react77.useState)(!1), open = context.value === menuContext.value;
  return /* @__PURE__ */ (0, import_react77.createElement)($0520064cdfc1bd2d$var$Collection.ItemSlot, {
    scope: __scopeMenubar,
    value: menuContext.value,
    disabled
  }, /* @__PURE__ */ (0, import_react77.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    focusable: !disabled,
    tabStopId: menuContext.value
  }), /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$b688253958b8dfe7, _extends6({
    asChild: !0
  }, menuScope), /* @__PURE__ */ (0, import_react77.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    role: "menuitem",
    id: menuContext.triggerId,
    "aria-haspopup": "menu",
    "aria-expanded": open,
    "aria-controls": open ? menuContext.contentId : void 0,
    "data-highlighted": isFocused ? "" : void 0,
    "data-state": open ? "open" : "closed",
    "data-disabled": disabled ? "" : void 0,
    disabled
  }, triggerProps, {
    ref: composedRefs,
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, (event) => {
      !disabled && event.button === 0 && event.ctrlKey === !1 && (context.onMenuOpen(menuContext.value), open || event.preventDefault());
    }),
    onPointerEnter: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerEnter, () => {
      if (Boolean(context.value) && !open) {
        var _ref$current;
        context.onMenuOpen(menuContext.value), (_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.focus();
      }
    }),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      disabled || ([
        "Enter",
        " "
      ].includes(event.key) && context.onMenuToggle(menuContext.value), event.key === "ArrowDown" && context.onMenuOpen(menuContext.value), [
        "Enter",
        " ",
        "ArrowDown"
      ].includes(event.key) && (menuContext.wasKeyboardTriggerOpenRef.current = !0, event.preventDefault()));
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onFocus,
      () => setIsFocused(!0)
    ),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(
      props.onBlur,
      () => setIsFocused(!1)
    )
  })))));
});
var $0520064cdfc1bd2d$export$a98ed304d621e164 = (props) => {
  let { __scopeMenubar, ...portalProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$602eac185826482c, _extends6({}, menuScope, portalProps));
}, $0520064cdfc1bd2d$var$CONTENT_NAME = "MenubarContent", $0520064cdfc1bd2d$export$f42a00bc8a46c161 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, align = "start", ...contentProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar), context = $0520064cdfc1bd2d$var$useMenubarContext($0520064cdfc1bd2d$var$CONTENT_NAME, __scopeMenubar), menuContext = $0520064cdfc1bd2d$var$useMenubarMenuContext($0520064cdfc1bd2d$var$CONTENT_NAME, __scopeMenubar), getItems = $0520064cdfc1bd2d$var$useCollection(__scopeMenubar), hasInteractedOutsideRef = (0, import_react77.useRef)(!1);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$7c6e2c02157bb7d2, _extends6({
    id: menuContext.contentId,
    "aria-labelledby": menuContext.triggerId,
    "data-radix-menubar-content": ""
  }, menuScope, contentProps, {
    ref: forwardedRef,
    align,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onCloseAutoFocus, (event) => {
      if (!Boolean(context.value) && !hasInteractedOutsideRef.current) {
        var _menuContext$triggerR;
        (_menuContext$triggerR = menuContext.triggerRef.current) === null || _menuContext$triggerR === void 0 || _menuContext$triggerR.focus();
      }
      hasInteractedOutsideRef.current = !1, event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocusOutside, (event) => {
      let target = event.target;
      getItems().some((item) => {
        var _item$ref$current;
        return (_item$ref$current = item.ref.current) === null || _item$ref$current === void 0 ? void 0 : _item$ref$current.contains(target);
      }) && event.preventDefault();
    }),
    onInteractOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onInteractOutside, () => {
      hasInteractedOutsideRef.current = !0;
    }),
    onEntryFocus: (event) => {
      menuContext.wasKeyboardTriggerOpenRef.current || event.preventDefault();
    },
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onKeyDown, (event) => {
      if ([
        "ArrowRight",
        "ArrowLeft"
      ].includes(event.key)) {
        let target = event.target, targetIsSubTrigger = target.hasAttribute("data-radix-menubar-subtrigger"), isKeyDownInsideSubMenu = target.closest("[data-radix-menubar-content]") !== event.currentTarget, isPrevKey = (context.dir === "rtl" ? "ArrowRight" : "ArrowLeft") === event.key;
        if (!isPrevKey && targetIsSubTrigger || isKeyDownInsideSubMenu && isPrevKey)
          return;
        let candidateValues = getItems().filter(
          (item) => !item.disabled
        ).map(
          (item) => item.value
        );
        isPrevKey && candidateValues.reverse();
        let currentIndex = candidateValues.indexOf(menuContext.value);
        candidateValues = context.loop ? $0520064cdfc1bd2d$var$wrapArray(candidateValues, currentIndex + 1) : candidateValues.slice(currentIndex + 1);
        let [nextValue] = candidateValues;
        nextValue && context.onMenuOpen(nextValue);
      }
    }, {
      checkForDefaultPrevented: !1
    }),
    style: {
      ...props.style,
      "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
      "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
      "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
var $0520064cdfc1bd2d$export$39935c5b19a4b4e = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...labelProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$b04be29aa201d4f5, _extends6({}, menuScope, labelProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$92f903c8c91c291c = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...itemProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$6d08773d2e66f8f2, _extends6({}, menuScope, itemProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$372384eccd27af53 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...checkboxItemProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$16ce288f89fa631c, _extends6({}, menuScope, checkboxItemProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$7d2f467b4a7f68d8 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...radioItemProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$371ab307eab489c0, _extends6({}, menuScope, radioItemProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$63e15a0e2af5a57 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...itemIndicatorProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$c3468e2714d175fa, _extends6({}, menuScope, itemIndicatorProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$588aef9e7b5183b5 = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...separatorProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$1ff3c3f08ae963c0, _extends6({}, menuScope, separatorProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$1820ea18a1dfed3c = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...subTriggerProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$2ea8a7a591ac5eac, _extends6({
    "data-radix-menubar-subtrigger": ""
  }, menuScope, subTriggerProps, {
    ref: forwardedRef
  }));
});
var $0520064cdfc1bd2d$export$1b21e255bb3e4f7f = /* @__PURE__ */ (0, import_react77.forwardRef)((props, forwardedRef) => {
  let { __scopeMenubar, ...subContentProps } = props, menuScope = $0520064cdfc1bd2d$var$useMenuScope(__scopeMenubar);
  return /* @__PURE__ */ (0, import_react77.createElement)($6cc32821e9371a1c$export$6d4de93b380beddf, _extends6({}, menuScope, {
    "data-radix-menubar-content": ""
  }, subContentProps, {
    ref: forwardedRef,
    style: {
      ...props.style,
      "--radix-menubar-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-menubar-content-available-width": "var(--radix-popper-available-width)",
      "--radix-menubar-content-available-height": "var(--radix-popper-available-height)",
      "--radix-menubar-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-menubar-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }));
});
function $0520064cdfc1bd2d$var$wrapArray(array, startIndex) {
  return array.map(
    (_, index3) => array[(startIndex + index3) % array.length]
  );
}
var $0520064cdfc1bd2d$export$be92b6f5f03c0fe9 = $0520064cdfc1bd2d$export$7d4583da7581e674;
var $0520064cdfc1bd2d$export$41fb9f06171c75f4 = $0520064cdfc1bd2d$export$df05cd234081ebd5, $0520064cdfc1bd2d$export$602eac185826482c = $0520064cdfc1bd2d$export$a98ed304d621e164, $0520064cdfc1bd2d$export$7c6e2c02157bb7d2 = $0520064cdfc1bd2d$export$f42a00bc8a46c161;
var $0520064cdfc1bd2d$export$b04be29aa201d4f5 = $0520064cdfc1bd2d$export$39935c5b19a4b4e, $0520064cdfc1bd2d$export$6d08773d2e66f8f2 = $0520064cdfc1bd2d$export$92f903c8c91c291c, $0520064cdfc1bd2d$export$16ce288f89fa631c = $0520064cdfc1bd2d$export$372384eccd27af53;
var $0520064cdfc1bd2d$export$371ab307eab489c0 = $0520064cdfc1bd2d$export$7d2f467b4a7f68d8, $0520064cdfc1bd2d$export$c3468e2714d175fa = $0520064cdfc1bd2d$export$63e15a0e2af5a57, $0520064cdfc1bd2d$export$1ff3c3f08ae963c0 = $0520064cdfc1bd2d$export$588aef9e7b5183b5;
var $0520064cdfc1bd2d$export$2ea8a7a591ac5eac = $0520064cdfc1bd2d$export$1820ea18a1dfed3c, $0520064cdfc1bd2d$export$6d4de93b380beddf = $0520064cdfc1bd2d$export$1b21e255bb3e4f7f;

// app/components/ui/menubar.tsx
var import_jsx_runtime39 = __toESM(require_jsx_runtime(), 1);
var Menubar = React43.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$be92b6f5f03c0fe9,
  {
    ref,
    className: cn(
      "flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm",
      className
    ),
    ...props
  }
));
Menubar.displayName = $0520064cdfc1bd2d$export$be92b6f5f03c0fe9.displayName;
var MenubarTrigger = React43.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$41fb9f06171c75f4,
  {
    ref,
    className: cn(
      "flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      className
    ),
    ...props
  }
));
MenubarTrigger.displayName = $0520064cdfc1bd2d$export$41fb9f06171c75f4.displayName;
var MenubarSubTrigger = React43.forwardRef(({ className, inset, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsxs)(
  $0520064cdfc1bd2d$export$2ea8a7a591ac5eac,
  {
    ref,
    className: cn(
      "flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground",
      inset && "pl-8",
      className
    ),
    ...props,
    children: [
      children,
      /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(ChevronRightIcon, { className: "ml-auto h-4 w-4" })
    ]
  }
));
MenubarSubTrigger.displayName = $0520064cdfc1bd2d$export$2ea8a7a591ac5eac.displayName;
var MenubarSubContent = React43.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$6d4de93b380beddf,
  {
    ref,
    className: cn(
      "z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
));
MenubarSubContent.displayName = $0520064cdfc1bd2d$export$6d4de93b380beddf.displayName;
var MenubarContent = React43.forwardRef(
  ({ className, align = "start", alignOffset = -4, sideOffset = 8, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)($0520064cdfc1bd2d$export$602eac185826482c, { children: /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
    $0520064cdfc1bd2d$export$7c6e2c02157bb7d2,
    {
      ref,
      align,
      alignOffset,
      sideOffset,
      className: cn(
        "z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
        className
      ),
      ...props
    }
  ) })
);
MenubarContent.displayName = $0520064cdfc1bd2d$export$7c6e2c02157bb7d2.displayName;
var MenubarItem = React43.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      inset && "pl-8",
      className
    ),
    ...props
  }
));
MenubarItem.displayName = $0520064cdfc1bd2d$export$6d08773d2e66f8f2.displayName;
var MenubarCheckboxItem = React43.forwardRef(({ className, children, checked, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsxs)(
  $0520064cdfc1bd2d$export$16ce288f89fa631c,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    checked,
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime39.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime39.jsx)($0520064cdfc1bd2d$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(CheckIcon, { className: "h-4 w-4" }) }) }),
      children
    ]
  }
));
MenubarCheckboxItem.displayName = $0520064cdfc1bd2d$export$16ce288f89fa631c.displayName;
var MenubarRadioItem = React43.forwardRef(({ className, children, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsxs)(
  $0520064cdfc1bd2d$export$371ab307eab489c0,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    ...props,
    children: [
      /* @__PURE__ */ (0, import_jsx_runtime39.jsx)("span", { className: "absolute left-2 flex h-3.5 w-3.5 items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime39.jsx)($0520064cdfc1bd2d$export$c3468e2714d175fa, { children: /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(DotFilledIcon, { className: "h-4 w-4 fill-current" }) }) }),
      children
    ]
  }
));
MenubarRadioItem.displayName = $0520064cdfc1bd2d$export$371ab307eab489c0.displayName;
var MenubarLabel = React43.forwardRef(({ className, inset, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$b04be29aa201d4f5,
  {
    ref,
    className: cn(
      "px-2 py-1.5 text-sm font-semibold",
      inset && "pl-8",
      className
    ),
    ...props
  }
));
MenubarLabel.displayName = $0520064cdfc1bd2d$export$b04be29aa201d4f5.displayName;
var MenubarSeparator = React43.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  $0520064cdfc1bd2d$export$1ff3c3f08ae963c0,
  {
    ref,
    className: cn("-mx-1 my-1 h-px bg-muted", className),
    ...props
  }
));
MenubarSeparator.displayName = $0520064cdfc1bd2d$export$1ff3c3f08ae963c0.displayName;
var MenubarShortcut = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime39.jsx)(
  "span",
  {
    className: cn(
      "ml-auto text-xs tracking-widest text-muted-foreground",
      className
    ),
    ...props
  }
);
MenubarShortcut.displayname = "MenubarShortcut";

// app/components/headers/project-switcher.tsx
var import_react92 = __toESM(require_react(), 1);

// app/components/ui/command.tsx
var React47 = __toESM(require_react(), 1);

// ../../node_modules/cmdk/node_modules/@radix-ui/react-dialog/dist/index.module.js
var import_react91 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/@radix-ui/primitive/dist/index.module.js
function $e42e1063c40fb3ef$export$b9ecd428b558ff102(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = !0 } = {}) {
  return function(event) {
    if (originalEventHandler?.(event), checkForDefaultPrevented === !1 || !event.defaultPrevented)
      return ourEventHandler?.(event);
  };
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-compose-refs/dist/index.module.js
var import_react78 = __toESM(require_react());
function $6ed0406888f73fc4$var$setRef2(ref, value) {
  typeof ref == "function" ? ref(value) : ref != null && (ref.current = value);
}
function $6ed0406888f73fc4$export$43e446d32b3d21af2(...refs) {
  return (node) => refs.forEach(
    (ref) => $6ed0406888f73fc4$var$setRef2(ref, node)
  );
}
function $6ed0406888f73fc4$export$c7b2cbe3552a0d052(...refs) {
  return (0, import_react78.useCallback)($6ed0406888f73fc4$export$43e446d32b3d21af2(...refs), refs);
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-context/dist/index.module.js
var import_react79 = __toESM(require_react());
function $c512c27ab02ef895$export$fd42f52fd3ae11092(rootComponentName, defaultContext) {
  let Context = /* @__PURE__ */ (0, import_react79.createContext)(defaultContext);
  function Provider(props) {
    let { children, ...context } = props, value = (0, import_react79.useMemo)(
      () => context,
      Object.values(context)
    );
    return /* @__PURE__ */ (0, import_react79.createElement)(Context.Provider, {
      value
    }, children);
  }
  function useContext18(consumerName) {
    let context = (0, import_react79.useContext)(Context);
    if (context)
      return context;
    if (defaultContext !== void 0)
      return defaultContext;
    throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
  }
  return Provider.displayName = rootComponentName + "Provider", [
    Provider,
    useContext18
  ];
}
function $c512c27ab02ef895$export$50c7b4e9d9f19c12(scopeName, createContextScopeDeps = []) {
  let defaultContexts = [];
  function $c512c27ab02ef895$export$fd42f52fd3ae11093(rootComponentName, defaultContext) {
    let BaseContext = /* @__PURE__ */ (0, import_react79.createContext)(defaultContext), index3 = defaultContexts.length;
    defaultContexts = [
      ...defaultContexts,
      defaultContext
    ];
    function Provider(props) {
      let { scope, children, ...context } = props, Context = scope?.[scopeName][index3] || BaseContext, value = (0, import_react79.useMemo)(
        () => context,
        Object.values(context)
      );
      return /* @__PURE__ */ (0, import_react79.createElement)(Context.Provider, {
        value
      }, children);
    }
    function useContext18(consumerName, scope) {
      let Context = scope?.[scopeName][index3] || BaseContext, context = (0, import_react79.useContext)(Context);
      if (context)
        return context;
      if (defaultContext !== void 0)
        return defaultContext;
      throw new Error(`\`${consumerName}\` must be used within \`${rootComponentName}\``);
    }
    return Provider.displayName = rootComponentName + "Provider", [
      Provider,
      useContext18
    ];
  }
  let createScope = () => {
    let scopeContexts = defaultContexts.map((defaultContext) => /* @__PURE__ */ (0, import_react79.createContext)(defaultContext));
    return function(scope) {
      let contexts = scope?.[scopeName] || scopeContexts;
      return (0, import_react79.useMemo)(
        () => ({
          [`__scope${scopeName}`]: {
            ...scope,
            [scopeName]: contexts
          }
        }),
        [
          scope,
          contexts
        ]
      );
    };
  };
  return createScope.scopeName = scopeName, [
    $c512c27ab02ef895$export$fd42f52fd3ae11093,
    $c512c27ab02ef895$var$composeContextScopes2(createScope, ...createContextScopeDeps)
  ];
}
function $c512c27ab02ef895$var$composeContextScopes2(...scopes) {
  let baseScope = scopes[0];
  if (scopes.length === 1)
    return baseScope;
  let createScope1 = () => {
    let scopeHooks = scopes.map(
      (createScope) => ({
        useScope: createScope(),
        scopeName: createScope.scopeName
      })
    );
    return function(overrideScopes) {
      let nextScopes1 = scopeHooks.reduce((nextScopes, { useScope, scopeName }) => {
        let currentScope = useScope(overrideScopes)[`__scope${scopeName}`];
        return {
          ...nextScopes,
          ...currentScope
        };
      }, {});
      return (0, import_react79.useMemo)(
        () => ({
          [`__scope${baseScope.scopeName}`]: nextScopes1
        }),
        [
          nextScopes1
        ]
      );
    };
  };
  return createScope1.scopeName = baseScope.scopeName, createScope1;
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-id/dist/index.module.js
var $2AODx$react2 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/@radix-ui/react-use-layout-effect/dist/index.module.js
var import_react80 = __toESM(require_react()), $9f79659886946c16$export$e5c5a5f917a5871c2 = Boolean(globalThis?.document) ? import_react80.useLayoutEffect : () => {
};

// ../../node_modules/cmdk/node_modules/@radix-ui/react-id/dist/index.module.js
var $1746a345f3d73bb7$var$useReactId2 = $2AODx$react2["useId".toString()] || (() => {
}), $1746a345f3d73bb7$var$count2 = 0;
function $1746a345f3d73bb7$export$f680877a34711e372(deterministicId) {
  let [id3, setId] = $2AODx$react2.useState($1746a345f3d73bb7$var$useReactId2());
  return $9f79659886946c16$export$e5c5a5f917a5871c2(() => {
    deterministicId || setId(
      (reactId) => reactId ?? String($1746a345f3d73bb7$var$count2++)
    );
  }, [
    deterministicId
  ]), deterministicId || (id3 ? `radix-${id3}` : "");
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
var import_react82 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/@radix-ui/react-use-callback-ref/dist/index.module.js
var import_react81 = __toESM(require_react());
function $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(callback) {
  let callbackRef = (0, import_react81.useRef)(callback);
  return (0, import_react81.useEffect)(() => {
    callbackRef.current = callback;
  }), (0, import_react81.useMemo)(
    () => (...args) => {
      var _callbackRef$current;
      return (_callbackRef$current = callbackRef.current) === null || _callbackRef$current === void 0 ? void 0 : _callbackRef$current.call(callbackRef, ...args);
    },
    []
  );
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-use-controllable-state/dist/index.module.js
function $71cd76cc60e0454e$export$6f32135080cb4c32({ prop, defaultProp, onChange = () => {
} }) {
  let [uncontrolledProp, setUncontrolledProp] = $71cd76cc60e0454e$var$useUncontrolledState2({
    defaultProp,
    onChange
  }), isControlled = prop !== void 0, value1 = isControlled ? prop : uncontrolledProp, handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onChange), setValue = (0, import_react82.useCallback)((nextValue) => {
    if (isControlled) {
      let value = typeof nextValue == "function" ? nextValue(prop) : nextValue;
      value !== prop && handleChange(value);
    } else
      setUncontrolledProp(nextValue);
  }, [
    isControlled,
    prop,
    setUncontrolledProp,
    handleChange
  ]);
  return [
    value1,
    setValue
  ];
}
function $71cd76cc60e0454e$var$useUncontrolledState2({ defaultProp, onChange }) {
  let uncontrolledState = (0, import_react82.useState)(defaultProp), [value] = uncontrolledState, prevValueRef = (0, import_react82.useRef)(value), handleChange = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onChange);
  return (0, import_react82.useEffect)(() => {
    prevValueRef.current !== value && (handleChange(value), prevValueRef.current = value);
  }, [
    value,
    prevValueRef,
    handleChange
  ]), uncontrolledState;
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var import_react86 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/@radix-ui/react-primitive/dist/index.module.js
var import_react84 = __toESM(require_react()), import_react_dom7 = __toESM(require_react_dom());

// ../../node_modules/cmdk/node_modules/@radix-ui/react-slot/dist/index.module.js
var import_react83 = __toESM(require_react());
var $5e63c961fc1ce211$export$8c6ed5c666ac13602 = /* @__PURE__ */ (0, import_react83.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props, childrenArray = import_react83.Children.toArray(children), slottable = childrenArray.find($5e63c961fc1ce211$var$isSlottable2);
  if (slottable) {
    let newElement = slottable.props.children, newChildren = childrenArray.map((child) => child === slottable ? import_react83.Children.count(newElement) > 1 ? import_react83.Children.only(null) : /* @__PURE__ */ (0, import_react83.isValidElement)(newElement) ? newElement.props.children : null : child);
    return /* @__PURE__ */ (0, import_react83.createElement)($5e63c961fc1ce211$var$SlotClone2, _extends6({}, slotProps, {
      ref: forwardedRef
    }), /* @__PURE__ */ (0, import_react83.isValidElement)(newElement) ? /* @__PURE__ */ (0, import_react83.cloneElement)(newElement, void 0, newChildren) : null);
  }
  return /* @__PURE__ */ (0, import_react83.createElement)($5e63c961fc1ce211$var$SlotClone2, _extends6({}, slotProps, {
    ref: forwardedRef
  }), children);
});
$5e63c961fc1ce211$export$8c6ed5c666ac13602.displayName = "Slot";
var $5e63c961fc1ce211$var$SlotClone2 = /* @__PURE__ */ (0, import_react83.forwardRef)((props, forwardedRef) => {
  let { children, ...slotProps } = props;
  return /* @__PURE__ */ (0, import_react83.isValidElement)(children) ? /* @__PURE__ */ (0, import_react83.cloneElement)(children, {
    ...$5e63c961fc1ce211$var$mergeProps2(slotProps, children.props),
    ref: $6ed0406888f73fc4$export$43e446d32b3d21af2(forwardedRef, children.ref)
  }) : import_react83.Children.count(children) > 1 ? import_react83.Children.only(null) : null;
});
$5e63c961fc1ce211$var$SlotClone2.displayName = "SlotClone";
var $5e63c961fc1ce211$export$d9f1ccf0bdb05d452 = ({ children }) => /* @__PURE__ */ (0, import_react83.createElement)(import_react83.Fragment, null, children);
function $5e63c961fc1ce211$var$isSlottable2(child) {
  return /* @__PURE__ */ (0, import_react83.isValidElement)(child) && child.type === $5e63c961fc1ce211$export$d9f1ccf0bdb05d452;
}
function $5e63c961fc1ce211$var$mergeProps2(slotProps, childProps) {
  let overrideProps = {
    ...childProps
  };
  for (let propName in childProps) {
    let slotPropValue = slotProps[propName], childPropValue = childProps[propName];
    /^on[A-Z]/.test(propName) ? overrideProps[propName] = (...args) => {
      childPropValue?.(...args), slotPropValue?.(...args);
    } : propName === "style" ? overrideProps[propName] = {
      ...slotPropValue,
      ...childPropValue
    } : propName === "className" && (overrideProps[propName] = [
      slotPropValue,
      childPropValue
    ].filter(Boolean).join(" "));
  }
  return {
    ...slotProps,
    ...overrideProps
  };
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-primitive/dist/index.module.js
var $8927f6f2acc4f386$var$NODES2 = [
  "a",
  "button",
  "div",
  "h2",
  "h3",
  "img",
  "li",
  "nav",
  "ol",
  "p",
  "span",
  "svg",
  "ul"
], $8927f6f2acc4f386$export$250ffa63cdc0d0342 = $8927f6f2acc4f386$var$NODES2.reduce((primitive, node) => {
  let Node2 = /* @__PURE__ */ (0, import_react84.forwardRef)((props, forwardedRef) => {
    let { asChild, ...primitiveProps } = props, Comp = asChild ? $5e63c961fc1ce211$export$8c6ed5c666ac13602 : node;
    return (0, import_react84.useEffect)(() => {
      window[Symbol.for("radix-ui")] = !0;
    }, []), /* @__PURE__ */ (0, import_react84.createElement)(Comp, _extends6({}, primitiveProps, {
      ref: forwardedRef
    }));
  });
  return Node2.displayName = `Primitive.${node}`, {
    ...primitive,
    [node]: Node2
  };
}, {});
function $8927f6f2acc4f386$export$6d1a0317bde7de7f2(target, event) {
  target && (0, import_react_dom7.flushSync)(
    () => target.dispatchEvent(event)
  );
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-use-escape-keydown/dist/index.module.js
var import_react85 = __toESM(require_react());
function $addc16e1bbe58fd0$export$3a72a57244d6e7652(onEscapeKeyDownProp) {
  let onEscapeKeyDown = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onEscapeKeyDownProp);
  (0, import_react85.useEffect)(() => {
    let handleKeyDown = (event) => {
      event.key === "Escape" && onEscapeKeyDown(event);
    };
    return document.addEventListener("keydown", handleKeyDown), () => document.removeEventListener("keydown", handleKeyDown);
  }, [
    onEscapeKeyDown
  ]);
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-dismissable-layer/dist/index.module.js
var $5cb92bef7577960e$var$CONTEXT_UPDATE2 = "dismissableLayer.update", $5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE2 = "dismissableLayer.pointerDownOutside", $5cb92bef7577960e$var$FOCUS_OUTSIDE2 = "dismissableLayer.focusOutside", $5cb92bef7577960e$var$originalBodyPointerEvents2, $5cb92bef7577960e$var$DismissableLayerContext2 = /* @__PURE__ */ (0, import_react86.createContext)({
  layers: /* @__PURE__ */ new Set(),
  layersWithOutsidePointerEventsDisabled: /* @__PURE__ */ new Set(),
  branches: /* @__PURE__ */ new Set()
}), $5cb92bef7577960e$export$177fb62ff3ec1f222 = /* @__PURE__ */ (0, import_react86.forwardRef)((props, forwardedRef) => {
  let { disableOutsidePointerEvents = !1, onEscapeKeyDown, onPointerDownOutside, onFocusOutside, onInteractOutside, onDismiss, ...layerProps } = props, context = (0, import_react86.useContext)($5cb92bef7577960e$var$DismissableLayerContext2), [node1, setNode] = (0, import_react86.useState)(null), [, force] = (0, import_react86.useState)({}), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d052(
    forwardedRef,
    (node) => setNode(node)
  ), layers = Array.from(context.layers), [highestLayerWithOutsidePointerEventsDisabled] = [
    ...context.layersWithOutsidePointerEventsDisabled
  ].slice(-1), highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled), index3 = node1 ? layers.indexOf(node1) : -1, isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0, isPointerEventsEnabled = index3 >= highestLayerWithOutsidePointerEventsDisabledIndex, pointerDownOutside = $5cb92bef7577960e$var$usePointerDownOutside2((event) => {
    let target = event.target, isPointerDownOnBranch = [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    );
    !isPointerEventsEnabled || isPointerDownOnBranch || (onPointerDownOutside?.(event), onInteractOutside?.(event), event.defaultPrevented || onDismiss?.());
  }), focusOutside = $5cb92bef7577960e$var$useFocusOutside2((event) => {
    let target = event.target;
    [
      ...context.branches
    ].some(
      (branch) => branch.contains(target)
    ) || (onFocusOutside?.(event), onInteractOutside?.(event), event.defaultPrevented || onDismiss?.());
  });
  return $addc16e1bbe58fd0$export$3a72a57244d6e7652((event) => {
    index3 === context.layers.size - 1 && (onEscapeKeyDown?.(event), !event.defaultPrevented && onDismiss && (event.preventDefault(), onDismiss()));
  }), (0, import_react86.useEffect)(() => {
    if (node1)
      return disableOutsidePointerEvents && (context.layersWithOutsidePointerEventsDisabled.size === 0 && ($5cb92bef7577960e$var$originalBodyPointerEvents2 = document.body.style.pointerEvents, document.body.style.pointerEvents = "none"), context.layersWithOutsidePointerEventsDisabled.add(node1)), context.layers.add(node1), $5cb92bef7577960e$var$dispatchUpdate2(), () => {
        disableOutsidePointerEvents && context.layersWithOutsidePointerEventsDisabled.size === 1 && (document.body.style.pointerEvents = $5cb92bef7577960e$var$originalBodyPointerEvents2);
      };
  }, [
    node1,
    disableOutsidePointerEvents,
    context
  ]), (0, import_react86.useEffect)(() => () => {
    node1 && (context.layers.delete(node1), context.layersWithOutsidePointerEventsDisabled.delete(node1), $5cb92bef7577960e$var$dispatchUpdate2());
  }, [
    node1,
    context
  ]), (0, import_react86.useEffect)(() => {
    let handleUpdate = () => force({});
    return document.addEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE2, handleUpdate), () => document.removeEventListener($5cb92bef7577960e$var$CONTEXT_UPDATE2, handleUpdate);
  }, []), /* @__PURE__ */ (0, import_react86.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d0342.div, _extends6({}, layerProps, {
    ref: composedRefs,
    style: {
      pointerEvents: isBodyPointerEventsDisabled ? isPointerEventsEnabled ? "auto" : "none" : void 0,
      ...props.style
    },
    onFocusCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff102(props.onFocusCapture, focusOutside.onFocusCapture),
    onBlurCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff102(props.onBlurCapture, focusOutside.onBlurCapture),
    onPointerDownCapture: $e42e1063c40fb3ef$export$b9ecd428b558ff102(props.onPointerDownCapture, pointerDownOutside.onPointerDownCapture)
  }));
});
function $5cb92bef7577960e$var$usePointerDownOutside2(onPointerDownOutside) {
  let handlePointerDownOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onPointerDownOutside), isPointerInsideReactTreeRef = (0, import_react86.useRef)(!1), handleClickRef = (0, import_react86.useRef)(() => {
  });
  return (0, import_react86.useEffect)(() => {
    let handlePointerDown = (event) => {
      if (event.target && !isPointerInsideReactTreeRef.current) {
        let handleAndDispatchPointerDownOutsideEvent = function() {
          $5cb92bef7577960e$var$handleAndDispatchCustomEvent2($5cb92bef7577960e$var$POINTER_DOWN_OUTSIDE2, handlePointerDownOutside, eventDetail, {
            discrete: !0
          });
        }, eventDetail = {
          originalEvent: event
        };
        event.pointerType === "touch" ? (document.removeEventListener("click", handleClickRef.current), handleClickRef.current = handleAndDispatchPointerDownOutsideEvent, document.addEventListener("click", handleClickRef.current, {
          once: !0
        })) : handleAndDispatchPointerDownOutsideEvent();
      }
      isPointerInsideReactTreeRef.current = !1;
    }, timerId = window.setTimeout(() => {
      document.addEventListener("pointerdown", handlePointerDown);
    }, 0);
    return () => {
      window.clearTimeout(timerId), document.removeEventListener("pointerdown", handlePointerDown), document.removeEventListener("click", handleClickRef.current);
    };
  }, [
    handlePointerDownOutside
  ]), {
    // ensures we check React component tree (not just DOM tree)
    onPointerDownCapture: () => isPointerInsideReactTreeRef.current = !0
  };
}
function $5cb92bef7577960e$var$useFocusOutside2(onFocusOutside) {
  let handleFocusOutside = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onFocusOutside), isFocusInsideReactTreeRef = (0, import_react86.useRef)(!1);
  return (0, import_react86.useEffect)(() => {
    let handleFocus = (event) => {
      event.target && !isFocusInsideReactTreeRef.current && $5cb92bef7577960e$var$handleAndDispatchCustomEvent2($5cb92bef7577960e$var$FOCUS_OUTSIDE2, handleFocusOutside, {
        originalEvent: event
      }, {
        discrete: !1
      });
    };
    return document.addEventListener("focusin", handleFocus), () => document.removeEventListener("focusin", handleFocus);
  }, [
    handleFocusOutside
  ]), {
    onFocusCapture: () => isFocusInsideReactTreeRef.current = !0,
    onBlurCapture: () => isFocusInsideReactTreeRef.current = !1
  };
}
function $5cb92bef7577960e$var$dispatchUpdate2() {
  let event = new CustomEvent($5cb92bef7577960e$var$CONTEXT_UPDATE2);
  document.dispatchEvent(event);
}
function $5cb92bef7577960e$var$handleAndDispatchCustomEvent2(name, handler, detail, { discrete }) {
  let target = detail.originalEvent.target, event = new CustomEvent(name, {
    bubbles: !1,
    cancelable: !0,
    detail
  });
  handler && target.addEventListener(name, handler, {
    once: !0
  }), discrete ? $8927f6f2acc4f386$export$6d1a0317bde7de7f2(target, event) : target.dispatchEvent(event);
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-focus-scope/dist/index.module.js
var import_react87 = __toESM(require_react());
var $d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT2 = "focusScope.autoFocusOnMount", $d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT2 = "focusScope.autoFocusOnUnmount", $d3863c46a17e8a28$var$EVENT_OPTIONS2 = {
  bubbles: !1,
  cancelable: !0
};
var $d3863c46a17e8a28$export$20e40289641fbbb62 = /* @__PURE__ */ (0, import_react87.forwardRef)((props, forwardedRef) => {
  let { loop = !1, trapped = !1, onMountAutoFocus: onMountAutoFocusProp, onUnmountAutoFocus: onUnmountAutoFocusProp, ...scopeProps } = props, [container1, setContainer] = (0, import_react87.useState)(null), onMountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onMountAutoFocusProp), onUnmountAutoFocus = $b1b2314f5f9a1d84$export$25bec8c6f54ee79a2(onUnmountAutoFocusProp), lastFocusedElementRef = (0, import_react87.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d052(
    forwardedRef,
    (node) => setContainer(node)
  ), focusScope = (0, import_react87.useRef)({
    paused: !1,
    pause() {
      this.paused = !0;
    },
    resume() {
      this.paused = !1;
    }
  }).current;
  (0, import_react87.useEffect)(() => {
    if (trapped) {
      let handleFocusIn = function(event) {
        if (focusScope.paused || !container1)
          return;
        let target = event.target;
        container1.contains(target) ? lastFocusedElementRef.current = target : $d3863c46a17e8a28$var$focus2(lastFocusedElementRef.current, {
          select: !0
        });
      }, handleFocusOut = function(event) {
        focusScope.paused || !container1 || container1.contains(event.relatedTarget) || $d3863c46a17e8a28$var$focus2(lastFocusedElementRef.current, {
          select: !0
        });
      };
      return document.addEventListener("focusin", handleFocusIn), document.addEventListener("focusout", handleFocusOut), () => {
        document.removeEventListener("focusin", handleFocusIn), document.removeEventListener("focusout", handleFocusOut);
      };
    }
  }, [
    trapped,
    container1,
    focusScope.paused
  ]), (0, import_react87.useEffect)(() => {
    if (container1) {
      $d3863c46a17e8a28$var$focusScopesStack2.add(focusScope);
      let previouslyFocusedElement = document.activeElement;
      if (!container1.contains(previouslyFocusedElement)) {
        let mountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT2, $d3863c46a17e8a28$var$EVENT_OPTIONS2);
        container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT2, onMountAutoFocus), container1.dispatchEvent(mountEvent), mountEvent.defaultPrevented || ($d3863c46a17e8a28$var$focusFirst2($d3863c46a17e8a28$var$removeLinks2($d3863c46a17e8a28$var$getTabbableCandidates2(container1)), {
          select: !0
        }), document.activeElement === previouslyFocusedElement && $d3863c46a17e8a28$var$focus2(container1));
      }
      return () => {
        container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_MOUNT2, onMountAutoFocus), setTimeout(() => {
          let unmountEvent = new CustomEvent($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT2, $d3863c46a17e8a28$var$EVENT_OPTIONS2);
          container1.addEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT2, onUnmountAutoFocus), container1.dispatchEvent(unmountEvent), unmountEvent.defaultPrevented || $d3863c46a17e8a28$var$focus2(previouslyFocusedElement ?? document.body, {
            select: !0
          }), container1.removeEventListener($d3863c46a17e8a28$var$AUTOFOCUS_ON_UNMOUNT2, onUnmountAutoFocus), $d3863c46a17e8a28$var$focusScopesStack2.remove(focusScope);
        }, 0);
      };
    }
  }, [
    container1,
    onMountAutoFocus,
    onUnmountAutoFocus,
    focusScope
  ]);
  let handleKeyDown = (0, import_react87.useCallback)((event) => {
    if (!loop && !trapped || focusScope.paused)
      return;
    let isTabKey = event.key === "Tab" && !event.altKey && !event.ctrlKey && !event.metaKey, focusedElement = document.activeElement;
    if (isTabKey && focusedElement) {
      let container = event.currentTarget, [first, last] = $d3863c46a17e8a28$var$getTabbableEdges2(container);
      first && last ? !event.shiftKey && focusedElement === last ? (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus2(first, {
        select: !0
      })) : event.shiftKey && focusedElement === first && (event.preventDefault(), loop && $d3863c46a17e8a28$var$focus2(last, {
        select: !0
      })) : focusedElement === container && event.preventDefault();
    }
  }, [
    loop,
    trapped,
    focusScope.paused
  ]);
  return /* @__PURE__ */ (0, import_react87.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d0342.div, _extends6({
    tabIndex: -1
  }, scopeProps, {
    ref: composedRefs,
    onKeyDown: handleKeyDown
  }));
});
function $d3863c46a17e8a28$var$focusFirst2(candidates, { select = !1 } = {}) {
  let previouslyFocusedElement = document.activeElement;
  for (let candidate of candidates)
    if ($d3863c46a17e8a28$var$focus2(candidate, {
      select
    }), document.activeElement !== previouslyFocusedElement)
      return;
}
function $d3863c46a17e8a28$var$getTabbableEdges2(container) {
  let candidates = $d3863c46a17e8a28$var$getTabbableCandidates2(container), first = $d3863c46a17e8a28$var$findVisible2(candidates, container), last = $d3863c46a17e8a28$var$findVisible2(candidates.reverse(), container);
  return [
    first,
    last
  ];
}
function $d3863c46a17e8a28$var$getTabbableCandidates2(container) {
  let nodes = [], walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {
    acceptNode: (node) => {
      let isHiddenInput = node.tagName === "INPUT" && node.type === "hidden";
      return node.disabled || node.hidden || isHiddenInput ? NodeFilter.FILTER_SKIP : node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;
    }
  });
  for (; walker.nextNode(); )
    nodes.push(walker.currentNode);
  return nodes;
}
function $d3863c46a17e8a28$var$findVisible2(elements, container) {
  for (let element of elements)
    if (!$d3863c46a17e8a28$var$isHidden2(element, {
      upTo: container
    }))
      return element;
}
function $d3863c46a17e8a28$var$isHidden2(node, { upTo }) {
  if (getComputedStyle(node).visibility === "hidden")
    return !0;
  for (; node; ) {
    if (upTo !== void 0 && node === upTo)
      return !1;
    if (getComputedStyle(node).display === "none")
      return !0;
    node = node.parentElement;
  }
  return !1;
}
function $d3863c46a17e8a28$var$isSelectableInput2(element) {
  return element instanceof HTMLInputElement && "select" in element;
}
function $d3863c46a17e8a28$var$focus2(element, { select = !1 } = {}) {
  if (element && element.focus) {
    let previouslyFocusedElement = document.activeElement;
    element.focus({
      preventScroll: !0
    }), element !== previouslyFocusedElement && $d3863c46a17e8a28$var$isSelectableInput2(element) && select && element.select();
  }
}
var $d3863c46a17e8a28$var$focusScopesStack2 = $d3863c46a17e8a28$var$createFocusScopesStack2();
function $d3863c46a17e8a28$var$createFocusScopesStack2() {
  let stack = [];
  return {
    add(focusScope) {
      let activeFocusScope = stack[0];
      focusScope !== activeFocusScope && activeFocusScope?.pause(), stack = $d3863c46a17e8a28$var$arrayRemove2(stack, focusScope), stack.unshift(focusScope);
    },
    remove(focusScope) {
      var _stack$;
      stack = $d3863c46a17e8a28$var$arrayRemove2(stack, focusScope), (_stack$ = stack[0]) === null || _stack$ === void 0 || _stack$.resume();
    }
  };
}
function $d3863c46a17e8a28$var$arrayRemove2(array, item) {
  let updatedArray = [
    ...array
  ], index3 = updatedArray.indexOf(item);
  return index3 !== -1 && updatedArray.splice(index3, 1), updatedArray;
}
function $d3863c46a17e8a28$var$removeLinks2(items) {
  return items.filter(
    (item) => item.tagName !== "A"
  );
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-portal/dist/index.module.js
var import_react88 = __toESM(require_react()), import_react_dom8 = __toESM(require_react_dom());
var $f1701beae083dbae$export$602eac185826482c2 = /* @__PURE__ */ (0, import_react88.forwardRef)((props, forwardedRef) => {
  var _globalThis$document;
  let { container = globalThis == null || (_globalThis$document = globalThis.document) === null || _globalThis$document === void 0 ? void 0 : _globalThis$document.body, ...portalProps } = props;
  return container ? /* @__PURE__ */ import_react_dom8.default.createPortal(/* @__PURE__ */ (0, import_react88.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d0342.div, _extends6({}, portalProps, {
    ref: forwardedRef
  })), container) : null;
});

// ../../node_modules/cmdk/node_modules/@radix-ui/react-presence/dist/index.module.js
var import_react89 = __toESM(require_react()), import_react_dom9 = __toESM(require_react_dom());
function $fe963b355347cc68$export$3e6543de14f8614f2(initialState, machine) {
  return (0, import_react89.useReducer)((state, event) => {
    let nextState = machine[state][event];
    return nextState ?? state;
  }, initialState);
}
var $921a889cee6df7e8$export$99c2b779aa4e8b8b2 = (props) => {
  let { present, children } = props, presence = $921a889cee6df7e8$var$usePresence2(present), child = typeof children == "function" ? children({
    present: presence.isPresent
  }) : import_react89.Children.only(children), ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d052(presence.ref, child.ref);
  return typeof children == "function" || presence.isPresent ? /* @__PURE__ */ (0, import_react89.cloneElement)(child, {
    ref
  }) : null;
};
$921a889cee6df7e8$export$99c2b779aa4e8b8b2.displayName = "Presence";
function $921a889cee6df7e8$var$usePresence2(present) {
  let [node1, setNode] = (0, import_react89.useState)(), stylesRef = (0, import_react89.useRef)({}), prevPresentRef = (0, import_react89.useRef)(present), prevAnimationNameRef = (0, import_react89.useRef)("none"), initialState = present ? "mounted" : "unmounted", [state, send] = $fe963b355347cc68$export$3e6543de14f8614f2(initialState, {
    mounted: {
      UNMOUNT: "unmounted",
      ANIMATION_OUT: "unmountSuspended"
    },
    unmountSuspended: {
      MOUNT: "mounted",
      ANIMATION_END: "unmounted"
    },
    unmounted: {
      MOUNT: "mounted"
    }
  });
  return (0, import_react89.useEffect)(() => {
    let currentAnimationName = $921a889cee6df7e8$var$getAnimationName2(stylesRef.current);
    prevAnimationNameRef.current = state === "mounted" ? currentAnimationName : "none";
  }, [
    state
  ]), $9f79659886946c16$export$e5c5a5f917a5871c2(() => {
    let styles = stylesRef.current, wasPresent = prevPresentRef.current;
    if (wasPresent !== present) {
      let prevAnimationName = prevAnimationNameRef.current, currentAnimationName = $921a889cee6df7e8$var$getAnimationName2(styles);
      present ? send("MOUNT") : currentAnimationName === "none" || styles?.display === "none" ? send("UNMOUNT") : send(wasPresent && prevAnimationName !== currentAnimationName ? "ANIMATION_OUT" : "UNMOUNT"), prevPresentRef.current = present;
    }
  }, [
    present,
    send
  ]), $9f79659886946c16$export$e5c5a5f917a5871c2(() => {
    if (node1) {
      let handleAnimationEnd = (event) => {
        let isCurrentAnimation = $921a889cee6df7e8$var$getAnimationName2(stylesRef.current).includes(event.animationName);
        event.target === node1 && isCurrentAnimation && (0, import_react_dom9.flushSync)(
          () => send("ANIMATION_END")
        );
      }, handleAnimationStart = (event) => {
        event.target === node1 && (prevAnimationNameRef.current = $921a889cee6df7e8$var$getAnimationName2(stylesRef.current));
      };
      return node1.addEventListener("animationstart", handleAnimationStart), node1.addEventListener("animationcancel", handleAnimationEnd), node1.addEventListener("animationend", handleAnimationEnd), () => {
        node1.removeEventListener("animationstart", handleAnimationStart), node1.removeEventListener("animationcancel", handleAnimationEnd), node1.removeEventListener("animationend", handleAnimationEnd);
      };
    } else
      send("ANIMATION_END");
  }, [
    node1,
    send
  ]), {
    isPresent: [
      "mounted",
      "unmountSuspended"
    ].includes(state),
    ref: (0, import_react89.useCallback)((node) => {
      node && (stylesRef.current = getComputedStyle(node)), setNode(node);
    }, [])
  };
}
function $921a889cee6df7e8$var$getAnimationName2(styles) {
  return styles?.animationName || "none";
}

// ../../node_modules/cmdk/node_modules/@radix-ui/react-focus-guards/dist/index.module.js
var import_react90 = __toESM(require_react()), $3db38b7d1fb3fe6a$var$count2 = 0;
function $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c2() {
  (0, import_react90.useEffect)(() => {
    var _edgeGuards$, _edgeGuards$2;
    let edgeGuards = document.querySelectorAll("[data-radix-focus-guard]");
    return document.body.insertAdjacentElement("afterbegin", (_edgeGuards$ = edgeGuards[0]) !== null && _edgeGuards$ !== void 0 ? _edgeGuards$ : $3db38b7d1fb3fe6a$var$createFocusGuard2()), document.body.insertAdjacentElement("beforeend", (_edgeGuards$2 = edgeGuards[1]) !== null && _edgeGuards$2 !== void 0 ? _edgeGuards$2 : $3db38b7d1fb3fe6a$var$createFocusGuard2()), $3db38b7d1fb3fe6a$var$count2++, () => {
      $3db38b7d1fb3fe6a$var$count2 === 1 && document.querySelectorAll("[data-radix-focus-guard]").forEach(
        (node) => node.remove()
      ), $3db38b7d1fb3fe6a$var$count2--;
    };
  }, []);
}
function $3db38b7d1fb3fe6a$var$createFocusGuard2() {
  let element = document.createElement("span");
  return element.setAttribute("data-radix-focus-guard", ""), element.tabIndex = 0, element.style.cssText = "outline: none; opacity: 0; position: fixed; pointer-events: none", element;
}

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/Combination.js
var React46 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/UI.js
var React44 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/medium.js
var effectCar2 = createSidecarMedium();

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/UI.js
var nothing2 = function() {
}, RemoveScroll2 = React44.forwardRef(function(props, parentRef) {
  var ref = React44.useRef(null), _a = React44.useState({
    onScrollCapture: nothing2,
    onWheelCapture: nothing2,
    onTouchMoveCapture: nothing2
  }), callbacks = _a[0], setCallbacks = _a[1], forwardProps = props.forwardProps, children = props.children, className = props.className, removeScrollBar = props.removeScrollBar, enabled = props.enabled, shards = props.shards, sideCar = props.sideCar, noIsolation = props.noIsolation, inert = props.inert, allowPinchZoom = props.allowPinchZoom, _b = props.as, Container = _b === void 0 ? "div" : _b, rest = __rest(props, ["forwardProps", "children", "className", "removeScrollBar", "enabled", "shards", "sideCar", "noIsolation", "inert", "allowPinchZoom", "as"]), SideCar2 = sideCar, containerRef = useMergeRefs([ref, parentRef]), containerProps = __assign(__assign({}, rest), callbacks);
  return React44.createElement(
    React44.Fragment,
    null,
    enabled && React44.createElement(SideCar2, { sideCar: effectCar2, removeScrollBar, shards, noIsolation, inert, setCallbacks, allowPinchZoom: !!allowPinchZoom, lockRef: ref }),
    forwardProps ? React44.cloneElement(React44.Children.only(children), __assign(__assign({}, containerProps), { ref: containerRef })) : React44.createElement(Container, __assign({}, containerProps, { className, ref: containerRef }), children)
  );
});
RemoveScroll2.defaultProps = {
  enabled: !0,
  removeScrollBar: !0,
  inert: !1
};
RemoveScroll2.classNames = {
  fullWidth: fullWidthClassName,
  zeroRight: zeroRightClassName
};

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var React45 = __toESM(require_react());

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/aggresiveCapture.js
var passiveSupported2 = !1;
if (typeof window < "u")
  try {
    options = Object.defineProperty({}, "passive", {
      get: function() {
        return passiveSupported2 = !0, !0;
      }
    }), window.addEventListener("test", options, options), window.removeEventListener("test", options, options);
  } catch {
    passiveSupported2 = !1;
  }
var options, nonPassive2 = passiveSupported2 ? { passive: !1 } : !1;

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/handleScroll.js
var elementCouldBeVScrolled2 = function(node) {
  var styles = window.getComputedStyle(node);
  return styles.overflowY !== "hidden" && // not-not-scrollable
  !(styles.overflowY === styles.overflowX && styles.overflowY === "visible");
}, elementCouldBeHScrolled2 = function(node) {
  var styles = window.getComputedStyle(node);
  return styles.overflowX !== "hidden" && // not-not-scrollable
  !(styles.overflowY === styles.overflowX && styles.overflowX === "visible");
}, locationCouldBeScrolled2 = function(axis, node) {
  var current = node;
  do {
    typeof ShadowRoot < "u" && current instanceof ShadowRoot && (current = current.host);
    var isScrollable = elementCouldBeScrolled2(axis, current);
    if (isScrollable) {
      var _a = getScrollVariables2(axis, current), s4 = _a[1], d4 = _a[2];
      if (s4 > d4)
        return !0;
    }
    current = current.parentNode;
  } while (current && current !== document.body);
  return !1;
}, getVScrollVariables2 = function(_a) {
  var scrollTop = _a.scrollTop, scrollHeight = _a.scrollHeight, clientHeight = _a.clientHeight;
  return [
    scrollTop,
    scrollHeight,
    clientHeight
  ];
}, getHScrollVariables2 = function(_a) {
  var scrollLeft = _a.scrollLeft, scrollWidth = _a.scrollWidth, clientWidth = _a.clientWidth;
  return [
    scrollLeft,
    scrollWidth,
    clientWidth
  ];
}, elementCouldBeScrolled2 = function(axis, node) {
  return axis === "v" ? elementCouldBeVScrolled2(node) : elementCouldBeHScrolled2(node);
}, getScrollVariables2 = function(axis, node) {
  return axis === "v" ? getVScrollVariables2(node) : getHScrollVariables2(node);
}, getDirectionFactor2 = function(axis, direction) {
  return axis === "h" && direction === "rtl" ? -1 : 1;
}, handleScroll2 = function(axis, endTarget, event, sourceDelta, noOverscroll) {
  var directionFactor = getDirectionFactor2(axis, window.getComputedStyle(endTarget).direction), delta = directionFactor * sourceDelta, target = event.target, targetInLock = endTarget.contains(target), shouldCancelScroll = !1, isDeltaPositive = delta > 0, availableScroll = 0, availableScrollTop = 0;
  do {
    var _a = getScrollVariables2(axis, target), position = _a[0], scroll_1 = _a[1], capacity = _a[2], elementScroll = scroll_1 - capacity - directionFactor * position;
    (position || elementScroll) && elementCouldBeScrolled2(axis, target) && (availableScroll += elementScroll, availableScrollTop += position), target = target.parentNode;
  } while (
    // portaled content
    !targetInLock && target !== document.body || // self content
    targetInLock && (endTarget.contains(target) || endTarget === target)
  );
  return (isDeltaPositive && (noOverscroll && availableScroll === 0 || !noOverscroll && delta > availableScroll) || !isDeltaPositive && (noOverscroll && availableScrollTop === 0 || !noOverscroll && -delta > availableScrollTop)) && (shouldCancelScroll = !0), shouldCancelScroll;
};

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/SideEffect.js
var getTouchXY2 = function(event) {
  return "changedTouches" in event ? [event.changedTouches[0].clientX, event.changedTouches[0].clientY] : [0, 0];
}, getDeltaXY2 = function(event) {
  return [event.deltaX, event.deltaY];
}, extractRef2 = function(ref) {
  return ref && "current" in ref ? ref.current : ref;
}, deltaCompare2 = function(x3, y4) {
  return x3[0] === y4[0] && x3[1] === y4[1];
}, generateStyle2 = function(id3) {
  return `
  .block-interactivity-`.concat(id3, ` {pointer-events: none;}
  .allow-interactivity-`).concat(id3, ` {pointer-events: all;}
`);
}, idCounter2 = 0, lockStack2 = [];
function RemoveScrollSideCar2(props) {
  var shouldPreventQueue = React45.useRef([]), touchStartRef = React45.useRef([0, 0]), activeAxis = React45.useRef(), id3 = React45.useState(idCounter2++)[0], Style2 = React45.useState(function() {
    return styleSingleton();
  })[0], lastProps = React45.useRef(props);
  React45.useEffect(function() {
    lastProps.current = props;
  }, [props]), React45.useEffect(function() {
    if (props.inert) {
      document.body.classList.add("block-interactivity-".concat(id3));
      var allow_1 = __spreadArray([props.lockRef.current], (props.shards || []).map(extractRef2), !0).filter(Boolean);
      return allow_1.forEach(function(el) {
        return el.classList.add("allow-interactivity-".concat(id3));
      }), function() {
        document.body.classList.remove("block-interactivity-".concat(id3)), allow_1.forEach(function(el) {
          return el.classList.remove("allow-interactivity-".concat(id3));
        });
      };
    }
  }, [props.inert, props.lockRef.current, props.shards]);
  var shouldCancelEvent = React45.useCallback(function(event, parent) {
    if ("touches" in event && event.touches.length === 2)
      return !lastProps.current.allowPinchZoom;
    var touch = getTouchXY2(event), touchStart = touchStartRef.current, deltaX = "deltaX" in event ? event.deltaX : touchStart[0] - touch[0], deltaY = "deltaY" in event ? event.deltaY : touchStart[1] - touch[1], currentAxis, target = event.target, moveDirection = Math.abs(deltaX) > Math.abs(deltaY) ? "h" : "v";
    if ("touches" in event && moveDirection === "h" && target.type === "range")
      return !1;
    var canBeScrolledInMainDirection = locationCouldBeScrolled2(moveDirection, target);
    if (!canBeScrolledInMainDirection)
      return !0;
    if (canBeScrolledInMainDirection ? currentAxis = moveDirection : (currentAxis = moveDirection === "v" ? "h" : "v", canBeScrolledInMainDirection = locationCouldBeScrolled2(moveDirection, target)), !canBeScrolledInMainDirection)
      return !1;
    if (!activeAxis.current && "changedTouches" in event && (deltaX || deltaY) && (activeAxis.current = currentAxis), !currentAxis)
      return !0;
    var cancelingAxis = activeAxis.current || currentAxis;
    return handleScroll2(cancelingAxis, parent, event, cancelingAxis === "h" ? deltaX : deltaY, !0);
  }, []), shouldPrevent = React45.useCallback(function(_event) {
    var event = _event;
    if (!(!lockStack2.length || lockStack2[lockStack2.length - 1] !== Style2)) {
      var delta = "deltaY" in event ? getDeltaXY2(event) : getTouchXY2(event), sourceEvent = shouldPreventQueue.current.filter(function(e3) {
        return e3.name === event.type && e3.target === event.target && deltaCompare2(e3.delta, delta);
      })[0];
      if (sourceEvent && sourceEvent.should) {
        event.preventDefault();
        return;
      }
      if (!sourceEvent) {
        var shardNodes = (lastProps.current.shards || []).map(extractRef2).filter(Boolean).filter(function(node) {
          return node.contains(event.target);
        }), shouldStop = shardNodes.length > 0 ? shouldCancelEvent(event, shardNodes[0]) : !lastProps.current.noIsolation;
        shouldStop && event.preventDefault();
      }
    }
  }, []), shouldCancel = React45.useCallback(function(name, delta, target, should) {
    var event = { name, delta, target, should };
    shouldPreventQueue.current.push(event), setTimeout(function() {
      shouldPreventQueue.current = shouldPreventQueue.current.filter(function(e3) {
        return e3 !== event;
      });
    }, 1);
  }, []), scrollTouchStart = React45.useCallback(function(event) {
    touchStartRef.current = getTouchXY2(event), activeAxis.current = void 0;
  }, []), scrollWheel = React45.useCallback(function(event) {
    shouldCancel(event.type, getDeltaXY2(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []), scrollTouchMove = React45.useCallback(function(event) {
    shouldCancel(event.type, getTouchXY2(event), event.target, shouldCancelEvent(event, props.lockRef.current));
  }, []);
  React45.useEffect(function() {
    return lockStack2.push(Style2), props.setCallbacks({
      onScrollCapture: scrollWheel,
      onWheelCapture: scrollWheel,
      onTouchMoveCapture: scrollTouchMove
    }), document.addEventListener("wheel", shouldPrevent, nonPassive2), document.addEventListener("touchmove", shouldPrevent, nonPassive2), document.addEventListener("touchstart", scrollTouchStart, nonPassive2), function() {
      lockStack2 = lockStack2.filter(function(inst) {
        return inst !== Style2;
      }), document.removeEventListener("wheel", shouldPrevent, nonPassive2), document.removeEventListener("touchmove", shouldPrevent, nonPassive2), document.removeEventListener("touchstart", scrollTouchStart, nonPassive2);
    };
  }, []);
  var removeScrollBar = props.removeScrollBar, inert = props.inert;
  return React45.createElement(
    React45.Fragment,
    null,
    inert ? React45.createElement(Style2, { styles: generateStyle2(id3) }) : null,
    removeScrollBar ? React45.createElement(RemoveScrollBar, { gapMode: "margin" }) : null
  );
}

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/sidecar.js
var sidecar_default2 = exportSidecar(effectCar2, RemoveScrollSideCar2);

// ../../node_modules/cmdk/node_modules/react-remove-scroll/dist/es2015/Combination.js
var ReactRemoveScroll2 = React46.forwardRef(function(props, ref) {
  return React46.createElement(RemoveScroll2, __assign({}, props, { ref, sideCar: sidecar_default2 }));
});
ReactRemoveScroll2.classNames = RemoveScroll2.classNames;
var Combination_default2 = ReactRemoveScroll2;

// ../../node_modules/cmdk/node_modules/@radix-ui/react-dialog/dist/index.module.js
var $5d3850c4d0b4e6c7$var$DIALOG_NAME2 = "Dialog", [$5d3850c4d0b4e6c7$var$createDialogContext2, $5d3850c4d0b4e6c7$export$cc702773b8ea3e412] = $c512c27ab02ef895$export$50c7b4e9d9f19c12($5d3850c4d0b4e6c7$var$DIALOG_NAME2), [$5d3850c4d0b4e6c7$var$DialogProvider2, $5d3850c4d0b4e6c7$var$useDialogContext2] = $5d3850c4d0b4e6c7$var$createDialogContext2($5d3850c4d0b4e6c7$var$DIALOG_NAME2), $5d3850c4d0b4e6c7$export$3ddf2d174ce011532 = (props) => {
  let { __scopeDialog, children, open: openProp, defaultOpen, onOpenChange, modal = !0 } = props, triggerRef = (0, import_react91.useRef)(null), contentRef = (0, import_react91.useRef)(null), [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c32({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogProvider2, {
    scope: __scopeDialog,
    triggerRef,
    contentRef,
    contentId: $1746a345f3d73bb7$export$f680877a34711e372(),
    titleId: $1746a345f3d73bb7$export$f680877a34711e372(),
    descriptionId: $1746a345f3d73bb7$export$f680877a34711e372(),
    open,
    onOpenChange: setOpen,
    onOpenToggle: (0, import_react91.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    ),
    modal
  }, children);
};
var $5d3850c4d0b4e6c7$var$PORTAL_NAME2 = "DialogPortal", [$5d3850c4d0b4e6c7$var$PortalProvider2, $5d3850c4d0b4e6c7$var$usePortalContext2] = $5d3850c4d0b4e6c7$var$createDialogContext2($5d3850c4d0b4e6c7$var$PORTAL_NAME2, {
  forceMount: void 0
}), $5d3850c4d0b4e6c7$export$dad7c95542bacce02 = (props) => {
  let { __scopeDialog, forceMount, children, container } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$PORTAL_NAME2, __scopeDialog);
  return /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$PortalProvider2, {
    scope: __scopeDialog,
    forceMount
  }, import_react91.Children.map(
    children,
    (child) => /* @__PURE__ */ (0, import_react91.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b2, {
      present: forceMount || context.open
    }, /* @__PURE__ */ (0, import_react91.createElement)($f1701beae083dbae$export$602eac185826482c2, {
      asChild: !0,
      container
    }, child))
  ));
}, $5d3850c4d0b4e6c7$var$OVERLAY_NAME2 = "DialogOverlay", $5d3850c4d0b4e6c7$export$bd1d06c79be19e172 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let portalContext = $5d3850c4d0b4e6c7$var$usePortalContext2($5d3850c4d0b4e6c7$var$OVERLAY_NAME2, props.__scopeDialog), { forceMount = portalContext.forceMount, ...overlayProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$OVERLAY_NAME2, props.__scopeDialog);
  return context.modal ? /* @__PURE__ */ (0, import_react91.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b2, {
    present: forceMount || context.open
  }, /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogOverlayImpl2, _extends6({}, overlayProps, {
    ref: forwardedRef
  }))) : null;
}), $5d3850c4d0b4e6c7$var$DialogOverlayImpl2 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, ...overlayProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$OVERLAY_NAME2, __scopeDialog);
  return (
    // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`
    // ie. when `Overlay` and `Content` are siblings
    /* @__PURE__ */ (0, import_react91.createElement)(Combination_default2, {
      as: $5e63c961fc1ce211$export$8c6ed5c666ac13602,
      allowPinchZoom: !0,
      shards: [
        context.contentRef
      ]
    }, /* @__PURE__ */ (0, import_react91.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d0342.div, _extends6({
      "data-state": $5d3850c4d0b4e6c7$var$getState2(context.open)
    }, overlayProps, {
      ref: forwardedRef,
      style: {
        pointerEvents: "auto",
        ...overlayProps.style
      }
    })))
  );
}), $5d3850c4d0b4e6c7$var$CONTENT_NAME2 = "DialogContent", $5d3850c4d0b4e6c7$export$b6d9565de1e068cf2 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let portalContext = $5d3850c4d0b4e6c7$var$usePortalContext2($5d3850c4d0b4e6c7$var$CONTENT_NAME2, props.__scopeDialog), { forceMount = portalContext.forceMount, ...contentProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$CONTENT_NAME2, props.__scopeDialog);
  return /* @__PURE__ */ (0, import_react91.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b2, {
    present: forceMount || context.open
  }, context.modal ? /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogContentModal2, _extends6({}, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogContentNonModal2, _extends6({}, contentProps, {
    ref: forwardedRef
  })));
}), $5d3850c4d0b4e6c7$var$DialogContentModal2 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$CONTENT_NAME2, props.__scopeDialog), contentRef = (0, import_react91.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d052(forwardedRef, context.contentRef, contentRef);
  return (0, import_react91.useEffect)(() => {
    let content = contentRef.current;
    if (content)
      return hideOthers(content);
  }, []), /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl2, _extends6({}, props, {
    ref: composedRefs,
    trapFocus: context.open,
    disableOutsidePointerEvents: !0,
    onCloseAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff102(props.onCloseAutoFocus, (event) => {
      var _context$triggerRef$c;
      event.preventDefault(), (_context$triggerRef$c = context.triggerRef.current) === null || _context$triggerRef$c === void 0 || _context$triggerRef$c.focus();
    }),
    onPointerDownOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff102(props.onPointerDownOutside, (event) => {
      let originalEvent = event.detail.originalEvent, ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === !0;
      (originalEvent.button === 2 || ctrlLeftClick) && event.preventDefault();
    }),
    onFocusOutside: $e42e1063c40fb3ef$export$b9ecd428b558ff102(
      props.onFocusOutside,
      (event) => event.preventDefault()
    )
  }));
}), $5d3850c4d0b4e6c7$var$DialogContentNonModal2 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$CONTENT_NAME2, props.__scopeDialog), hasInteractedOutsideRef = (0, import_react91.useRef)(!1);
  return /* @__PURE__ */ (0, import_react91.createElement)($5d3850c4d0b4e6c7$var$DialogContentImpl2, _extends6({}, props, {
    ref: forwardedRef,
    trapFocus: !1,
    disableOutsidePointerEvents: !1,
    onCloseAutoFocus: (event) => {
      var _props$onCloseAutoFoc;
      if ((_props$onCloseAutoFoc = props.onCloseAutoFocus) === null || _props$onCloseAutoFoc === void 0 || _props$onCloseAutoFoc.call(props, event), !event.defaultPrevented) {
        var _context$triggerRef$c2;
        hasInteractedOutsideRef.current || (_context$triggerRef$c2 = context.triggerRef.current) === null || _context$triggerRef$c2 === void 0 || _context$triggerRef$c2.focus(), event.preventDefault();
      }
      hasInteractedOutsideRef.current = !1;
    },
    onInteractOutside: (event) => {
      var _props$onInteractOuts, _context$triggerRef$c3;
      (_props$onInteractOuts = props.onInteractOutside) === null || _props$onInteractOuts === void 0 || _props$onInteractOuts.call(props, event), event.defaultPrevented || (hasInteractedOutsideRef.current = !0);
      let target = event.target;
      ((_context$triggerRef$c3 = context.triggerRef.current) === null || _context$triggerRef$c3 === void 0 ? void 0 : _context$triggerRef$c3.contains(target)) && event.preventDefault();
    }
  }));
}), $5d3850c4d0b4e6c7$var$DialogContentImpl2 = /* @__PURE__ */ (0, import_react91.forwardRef)((props, forwardedRef) => {
  let { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props, context = $5d3850c4d0b4e6c7$var$useDialogContext2($5d3850c4d0b4e6c7$var$CONTENT_NAME2, __scopeDialog), contentRef = (0, import_react91.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d052(forwardedRef, contentRef);
  return $3db38b7d1fb3fe6a$export$b7ece24a22aeda8c2(), /* @__PURE__ */ (0, import_react91.createElement)(import_react91.Fragment, null, /* @__PURE__ */ (0, import_react91.createElement)($d3863c46a17e8a28$export$20e40289641fbbb62, {
    asChild: !0,
    loop: !0,
    trapped: trapFocus,
    onMountAutoFocus: onOpenAutoFocus,
    onUnmountAutoFocus: onCloseAutoFocus
  }, /* @__PURE__ */ (0, import_react91.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f222, _extends6({
    role: "dialog",
    id: context.contentId,
    "aria-describedby": context.descriptionId,
    "aria-labelledby": context.titleId,
    "data-state": $5d3850c4d0b4e6c7$var$getState2(context.open)
  }, contentProps, {
    ref: composedRefs,
    onDismiss: () => context.onOpenChange(!1)
  }))), !1);
}), $5d3850c4d0b4e6c7$var$TITLE_NAME2 = "DialogTitle";
function $5d3850c4d0b4e6c7$var$getState2(open) {
  return open ? "open" : "closed";
}
var $5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME2 = "DialogTitleWarning", [$5d3850c4d0b4e6c7$export$69b62a49393917d62, $5d3850c4d0b4e6c7$var$useWarningContext2] = $c512c27ab02ef895$export$fd42f52fd3ae11092($5d3850c4d0b4e6c7$var$TITLE_WARNING_NAME2, {
  contentName: $5d3850c4d0b4e6c7$var$CONTENT_NAME2,
  titleName: $5d3850c4d0b4e6c7$var$TITLE_NAME2,
  docsSlug: "dialog"
});
var $5d3850c4d0b4e6c7$export$be92b6f5f03c0fe92 = $5d3850c4d0b4e6c7$export$3ddf2d174ce011532;
var $5d3850c4d0b4e6c7$export$602eac185826482c2 = $5d3850c4d0b4e6c7$export$dad7c95542bacce02, $5d3850c4d0b4e6c7$export$c6fdb837b070b4ff2 = $5d3850c4d0b4e6c7$export$bd1d06c79be19e172, $5d3850c4d0b4e6c7$export$7c6e2c02157bb7d22 = $5d3850c4d0b4e6c7$export$b6d9565de1e068cf2;

// ../../node_modules/cmdk/dist/index.mjs
var t3 = __toESM(require_react(), 1), import_command_score = __toESM(require_command_score(), 1), ue = '[cmdk-list-sizer=""]', M3 = '[cmdk-group=""]', N = '[cmdk-group-items=""]', de = '[cmdk-group-heading=""]', ee = '[cmdk-item=""]', Z = `${ee}:not([aria-disabled="true"])`, z2 = "cmdk-item-select", S4 = "data-value", fe = (n2, a4) => (0, import_command_score.default)(n2, a4), te = t3.createContext(void 0), k2 = () => t3.useContext(te), re = t3.createContext(void 0), U = () => t3.useContext(re), ne = t3.createContext(void 0), oe = t3.forwardRef((n2, a4) => {
  let r3 = t3.useRef(null), o2 = x2(() => ({ search: "", value: "", filtered: { count: 0, items: /* @__PURE__ */ new Map(), groups: /* @__PURE__ */ new Set() } })), u3 = x2(() => /* @__PURE__ */ new Set()), l2 = x2(() => /* @__PURE__ */ new Map()), p2 = x2(() => /* @__PURE__ */ new Map()), f2 = x2(() => /* @__PURE__ */ new Set()), d4 = ae(n2), { label: v2, children: E2, value: R2, onValueChange: w2, filter: O2, shouldFilter: ie, ...D2 } = n2, F = t3.useId(), g2 = t3.useId(), A = t3.useId(), y4 = ye();
  L2(() => {
    if (R2 !== void 0) {
      let e3 = R2.trim().toLowerCase();
      o2.current.value = e3, y4(6, W), h4.emit();
    }
  }, [R2]);
  let h4 = t3.useMemo(() => ({ subscribe: (e3) => (f2.current.add(e3), () => f2.current.delete(e3)), snapshot: () => o2.current, setState: (e3, c3, i3) => {
    var s4, m4, b3;
    if (!Object.is(o2.current[e3], c3)) {
      if (o2.current[e3] = c3, e3 === "search")
        j(), G2(), y4(1, V);
      else if (e3 === "value")
        if (((s4 = d4.current) == null ? void 0 : s4.value) !== void 0) {
          (b3 = (m4 = d4.current).onValueChange) == null || b3.call(m4, c3);
          return;
        } else
          i3 || y4(5, W);
      h4.emit();
    }
  }, emit: () => {
    f2.current.forEach((e3) => e3());
  } }), []), K2 = t3.useMemo(() => ({ value: (e3, c3) => {
    c3 !== p2.current.get(e3) && (p2.current.set(e3, c3), o2.current.filtered.items.set(e3, B2(c3)), y4(2, () => {
      G2(), h4.emit();
    }));
  }, item: (e3, c3) => (u3.current.add(e3), c3 && (l2.current.has(c3) ? l2.current.get(c3).add(e3) : l2.current.set(c3, /* @__PURE__ */ new Set([e3]))), y4(3, () => {
    j(), G2(), o2.current.value || V(), h4.emit();
  }), () => {
    p2.current.delete(e3), u3.current.delete(e3), o2.current.filtered.items.delete(e3), y4(4, () => {
      j(), V(), h4.emit();
    });
  }), group: (e3) => (l2.current.has(e3) || l2.current.set(e3, /* @__PURE__ */ new Set()), () => {
    p2.current.delete(e3), l2.current.delete(e3);
  }), filter: () => d4.current.shouldFilter, label: v2 || n2["aria-label"], listId: F, inputId: A, labelId: g2 }), []);
  function B2(e3) {
    var i3;
    let c3 = ((i3 = d4.current) == null ? void 0 : i3.filter) ?? fe;
    return e3 ? c3(e3, o2.current.search) : 0;
  }
  function G2() {
    if (!r3.current || !o2.current.search || d4.current.shouldFilter === !1)
      return;
    let e3 = o2.current.filtered.items, c3 = [];
    o2.current.filtered.groups.forEach((s4) => {
      let m4 = l2.current.get(s4), b3 = 0;
      m4.forEach((P) => {
        let ce = e3.get(P);
        b3 = Math.max(ce, b3);
      }), c3.push([s4, b3]);
    });
    let i3 = r3.current.querySelector(ue);
    I2().sort((s4, m4) => {
      let b3 = s4.getAttribute(S4), P = m4.getAttribute(S4);
      return (e3.get(P) ?? 0) - (e3.get(b3) ?? 0);
    }).forEach((s4) => {
      let m4 = s4.closest(N);
      m4 ? m4.appendChild(s4.parentElement === m4 ? s4 : s4.closest(`${N} > *`)) : i3.appendChild(s4.parentElement === i3 ? s4 : s4.closest(`${N} > *`));
    }), c3.sort((s4, m4) => m4[1] - s4[1]).forEach((s4) => {
      let m4 = r3.current.querySelector(`${M3}[${S4}="${s4[0]}"]`);
      m4?.parentElement.appendChild(m4);
    });
  }
  function V() {
    let e3 = I2().find((i3) => !i3.ariaDisabled), c3 = e3?.getAttribute(S4);
    h4.setState("value", c3 || void 0);
  }
  function j() {
    if (!o2.current.search || d4.current.shouldFilter === !1) {
      o2.current.filtered.count = u3.current.size;
      return;
    }
    o2.current.filtered.groups = /* @__PURE__ */ new Set();
    let e3 = 0;
    for (let c3 of u3.current) {
      let i3 = p2.current.get(c3), s4 = B2(i3);
      o2.current.filtered.items.set(c3, s4), s4 > 0 && e3++;
    }
    for (let [c3, i3] of l2.current)
      for (let s4 of i3)
        if (o2.current.filtered.items.get(s4) > 0) {
          o2.current.filtered.groups.add(c3);
          break;
        }
    o2.current.filtered.count = e3;
  }
  function W() {
    var c3, i3, s4;
    let e3 = _();
    e3 && (((c3 = e3.parentElement) == null ? void 0 : c3.firstChild) === e3 && ((s4 = (i3 = e3.closest(M3)) == null ? void 0 : i3.querySelector(de)) == null || s4.scrollIntoView({ block: "nearest" })), e3.scrollIntoView({ block: "nearest" }));
  }
  function _() {
    return r3.current.querySelector(`${ee}[aria-selected="true"]`);
  }
  function I2() {
    return Array.from(r3.current.querySelectorAll(Z));
  }
  function q2(e3) {
    let i3 = I2()[e3];
    i3 && h4.setState("value", i3.getAttribute(S4));
  }
  function $2(e3) {
    var b3;
    let c3 = _(), i3 = I2(), s4 = i3.findIndex((P) => P === c3), m4 = i3[s4 + e3];
    (b3 = d4.current) != null && b3.loop && (m4 = s4 + e3 < 0 ? i3[i3.length - 1] : s4 + e3 === i3.length ? i3[0] : i3[s4 + e3]), m4 && h4.setState("value", m4.getAttribute(S4));
  }
  function J(e3) {
    let c3 = _(), i3 = c3?.closest(M3), s4;
    for (; i3 && !s4; )
      i3 = e3 > 0 ? Se(i3, M3) : Ce(i3, M3), s4 = i3?.querySelector(Z);
    s4 ? h4.setState("value", s4.getAttribute(S4)) : $2(e3);
  }
  let Q2 = () => q2(I2().length - 1), X2 = (e3) => {
    e3.preventDefault(), e3.metaKey ? Q2() : e3.altKey ? J(1) : $2(1);
  }, Y2 = (e3) => {
    e3.preventDefault(), e3.metaKey ? q2(0) : e3.altKey ? J(-1) : $2(-1);
  };
  return t3.createElement("div", { ref: H3([r3, a4]), ...D2, "cmdk-root": "", onKeyDown: (e3) => {
    var c3;
    if ((c3 = D2.onKeyDown) == null || c3.call(D2, e3), !e3.defaultPrevented)
      switch (e3.key) {
        case "n":
        case "j": {
          e3.ctrlKey && X2(e3);
          break;
        }
        case "ArrowDown": {
          X2(e3);
          break;
        }
        case "p":
        case "k": {
          e3.ctrlKey && Y2(e3);
          break;
        }
        case "ArrowUp": {
          Y2(e3);
          break;
        }
        case "Home": {
          e3.preventDefault(), q2(0);
          break;
        }
        case "End": {
          e3.preventDefault(), Q2();
          break;
        }
        case "Enter": {
          e3.preventDefault();
          let i3 = _();
          if (i3) {
            let s4 = new Event(z2);
            i3.dispatchEvent(s4);
          }
        }
      }
  } }, t3.createElement("label", { "cmdk-label": "", htmlFor: K2.inputId, id: K2.labelId, style: xe }, v2), t3.createElement(re.Provider, { value: h4 }, t3.createElement(te.Provider, { value: K2 }, E2)));
}), me2 = t3.forwardRef((n2, a4) => {
  let r3 = t3.useId(), o2 = t3.useRef(null), u3 = t3.useContext(ne), l2 = k2(), p2 = ae(n2);
  L2(() => l2.item(r3, u3), []);
  let f2 = se(r3, o2, [n2.value, n2.children, o2]), d4 = U(), v2 = T2((g2) => g2.value && g2.value === f2.current), E2 = T2((g2) => l2.filter() === !1 ? !0 : g2.search ? g2.filtered.items.get(r3) > 0 : !0);
  t3.useEffect(() => {
    let g2 = o2.current;
    if (!(!g2 || n2.disabled))
      return g2.addEventListener(z2, R2), () => g2.removeEventListener(z2, R2);
  }, [E2, n2.onSelect, n2.disabled]);
  function R2() {
    var g2, A;
    (A = (g2 = p2.current).onSelect) == null || A.call(g2, f2.current);
  }
  function w2() {
    d4.setState("value", f2.current, !0);
  }
  if (!E2)
    return null;
  let { disabled: O2, value: ie, onSelect: D2, ...F } = n2;
  return t3.createElement("div", { ref: H3([o2, a4]), ...F, "cmdk-item": "", role: "option", "aria-disabled": O2 || void 0, "aria-selected": v2 || void 0, "data-selected": v2 || void 0, onPointerMove: O2 ? void 0 : w2, onClick: O2 ? void 0 : R2 }, n2.children);
}), pe = t3.forwardRef((n2, a4) => {
  let { heading: r3, children: o2, ...u3 } = n2, l2 = t3.useId(), p2 = t3.useRef(null), f2 = t3.useRef(null), d4 = t3.useId(), v2 = k2(), E2 = T2((w2) => v2.filter() === !1 ? !0 : w2.search ? w2.filtered.groups.has(l2) : !0);
  L2(() => v2.group(l2), []), se(l2, p2, [n2.value, n2.heading, f2]);
  let R2 = t3.createElement(ne.Provider, { value: l2 }, o2);
  return t3.createElement("div", { ref: H3([p2, a4]), ...u3, "cmdk-group": "", role: "presentation", hidden: E2 ? void 0 : !0 }, r3 && t3.createElement("div", { ref: f2, "cmdk-group-heading": "", "aria-hidden": !0, id: d4 }, r3), t3.createElement("div", { "cmdk-group-items": "", role: "group", "aria-labelledby": r3 ? d4 : void 0 }, R2));
}), ge = t3.forwardRef((n2, a4) => {
  let { alwaysRender: r3, ...o2 } = n2, u3 = t3.useRef(null), l2 = T2((p2) => !p2.search);
  return !r3 && !l2 ? null : t3.createElement("div", { ref: H3([u3, a4]), ...o2, "cmdk-separator": "", role: "separator" });
}), ve = t3.forwardRef((n2, a4) => {
  let { onValueChange: r3, ...o2 } = n2, u3 = n2.value != null, l2 = U(), p2 = T2((d4) => d4.search), f2 = k2();
  return t3.useEffect(() => {
    n2.value != null && l2.setState("search", n2.value);
  }, [n2.value]), t3.createElement("input", { ref: a4, ...o2, "cmdk-input": "", autoComplete: "off", autoCorrect: "off", spellCheck: !1, "aria-autocomplete": "list", role: "combobox", "aria-expanded": !0, "aria-controls": f2.listId, "aria-labelledby": f2.labelId, id: f2.inputId, type: "text", value: u3 ? n2.value : p2, onChange: (d4) => {
    u3 || l2.setState("search", d4.target.value), r3?.(d4.target.value);
  } });
}), Re = t3.forwardRef((n2, a4) => {
  let { children: r3, ...o2 } = n2, u3 = t3.useRef(null), l2 = t3.useRef(null), p2 = k2();
  return t3.useEffect(() => {
    if (l2.current && u3.current) {
      let f2 = l2.current, d4 = u3.current, v2, E2 = new ResizeObserver(() => {
        v2 = requestAnimationFrame(() => {
          let R2 = f2.getBoundingClientRect().height;
          d4.style.setProperty("--cmdk-list-height", R2.toFixed(1) + "px");
        });
      });
      return E2.observe(f2), () => {
        cancelAnimationFrame(v2), E2.unobserve(f2);
      };
    }
  }, []), t3.createElement("div", { ref: H3([u3, a4]), ...o2, "cmdk-list": "", role: "listbox", "aria-label": "Suggestions", id: p2.listId, "aria-labelledby": p2.inputId }, t3.createElement("div", { ref: l2, "cmdk-list-sizer": "" }, r3));
}), be = t3.forwardRef((n2, a4) => {
  let { open: r3, onOpenChange: o2, container: u3, ...l2 } = n2;
  return t3.createElement($5d3850c4d0b4e6c7$export$be92b6f5f03c0fe92, { open: r3, onOpenChange: o2 }, t3.createElement($5d3850c4d0b4e6c7$export$602eac185826482c2, { container: u3 }, t3.createElement($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff2, { "cmdk-overlay": "" }), t3.createElement($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d22, { "aria-label": n2.label, "cmdk-dialog": "" }, t3.createElement(oe, { ref: a4, ...l2 }))));
}), he = t3.forwardRef((n2, a4) => {
  let r3 = t3.useRef(!0), o2 = T2((u3) => u3.filtered.count === 0);
  return t3.useEffect(() => {
    r3.current = !1;
  }, []), r3.current || !o2 ? null : t3.createElement("div", { ref: a4, ...n2, "cmdk-empty": "", role: "presentation" });
}), Ee = t3.forwardRef((n2, a4) => {
  let { progress: r3, children: o2, ...u3 } = n2;
  return t3.createElement("div", { ref: a4, ...u3, "cmdk-loading": "", role: "progressbar", "aria-valuenow": r3, "aria-valuemin": 0, "aria-valuemax": 100, "aria-label": "Loading..." }, t3.createElement("div", { "aria-hidden": !0 }, o2));
}), Le = Object.assign(oe, { List: Re, Item: me2, Input: ve, Group: pe, Separator: ge, Dialog: be, Empty: he, Loading: Ee });
function Se(n2, a4) {
  let r3 = n2.nextElementSibling;
  for (; r3; ) {
    if (r3.matches(a4))
      return r3;
    r3 = r3.nextElementSibling;
  }
}
function Ce(n2, a4) {
  let r3 = n2.previousElementSibling;
  for (; r3; ) {
    if (r3.matches(a4))
      return r3;
    r3 = r3.previousElementSibling;
  }
}
function ae(n2) {
  let a4 = t3.useRef(n2);
  return L2(() => {
    a4.current = n2;
  }), a4;
}
var L2 = typeof window > "u" ? t3.useEffect : t3.useLayoutEffect;
function x2(n2) {
  let a4 = t3.useRef();
  return a4.current === void 0 && (a4.current = n2()), a4;
}
function H3(n2) {
  return (a4) => {
    n2.forEach((r3) => {
      typeof r3 == "function" ? r3(a4) : r3 != null && (r3.current = a4);
    });
  };
}
function T2(n2) {
  let a4 = U(), r3 = () => n2(a4.snapshot());
  return t3.useSyncExternalStore(a4.subscribe, r3, r3);
}
function se(n2, a4, r3) {
  let o2 = t3.useRef(), u3 = k2();
  return L2(() => {
    var p2;
    let l2 = (() => {
      var f2;
      for (let d4 of r3) {
        if (typeof d4 == "string")
          return d4.trim().toLowerCase();
        if (typeof d4 == "object" && "current" in d4 && d4.current)
          return (f2 = d4.current.textContent) == null ? void 0 : f2.trim().toLowerCase();
      }
    })();
    u3.value(n2, l2), (p2 = a4.current) == null || p2.setAttribute(S4, l2), o2.current = l2;
  }), o2;
}
var ye = () => {
  let [n2, a4] = t3.useState(), r3 = x2(() => /* @__PURE__ */ new Map());
  return L2(() => {
    r3.current.forEach((o2) => o2()), r3.current = /* @__PURE__ */ new Map();
  }, [n2]), (o2, u3) => {
    r3.current.set(o2, u3), a4({});
  };
}, xe = { position: "absolute", width: "1px", height: "1px", padding: "0", margin: "-1px", overflow: "hidden", clip: "rect(0, 0, 0, 0)", whiteSpace: "nowrap", borderWidth: "0" };

// app/components/ui/command.tsx
var import_jsx_runtime40 = __toESM(require_jsx_runtime(), 1), Command = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le,
  {
    ref,
    className: cn(
      "flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground",
      className
    ),
    ...props
  }
));
Command.displayName = Le.displayName;
var CommandInput = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsxs)("div", { className: "flex items-center border-b px-3", "cmdk-input-wrapper": "", children: [
  /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(MagnifyingGlassIcon, { className: "mr-2 h-4 w-4 shrink-0 opacity-50" }),
  /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
    Le.Input,
    {
      ref,
      className: cn(
        "flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50",
        className
      ),
      ...props
    }
  )
] }));
CommandInput.displayName = Le.Input.displayName;
var CommandList = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le.List,
  {
    ref,
    className: cn("max-h-[300px] overflow-y-auto overflow-x-hidden", className),
    ...props
  }
));
CommandList.displayName = Le.List.displayName;
var CommandEmpty = React47.forwardRef((props, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le.Empty,
  {
    ref,
    className: "py-6 text-center text-sm",
    ...props
  }
));
CommandEmpty.displayName = Le.Empty.displayName;
var CommandGroup = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le.Group,
  {
    ref,
    className: cn(
      "overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground",
      className
    ),
    ...props
  }
));
CommandGroup.displayName = Le.Group.displayName;
var CommandSeparator = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le.Separator,
  {
    ref,
    className: cn("-mx-1 h-px bg-border", className),
    ...props
  }
));
CommandSeparator.displayName = Le.Separator.displayName;
var CommandItem = React47.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  Le.Item,
  {
    ref,
    className: cn(
      "relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none aria-selected:bg-accent aria-selected:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50",
      className
    ),
    ...props
  }
));
CommandItem.displayName = Le.Item.displayName;
var CommandShortcut = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime40.jsx)(
  "span",
  {
    className: cn(
      "ml-auto text-xs tracking-widest text-muted-foreground",
      className
    ),
    ...props
  }
);
CommandShortcut.displayName = "CommandShortcut";

// app/components/headers/project-switcher.tsx
var import_jsx_runtime41 = __toESM(require_jsx_runtime(), 1);
function ProjectSwitcher() {
  let { projectId } = useParams(), navigate = useNavigate(), [_, setSearchParams] = useSearchParams(), { toast: toast2 } = useToast();
  if (!projectId)
    throw new Error("Project ID is required");
  let [open, setOpen] = (0, import_react92.useState)(!1), [selectedProjectId, setSelectedProjectId] = (0, import_react92.useState)(projectId), projects = useQuery({
    queryKey: ["projects"],
    queryFn: () => fetchers.getProjects()
  }), project = useQuery({
    queryKey: ["project", selectedProjectId],
    queryFn: () => fetchers.getProject(selectedProjectId)
  });
  return (0, import_react92.useEffect)(() => {
    setSelectedProjectId(projectId);
  }, [projectId]), (0, import_react92.useEffect)(() => {
    project.error && toast2({
      description: "Project not found.",
      action: /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(
        ToastAction,
        {
          altText: "Go to dashboard",
          onClick: () => navigate("/dashboard"),
          children: "Go to dashboard"
        }
      )
    });
  }, [project.error, navigate, toast2]), projects.isError || project.isError ? null : projects.isPending || project.isPending ? /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)("div", { className: "flex gap-1", children: [
    /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(Skeleton, { className: "h-5 w-24" }),
    /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(Skeleton, { className: "h-5 w-4" })
  ] }) : /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(import_jsx_runtime41.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(
      Link2,
      {
        to: `/dashboard/${project.data.id}`,
        className: "max-w-[150px] overflow-hidden text-ellipsis whitespace-nowrap",
        children: project.data.name
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(Popover, { open, onOpenChange: setOpen, children: [
      /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(PopoverTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(Button, { variant: "ghost", size: "icon", className: "-ml-1.5 w-auto px-1", children: /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(CaretSortIcon, { className: "h-5 w-5 shrink-0 text-muted-foreground" }) }) }),
      /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(PopoverContent, { className: "z-50 w-[200px] bg-background p-0", children: /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(Command, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(CommandGroup, { children: projects.data.map((project2) => /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(
          CommandItem,
          {
            value: project2.id,
            onSelect: (value) => {
              setSelectedProjectId(value), setOpen(!1), navigate(`/dashboard/${value}`);
            },
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(
                CheckIcon,
                {
                  className: cn(
                    "mr-2 h-4 w-4 shrink-0",
                    selectedProjectId === project2.id ? "opacity-100" : "opacity-0"
                  )
                }
              ),
              project2.name
            ]
          },
          project2.id
        )) }),
        /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(CommandSeparator, {}),
        /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(CommandGroup, { children: /* @__PURE__ */ (0, import_jsx_runtime41.jsxs)(
          CommandItem,
          {
            onSelect: () => {
              setSearchParams(
                (prev) => (prev.set("modal", "create-project"), prev),
                { replace: !0 }
              ), setOpen(!1);
            },
            children: [
              /* @__PURE__ */ (0, import_jsx_runtime41.jsx)(PlusCircledIcon, { className: "mr-2 h-4 w-4" }),
              "Create Project"
            ]
          }
        ) })
      ] }) })
    ] })
  ] });
}

// app/data-hooks/useMe.ts
var useMe = () => useQuery({
  queryKey: ["me"],
  queryFn: () => fetchers.me(),
  retry: !1,
  refetchOnWindowFocus: !1,
  meta: {
    errorToast: !1
  }
});

// app/components/headers/dashboard-header.tsx
var import_jsx_runtime42 = __toESM(require_jsx_runtime(), 1);
function DashboardHeader() {
  let params = useParams(), navigate = useNavigate(), [open, setOpen] = (0, import_react94.useState)(!1), logoutMutation = useMutation({
    mutationFn: fetchers.logout,
    onSuccess: () => {
      navigate("/login");
    }
  }), { data: user } = useMe(), logout2 = () => {
    logoutMutation.mutate();
  };
  return /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("nav", { className: "z-50 flex h-16 items-center border-b px-4 md:px-6", children: [
    /* @__PURE__ */ (0, import_jsx_runtime42.jsx)("div", { className: "flex flex-1 items-center gap-4", children: /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("div", { className: "flex items-center gap-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(Link2, { to: "/dashboard", children: /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("div", { className: "flex items-center gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(ChatBubbleIcon, { className: "h-5 w-5" }),
        /* @__PURE__ */ (0, import_jsx_runtime42.jsx)("span", { className: "hidden text-lg font-bold tracking-tight sm:block", children: "DropFeedback" })
      ] }) }),
      params?.projectId && /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(import_jsx_runtime42.Fragment, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(SlashIcon, { className: "h-4 w-4 text-primary opacity-20" }),
        /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(ProjectSwitcher, {})
      ] })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("div", { className: "flex items-center justify-end gap-2", children: [
      /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(
        Button,
        {
          variant: "outline",
          className: "hidden font-normal text-muted-foreground sm:block",
          children: "Feedback"
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(
        Button,
        {
          asChild: !0,
          variant: "link",
          className: "font-normal text-muted-foreground hover:text-primary hover:no-underline",
          children: /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(Link2, { to: "/docs", children: "Docs" })
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(DropdownMenu, { open, onOpenChange: setOpen, children: [
        /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(DropdownMenuTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(
          Button,
          {
            variant: "ghost",
            className: "relative h-7 w-7 rounded-full p-0",
            children: /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(Avatar, { className: "h-7 w-7", children: [
              /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(AvatarImage, { src: user?.avatarUrl, alt: `${user?.fullName}` }),
              /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(AvatarFallback, { children: getNameInitials(`${user?.fullName}`) })
            ] })
          }
        ) }),
        /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(DropdownMenuContent, { align: "end", className: "w-[220px]", children: [
          /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("div", { className: "px-2 py-1.5", children: [
            /* @__PURE__ */ (0, import_jsx_runtime42.jsx)("p", { className: "font-medium text-primary", children: `${user?.fullName}` }),
            /* @__PURE__ */ (0, import_jsx_runtime42.jsx)("p", { children: user?.email })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(DropdownMenuSeparator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)("div", { className: "flex justify-between px-2 py-1.5 transition-colors hover:text-accent-foreground", children: [
            "Theme",
            /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(ThemeSwitcher, {})
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(DropdownMenuItem, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(Link2, { to: "/dashboard/settings", children: [
            "Settings",
            /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(MenubarShortcut, { children: /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(GearIcon, {}) })
          ] }) }),
          /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(DropdownMenuSeparator, {}),
          /* @__PURE__ */ (0, import_jsx_runtime42.jsxs)(
            DropdownMenuItem,
            {
              onClick: logout2,
              className: "text-red focus:bg-red-foreground focus:text-red",
              children: [
                logoutMutation.isPending ? "Logging out.." : "Log out",
                /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(MenubarShortcut, { children: /* @__PURE__ */ (0, import_jsx_runtime42.jsx)(ExitIcon, {}) })
              ]
            }
          )
        ] })
      ] })
    ] })
  ] });
}

// app/routes/dashboard/layout.tsx
var import_jsx_runtime43 = __toESM(require_jsx_runtime(), 1);
async function loader3({ request }) {
  let queryClient = new QueryClient(), { pathname } = new URL(request.url), shouldAddNext = ![
    "/login",
    "/signup",
    "/dashboard",
    "/dashboard/email-verification"
  ].includes(pathname), nextUrl = encodeURIComponent(pathname), cookie = request.headers.get("Cookie");
  if (!cookie) {
    let redirectNext = shouldAddNext ? `/login?next=${nextUrl}` : "/login";
    throw (0, import_cloudflare4.redirect)(redirectNext);
  }
  try {
    return await queryClient.fetchQuery({
      queryKey: ["me"],
      queryFn: () => fetchers.me(cookie)
    }), (0, import_cloudflare4.json)({ dehydratedState: dehydrate(queryClient) });
  } catch (error) {
    let response = error.response, status = response?.status, message = response?.data?.message, redirectUrl = "/login";
    return status === 403 && message === "Email is not verified" && (redirectUrl = "/dashboard/email-verification"), pathname === redirectUrl ? (0, import_cloudflare4.json)({ dehydratedState: dehydrate(queryClient) }) : (0, import_cloudflare4.redirect)(
      shouldAddNext ? `${redirectUrl}?next=${nextUrl}` : redirectUrl
    );
  }
}
function Layout2() {
  return /* @__PURE__ */ (0, import_jsx_runtime43.jsxs)(import_jsx_runtime43.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(DashboardHeader, {}),
    /* @__PURE__ */ (0, import_jsx_runtime43.jsx)("div", { className: "flex h-[calc(100vh-4rem)] flex-col", children: /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(Outlet, {}) })
  ] });
}
function LayoutRoute() {
  let { dehydratedState } = useLoaderData2();
  return /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(HydrationBoundary, { state: dehydratedState, children: /* @__PURE__ */ (0, import_jsx_runtime43.jsx)(Layout2, {}) });
}

// app/routes/dashboard/project/layout.tsx
var layout_exports3 = {};
__export(layout_exports3, {
  default: () => Layout3
});

// app/components/headers/project-header.tsx
var import_react97 = __toESM(require_react(), 1);
var import_jsx_runtime44 = __toESM(require_jsx_runtime(), 1), ROUTES = [
  {
    key: "feedback",
    title: "Feedback",
    path: "/dashboard/:projectId"
  },
  {
    key: "team",
    title: "Team",
    path: "/dashboard/:projectId/team"
  },
  {
    key: "settings",
    title: "Settings",
    path: "/dashboard/:projectId/settings"
  }
];
function ProjectHeader() {
  let [isStickyActive, setIsStickyActive] = (0, import_react97.useState)(!1), params = useParams(), location = useLocation();
  (0, import_react97.useEffect)(() => {
    let handleScroll3 = () => {
      window.scrollY > 45 ? setIsStickyActive(!0) : setIsStickyActive(!1);
    };
    return document.addEventListener("scroll", handleScroll3), () => {
      document.removeEventListener("scroll", handleScroll3);
    };
  }, []);
  let activeRoute = ROUTES.find((route) => location.pathname.includes(route.key)) ?? ROUTES[0];
  return /* @__PURE__ */ (0, import_jsx_runtime44.jsxs)("div", { className: "sticky top-0 z-50 -mt-3 flex h-auto items-center overflow-x-auto overflow-y-hidden whitespace-nowrap rounded-none border-b bg-background px-4 py-2 text-muted-foreground md:px-6", children: [
    isStickyActive && /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
      motion.div,
      {
        initial: { opacity: 0, y: -40 },
        animate: { opacity: 1, y: 0 },
        children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(ChatBubbleIcon, { className: "h-5 w-5" })
      }
    ),
    /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
      motion.div,
      {
        layout: !0,
        layoutDependency: isStickyActive,
        className: cn("relative ml-2", { "-ml-3": !isStickyActive }),
        children: ROUTES.map((route) => /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(
          Button,
          {
            variant: "ghost",
            size: "default",
            asChild: !0,
            className: cn("tab-button relative font-medium", {
              "active-tab-button font-semibold text-primary": activeRoute.key === route.key
            }),
            children: /* @__PURE__ */ (0, import_jsx_runtime44.jsx)(Link2, { to: route.path.replace(":projectId", params.projectId), children: route.title })
          },
          route.key
        ))
      }
    )
  ] });
}

// app/routes/dashboard/project/layout.tsx
var import_jsx_runtime45 = __toESM(require_jsx_runtime(), 1);
function Layout3() {
  return /* @__PURE__ */ (0, import_jsx_runtime45.jsxs)("div", { children: [
    /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(ProjectHeader, {}),
    /* @__PURE__ */ (0, import_jsx_runtime45.jsx)("div", { children: /* @__PURE__ */ (0, import_jsx_runtime45.jsx)(Outlet, {}) })
  ] });
}

// app/routes/dashboard/project/feedbacks.tsx
var feedbacks_exports = {};
__export(feedbacks_exports, {
  default: () => Feedbacks
});

// app/components/feedback-sider.tsx
var import_react106 = __toESM(require_react(), 1);
var import_lodash = __toESM(require_lodash(), 1);

// app/components/feedback-provider.tsx
var import_react101 = __toESM(require_react(), 1);

// app/types/index.ts
var FeedbackCategory = /* @__PURE__ */ ((FeedbackCategory2) => (FeedbackCategory2.other = "other", FeedbackCategory2.issue = "issue", FeedbackCategory2.idea = "idea", FeedbackCategory2))(FeedbackCategory || {});

// app/components/feedback-provider.tsx
var import_jsx_runtime46 = __toESM(require_jsx_runtime(), 1), defaultFiltersAndSorters = {
  filters: { search: "", status: "new" /* new */ },
  sorters: { createdAt: "desc" }
}, FeedbackContext = (0, import_react101.createContext)({
  projectId: "",
  filtersAndSorters: defaultFiltersAndSorters,
  setFiltersAndSorters: () => {
  },
  counts: {},
  setCounts: () => {
  }
});
function FeedbackProvider({ children }) {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let [counts, setCounts] = (0, import_react101.useState)({}), [filtersAndSorters, setFiltersAndSorters] = (0, import_react101.useState)(
    defaultFiltersAndSorters
  );
  return /* @__PURE__ */ (0, import_jsx_runtime46.jsx)(
    FeedbackContext.Provider,
    {
      value: {
        projectId,
        filtersAndSorters,
        setFiltersAndSorters,
        counts,
        setCounts
      },
      children
    }
  );
}
function useFeedbackContext() {
  let context = (0, import_react101.useContext)(FeedbackContext);
  if (!context)
    throw new Error("useFeedbackContext must be used within FeedbackProvider");
  return context;
}

// app/components/feedback-radio-group.tsx
var import_jsx_runtime47 = __toESM(require_jsx_runtime(), 1), categories = [
  {
    label: "All",
    value: "all"
  },
  {
    label: "Issue",
    value: "issue"
  },
  {
    label: "Idea",
    value: "idea"
  },
  {
    label: "Other",
    value: "other"
  },
  {
    label: "Archive",
    value: "archive"
  }
];
function FeedbackRadioGroup() {
  let { counts, filtersAndSorters, setFiltersAndSorters } = useFeedbackContext(), { filters } = filtersAndSorters;
  return /* @__PURE__ */ (0, import_jsx_runtime47.jsx)("div", { className: "grid grid-cols-1 gap-1.5 sm:grid-cols-2 md:grid-cols-1", children: categories.map((category) => /* @__PURE__ */ (0, import_jsx_runtime47.jsxs)(
    Button,
    {
      variant: "ghost",
      className: cn(
        "justify-between px-1.5 font-semibold text-muted-foreground transition-colors duration-200 hover:text-muted-foreground",
        {
          "bg-blue-foreground text-blue hover:bg-blue-foreground hover:text-blue": filters.category === void 0 && category.value === "all" && filters.status !== "archived",
          "bg-red-foreground text-red hover:bg-red-foreground hover:text-red": filters.category === "issue" && filters.category === category.value,
          "bg-amber-foreground text-amber hover:bg-amber-foreground hover:text-amber": filters.category === "idea" && filters.category === category.value,
          "bg-gray-foreground text-gray hover:bg-gray-foreground hover:text-gray": filters.category === "other" && filters.category === category.value,
          "bg-stone-100  hover:bg-stone-100  dark:bg-stone-800 hover:dark:bg-stone-800": filters.status === "archived" && category.value === "archive"
        }
      ),
      onClick: () => {
        let value = category.value;
        if (value === "archive") {
          setFiltersAndSorters((prev) => ({
            sorters: {
              updatedAt: Object.values(prev.sorters)[0]
            },
            filters: {
              ...prev.filters,
              category: void 0,
              status: "archived" /* archived */
            }
          }));
          return;
        }
        setFiltersAndSorters((prev) => ({
          sorters: {
            createdAt: Object.values(prev.sorters)[0]
          },
          filters: {
            ...prev.filters,
            status: "new" /* new */,
            category: value === "all" ? void 0 : FeedbackCategory[value]
          }
        }));
      },
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime47.jsxs)("div", { className: "flex items-center", children: [
          category.value === "archive" ? /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(DotIcon, { className: "h-6 w-6" }) : /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(
            DotFilledIcon,
            {
              className: cn("h-6 w-6", {
                "text-blue": category.value === "all",
                "text-red": category.value === "issue",
                "text-amber": category.value === "idea",
                "text-gray": category.value === "other"
              })
            }
          ),
          category.label
        ] }),
        counts[category.value] === void 0 ? /* @__PURE__ */ (0, import_jsx_runtime47.jsx)(Skeleton, { className: "h-6 w-8" }) : /* @__PURE__ */ (0, import_jsx_runtime47.jsx)("div", { className: "tabular-nums", children: category.value === "all" ? filters.search === void 0 || filters.search === "" ? counts.countNew : (counts.idea ?? 0) + (counts.issue ?? 0) + (counts.other ?? 0) : counts[category.value] })
      ]
    },
    category.value
  )) });
}

// app/components/feedback-collapsible-area.tsx
var import_react103 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-collapsible/dist/index.mjs
var import_react102 = __toESM(require_react(), 1);
var $409067139f391064$var$COLLAPSIBLE_NAME = "Collapsible", [$409067139f391064$var$createCollapsibleContext, $409067139f391064$export$952b32dcbe73087a] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($409067139f391064$var$COLLAPSIBLE_NAME), [$409067139f391064$var$CollapsibleProvider, $409067139f391064$var$useCollapsibleContext] = $409067139f391064$var$createCollapsibleContext($409067139f391064$var$COLLAPSIBLE_NAME), $409067139f391064$export$6eb0f7ddcda6131f = /* @__PURE__ */ (0, import_react102.forwardRef)((props, forwardedRef) => {
  let { __scopeCollapsible, open: openProp, defaultOpen, disabled, onOpenChange, ...collapsibleProps } = props, [open = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: onOpenChange
  });
  return /* @__PURE__ */ (0, import_react102.createElement)($409067139f391064$var$CollapsibleProvider, {
    scope: __scopeCollapsible,
    disabled,
    contentId: $1746a345f3d73bb7$export$f680877a34711e37(),
    open,
    onOpenToggle: (0, import_react102.useCallback)(
      () => setOpen(
        (prevOpen) => !prevOpen
      ),
      [
        setOpen
      ]
    )
  }, /* @__PURE__ */ (0, import_react102.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-state": $409067139f391064$var$getState(open),
    "data-disabled": disabled ? "" : void 0
  }, collapsibleProps, {
    ref: forwardedRef
  })));
}), $409067139f391064$var$TRIGGER_NAME = "CollapsibleTrigger", $409067139f391064$export$c135dce7b15bbbdc = /* @__PURE__ */ (0, import_react102.forwardRef)((props, forwardedRef) => {
  let { __scopeCollapsible, ...triggerProps } = props, context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$TRIGGER_NAME, __scopeCollapsible);
  return /* @__PURE__ */ (0, import_react102.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    "aria-controls": context.contentId,
    "aria-expanded": context.open || !1,
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    disabled: context.disabled
  }, triggerProps, {
    ref: forwardedRef,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onOpenToggle)
  }));
}), $409067139f391064$var$CONTENT_NAME = "CollapsibleContent", $409067139f391064$export$aadde00976f34151 = /* @__PURE__ */ (0, import_react102.forwardRef)((props, forwardedRef) => {
  let { forceMount, ...contentProps } = props, context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, props.__scopeCollapsible);
  return /* @__PURE__ */ (0, import_react102.createElement)(
    $921a889cee6df7e8$export$99c2b779aa4e8b8b,
    {
      present: forceMount || context.open
    },
    ({ present }) => /* @__PURE__ */ (0, import_react102.createElement)($409067139f391064$var$CollapsibleContentImpl, _extends6({}, contentProps, {
      ref: forwardedRef,
      present
    }))
  );
}), $409067139f391064$var$CollapsibleContentImpl = /* @__PURE__ */ (0, import_react102.forwardRef)((props, forwardedRef) => {
  let { __scopeCollapsible, present, children, ...contentProps } = props, context = $409067139f391064$var$useCollapsibleContext($409067139f391064$var$CONTENT_NAME, __scopeCollapsible), [isPresent, setIsPresent] = (0, import_react102.useState)(present), ref = (0, import_react102.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), heightRef = (0, import_react102.useRef)(0), height = heightRef.current, widthRef = (0, import_react102.useRef)(0), width = widthRef.current, isOpen = context.open || isPresent, isMountAnimationPreventedRef = (0, import_react102.useRef)(isOpen), originalStylesRef = (0, import_react102.useRef)();
  return (0, import_react102.useEffect)(() => {
    let rAF = requestAnimationFrame(
      () => isMountAnimationPreventedRef.current = !1
    );
    return () => cancelAnimationFrame(rAF);
  }, []), $9f79659886946c16$export$e5c5a5f917a5871c(() => {
    let node = ref.current;
    if (node) {
      originalStylesRef.current = originalStylesRef.current || {
        transitionDuration: node.style.transitionDuration,
        animationName: node.style.animationName
      }, node.style.transitionDuration = "0s", node.style.animationName = "none";
      let rect = node.getBoundingClientRect();
      heightRef.current = rect.height, widthRef.current = rect.width, isMountAnimationPreventedRef.current || (node.style.transitionDuration = originalStylesRef.current.transitionDuration, node.style.animationName = originalStylesRef.current.animationName), setIsPresent(present);
    }
  }, [
    context.open,
    present
  ]), /* @__PURE__ */ (0, import_react102.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    "data-state": $409067139f391064$var$getState(context.open),
    "data-disabled": context.disabled ? "" : void 0,
    id: context.contentId,
    hidden: !isOpen
  }, contentProps, {
    ref: composedRefs,
    style: {
      ["--radix-collapsible-content-height"]: height ? `${height}px` : void 0,
      ["--radix-collapsible-content-width"]: width ? `${width}px` : void 0,
      ...props.style
    }
  }), isOpen && children);
});
function $409067139f391064$var$getState(open) {
  return open ? "open" : "closed";
}
var $409067139f391064$export$be92b6f5f03c0fe9 = $409067139f391064$export$6eb0f7ddcda6131f;

// app/components/ui/collapsible.tsx
var Collapsible = $409067139f391064$export$be92b6f5f03c0fe9, CollapsibleTrigger = $409067139f391064$export$c135dce7b15bbbdc, CollapsibleContent = $409067139f391064$export$aadde00976f34151;

// app/components/feedback-collapsible-area.tsx
var import_jsx_runtime48 = __toESM(require_jsx_runtime(), 1);
function FeedbackCollapsibleArea({
  title,
  children
}) {
  let [permanentOpen, setPermanentOpen] = (0, import_react103.useState)(!0), [isOpen, setIsOpen] = (0, import_react103.useState)(!0);
  return (0, import_react103.useEffect)(() => {
    window.innerWidth < 768 && setPermanentOpen(!1);
    function handleResize(event) {
      event.target.innerWidth >= 768 ? setPermanentOpen(!0) : setPermanentOpen(!1);
    }
    return window.addEventListener("resize", handleResize), () => window.removeEventListener("resize", handleResize);
  }, []), /* @__PURE__ */ (0, import_jsx_runtime48.jsxs)(Collapsible, { open: permanentOpen || isOpen, onOpenChange: setIsOpen, children: [
    /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(CollapsibleTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime48.jsxs)(
      "button",
      {
        className: "flex w-full items-center justify-between",
        "aria-label": "Toggle collapsible area",
        disabled: permanentOpen,
        children: [
          /* @__PURE__ */ (0, import_jsx_runtime48.jsx)("span", { className: "sr-only", children: "Toggle" }),
          /* @__PURE__ */ (0, import_jsx_runtime48.jsx)("h3", { className: "font-medium", children: title }),
          !permanentOpen && (isOpen ? /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(ChevronUpIcon, {}) : /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(ChevronDownIcon, {}))
        ]
      }
    ) }),
    /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(Separator, { className: "mb-4 mt-2" }),
    /* @__PURE__ */ (0, import_jsx_runtime48.jsx)(CollapsibleContent, { children })
  ] });
}

// app/components/copy-button.tsx
var import_react105 = __toESM(require_react(), 1);

// app/lib/hooks/useCopyToClipboard.ts
var import_react104 = __toESM(require_react(), 1);
function useCopyToClipboard() {
  let [copiedText, setCopiedText] = (0, import_react104.useState)(null);
  return [async (text) => {
    if (!navigator?.clipboard)
      return console.warn("Clipboard not supported"), !1;
    try {
      return await navigator.clipboard.writeText(text), setCopiedText(text), !0;
    } catch (error) {
      return console.warn("Copy failed", error), setCopiedText(null), !1;
    }
  }, copiedText];
}

// app/components/copy-button.tsx
var import_jsx_runtime49 = __toESM(require_jsx_runtime(), 1);
function CopyButton({
  value,
  className
}) {
  let [copy] = useCopyToClipboard(), [isCopied, setIsCopied] = (0, import_react105.useState)(!1), handleClick = () => {
    copy(value), setIsCopied(!0);
  };
  return (0, import_react105.useEffect)(() => {
    if (isCopied) {
      let timer = setTimeout(() => {
        setIsCopied(!1);
      }, 2e3);
      return () => clearTimeout(timer);
    }
  }, [isCopied]), /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(
    Button,
    {
      variant: "ghost",
      size: "icon",
      className,
      type: "button",
      onClick: handleClick,
      children: isCopied ? /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(motion.div, { initial: { scale: 0 }, animate: { scale: 1 }, children: /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(CheckIcon, {}) }) : /* @__PURE__ */ (0, import_jsx_runtime49.jsx)(CopyIcon, {})
    }
  );
}

// app/components/feedback-sider.tsx
var import_jsx_runtime50 = __toESM(require_jsx_runtime(), 1);
function FeedbackSider() {
  let [search, setSearch] = (0, import_react106.useState)(""), { projectId, filtersAndSorters, setFiltersAndSorters } = useFeedbackContext(), { sorters } = filtersAndSorters, debouncedSearch = (0, import_react106.useRef)(
    (0, import_lodash.default)((value) => {
      setFiltersAndSorters((prev) => ({
        ...prev,
        filters: {
          ...prev.filters,
          search: value
        }
      }));
    }, 300)
  ).current;
  return (0, import_react106.useEffect)(() => () => {
    debouncedSearch.cancel();
  }, [debouncedSearch]), /* @__PURE__ */ (0, import_jsx_runtime50.jsx)("div", { className: "relative w-full shrink-0 border-r-0 md:w-[280px] md:border-r", children: /* @__PURE__ */ (0, import_jsx_runtime50.jsx)("div", { className: "sticky top-20", children: /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)("div", { className: "space-y-4", children: [
    /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(FeedbackCollapsibleArea, { title: "Filter", children: /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)("div", { className: "space-y-4 pr-0 md:pr-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)("div", { className: "relative", children: [
        /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
          Input,
          {
            placeholder: "Search feedback",
            value: search,
            className: "pr-6",
            onChange: (e3) => {
              setSearch(e3.target.value), debouncedSearch(e3.target.value);
            }
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(MagnifyingGlassIcon, { className: "absolute right-2 top-1/2 -translate-y-1/2 transform" })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(FeedbackRadioGroup, {})
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(FeedbackCollapsibleArea, { title: "Sorter", children: /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)("div", { className: "grid grid-cols-2 gap-1.5 pr-0 md:pr-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)(
        Button,
        {
          className: "px-2 text-muted-foreground hover:text-muted-foreground",
          variant: Object.values(sorters)[0] === "desc" ? "outline" : "ghost",
          onClick: () => setFiltersAndSorters((prev) => ({
            ...prev,
            sorters: Object.fromEntries(
              Object.entries(prev.sorters).map(([key, value]) => [
                key,
                "desc"
              ])
            )
          })),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(ArrowDownIcon, { className: "mr-1 h-4 w-4" }),
            "Newest first"
          ]
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)(
        Button,
        {
          className: "px-2 text-muted-foreground hover:text-muted-foreground",
          variant: Object.values(sorters)[0] === "asc" ? "outline" : "ghost",
          onClick: () => setFiltersAndSorters((prev) => ({
            ...prev,
            sorters: Object.fromEntries(
              Object.entries(prev.sorters).map(([key, value]) => [
                key,
                "asc"
              ])
            )
          })),
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(ArrowUpIcon, { className: "mr-1 h-4 w-4" }),
            "Oldest first"
          ]
        }
      )
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(FeedbackCollapsibleArea, { title: "Project ID", children: /* @__PURE__ */ (0, import_jsx_runtime50.jsxs)("div", { className: "flex items-center gap-1.5", children: [
      /* @__PURE__ */ (0, import_jsx_runtime50.jsx)("p", { className: "text-xs tracking-tight text-muted-foreground", children: projectId }),
      /* @__PURE__ */ (0, import_jsx_runtime50.jsx)(
        CopyButton,
        {
          className: "h-4 w-4 text-muted-foreground",
          value: projectId
        }
      )
    ] }) })
  ] }) }) });
}

// app/components/feedback-list.tsx
var import_react110 = __toESM(require_react(), 1);

// ../../node_modules/react-intersection-observer/index.mjs
var React49 = __toESM(require_react(), 1), React210 = __toESM(require_react(), 1);
var observerMap = /* @__PURE__ */ new Map(), RootIds = /* @__PURE__ */ new WeakMap(), rootId = 0, unsupportedValue = void 0;
function getRootId(root) {
  return root ? (RootIds.has(root) || (rootId += 1, RootIds.set(root, rootId.toString())), RootIds.get(root)) : "0";
}
function optionsToId(options) {
  return Object.keys(options).sort().filter(
    (key) => options[key] !== void 0
  ).map((key) => `${key}_${key === "root" ? getRootId(options.root) : options[key]}`).toString();
}
function createObserver(options) {
  let id3 = optionsToId(options), instance = observerMap.get(id3);
  if (!instance) {
    let elements = /* @__PURE__ */ new Map(), thresholds, observer = new IntersectionObserver((entries) => {
      entries.forEach((entry2) => {
        var _a;
        let inView = entry2.isIntersecting && thresholds.some((threshold) => entry2.intersectionRatio >= threshold);
        options.trackVisibility && typeof entry2.isVisible > "u" && (entry2.isVisible = inView), (_a = elements.get(entry2.target)) == null || _a.forEach((callback) => {
          callback(inView, entry2);
        });
      });
    }, options);
    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]), instance = {
      id: id3,
      observer,
      elements
    }, observerMap.set(id3, instance);
  }
  return instance;
}
function observe(element, callback, options = {}, fallbackInView = unsupportedValue) {
  if (typeof window.IntersectionObserver > "u" && fallbackInView !== void 0) {
    let bounds = element.getBoundingClientRect();
    return callback(fallbackInView, {
      isIntersecting: fallbackInView,
      target: element,
      intersectionRatio: typeof options.threshold == "number" ? options.threshold : 0,
      time: 0,
      boundingClientRect: bounds,
      intersectionRect: bounds,
      rootBounds: bounds
    }), () => {
    };
  }
  let { id: id3, observer, elements } = createObserver(options), callbacks = elements.get(element) || [];
  return elements.has(element) || elements.set(element, callbacks), callbacks.push(callback), observer.observe(element), function() {
    callbacks.splice(callbacks.indexOf(callback), 1), callbacks.length === 0 && (elements.delete(element), observer.unobserve(element)), elements.size === 0 && (observer.disconnect(), observerMap.delete(id3));
  };
}
function useInView({
  threshold,
  delay: delay2,
  trackVisibility,
  rootMargin,
  root,
  triggerOnce,
  skip,
  initialInView,
  fallbackInView,
  onChange
} = {}) {
  var _a;
  let [ref, setRef] = React210.useState(null), callback = React210.useRef(), [state, setState] = React210.useState({
    inView: !!initialInView,
    entry: void 0
  });
  callback.current = onChange, React210.useEffect(
    () => {
      if (skip || !ref)
        return;
      let unobserve;
      return unobserve = observe(
        ref,
        (inView, entry2) => {
          setState({
            inView,
            entry: entry2
          }), callback.current && callback.current(inView, entry2), entry2.isIntersecting && triggerOnce && unobserve && (unobserve(), unobserve = void 0);
        },
        {
          root,
          rootMargin,
          threshold,
          // @ts-ignore
          trackVisibility,
          // @ts-ignore
          delay: delay2
        },
        fallbackInView
      ), () => {
        unobserve && unobserve();
      };
    },
    // We break the rule here, because we aren't including the actual `threshold` variable
    // eslint-disable-next-line react-hooks/exhaustive-deps
    [
      // If the threshold is an array, convert it to a string, so it won't change between renders.
      // eslint-disable-next-line react-hooks/exhaustive-deps
      Array.isArray(threshold) ? threshold.toString() : threshold,
      ref,
      root,
      rootMargin,
      triggerOnce,
      skip,
      trackVisibility,
      fallbackInView,
      delay2
    ]
  );
  let entryTarget = (_a = state.entry) == null ? void 0 : _a.target, previousEntryTarget = React210.useRef();
  !ref && entryTarget && !triggerOnce && !skip && previousEntryTarget.current !== entryTarget && (previousEntryTarget.current = entryTarget, setState({
    inView: !!initialInView,
    entry: void 0
  }));
  let result = [setRef, state.inView, state.entry];
  return result.ref = result[0], result.inView = result[1], result.entry = result[2], result;
}

// app/components/feedback-card-skeleton.tsx
var import_jsx_runtime51 = __toESM(require_jsx_runtime(), 1);
function FeedbackCardSkeleton() {
  return /* @__PURE__ */ (0, import_jsx_runtime51.jsxs)(
    motion.div,
    {
      initial: { opacity: 0 },
      animate: { opacity: 1 },
      transition: { duration: 0.2 },
      className: "flex flex-col gap-2 border-b p-2 last:border-none",
      children: [
        /* @__PURE__ */ (0, import_jsx_runtime51.jsxs)("div", { className: "flex justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(Skeleton, { className: "h-5 w-[55px]" }),
          /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(Skeleton, { className: "h-3 w-[65px]" })
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime51.jsxs)("div", { className: "space-y-3", children: [
          /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(Skeleton, { className: "h-4 w-full" }),
          /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(Skeleton, { className: "h-4 w-full" }),
          /* @__PURE__ */ (0, import_jsx_runtime51.jsx)(Skeleton, { className: "h-4 w-full" })
        ] })
      ]
    }
  );
}

// app/components/feedback-card.tsx
var import_ua_parser_js = __toESM(require_ua_parser(), 1);

// app/components/ui/tooltip.tsx
var React50 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-tooltip/dist/index.mjs
var import_react107 = __toESM(require_react(), 1);
var [$a093c7e1ec25a057$var$createTooltipContext, $a093c7e1ec25a057$export$1c540a2224f0d865] = $c512c27ab02ef895$export$50c7b4e9d9f19c1("Tooltip", [
  $cf1ac5d9fe0e8206$export$722aac194ae923
]), $a093c7e1ec25a057$var$usePopperScope = $cf1ac5d9fe0e8206$export$722aac194ae923(), $a093c7e1ec25a057$var$PROVIDER_NAME = "TooltipProvider", $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION = 700, $a093c7e1ec25a057$var$TOOLTIP_OPEN = "tooltip.open", [$a093c7e1ec25a057$var$TooltipProviderContextProvider, $a093c7e1ec25a057$var$useTooltipProviderContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PROVIDER_NAME), $a093c7e1ec25a057$export$f78649fb9ca566b8 = (props) => {
  let { __scopeTooltip, delayDuration = $a093c7e1ec25a057$var$DEFAULT_DELAY_DURATION, skipDelayDuration = 300, disableHoverableContent = !1, children } = props, [isOpenDelayed, setIsOpenDelayed] = (0, import_react107.useState)(!0), isPointerInTransitRef = (0, import_react107.useRef)(!1), skipDelayTimerRef = (0, import_react107.useRef)(0);
  return (0, import_react107.useEffect)(() => {
    let skipDelayTimer = skipDelayTimerRef.current;
    return () => window.clearTimeout(skipDelayTimer);
  }, []), /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$TooltipProviderContextProvider, {
    scope: __scopeTooltip,
    isOpenDelayed,
    delayDuration,
    onOpen: (0, import_react107.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current), setIsOpenDelayed(!1);
    }, []),
    onClose: (0, import_react107.useCallback)(() => {
      window.clearTimeout(skipDelayTimerRef.current), skipDelayTimerRef.current = window.setTimeout(
        () => setIsOpenDelayed(!0),
        skipDelayDuration
      );
    }, [
      skipDelayDuration
    ]),
    isPointerInTransitRef,
    onPointerInTransitChange: (0, import_react107.useCallback)((inTransit) => {
      isPointerInTransitRef.current = inTransit;
    }, []),
    disableHoverableContent
  }, children);
}, $a093c7e1ec25a057$var$TOOLTIP_NAME = "Tooltip", [$a093c7e1ec25a057$var$TooltipContextProvider, $a093c7e1ec25a057$var$useTooltipContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME), $a093c7e1ec25a057$export$28c660c63b792dea = (props) => {
  let { __scopeTooltip, children, open: openProp, defaultOpen = !1, onOpenChange, disableHoverableContent: disableHoverableContentProp, delayDuration: delayDurationProp } = props, providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TOOLTIP_NAME, props.__scopeTooltip), popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip), [trigger, setTrigger] = (0, import_react107.useState)(null), contentId = $1746a345f3d73bb7$export$f680877a34711e37(), openTimerRef = (0, import_react107.useRef)(0), disableHoverableContent = disableHoverableContentProp ?? providerContext.disableHoverableContent, delayDuration = delayDurationProp ?? providerContext.delayDuration, wasOpenDelayedRef = (0, import_react107.useRef)(!1), [open1 = !1, setOpen] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: openProp,
    defaultProp: defaultOpen,
    onChange: (open) => {
      open ? (providerContext.onOpen(), document.dispatchEvent(new CustomEvent($a093c7e1ec25a057$var$TOOLTIP_OPEN))) : providerContext.onClose(), onOpenChange?.(open);
    }
  }), stateAttribute = (0, import_react107.useMemo)(() => open1 ? wasOpenDelayedRef.current ? "delayed-open" : "instant-open" : "closed", [
    open1
  ]), handleOpen = (0, import_react107.useCallback)(() => {
    window.clearTimeout(openTimerRef.current), wasOpenDelayedRef.current = !1, setOpen(!0);
  }, [
    setOpen
  ]), handleClose = (0, import_react107.useCallback)(() => {
    window.clearTimeout(openTimerRef.current), setOpen(!1);
  }, [
    setOpen
  ]), handleDelayedOpen = (0, import_react107.useCallback)(() => {
    window.clearTimeout(openTimerRef.current), openTimerRef.current = window.setTimeout(() => {
      wasOpenDelayedRef.current = !0, setOpen(!0);
    }, delayDuration);
  }, [
    delayDuration,
    setOpen
  ]);
  return (0, import_react107.useEffect)(() => () => window.clearTimeout(openTimerRef.current), []), /* @__PURE__ */ (0, import_react107.createElement)($cf1ac5d9fe0e8206$export$be92b6f5f03c0fe9, popperScope, /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$TooltipContextProvider, {
    scope: __scopeTooltip,
    contentId,
    open: open1,
    stateAttribute,
    trigger,
    onTriggerChange: setTrigger,
    onTriggerEnter: (0, import_react107.useCallback)(() => {
      providerContext.isOpenDelayed ? handleDelayedOpen() : handleOpen();
    }, [
      providerContext.isOpenDelayed,
      handleDelayedOpen,
      handleOpen
    ]),
    onTriggerLeave: (0, import_react107.useCallback)(() => {
      disableHoverableContent ? handleClose() : window.clearTimeout(openTimerRef.current);
    }, [
      handleClose,
      disableHoverableContent
    ]),
    onOpen: handleOpen,
    onClose: handleClose,
    disableHoverableContent
  }, children));
}, $a093c7e1ec25a057$var$TRIGGER_NAME = "TooltipTrigger", $a093c7e1ec25a057$export$8c610744efcf8a1d = /* @__PURE__ */ (0, import_react107.forwardRef)((props, forwardedRef) => {
  let { __scopeTooltip, ...triggerProps } = props, context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip), providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$TRIGGER_NAME, __scopeTooltip), popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip), ref = (0, import_react107.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref, context.onTriggerChange), isPointerDownRef = (0, import_react107.useRef)(!1), hasPointerMoveOpenedRef = (0, import_react107.useRef)(!1), handlePointerUp = (0, import_react107.useCallback)(
    () => isPointerDownRef.current = !1,
    []
  );
  return (0, import_react107.useEffect)(() => () => document.removeEventListener("pointerup", handlePointerUp), [
    handlePointerUp
  ]), /* @__PURE__ */ (0, import_react107.createElement)($cf1ac5d9fe0e8206$export$b688253958b8dfe7, _extends6({
    asChild: !0
  }, popperScope), /* @__PURE__ */ (0, import_react107.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    // We purposefully avoid adding `type=button` here because tooltip triggers are also
    // commonly anchors and the anchor `type` attribute signifies MIME type.
    "aria-describedby": context.open ? context.contentId : void 0,
    "data-state": context.stateAttribute
  }, triggerProps, {
    ref: composedRefs,
    onPointerMove: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerMove, (event) => {
      event.pointerType !== "touch" && !hasPointerMoveOpenedRef.current && !providerContext.isPointerInTransitRef.current && (context.onTriggerEnter(), hasPointerMoveOpenedRef.current = !0);
    }),
    onPointerLeave: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerLeave, () => {
      context.onTriggerLeave(), hasPointerMoveOpenedRef.current = !1;
    }),
    onPointerDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onPointerDown, () => {
      isPointerDownRef.current = !0, document.addEventListener("pointerup", handlePointerUp, {
        once: !0
      });
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onFocus, () => {
      isPointerDownRef.current || context.onOpen();
    }),
    onBlur: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onBlur, context.onClose),
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, context.onClose)
  })));
}), $a093c7e1ec25a057$var$PORTAL_NAME = "TooltipPortal", [$a093c7e1ec25a057$var$PortalProvider, $a093c7e1ec25a057$var$usePortalContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$PORTAL_NAME, {
  forceMount: void 0
});
var $a093c7e1ec25a057$var$CONTENT_NAME = "TooltipContent", $a093c7e1ec25a057$export$e9003e2be37ec060 = /* @__PURE__ */ (0, import_react107.forwardRef)((props, forwardedRef) => {
  let portalContext = $a093c7e1ec25a057$var$usePortalContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip), { forceMount = portalContext.forceMount, side = "top", ...contentProps } = props, context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip);
  return /* @__PURE__ */ (0, import_react107.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.open
  }, context.disableHoverableContent ? /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends6({
    side
  }, contentProps, {
    ref: forwardedRef
  })) : /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$TooltipContentHoverable, _extends6({
    side
  }, contentProps, {
    ref: forwardedRef
  })));
}), $a093c7e1ec25a057$var$TooltipContentHoverable = /* @__PURE__ */ (0, import_react107.forwardRef)((props, forwardedRef) => {
  let context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip), providerContext = $a093c7e1ec25a057$var$useTooltipProviderContext($a093c7e1ec25a057$var$CONTENT_NAME, props.__scopeTooltip), ref = (0, import_react107.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), [pointerGraceArea, setPointerGraceArea] = (0, import_react107.useState)(null), { trigger, onClose } = context, content = ref.current, { onPointerInTransitChange } = providerContext, handleRemoveGraceArea = (0, import_react107.useCallback)(() => {
    setPointerGraceArea(null), onPointerInTransitChange(!1);
  }, [
    onPointerInTransitChange
  ]), handleCreateGraceArea = (0, import_react107.useCallback)((event, hoverTarget) => {
    let currentTarget = event.currentTarget, exitPoint = {
      x: event.clientX,
      y: event.clientY
    }, exitSide = $a093c7e1ec25a057$var$getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect()), paddedExitPoints = $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide), hoverTargetPoints = $a093c7e1ec25a057$var$getPointsFromRect(hoverTarget.getBoundingClientRect()), graceArea = $a093c7e1ec25a057$var$getHull([
      ...paddedExitPoints,
      ...hoverTargetPoints
    ]);
    setPointerGraceArea(graceArea), onPointerInTransitChange(!0);
  }, [
    onPointerInTransitChange
  ]);
  return (0, import_react107.useEffect)(() => () => handleRemoveGraceArea(), [
    handleRemoveGraceArea
  ]), (0, import_react107.useEffect)(() => {
    if (trigger && content) {
      let handleTriggerLeave = (event) => handleCreateGraceArea(event, content), handleContentLeave = (event) => handleCreateGraceArea(event, trigger);
      return trigger.addEventListener("pointerleave", handleTriggerLeave), content.addEventListener("pointerleave", handleContentLeave), () => {
        trigger.removeEventListener("pointerleave", handleTriggerLeave), content.removeEventListener("pointerleave", handleContentLeave);
      };
    }
  }, [
    trigger,
    content,
    handleCreateGraceArea,
    handleRemoveGraceArea
  ]), (0, import_react107.useEffect)(() => {
    if (pointerGraceArea) {
      let handleTrackPointerGrace = (event) => {
        let target = event.target, pointerPosition = {
          x: event.clientX,
          y: event.clientY
        }, hasEnteredTarget = trigger?.contains(target) || content?.contains(target), isPointerOutsideGraceArea = !$a093c7e1ec25a057$var$isPointInPolygon(pointerPosition, pointerGraceArea);
        hasEnteredTarget ? handleRemoveGraceArea() : isPointerOutsideGraceArea && (handleRemoveGraceArea(), onClose());
      };
      return document.addEventListener("pointermove", handleTrackPointerGrace), () => document.removeEventListener("pointermove", handleTrackPointerGrace);
    }
  }, [
    trigger,
    content,
    pointerGraceArea,
    onClose,
    handleRemoveGraceArea
  ]), /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$TooltipContentImpl, _extends6({}, props, {
    ref: composedRefs
  }));
}), [$a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, $a093c7e1ec25a057$var$useVisuallyHiddenContentContext] = $a093c7e1ec25a057$var$createTooltipContext($a093c7e1ec25a057$var$TOOLTIP_NAME, {
  isInside: !1
}), $a093c7e1ec25a057$var$TooltipContentImpl = /* @__PURE__ */ (0, import_react107.forwardRef)((props, forwardedRef) => {
  let { __scopeTooltip, children, "aria-label": ariaLabel, onEscapeKeyDown, onPointerDownOutside, ...contentProps } = props, context = $a093c7e1ec25a057$var$useTooltipContext($a093c7e1ec25a057$var$CONTENT_NAME, __scopeTooltip), popperScope = $a093c7e1ec25a057$var$usePopperScope(__scopeTooltip), { onClose } = context;
  return (0, import_react107.useEffect)(() => (document.addEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose), () => document.removeEventListener($a093c7e1ec25a057$var$TOOLTIP_OPEN, onClose)), [
    onClose
  ]), (0, import_react107.useEffect)(() => {
    if (context.trigger) {
      let handleScroll3 = (event) => {
        let target = event.target;
        target != null && target.contains(context.trigger) && onClose();
      };
      return window.addEventListener("scroll", handleScroll3, {
        capture: !0
      }), () => window.removeEventListener("scroll", handleScroll3, {
        capture: !0
      });
    }
  }, [
    context.trigger,
    onClose
  ]), /* @__PURE__ */ (0, import_react107.createElement)($5cb92bef7577960e$export$177fb62ff3ec1f22, {
    asChild: !0,
    disableOutsidePointerEvents: !1,
    onEscapeKeyDown,
    onPointerDownOutside,
    onFocusOutside: (event) => event.preventDefault(),
    onDismiss: onClose
  }, /* @__PURE__ */ (0, import_react107.createElement)($cf1ac5d9fe0e8206$export$7c6e2c02157bb7d2, _extends6({
    "data-state": context.stateAttribute
  }, popperScope, contentProps, {
    ref: forwardedRef,
    style: {
      ...contentProps.style,
      "--radix-tooltip-content-transform-origin": "var(--radix-popper-transform-origin)",
      "--radix-tooltip-content-available-width": "var(--radix-popper-available-width)",
      "--radix-tooltip-content-available-height": "var(--radix-popper-available-height)",
      "--radix-tooltip-trigger-width": "var(--radix-popper-anchor-width)",
      "--radix-tooltip-trigger-height": "var(--radix-popper-anchor-height)"
    }
  }), /* @__PURE__ */ (0, import_react107.createElement)($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children), /* @__PURE__ */ (0, import_react107.createElement)($a093c7e1ec25a057$var$VisuallyHiddenContentContextProvider, {
    scope: __scopeTooltip,
    isInside: !0
  }, /* @__PURE__ */ (0, import_react107.createElement)($ea1ef594cf570d83$export$be92b6f5f03c0fe9, {
    id: context.contentId,
    role: "tooltip"
  }, ariaLabel || children))));
});
function $a093c7e1ec25a057$var$getExitSideFromRect(point, rect) {
  let top = Math.abs(rect.top - point.y), bottom = Math.abs(rect.bottom - point.y), right = Math.abs(rect.right - point.x), left = Math.abs(rect.left - point.x);
  switch (Math.min(top, bottom, right, left)) {
    case left:
      return "left";
    case right:
      return "right";
    case top:
      return "top";
    case bottom:
      return "bottom";
    default:
      throw new Error("unreachable");
  }
}
function $a093c7e1ec25a057$var$getPaddedExitPoints(exitPoint, exitSide, padding = 5) {
  let paddedExitPoints = [];
  switch (exitSide) {
    case "top":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "bottom":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      });
      break;
    case "left":
      paddedExitPoints.push({
        x: exitPoint.x + padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x + padding,
        y: exitPoint.y + padding
      });
      break;
    case "right":
      paddedExitPoints.push({
        x: exitPoint.x - padding,
        y: exitPoint.y - padding
      }, {
        x: exitPoint.x - padding,
        y: exitPoint.y + padding
      });
      break;
  }
  return paddedExitPoints;
}
function $a093c7e1ec25a057$var$getPointsFromRect(rect) {
  let { top, right, bottom, left } = rect;
  return [
    {
      x: left,
      y: top
    },
    {
      x: right,
      y: top
    },
    {
      x: right,
      y: bottom
    },
    {
      x: left,
      y: bottom
    }
  ];
}
function $a093c7e1ec25a057$var$isPointInPolygon(point, polygon) {
  let { x: x3, y: y4 } = point, inside = !1;
  for (let i3 = 0, j = polygon.length - 1; i3 < polygon.length; j = i3++) {
    let xi = polygon[i3].x, yi = polygon[i3].y, xj = polygon[j].x, yj = polygon[j].y;
    yi > y4 != yj > y4 && x3 < (xj - xi) * (y4 - yi) / (yj - yi) + xi && (inside = !inside);
  }
  return inside;
}
function $a093c7e1ec25a057$var$getHull(points) {
  let newPoints = points.slice();
  return newPoints.sort((a4, b3) => a4.x < b3.x ? -1 : a4.x > b3.x ? 1 : a4.y < b3.y ? -1 : a4.y > b3.y ? 1 : 0), $a093c7e1ec25a057$var$getHullPresorted(newPoints);
}
function $a093c7e1ec25a057$var$getHullPresorted(points) {
  if (points.length <= 1)
    return points.slice();
  let upperHull = [];
  for (let i3 = 0; i3 < points.length; i3++) {
    let p2 = points[i3];
    for (; upperHull.length >= 2; ) {
      let q2 = upperHull[upperHull.length - 1], r3 = upperHull[upperHull.length - 2];
      if ((q2.x - r3.x) * (p2.y - r3.y) >= (q2.y - r3.y) * (p2.x - r3.x))
        upperHull.pop();
      else
        break;
    }
    upperHull.push(p2);
  }
  upperHull.pop();
  let lowerHull = [];
  for (let i1 = points.length - 1; i1 >= 0; i1--) {
    let p2 = points[i1];
    for (; lowerHull.length >= 2; ) {
      let q2 = lowerHull[lowerHull.length - 1], r3 = lowerHull[lowerHull.length - 2];
      if ((q2.x - r3.x) * (p2.y - r3.y) >= (q2.y - r3.y) * (p2.x - r3.x))
        lowerHull.pop();
      else
        break;
    }
    lowerHull.push(p2);
  }
  return lowerHull.pop(), upperHull.length === 1 && lowerHull.length === 1 && upperHull[0].x === lowerHull[0].x && upperHull[0].y === lowerHull[0].y ? upperHull : upperHull.concat(lowerHull);
}
var $a093c7e1ec25a057$export$2881499e37b75b9a = $a093c7e1ec25a057$export$f78649fb9ca566b8, $a093c7e1ec25a057$export$be92b6f5f03c0fe9 = $a093c7e1ec25a057$export$28c660c63b792dea, $a093c7e1ec25a057$export$41fb9f06171c75f4 = $a093c7e1ec25a057$export$8c610744efcf8a1d;
var $a093c7e1ec25a057$export$7c6e2c02157bb7d2 = $a093c7e1ec25a057$export$e9003e2be37ec060;

// app/components/ui/tooltip.tsx
var import_jsx_runtime52 = __toESM(require_jsx_runtime(), 1), TooltipProvider = $a093c7e1ec25a057$export$2881499e37b75b9a, Tooltip = $a093c7e1ec25a057$export$be92b6f5f03c0fe9, TooltipTrigger = $a093c7e1ec25a057$export$41fb9f06171c75f4, TooltipContent = React50.forwardRef(({ className, sideOffset = 4, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime52.jsx)(
  $a093c7e1ec25a057$export$7c6e2c02157bb7d2,
  {
    ref,
    sideOffset,
    className: cn(
      "z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2",
      className
    ),
    ...props
  }
));
TooltipContent.displayName = $a093c7e1ec25a057$export$7c6e2c02157bb7d2.displayName;

// app/components/feedback-card.tsx
var import_jsx_runtime53 = __toESM(require_jsx_runtime(), 1);
function FeedbackCard({
  id: id3,
  content,
  createdAt,
  device,
  url: url2,
  category,
  openedCardId,
  status,
  meta: meta2,
  reportIdentifier,
  resolution,
  setOpenedCardId
}) {
  let queryClient = useQueryClient(), { projectId, filtersAndSorters } = useFeedbackContext(), isOpen = openedCardId === id3, ua = new import_ua_parser_js.default(device).getResult(), updateFeedbackStatus2 = useMutation({
    mutationFn: (variables) => fetchers.updateFeedbackStatus(variables),
    onSuccess: () => {
      queryClient.invalidateQueries({
        queryKey: ["feedbacks", projectId, { ...filtersAndSorters }]
      });
    }
  });
  return /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
    motion.button,
    {
      "aria-label": "Open feedback card to see more details",
      whileInView: { opacity: 1, transition: { duration: 0.2 } },
      className: cn(
        "block w-full cursor-pointer select-text overflow-hidden border-b p-2 text-left opacity-0 transition-all last:border-none",
        {
          "cursor-auto bg-accent/70": isOpen
        }
      ),
      onClick: () => setOpenedCardId(id3),
      children: /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex flex-col gap-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex items-end justify-between", children: [
          /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "text-xs text-muted-foreground", children: getRelativeTime(createdAt) }),
          /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
            "div",
            {
              className: cn(
                "inline-flex select-none items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold",
                {
                  "border-amber bg-amber-foreground text-amber": category === "idea" /* idea */,
                  "border-red bg-red-foreground text-red": category === "issue" /* issue */,
                  "border-gray bg-gray-foreground text-gray": category === "other" /* other */
                }
              ),
              children: category
            }
          )
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
          "p",
          {
            className: cn("line-clamp-5 text-base", {
              "line-clamp-none": isOpen
            }),
            children: content
          }
        ),
        isOpen && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)(import_jsx_runtime53.Fragment, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "border-t", children: [
            /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("h3", { className: "my-2 font-medium", children: "Session" }),
            /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "grid grid-cols-1 gap-x-1 gap-y-2 md:grid-cols-2", children: [
              reportIdentifier && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SessionIcon, { tooltipDescription: "Reporter", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(PersonIcon, { className: "flex-shrink-0 text-muted-foreground" }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("p", { className: "break-all", children: reportIdentifier })
              ] }),
              url2 && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SessionIcon, { tooltipDescription: "Page", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(FileIcon, { className: "flex-shrink-0 text-muted-foreground" }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
                  Link2,
                  {
                    to: url2,
                    className: "break-all transition-colors hover:text-link",
                    children: url2
                  }
                )
              ] }),
              ua.os.name && ua.os.version && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SessionIcon, { tooltipDescription: "System", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(DesktopIcon, { className: "flex-shrink-0 text-muted-foreground" }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("p", { children: `${ua.os.name} ${ua.os.version}` })
              ] }),
              ua.browser.name && ua.browser.version && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SessionIcon, { tooltipDescription: "Browser", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(GlobeIcon, { className: "flex-shrink-0 text-muted-foreground" }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("p", { children: `${ua.browser.name} ${ua.browser.version}` })
              ] }),
              resolution && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex gap-2", children: [
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SessionIcon, { tooltipDescription: "Screen Size", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "flex h-5 items-center", children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(SizeIcon, { className: "flex-shrink-0 text-muted-foreground" }) }) }),
                /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("p", { children: resolution })
              ] })
            ] })
          ] }),
          Object.keys(meta2).length > 0 && /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "border-t", children: [
            /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("h3", { className: "my-2 font-medium", children: "Custom Data" }),
            /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "grid grid-cols-1 gap-x-1 gap-y-2 md:grid-cols-2", children: Object.entries(meta2).map(([key, value]) => /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(MetaItem, { label: key, value }, key)) })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex justify-end gap-2", children: [
            /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(
              Button,
              {
                size: "sm",
                variant: "outline",
                onClick: () => {
                  updateFeedbackStatus2.mutate({
                    id: id3,
                    projectId,
                    status: status === "archived" /* archived */ ? "new" /* new */ : "archived" /* archived */
                  });
                },
                children: status === "archived" /* archived */ ? "Unarchive" : "Archive"
              }
            ),
            status === "new" /* new */ && /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(ReplyButton, { email: reportIdentifier })
          ] })
        ] })
      ] })
    }
  );
}
var SessionIcon = (props) => /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(TooltipProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)(Tooltip, { delayDuration: 300, children: [
  /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(TooltipTrigger, { asChild: !0, children: props.children }),
  /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(TooltipContent, { sideOffset: 5, children: props.tooltipDescription })
] }) }), MetaItem = (props) => {
  let value = props.value;
  if (Array.isArray(value)) {
    if (value.length === 0) {
      value = "Empty";
      return;
    }
    value = value.join(", ");
  }
  return typeof value == "object" && (value = JSON.stringify(value)), typeof value == "boolean" && (value = value.toString()), /* @__PURE__ */ (0, import_jsx_runtime53.jsxs)("div", { className: "flex flex-col", children: [
    /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "text-xs text-muted-foreground", children: props.label }),
    /* @__PURE__ */ (0, import_jsx_runtime53.jsx)("div", { className: "break-words", children: value })
  ] });
}, ReplyButton = (props) => !props.email || !props.email.match(/.+@.+\..+/) ? null : /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(Button, { size: "sm", asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime53.jsx)(Link2, { to: `mailto:${props.email}`, children: "Reply" }) });

// app/components/feedback-empty-view.tsx
var import_jsx_runtime54 = __toESM(require_jsx_runtime(), 1);
function FeedbackEmptyView() {
  return /* @__PURE__ */ (0, import_jsx_runtime54.jsxs)("div", { className: "flex h-max w-full flex-col items-center justify-center border border-dashed bg-accent/70 px-4 py-16 text-center dark:bg-accent/10", children: [
    /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(ChatBubbleIcon, { className: "h-12 w-12" }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("h3", { className: "mt-4 text-lg font-medium", children: "There is no feedback yet. " }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsx)("p", { className: "mt-2 text-muted-foreground", children: "Connect to widget and start collecting feedback." }),
    /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(Button, { className: "mt-4", asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime54.jsx)(Link2, { to: "#", children: "Learn more" }) })
  ] });
}

// app/components/feedback-filter-empty-view.tsx
var import_jsx_runtime55 = __toESM(require_jsx_runtime(), 1);
function FeedbackFilterEmptyView() {
  return /* @__PURE__ */ (0, import_jsx_runtime55.jsxs)("div", { className: "flex h-max w-full flex-col items-center border border-dashed bg-accent/70 px-4 py-16 text-center dark:bg-accent/10 ", children: [
    /* @__PURE__ */ (0, import_jsx_runtime55.jsx)(MixerHorizontalIcon, { className: "h-6 w-6 text-muted-foreground" }),
    /* @__PURE__ */ (0, import_jsx_runtime55.jsx)("p", { className: "mt-4 text-muted-foreground", children: "No feedbacks found for this filter." })
  ] });
}

// app/components/feedback-list.tsx
var import_jsx_runtime56 = __toESM(require_jsx_runtime(), 1), PAGE_SIZE = 10;
function FeedbackList() {
  let { ref, inView } = useInView(), [openedCardId, setOpenedCardId] = (0, import_react110.useState)(""), { projectId, filtersAndSorters, setCounts } = useFeedbackContext(), {
    data,
    isPending,
    isError,
    isStale: isStale2,
    fetchNextPage,
    hasNextPage: hasNextPage2,
    status
  } = useInfiniteQuery({
    queryKey: ["feedbacks", projectId, { ...filtersAndSorters }],
    queryFn: ({ pageParam }) => {
      let cursor = pageParam ?? "";
      return fetchers.getFeedbacks({
        projectId,
        cursor,
        take: PAGE_SIZE,
        ...filtersAndSorters.filters,
        orderBy: filtersAndSorters.sorters
      });
    },
    enabled: !!projectId,
    getNextPageParam: (lastPage) => lastPage.nextCursor ?? void 0,
    getPreviousPageParam: (firstPage) => firstPage.prevCursor ?? void 0,
    initialPageParam: ""
  });
  return (0, import_react110.useEffect)(() => {
    inView && fetchNextPage();
  }, [fetchNextPage, inView]), (0, import_react110.useEffect)(() => {
    status === "success" && !isStale2 && setCounts({
      all: data.pages[data.pages.length - 1].countAll,
      countNew: data.pages[data.pages.length - 1].countNew,
      issue: data.pages[data.pages.length - 1].countIssue,
      idea: data.pages[data.pages.length - 1].countIdea,
      other: data.pages[data.pages.length - 1].countOther,
      archive: data.pages[data.pages.length - 1].countArchived
    });
  }, [status, data, setCounts, isStale2]), isError ? /* @__PURE__ */ (0, import_jsx_runtime56.jsx)("p", { children: "Cound not load feedbacks" }) : isPending ? /* @__PURE__ */ (0, import_jsx_runtime56.jsx)("div", { className: "flex w-full flex-col", children: [...Array(5)].map((_, index3) => /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(FeedbackCardSkeleton, {}, index3)) }) : data.pages[data.pages.length - 1].countAll === 0 ? /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(FeedbackEmptyView, {}) : data.pages[0].data.length === 0 ? /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(FeedbackFilterEmptyView, {}) : /* @__PURE__ */ (0, import_jsx_runtime56.jsxs)("div", { className: "flex w-full flex-col", children: [
    /* @__PURE__ */ (0, import_jsx_runtime56.jsx)("div", { className: "mb-6", children: data.pages.map((page) => /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(import_react110.Fragment, { children: page.data.map((feedback) => /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(
      FeedbackCard,
      {
        openedCardId,
        setOpenedCardId,
        ...feedback
      },
      feedback.id
    )) }, page.nextCursor)) }),
    hasNextPage2 && data.pages[data.pages.length - 1].countCurrent > PAGE_SIZE && /* @__PURE__ */ (0, import_jsx_runtime56.jsx)("div", { ref, className: "mb-4 flex justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime56.jsx)(LoadingIndicator, { className: "mr-2" }) })
  ] });
}

// app/routes/dashboard/project/feedbacks.tsx
var import_jsx_runtime57 = __toESM(require_jsx_runtime(), 1);
function Feedbacks() {
  return /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(FeedbackProvider, { children: /* @__PURE__ */ (0, import_jsx_runtime57.jsx)("div", { className: "bg-background", children: /* @__PURE__ */ (0, import_jsx_runtime57.jsx)("div", { className: "container", children: /* @__PURE__ */ (0, import_jsx_runtime57.jsxs)("div", { className: "flex min-h-[calc(100vh-105px)] flex-wrap gap-8 pt-8 md:flex-nowrap", children: [
    /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(FeedbackSider, {}),
    /* @__PURE__ */ (0, import_jsx_runtime57.jsx)("h2", { className: "w-full text-center text-3xl tracking-wide md:hidden", children: "Feedback" }),
    /* @__PURE__ */ (0, import_jsx_runtime57.jsx)(FeedbackList, {})
  ] }) }) }) });
}

// app/routes/dashboard/project/team.tsx
var team_exports = {};
__export(team_exports, {
  default: () => Teams
});

// app/components/team-invite-modal.tsx
var import_react112 = __toESM(require_react(), 1);

// app/components/ui/radio-group.tsx
var React51 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-radio-group/dist/index.mjs
var import_react111 = __toESM(require_react(), 1);
var $ce77a8961b41be9e$var$RADIO_NAME = "Radio", [$ce77a8961b41be9e$var$createRadioContext, $ce77a8961b41be9e$export$67d2296460f1b002] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($ce77a8961b41be9e$var$RADIO_NAME), [$ce77a8961b41be9e$var$RadioProvider, $ce77a8961b41be9e$var$useRadioContext] = $ce77a8961b41be9e$var$createRadioContext($ce77a8961b41be9e$var$RADIO_NAME), $ce77a8961b41be9e$export$d7b12c4107be0d61 = /* @__PURE__ */ (0, import_react111.forwardRef)((props, forwardedRef) => {
  let { __scopeRadio, name, checked = !1, required, disabled, value = "on", onCheck, ...radioProps } = props, [button, setButton] = (0, import_react111.useState)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(
    forwardedRef,
    (node) => setButton(node)
  ), hasConsumerStoppedPropagationRef = (0, import_react111.useRef)(!1), isFormControl = button ? Boolean(button.closest("form")) : !0;
  return /* @__PURE__ */ (0, import_react111.createElement)($ce77a8961b41be9e$var$RadioProvider, {
    scope: __scopeRadio,
    checked,
    disabled
  }, /* @__PURE__ */ (0, import_react111.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.button, _extends6({
    type: "button",
    role: "radio",
    "aria-checked": checked,
    "data-state": $ce77a8961b41be9e$var$getState(checked),
    "data-disabled": disabled ? "" : void 0,
    disabled,
    value
  }, radioProps, {
    ref: composedRefs,
    onClick: $e42e1063c40fb3ef$export$b9ecd428b558ff10(props.onClick, (event) => {
      checked || onCheck?.(), isFormControl && (hasConsumerStoppedPropagationRef.current = event.isPropagationStopped(), hasConsumerStoppedPropagationRef.current || event.stopPropagation());
    })
  })), isFormControl && /* @__PURE__ */ (0, import_react111.createElement)($ce77a8961b41be9e$var$BubbleInput, {
    control: button,
    bubbles: !hasConsumerStoppedPropagationRef.current,
    name,
    value,
    checked,
    required,
    disabled,
    style: {
      transform: "translateX(-100%)"
    }
  }));
}), $ce77a8961b41be9e$var$INDICATOR_NAME = "RadioIndicator", $ce77a8961b41be9e$export$d35a9ffa9a04f9e7 = /* @__PURE__ */ (0, import_react111.forwardRef)((props, forwardedRef) => {
  let { __scopeRadio, forceMount, ...indicatorProps } = props, context = $ce77a8961b41be9e$var$useRadioContext($ce77a8961b41be9e$var$INDICATOR_NAME, __scopeRadio);
  return /* @__PURE__ */ (0, import_react111.createElement)($921a889cee6df7e8$export$99c2b779aa4e8b8b, {
    present: forceMount || context.checked
  }, /* @__PURE__ */ (0, import_react111.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.span, _extends6({
    "data-state": $ce77a8961b41be9e$var$getState(context.checked),
    "data-disabled": context.disabled ? "" : void 0
  }, indicatorProps, {
    ref: forwardedRef
  })));
}), $ce77a8961b41be9e$var$BubbleInput = (props) => {
  let { control, checked, bubbles = !0, ...inputProps } = props, ref = (0, import_react111.useRef)(null), prevChecked = $010c2913dbd2fe3d$export$5cae361ad82dce8b(checked), controlSize = $db6c3485150b8e66$export$1ab7ae714698c4b8(control);
  return (0, import_react111.useEffect)(() => {
    let input = ref.current, inputProto = window.HTMLInputElement.prototype, setChecked = Object.getOwnPropertyDescriptor(inputProto, "checked").set;
    if (prevChecked !== checked && setChecked) {
      let event = new Event("click", {
        bubbles
      });
      setChecked.call(input, checked), input.dispatchEvent(event);
    }
  }, [
    prevChecked,
    checked,
    bubbles
  ]), /* @__PURE__ */ (0, import_react111.createElement)("input", _extends6({
    type: "radio",
    "aria-hidden": !0,
    defaultChecked: checked
  }, inputProps, {
    tabIndex: -1,
    ref,
    style: {
      ...props.style,
      ...controlSize,
      position: "absolute",
      pointerEvents: "none",
      opacity: 0,
      margin: 0
    }
  }));
};
function $ce77a8961b41be9e$var$getState(checked) {
  return checked ? "checked" : "unchecked";
}
var $f99a8c78507165f7$var$ARROW_KEYS = [
  "ArrowUp",
  "ArrowDown",
  "ArrowLeft",
  "ArrowRight"
], $f99a8c78507165f7$var$RADIO_GROUP_NAME = "RadioGroup", [$f99a8c78507165f7$var$createRadioGroupContext, $f99a8c78507165f7$export$c547093f11b76da2] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($f99a8c78507165f7$var$RADIO_GROUP_NAME, [
  $d7bdfb9eb0fdf311$export$c7109489551a4f4,
  $ce77a8961b41be9e$export$67d2296460f1b002
]), $f99a8c78507165f7$var$useRovingFocusGroupScope = $d7bdfb9eb0fdf311$export$c7109489551a4f4(), $f99a8c78507165f7$var$useRadioScope = $ce77a8961b41be9e$export$67d2296460f1b002(), [$f99a8c78507165f7$var$RadioGroupProvider, $f99a8c78507165f7$var$useRadioGroupContext] = $f99a8c78507165f7$var$createRadioGroupContext($f99a8c78507165f7$var$RADIO_GROUP_NAME), $f99a8c78507165f7$export$a98f0dcb43a68a25 = /* @__PURE__ */ (0, import_react111.forwardRef)((props, forwardedRef) => {
  let { __scopeRadioGroup, name, defaultValue, value: valueProp, required = !1, disabled = !1, orientation, dir, loop = !0, onValueChange, ...groupProps } = props, rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup), direction = $f631663db3294ace$export$b39126d51d94e6f3(dir), [value, setValue] = $71cd76cc60e0454e$export$6f32135080cb4c3({
    prop: valueProp,
    defaultProp: defaultValue,
    onChange: onValueChange
  });
  return /* @__PURE__ */ (0, import_react111.createElement)($f99a8c78507165f7$var$RadioGroupProvider, {
    scope: __scopeRadioGroup,
    name,
    required,
    disabled,
    value,
    onValueChange: setValue
  }, /* @__PURE__ */ (0, import_react111.createElement)($d7bdfb9eb0fdf311$export$be92b6f5f03c0fe9, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    orientation,
    dir: direction,
    loop
  }), /* @__PURE__ */ (0, import_react111.createElement)($8927f6f2acc4f386$export$250ffa63cdc0d034.div, _extends6({
    role: "radiogroup",
    "aria-required": required,
    "aria-orientation": orientation,
    "data-disabled": disabled ? "" : void 0,
    dir: direction
  }, groupProps, {
    ref: forwardedRef
  }))));
}), $f99a8c78507165f7$var$ITEM_NAME = "RadioGroupItem", $f99a8c78507165f7$export$9f866c100ef519e4 = /* @__PURE__ */ (0, import_react111.forwardRef)((props, forwardedRef) => {
  let { __scopeRadioGroup, disabled, ...itemProps } = props, context = $f99a8c78507165f7$var$useRadioGroupContext($f99a8c78507165f7$var$ITEM_NAME, __scopeRadioGroup), isDisabled = context.disabled || disabled, rovingFocusGroupScope = $f99a8c78507165f7$var$useRovingFocusGroupScope(__scopeRadioGroup), radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup), ref = (0, import_react111.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, ref), checked = context.value === itemProps.value, isArrowKeyPressedRef = (0, import_react111.useRef)(!1);
  return (0, import_react111.useEffect)(() => {
    let handleKeyDown = (event) => {
      $f99a8c78507165f7$var$ARROW_KEYS.includes(event.key) && (isArrowKeyPressedRef.current = !0);
    }, handleKeyUp = () => isArrowKeyPressedRef.current = !1;
    return document.addEventListener("keydown", handleKeyDown), document.addEventListener("keyup", handleKeyUp), () => {
      document.removeEventListener("keydown", handleKeyDown), document.removeEventListener("keyup", handleKeyUp);
    };
  }, []), /* @__PURE__ */ (0, import_react111.createElement)($d7bdfb9eb0fdf311$export$6d08773d2e66f8f2, _extends6({
    asChild: !0
  }, rovingFocusGroupScope, {
    focusable: !isDisabled,
    active: checked
  }), /* @__PURE__ */ (0, import_react111.createElement)($ce77a8961b41be9e$export$d7b12c4107be0d61, _extends6({
    disabled: isDisabled,
    required: context.required,
    checked
  }, radioScope, itemProps, {
    name: context.name,
    ref: composedRefs,
    onCheck: () => context.onValueChange(itemProps.value),
    onKeyDown: $e42e1063c40fb3ef$export$b9ecd428b558ff10((event) => {
      event.key === "Enter" && event.preventDefault();
    }),
    onFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(itemProps.onFocus, () => {
      var _ref$current;
      isArrowKeyPressedRef.current && ((_ref$current = ref.current) === null || _ref$current === void 0 || _ref$current.click());
    })
  })));
});
var $f99a8c78507165f7$export$5fb54c671a65c88 = /* @__PURE__ */ (0, import_react111.forwardRef)((props, forwardedRef) => {
  let { __scopeRadioGroup, ...indicatorProps } = props, radioScope = $f99a8c78507165f7$var$useRadioScope(__scopeRadioGroup);
  return /* @__PURE__ */ (0, import_react111.createElement)($ce77a8961b41be9e$export$d35a9ffa9a04f9e7, _extends6({}, radioScope, indicatorProps, {
    ref: forwardedRef
  }));
}), $f99a8c78507165f7$export$be92b6f5f03c0fe9 = $f99a8c78507165f7$export$a98f0dcb43a68a25, $f99a8c78507165f7$export$6d08773d2e66f8f2 = $f99a8c78507165f7$export$9f866c100ef519e4, $f99a8c78507165f7$export$adb584737d712b70 = $f99a8c78507165f7$export$5fb54c671a65c88;

// app/components/ui/radio-group.tsx
var import_jsx_runtime58 = __toESM(require_jsx_runtime(), 1), RadioGroup = React51.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(
  $f99a8c78507165f7$export$be92b6f5f03c0fe9,
  {
    className: cn("grid gap-2", className),
    ...props,
    ref
  }
));
RadioGroup.displayName = $f99a8c78507165f7$export$be92b6f5f03c0fe9.displayName;
var RadioGroupItem = React51.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(
  $f99a8c78507165f7$export$6d08773d2e66f8f2,
  {
    ref,
    className: cn(
      "aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50",
      className
    ),
    ...props,
    children: /* @__PURE__ */ (0, import_jsx_runtime58.jsx)($f99a8c78507165f7$export$adb584737d712b70, { className: "flex items-center justify-center", children: /* @__PURE__ */ (0, import_jsx_runtime58.jsx)(CheckIcon, { className: "h-3.5 w-3.5 fill-primary" }) })
  }
));
RadioGroupItem.displayName = $f99a8c78507165f7$export$6d08773d2e66f8f2.displayName;

// app/lib/constants/roles.ts
var ROLES = [
  {
    value: "member" /* member */,
    name: "Member",
    description: "Can view the project and its feedback."
  },
  {
    value: "manager" /* manager */,
    name: "Manager",
    description: "Can add/remove members and change roles."
  },
  {
    value: "owner" /* owner */,
    name: "Owner",
    description: "Can add/remove members, change roles, and delete the project."
  }
];

// app/components/team-invite-modal.tsx
var import_jsx_runtime59 = __toESM(require_jsx_runtime(), 1);
function TeamInviteModal() {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let [open, setOpen] = (0, import_react112.useState)(!1), queryClient = useQueryClient(), { toast: toast2 } = useToast(), form = useForm({
    defaultValues: {
      email: "",
      role: "member"
    }
  }), { data: user } = useMe(), userRoleOnProject = user?.projects.find(
    (project) => project.id === projectId
  )?.role, inviteUser = useMutation({
    mutationFn: (variables) => fetchers.inviteMember(projectId, variables),
    onSuccess: () => {
      form.reset(), setOpen(!1), queryClient.invalidateQueries({
        queryKey: ["team", projectId]
      });
    },
    onError: (error) => {
      let description;
      typeof error.response?.data.message == "string" && (description = error.response?.data.message), Array.isArray(error.response?.data.message) && (description = /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("div", { className: "flex flex-col", children: error.response?.data.message.map((message) => /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("p", { children: message }, message)) })), toast2({
        title: "Error",
        description
      });
    }
  }), onSubmit = (values) => {
    inviteUser.mutate(values);
  }, inviteMemberButtonProps = {
    disabled: userRoleOnProject === "member" /* member */,
    title: userRoleOnProject === "member" /* member */ ? "You must be an owner or manager to invite members" : "Invite a member"
  };
  return /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(Dialog, { open, onOpenChange: setOpen, children: [
    /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(DialogTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(Button, { ...inviteMemberButtonProps, children: "Invite Member" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(DialogContent, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(DialogHeader, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(DialogTitle, { children: "Invite your team members" }),
        /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(DialogDescription, { children: "They will receive an email invitation to join the project." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(Separator, {}),
      /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
          FormField,
          {
            control: form.control,
            name: "email",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(FormItem, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormLabel, { children: "Email" }),
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                Input,
                {
                  placeholder: "someone@example.com",
                  required: !0,
                  type: "email",
                  autoComplete: "off",
                  ...field
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
          FormField,
          {
            control: form.control,
            name: "role",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(FormItem, { className: "space-y-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormLabel, { children: "Role" }),
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                RadioGroup,
                {
                  onValueChange: field.onChange,
                  defaultValue: field.value,
                  className: "gap-4",
                  children: ROLES.map((role) => {
                    let disabled = role.value === "owner" /* owner */ && userRoleOnProject !== "owner" /* owner */;
                    return /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(
                      FormItem,
                      {
                        className: "flex space-x-3 space-y-0",
                        children: [
                          /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
                            RadioGroupItem,
                            {
                              id: role.value,
                              disabled,
                              value: role.value
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(
                            FormLabel,
                            {
                              className: cn("font-normal", {
                                "text-muted-foreground": disabled,
                                "opacity-70": disabled
                              }),
                              htmlFor: role.value,
                              children: [
                                /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("div", { className: "mb-1 leading-none", children: role.name }),
                                /* @__PURE__ */ (0, import_jsx_runtime59.jsx)("p", { className: "text-xs text-muted-foreground", children: role.description })
                              ]
                            }
                          )
                        ]
                      },
                      role.value
                    );
                  })
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(DialogFooter, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(
            Button,
            {
              type: "button",
              variant: "outline",
              onClick: () => {
                setOpen(!1);
              },
              children: "Cancel"
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime59.jsxs)(Button, { type: "submit", disabled: inviteUser.isPending, children: [
            inviteUser.isPending && /* @__PURE__ */ (0, import_jsx_runtime59.jsx)(LoadingIndicator, { className: "mr-2" }),
            "Invite"
          ] })
        ] })
      ] }) })
    ] })
  ] });
}

// app/components/team-skeleton.tsx
var import_jsx_runtime60 = __toESM(require_jsx_runtime(), 1);
function TeamSkeleton() {
  return /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { className: "space-y-8", children: [
    /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { className: "space-y-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-5 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime60.jsxs)("div", { className: "space-y-1", children: [
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-5 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" }),
      /* @__PURE__ */ (0, import_jsx_runtime60.jsx)(Skeleton, { className: "h-6 w-full" })
    ] })
  ] });
}

// app/components/team-member-actions.tsx
var import_react115 = __toESM(require_react(), 1);

// app/components/ui/alert-dialog.tsx
var React52 = __toESM(require_react(), 1);

// ../../node_modules/@radix-ui/react-alert-dialog/dist/index.mjs
var import_react114 = __toESM(require_react(), 1);
var $905f4ae918aab1aa$var$ROOT_NAME = "AlertDialog", [$905f4ae918aab1aa$var$createAlertDialogContext, $905f4ae918aab1aa$export$b8891880751c2c5b] = $c512c27ab02ef895$export$50c7b4e9d9f19c1($905f4ae918aab1aa$var$ROOT_NAME, [
  $5d3850c4d0b4e6c7$export$cc702773b8ea3e41
]), $905f4ae918aab1aa$var$useDialogScope = $5d3850c4d0b4e6c7$export$cc702773b8ea3e41(), $905f4ae918aab1aa$export$de466dd8317b0b75 = (props) => {
  let { __scopeAlertDialog, ...alertDialogProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$be92b6f5f03c0fe9, _extends6({}, dialogScope, alertDialogProps, {
    modal: !0
  }));
};
var $905f4ae918aab1aa$export$6edd7a623ef0f40b = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...triggerProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$41fb9f06171c75f4, _extends6({}, dialogScope, triggerProps, {
    ref: forwardedRef
  }));
});
var $905f4ae918aab1aa$export$660f2bfdb986706c = (props) => {
  let { __scopeAlertDialog, ...portalProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$602eac185826482c, _extends6({}, dialogScope, portalProps));
};
var $905f4ae918aab1aa$export$a707a4895ce23256 = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...overlayProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$c6fdb837b070b4ff, _extends6({}, dialogScope, overlayProps, {
    ref: forwardedRef
  }));
}), $905f4ae918aab1aa$var$CONTENT_NAME = "AlertDialogContent", [$905f4ae918aab1aa$var$AlertDialogContentProvider, $905f4ae918aab1aa$var$useAlertDialogContentContext] = $905f4ae918aab1aa$var$createAlertDialogContext($905f4ae918aab1aa$var$CONTENT_NAME), $905f4ae918aab1aa$export$94e6af45f0af4efd = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, children, ...contentProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog), contentRef = (0, import_react114.useRef)(null), composedRefs = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, contentRef), cancelRef = (0, import_react114.useRef)(null);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$69b62a49393917d6, {
    contentName: $905f4ae918aab1aa$var$CONTENT_NAME,
    titleName: $905f4ae918aab1aa$var$TITLE_NAME,
    docsSlug: "alert-dialog"
  }, /* @__PURE__ */ (0, import_react114.createElement)($905f4ae918aab1aa$var$AlertDialogContentProvider, {
    scope: __scopeAlertDialog,
    cancelRef
  }, /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$7c6e2c02157bb7d2, _extends6({
    role: "alertdialog"
  }, dialogScope, contentProps, {
    ref: composedRefs,
    onOpenAutoFocus: $e42e1063c40fb3ef$export$b9ecd428b558ff10(contentProps.onOpenAutoFocus, (event) => {
      var _cancelRef$current;
      event.preventDefault(), (_cancelRef$current = cancelRef.current) === null || _cancelRef$current === void 0 || _cancelRef$current.focus({
        preventScroll: !0
      });
    }),
    onPointerDownOutside: (event) => event.preventDefault(),
    onInteractOutside: (event) => event.preventDefault()
  }), /* @__PURE__ */ (0, import_react114.createElement)($5e63c961fc1ce211$export$d9f1ccf0bdb05d45, null, children), !1)));
}), $905f4ae918aab1aa$var$TITLE_NAME = "AlertDialogTitle", $905f4ae918aab1aa$export$225e0da62d314b7 = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...titleProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$f99233281efd08a0, _extends6({}, dialogScope, titleProps, {
    ref: forwardedRef
  }));
});
var $905f4ae918aab1aa$export$a23b55cde55ad9a5 = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...descriptionProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$393edc798c47379d, _extends6({}, dialogScope, descriptionProps, {
    ref: forwardedRef
  }));
});
var $905f4ae918aab1aa$export$b454f818c58ee85d = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...actionProps } = props, dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, _extends6({}, dialogScope, actionProps, {
    ref: forwardedRef
  }));
}), $905f4ae918aab1aa$var$CANCEL_NAME = "AlertDialogCancel", $905f4ae918aab1aa$export$2f67a923571aaea0 = /* @__PURE__ */ (0, import_react114.forwardRef)((props, forwardedRef) => {
  let { __scopeAlertDialog, ...cancelProps } = props, { cancelRef } = $905f4ae918aab1aa$var$useAlertDialogContentContext($905f4ae918aab1aa$var$CANCEL_NAME, __scopeAlertDialog), dialogScope = $905f4ae918aab1aa$var$useDialogScope(__scopeAlertDialog), ref = $6ed0406888f73fc4$export$c7b2cbe3552a0d05(forwardedRef, cancelRef);
  return /* @__PURE__ */ (0, import_react114.createElement)($5d3850c4d0b4e6c7$export$f39c2d165cd861fe, _extends6({}, dialogScope, cancelProps, {
    ref
  }));
});
var $905f4ae918aab1aa$export$be92b6f5f03c0fe9 = $905f4ae918aab1aa$export$de466dd8317b0b75, $905f4ae918aab1aa$export$41fb9f06171c75f4 = $905f4ae918aab1aa$export$6edd7a623ef0f40b, $905f4ae918aab1aa$export$602eac185826482c = $905f4ae918aab1aa$export$660f2bfdb986706c, $905f4ae918aab1aa$export$c6fdb837b070b4ff = $905f4ae918aab1aa$export$a707a4895ce23256, $905f4ae918aab1aa$export$7c6e2c02157bb7d2 = $905f4ae918aab1aa$export$94e6af45f0af4efd, $905f4ae918aab1aa$export$e19cd5f9376f8cee = $905f4ae918aab1aa$export$b454f818c58ee85d, $905f4ae918aab1aa$export$848c9b7ead0df967 = $905f4ae918aab1aa$export$2f67a923571aaea0, $905f4ae918aab1aa$export$f99233281efd08a0 = $905f4ae918aab1aa$export$225e0da62d314b7, $905f4ae918aab1aa$export$393edc798c47379d = $905f4ae918aab1aa$export$a23b55cde55ad9a5;

// app/components/ui/alert-dialog.tsx
var import_jsx_runtime61 = __toESM(require_jsx_runtime(), 1), AlertDialog = $905f4ae918aab1aa$export$be92b6f5f03c0fe9, AlertDialogTrigger = $905f4ae918aab1aa$export$41fb9f06171c75f4, AlertDialogPortal = $905f4ae918aab1aa$export$602eac185826482c, AlertDialogOverlay = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  $905f4ae918aab1aa$export$c6fdb837b070b4ff,
  {
    className: cn(
      "fixed inset-0 z-50 bg-background/80 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",
      className
    ),
    ...props,
    ref
  }
));
AlertDialogOverlay.displayName = $905f4ae918aab1aa$export$c6fdb837b070b4ff.displayName;
var AlertDialogContent = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsxs)(AlertDialogPortal, { children: [
  /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(AlertDialogOverlay, {}),
  /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
    $905f4ae918aab1aa$export$7c6e2c02157bb7d2,
    {
      ref,
      className: cn(
        "fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",
        className
      ),
      ...props
    }
  )
] }));
AlertDialogContent.displayName = $905f4ae918aab1aa$export$7c6e2c02157bb7d2.displayName;
var AlertDialogHeader = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  "div",
  {
    className: cn(
      "flex flex-col space-y-2 text-center sm:text-left",
      className
    ),
    ...props
  }
);
AlertDialogHeader.displayName = "AlertDialogHeader";
var AlertDialogFooter = ({
  className,
  ...props
}) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  "div",
  {
    className: cn(
      "flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",
      className
    ),
    ...props
  }
);
AlertDialogFooter.displayName = "AlertDialogFooter";
var AlertDialogTitle = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  $905f4ae918aab1aa$export$f99233281efd08a0,
  {
    ref,
    className: cn("text-lg font-semibold", className),
    ...props
  }
));
AlertDialogTitle.displayName = $905f4ae918aab1aa$export$f99233281efd08a0.displayName;
var AlertDialogDescription = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  $905f4ae918aab1aa$export$393edc798c47379d,
  {
    ref,
    className: cn("text-sm text-muted-foreground", className),
    ...props
  }
));
AlertDialogDescription.displayName = $905f4ae918aab1aa$export$393edc798c47379d.displayName;
var AlertDialogAction = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  $905f4ae918aab1aa$export$e19cd5f9376f8cee,
  {
    ref,
    className: cn(buttonVariants(), className),
    ...props
  }
));
AlertDialogAction.displayName = $905f4ae918aab1aa$export$e19cd5f9376f8cee.displayName;
var AlertDialogCancel = React52.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime61.jsx)(
  $905f4ae918aab1aa$export$848c9b7ead0df967,
  {
    ref,
    className: cn(
      buttonVariants({ variant: "outline" }),
      "mt-2 sm:mt-0",
      className
    ),
    ...props
  }
));
AlertDialogCancel.displayName = $905f4ae918aab1aa$export$848c9b7ead0df967.displayName;

// app/components/team-member-actions.tsx
var import_jsx_runtime62 = __toESM(require_jsx_runtime(), 1);
function TeamMemberActions({ member }) {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let [open, setOpen] = (0, import_react115.useState)(!1), [showDeleteDialog, setShowDeleteDialog] = (0, import_react115.useState)(!1), queryClient = useQueryClient(), removeMember = useMutation({
    mutationFn: ({ memberId }) => fetchers.deleteMember(projectId, memberId),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["team", projectId] }), setShowDeleteDialog(!1);
    }
  }), form = useForm({
    defaultValues: {
      role: member.role
    }
  }), onSubmit = (values) => {
    console.log("values", values);
  }, { data: user } = useMe(), userRoleOnProject = user?.projects.find((project) => project.id === projectId)?.role ?? "member", isMember = userRoleOnProject === "member" /* member */, isManager = userRoleOnProject === "manager" /* manager */, isCurrentUser = user?.id === member.id;
  return /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(import_jsx_runtime62.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DropdownMenu, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(DropdownMenuTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(
        Button,
        {
          variant: "ghost",
          size: "icon",
          title: "Actions",
          disabled: isMember || isManager && member.role === "owner" /* owner */ || isCurrentUser,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("span", { className: "sr-only", children: "Actions" }),
            /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(DotsHorizontalIcon, { className: "h-4 w-4" })
          ]
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DropdownMenuContent, { align: "end", children: [
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(DropdownMenuItem, { onSelect: () => setOpen(!0), children: "Change role" }),
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(
          DropdownMenuItem,
          {
            onSelect: () => setShowDeleteDialog(!0),
            className: "text-red",
            children: "Remove from project"
          }
        )
      ] })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(Dialog, { open, onOpenChange: setOpen, children: /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DialogContent, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DialogHeader, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DialogTitle, { children: [
          "Change ",
          member.fullName,
          "'s role on this project"
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(DialogDescription, { children: "This will change the permissions of this person on this project." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(Separator, {}),
      /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-4", children: [
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(
          FormField,
          {
            control: form.control,
            name: "role",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(FormItem, { className: "space-y-3", children: [
              /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(FormLabel, { children: "Role" }),
              /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(
                RadioGroup,
                {
                  onValueChange: field.onChange,
                  defaultValue: field.value,
                  className: "gap-4",
                  children: ROLES.map((role) => {
                    let disabled = role.value === "owner" /* owner */ && isManager;
                    return /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(
                      FormItem,
                      {
                        className: "flex space-x-3 space-y-0",
                        children: [
                          /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(
                            RadioGroupItem,
                            {
                              id: role.value,
                              disabled,
                              value: role.value
                            }
                          ) }),
                          /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(
                            FormLabel,
                            {
                              className: cn("font-normal", {
                                "text-muted-foreground": disabled,
                                "opacity-70": disabled
                              }),
                              htmlFor: role.value,
                              children: [
                                /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("div", { className: "mb-1 leading-none", children: role.name }),
                                /* @__PURE__ */ (0, import_jsx_runtime62.jsx)("p", { className: "text-xs text-muted-foreground", children: role.description })
                              ]
                            }
                          )
                        ]
                      },
                      role.value
                    );
                  })
                }
              ) }),
              /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(DialogFooter, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(
            Button,
            {
              type: "button",
              variant: "outline",
              onClick: () => {
                setOpen(!1);
              },
              children: "Cancel"
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(Button, { type: "submit", children: "Change Role" })
        ] })
      ] }) })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(AlertDialog, { open: showDeleteDialog, onOpenChange: setShowDeleteDialog, children: /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(AlertDialogContent, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(AlertDialogHeader, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(AlertDialogTitle, { children: [
          "Remove ",
          member.fullName,
          " from this project?"
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(AlertDialogDescription, { children: "This action cannot be undone. This person will no longer have access to this project." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(AlertDialogFooter, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(AlertDialogCancel, { children: "Cancel" }),
        /* @__PURE__ */ (0, import_jsx_runtime62.jsxs)(
          Button,
          {
            variant: "destructive",
            disabled: removeMember.isPending,
            onClick: () => {
              removeMember.mutate({ memberId: member.id });
            },
            children: [
              removeMember.isPending && /* @__PURE__ */ (0, import_jsx_runtime62.jsx)(LoadingIndicator, { className: "mr-2" }),
              "Remove"
            ]
          }
        )
      ] })
    ] }) })
  ] });
}

// app/components/ui/table.tsx
var React53 = __toESM(require_react(), 1);
var import_jsx_runtime63 = __toESM(require_jsx_runtime(), 1), Table = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("div", { className: "relative w-full overflow-auto", children: /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "table",
  {
    ref,
    className: cn("w-full caption-bottom text-sm", className),
    ...props
  }
) }));
Table.displayName = "Table";
var TableHeader = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)("thead", { ref, className: cn("[&_tr]:border-b", className), ...props }));
TableHeader.displayName = "TableHeader";
var TableBody = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "tbody",
  {
    ref,
    className: cn("[&_tr:last-child]:border-0", className),
    ...props
  }
));
TableBody.displayName = "TableBody";
var TableFooter = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "tfoot",
  {
    ref,
    className: cn(
      "border-t bg-muted/50 font-medium [&>tr]:last:border-b-0",
      className
    ),
    ...props
  }
));
TableFooter.displayName = "TableFooter";
var TableRow = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "tr",
  {
    ref,
    className: cn(
      "border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted",
      className
    ),
    ...props
  }
));
TableRow.displayName = "TableRow";
var TableHead = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "th",
  {
    ref,
    className: cn(
      "h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
      className
    ),
    ...props
  }
));
TableHead.displayName = "TableHead";
var TableCell = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "td",
  {
    ref,
    className: cn(
      "p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]",
      className
    ),
    ...props
  }
));
TableCell.displayName = "TableCell";
var TableCaption = React53.forwardRef(({ className, ...props }, ref) => /* @__PURE__ */ (0, import_jsx_runtime63.jsx)(
  "caption",
  {
    ref,
    className: cn("mt-4 text-sm text-muted-foreground", className),
    ...props
  }
));
TableCaption.displayName = "TableCaption";

// app/components/team-member-table.tsx
var import_jsx_runtime64 = __toESM(require_jsx_runtime(), 1);
function TeamMemberTable({ members }) {
  return /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(Table, { children: /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(TableBody, { children: members.map((member) => /* @__PURE__ */ (0, import_jsx_runtime64.jsxs)(TableRow, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(TableCell, { children: /* @__PURE__ */ (0, import_jsx_runtime64.jsxs)("div", { className: "flex items-center space-x-4", children: [
      /* @__PURE__ */ (0, import_jsx_runtime64.jsxs)(Avatar, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(
          AvatarImage,
          {
            src: member.avatarUrl,
            alt: `${member.fullName}`
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(AvatarFallback, { children: `${member.fullName}` })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime64.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)("p", { className: "font-medium leading-none", children: `${member.fullName}` }),
        /* @__PURE__ */ (0, import_jsx_runtime64.jsx)("p", { className: "text-muted-foreground", children: member.email })
      ] })
    ] }) }),
    /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(TableCell, { className: "w-20 capitalize text-muted-foreground", children: member.role }),
    /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(TableCell, { className: "w-9 text-right", children: /* @__PURE__ */ (0, import_jsx_runtime64.jsx)(TeamMemberActions, { member }) })
  ] }, member.id)) }) });
}

// app/components/team-invite-actions.tsx
var import_react117 = __toESM(require_react(), 1);
var import_jsx_runtime65 = __toESM(require_jsx_runtime(), 1);
function TeamInviteActions({ invite }) {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let [open, setIsOpen] = (0, import_react117.useState)(!1), queryClient = useQueryClient(), cancelInvite2 = useMutation({
    mutationFn: ({ inviteId }) => fetchers.cancelInvite(projectId, inviteId),
    onSuccess: () => {
      queryClient.invalidateQueries({ queryKey: ["team", projectId] }), setIsOpen(!1);
    }
  }), { data: user } = useMe(), isMember = user?.projects.find(
    (project) => project.id === projectId
  )?.role === "member" /* member */;
  return /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(import_jsx_runtime65.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(DropdownMenu, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(DropdownMenuTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(
        Button,
        {
          variant: "ghost",
          size: "icon",
          title: "Actions",
          disabled: isMember,
          children: [
            /* @__PURE__ */ (0, import_jsx_runtime65.jsx)("span", { className: "sr-only", children: "Actions" }),
            /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(DotsHorizontalIcon, { className: "h-4 w-4" })
          ]
        }
      ) }),
      /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(DropdownMenuContent, { align: "end", children: /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(
        DropdownMenuItem,
        {
          onSelect: () => setIsOpen(!0),
          className: "text-red",
          children: "Cancel invite"
        }
      ) })
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(AlertDialog, { open, onOpenChange: setIsOpen, children: /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(AlertDialogContent, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(AlertDialogHeader, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(AlertDialogTitle, { children: [
          "Cancel invite for ",
          invite.email,
          "?"
        ] }),
        /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(AlertDialogDescription, { children: "This invite will be canceled and the user will not be able to join the project." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(AlertDialogFooter, { children: [
        /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(AlertDialogCancel, { children: "Close" }),
        /* @__PURE__ */ (0, import_jsx_runtime65.jsxs)(
          Button,
          {
            variant: "destructive",
            disabled: cancelInvite2.isPending,
            onClick: () => {
              cancelInvite2.mutate({ inviteId: invite.id });
            },
            children: [
              cancelInvite2.isPending && /* @__PURE__ */ (0, import_jsx_runtime65.jsx)(LoadingIndicator, { className: "mr-2" }),
              "Cancel Invite"
            ]
          }
        )
      ] })
    ] }) })
  ] });
}

// app/components/team-invite-table.tsx
var import_jsx_runtime66 = __toESM(require_jsx_runtime(), 1);
function TeamInviteTable({
  invites
}) {
  return invites.length === 0 ? /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("div", { className: "py-3 text-center", children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)("p", { className: "text-muted-foreground", children: "No invites yet." }) }) : /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(Table, { children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TableBody, { children: invites.map((invite) => /* @__PURE__ */ (0, import_jsx_runtime66.jsxs)(TableRow, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TableCell, { children: invite.email }),
    /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TableCell, { className: "w-20 capitalize text-muted-foreground", children: invite.role }),
    /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TableCell, { className: "w-16 text-muted-foreground", children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(
      "div",
      {
        className: cn(
          "inline-flex select-none items-center rounded-md px-2.5 py-0.5 text-xs font-semibold",
          {
            "bg-amber-foreground text-amber": invite.state === "pending" /* Pending */,
            "bg-red-foreground text-red": invite.state === "rejected" /* Rejected */,
            "bg-green-foreground text-green": invite.state === "accepted" /* Accepted */
          }
        ),
        children: invite.state
      }
    ) }),
    /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TableCell, { className: "w-9 text-right", children: /* @__PURE__ */ (0, import_jsx_runtime66.jsx)(TeamInviteActions, { invite }) })
  ] }, invite.id)) }) });
}

// app/routes/dashboard/project/team.tsx
var import_jsx_runtime67 = __toESM(require_jsx_runtime(), 1);
function Teams() {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let team = useQuery({
    queryKey: ["team", projectId],
    queryFn: () => fetchers.getProjectTeam(projectId)
  });
  return team.isError ? /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("p", { children: "Could not load team" }) : /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)(import_jsx_runtime67.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("div", { className: "container flex flex-wrap items-center justify-between gap-4 py-8", children: [
      /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("div", { children: [
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("h2", { className: "text-3xl tracking-wide", children: "Team" }),
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("p", { className: "mt-1 text-muted-foreground", children: "Manage and invite team members." })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(TeamInviteModal, {})
    ] }),
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(Separator, { className: "mb-6" }),
    /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "container", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "mb-6 rounded-lg border p-2 md:p-12", children: /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("div", { className: "m-auto max-w-[500px] space-y-8", children: team.isPending ? /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(TeamSkeleton, {}) : /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)(import_jsx_runtime67.Fragment, { children: [
      /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("div", { className: "rounded-sm border", children: [
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("h3", { className: "bg-accent py-2 pl-4 font-semibold text-muted-foreground", children: "Members" }),
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(TeamMemberTable, { members: team.data.members })
      ] }),
      /* @__PURE__ */ (0, import_jsx_runtime67.jsxs)("div", { className: "rounded-sm border", children: [
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)("h3", { className: "bg-accent py-2 pl-4 font-semibold text-muted-foreground", children: "Invites" }),
        /* @__PURE__ */ (0, import_jsx_runtime67.jsx)(TeamInviteTable, { invites: team.data.invites })
      ] })
    ] }) }) }) })
  ] });
}

// app/routes/dashboard/project/settings.tsx
var settings_exports = {};
__export(settings_exports, {
  default: () => Settings
});
var import_react120 = __toESM(require_react(), 1);
var import_jsx_runtime68 = __toESM(require_jsx_runtime(), 1);
function Settings() {
  let { projectId } = useParams();
  if (!projectId)
    throw new Error("Project ID is required");
  let navigate = useNavigate(), queryClient = useQueryClient(), form = useForm({
    defaultValues: {
      id: projectId,
      name: ""
    }
  }), project = useQuery({
    queryKey: ["project", projectId],
    queryFn: () => fetchers.getProject(projectId),
    enabled: !!projectId
  });
  (0, import_react120.useEffect)(() => {
    project.data && form.reset(project.data);
  }, [project.data, form]);
  let updateMutation = useMutation({
    mutationFn: (variables) => fetchers.updateProject(projectId, variables),
    onSuccess: (data) => {
      queryClient.setQueryData(["project", projectId], data), queryClient.setQueryData(["projects"], (projects) => {
        if (!projects)
          return;
        let index3 = projects.findIndex((p2) => p2.id === projectId);
        return index3 === -1 ? projects : [
          ...projects.slice(0, index3),
          { ...projects[index3], name: data.name },
          ...projects.slice(index3 + 1)
        ];
      }), form.reset(data);
    }
  }), deleteMutation = useMutation({
    mutationFn: () => fetchers.deleteProject(projectId),
    onSuccess: () => {
      queryClient.setQueryData(["projects"], (projects) => {
        if (!projects)
          return;
        let index3 = projects.findIndex((p2) => p2.id === projectId);
        return index3 === -1 ? projects : [...projects.slice(0, index3), ...projects.slice(index3 + 1)];
      });
    }
  });
  (0, import_react120.useEffect)(() => {
    deleteMutation.isSuccess && navigate("/dashboard");
  }, [deleteMutation.isSuccess, navigate]);
  let { data: user } = useMe(), userRoleOnProject = user?.projects.find(
    (project2) => project2.id === projectId
  )?.role, isMember = userRoleOnProject === "member" /* member */, isManager = userRoleOnProject === "manager" /* manager */, onSubmit = (variables) => {
    updateMutation.mutate({ name: variables.name.trim() });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(import_jsx_runtime68.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime68.jsx)("div", { className: "container py-10 pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime68.jsx)("h2", { className: "text-3xl tracking-wide", children: "Project Settings" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Separator, { className: "my-6" }),
    /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)("div", { className: "container mb-6", children: [
      /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
        /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
          FormField,
          {
            control: form.control,
            name: "id",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(FormItem, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormLabel, { children: "Project ID" }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormDescription, { children: "Used when interacting with the widget." }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)("div", { className: "relative max-w-[400px]", children: [
                /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Input, { ...field, disabled: !0 }) }),
                /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
                  CopyButton,
                  {
                    className: "absolute right-0 top-0",
                    value: projectId
                  }
                )
              ] })
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
          FormField,
          {
            control: form.control,
            name: "name",
            render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(FormItem, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormLabel, { children: "Project Name" }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormDescription, { children: "Used to identify your Project on the Dashboard." }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)("div", { className: "w-[300px]", children: project.isPending ? /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Skeleton, { className: "h-9 w-full" }) : /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
                Input,
                {
                  ...field,
                  autoComplete: "false",
                  disabled: isMember || isManager
                }
              ) }) }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(FormMessage, {})
            ] })
          }
        ),
        /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(
          Button,
          {
            type: "submit",
            size: "sm",
            disabled: updateMutation.isPending || isMember || isManager,
            children: [
              updateMutation.isPending ? /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(LoadingIndicator, { className: "mr-2" }) : null,
              "Save"
            ]
          }
        )
      ] }) }),
      /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(Separator, { className: "my-6" }),
      /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)("div", { className: "space-y-2", children: [
        /* @__PURE__ */ (0, import_jsx_runtime68.jsx)("h3", { className: "text-sm font-medium", children: "Delete Project" }),
        /* @__PURE__ */ (0, import_jsx_runtime68.jsx)("p", { className: "text-[0.8rem] text-muted-foreground", children: "The project will be permanently deleted, including its feedback. This action is irreversible and can not be undone." }),
        /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(AlertDialog, { children: [
          /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(AlertDialogTrigger, { asChild: !0, children: /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(
            Button,
            {
              variant: "destructive",
              size: "sm",
              disabled: isMember || isManager,
              children: "Delete"
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(AlertDialogContent, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(AlertDialogHeader, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(AlertDialogTitle, { children: "Delete Project" }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(AlertDialogDescription, { children: "This action cannot be undone. This will permanently delete your project and all its feedback." })
            ] }),
            /* @__PURE__ */ (0, import_jsx_runtime68.jsxs)(AlertDialogFooter, { children: [
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(AlertDialogCancel, { children: "Cancel" }),
              /* @__PURE__ */ (0, import_jsx_runtime68.jsx)(AlertDialogAction, { onClick: () => deleteMutation.mutate(), children: "Continue" })
            ] })
          ] })
        ] })
      ] })
    ] })
  ] });
}

// app/routes/dashboard/email-verification/route.tsx
var route_exports8 = {};
__export(route_exports8, {
  default: () => EmailVerification
});
var import_react123 = __toESM(require_react(), 1);
var import_use_timer = __toESM(require_lib(), 1);
var import_jsx_runtime69 = __toESM(require_jsx_runtime(), 1);
function EmailVerification() {
  let { time, start, status } = (0, import_use_timer.useTimer)({
    initialTime: 180,
    endTime: 0,
    timerType: "DECREMENTAL"
  }), navigate = useNavigate(), [params] = useSearchParams(), emailVerificationToken = params.get("emailVerificationToken"), resendVerificationEmail2 = useMutation({
    mutationFn: fetchers.resendVerificationEmail
  }), verifyEmail2 = useMutation({
    mutationFn: fetchers.verifyEmail,
    onSuccess: () => {
      navigate("/dashboard", { replace: !0 });
    }
  });
  (0, import_react123.useEffect)(() => {
    emailVerificationToken && verifyEmail2.mutate({ emailVerificationToken });
  }, [verifyEmail2.mutate, emailVerificationToken]);
  let handleResendVerificationEmail = async () => {
    await resendVerificationEmail2.mutateAsync(), start();
  }, showApiError = verifyEmail2.isError, showUrlInvalidError = !emailVerificationToken, hasError = showApiError || showUrlInvalidError, showLoading = (verifyEmail2.isPending || verifyEmail2.isIdle) && !hasError;
  return /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(
    "div",
    {
      className: cn(
        "mt-[15dvh]",
        "space-y-8",
        "flex flex-col items-center justify-center"
      ),
      children: /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: cn("m-auto max-w-[500px]"), children: [
        showLoading && /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: "flex flex-col items-center gap-4", children: [
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("div", { className: cn("h-8 w-8"), children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(
            LoadingIndicator,
            {
              className: cn("h-full w-full", "border-link")
            }
          ) }),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("h1", { className: "text-center text-2xl font-bold", children: "Verifying your email..." })
        ] }),
        showApiError && /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: "flex flex-col items-center justify-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("h1", { className: "whitespace-nowrap text-center text-2xl font-bold", children: [
            /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("div", { children: "Email verification is invalid or expired." }),
            /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("div", { children: "Please resend the email." })
          ] }),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(Button, { className: "mt-4", variant: "outline", children: "Resend Email" }),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("p", { className: "mt-4 text-center text-muted-foreground", children: "If you have not yet received an email, please check your Spam folder." })
        ] }),
        showUrlInvalidError && /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("div", { className: "flex flex-col items-center justify-center", children: [
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("h1", { className: "text-center text-2xl font-bold", children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("div", { children: "Your email is not verified. Please check your email or resend." }) }),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)(
            Button,
            {
              className: "mt-4",
              variant: "outline",
              disabled: status === "RUNNING",
              onClick: handleResendVerificationEmail,
              children: /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("div", { children: status === "RUNNING" ? /* @__PURE__ */ (0, import_jsx_runtime69.jsxs)("span", { className: "ml-2", children: [
                "You can resend in",
                " ",
                /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("span", { className: "tabular-nums", children: time }),
                " seconds"
              ] }) : /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("span", { children: "Resend Email" }) })
            }
          ),
          /* @__PURE__ */ (0, import_jsx_runtime69.jsx)("p", { className: "mt-4 text-center text-muted-foreground", children: "If you have not yet received an email, please check your Spam folder or contact support." })
        ] })
      ] })
    }
  );
}

// app/routes/dashboard/settings.tsx
var settings_exports2 = {};
__export(settings_exports2, {
  default: () => Settings2
});
var import_react124 = __toESM(require_react(), 1);
var import_jsx_runtime70 = __toESM(require_jsx_runtime(), 1);
function Settings2() {
  let queryClient = useQueryClient(), { toast: toast2 } = useToast(), user = useMe(), form = useForm({
    defaultValues: {
      fullName: user.data?.fullName ?? ""
    }
  });
  (0, import_react124.useEffect)(() => {
    user.data && form.reset({ fullName: user.data.fullName });
  }, [user.data, form]);
  let updateMutation = useMutation({
    mutationFn: fetchers.updateUser,
    onSuccess: (data) => {
      queryClient.setQueryData(["me"], data), form.reset({ fullName: data.fullName }), toast2({
        title: "Success!",
        description: "Your account settings have been updated."
      });
    }
  }), onSubmit = (variables) => {
    updateMutation.mutate({ fullName: variables.fullName.trim() });
  };
  return /* @__PURE__ */ (0, import_jsx_runtime70.jsxs)(import_jsx_runtime70.Fragment, { children: [
    /* @__PURE__ */ (0, import_jsx_runtime70.jsx)("div", { className: "container py-10 pb-4", children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)("h2", { className: "text-3xl tracking-wide", children: "Account Settings" }) }),
    /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Separator, { className: "my-6" }),
    /* @__PURE__ */ (0, import_jsx_runtime70.jsx)("div", { className: "container mb-6", children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Form2, { ...form, children: /* @__PURE__ */ (0, import_jsx_runtime70.jsxs)("form", { onSubmit: form.handleSubmit(onSubmit), className: "space-y-8", children: [
      /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(
        FormField,
        {
          control: form.control,
          name: "fullName",
          render: ({ field }) => /* @__PURE__ */ (0, import_jsx_runtime70.jsxs)(FormItem, { children: [
            /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(FormLabel, { children: "Name" }),
            /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(FormDescription, { children: "This is how your name will appear in the app." }),
            /* @__PURE__ */ (0, import_jsx_runtime70.jsx)("div", { className: "w-[300px]", children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(FormControl, { children: /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(Input, { ...field, autoComplete: "false" }) }) }),
            /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(FormMessage, {})
          ] })
        }
      ),
      /* @__PURE__ */ (0, import_jsx_runtime70.jsxs)(Button, { type: "submit", size: "sm", disabled: updateMutation.isPending, children: [
        updateMutation.isPending ? /* @__PURE__ */ (0, import_jsx_runtime70.jsx)(LoadingIndicator, { className: "mr-2" }) : null,
        "Save"
      ] })
    ] }) }) })
  ] });
}

// server-assets-manifest:@remix-run/dev/assets-manifest
var assets_manifest_default = { entry: { module: "/build/entry.client-UGPJHGLY.js", imports: ["/build/_shared/chunk-BL5JZOWB.js", "/build/_shared/chunk-C2JFR4N5.js", "/build/_shared/chunk-G5WX4PPA.js"] }, routes: { root: { id: "root", parentId: void 0, path: "", index: void 0, caseSensitive: void 0, module: "/build/root-VUSP2KDU.js", imports: ["/build/_shared/chunk-HUBNRVSA.js", "/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-GFHJX4OC.js", "/build/_shared/chunk-O7XZGY4N.js", "/build/_shared/chunk-7BYTOSXB.js", "/build/_shared/chunk-JPHS4WOZ.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-DIU63JXU.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-GHBZ4Q3K.js", "/build/_shared/chunk-LHJNUGCT.js", "/build/_shared/chunk-LS7UD7JX.js", "/build/_shared/chunk-66TNMAI6.js", "/build/_shared/chunk-J2XOEO7W.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-GE4ZJASY.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-J4TMK45X.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !0, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/auth/layout": { id: "routes/auth/layout", parentId: "root", path: void 0, index: void 0, caseSensitive: void 0, module: "/build/routes/auth/layout-X566TSC3.js", imports: void 0, hasAction: !1, hasLoader: !0, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/auth/login/email/route": { id: "routes/auth/login/email/route", parentId: "routes/auth/layout", path: "login/email", index: !0, caseSensitive: void 0, module: "/build/routes/auth/login/email/route-MXJJDXLV.js", imports: ["/build/_shared/chunk-LZ747MH6.js", "/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/auth/login/route": { id: "routes/auth/login/route", parentId: "routes/auth/layout", path: "login", index: void 0, caseSensitive: void 0, module: "/build/routes/auth/login/route-K43WFBQN.js", imports: ["/build/_shared/chunk-SWTP2IZR.js", "/build/_shared/chunk-LZ747MH6.js", "/build/_shared/chunk-HUBNRVSA.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/auth/signup/email/route": { id: "routes/auth/signup/email/route", parentId: "routes/auth/layout", path: "signup/email", index: !0, caseSensitive: void 0, module: "/build/routes/auth/signup/email/route-LX6JXOIR.js", imports: ["/build/_shared/chunk-LZ747MH6.js", "/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-J4TMK45X.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/auth/signup/route": { id: "routes/auth/signup/route", parentId: "routes/auth/layout", path: "signup", index: void 0, caseSensitive: void 0, module: "/build/routes/auth/signup/route-KXY3B7PU.js", imports: ["/build/_shared/chunk-SWTP2IZR.js", "/build/_shared/chunk-LZ747MH6.js", "/build/_shared/chunk-HUBNRVSA.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-J4TMK45X.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard": { id: "routes/dashboard", parentId: "root", path: "dashboard", index: void 0, caseSensitive: void 0, module: "/build/routes/dashboard/route-YR6F4EKT.js", imports: ["/build/_shared/chunk-54FMNX7R.js", "/build/_shared/chunk-XDOTA4TT.js", "/build/_shared/chunk-6XVT3Z43.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-55N6IB4Q.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/route": { id: "routes/dashboard/route", parentId: "routes/dashboard/layout", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/dashboard/route-YR6F4EKT.js", imports: ["/build/_shared/chunk-54FMNX7R.js", "/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-DIU63JXU.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-66TNMAI6.js", "/build/_shared/chunk-J2XOEO7W.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-J4TMK45X.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/email-verification/route": { id: "routes/dashboard/email-verification/route", parentId: "routes/dashboard/layout", path: "email-verification", index: void 0, caseSensitive: void 0, module: "/build/routes/dashboard/email-verification/route-7AXLWVPN.js", imports: ["/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/layout": { id: "routes/dashboard/layout", parentId: "root", path: "dashboard", index: void 0, caseSensitive: void 0, module: "/build/routes/dashboard/layout-QKJJQK2O.js", imports: ["/build/_shared/chunk-BDSEC6ZU.js", "/build/_shared/chunk-K5TRYQKO.js", "/build/_shared/chunk-XDOTA4TT.js", "/build/_shared/chunk-6XVT3Z43.js", "/build/_shared/chunk-MY323HGE.js", "/build/_shared/chunk-4QTHINK3.js", "/build/_shared/chunk-55N6IB4Q.js"], hasAction: !1, hasLoader: !0, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/project/feedbacks": { id: "routes/dashboard/project/feedbacks", parentId: "routes/dashboard/project/layout", path: void 0, index: !0, caseSensitive: void 0, module: "/build/routes/dashboard/project/feedbacks-SIOUK55S.js", imports: ["/build/_shared/chunk-HMAHJHXS.js", "/build/_shared/chunk-YFPDICPL.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-6XVT3Z43.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-DIU63JXU.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-LS7UD7JX.js", "/build/_shared/chunk-55N6IB4Q.js", "/build/_shared/chunk-J2XOEO7W.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/project/layout": { id: "routes/dashboard/project/layout", parentId: "routes/dashboard/layout", path: ":projectId", index: void 0, caseSensitive: void 0, module: "/build/routes/dashboard/project/layout-KOCZRDUA.js", imports: ["/build/_shared/chunk-7OUDUC4V.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-J4TMK45X.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/project/settings": { id: "routes/dashboard/project/settings", parentId: "routes/dashboard/project/layout", path: "settings", index: !0, caseSensitive: void 0, module: "/build/routes/dashboard/project/settings-WII74BBZ.js", imports: ["/build/_shared/chunk-COUIVQDH.js", "/build/_shared/chunk-K5TRYQKO.js", "/build/_shared/chunk-HMAHJHXS.js", "/build/_shared/chunk-YFPDICPL.js", "/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-7BYTOSXB.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-6XVT3Z43.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-DIU63JXU.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-66TNMAI6.js", "/build/_shared/chunk-J2XOEO7W.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/project/team": { id: "routes/dashboard/project/team", parentId: "routes/dashboard/project/layout", path: "team", index: !0, caseSensitive: void 0, module: "/build/routes/dashboard/project/team-JH4S43LC.js", imports: ["/build/_shared/chunk-COUIVQDH.js", "/build/_shared/chunk-BDSEC6ZU.js", "/build/_shared/chunk-K5TRYQKO.js", "/build/_shared/chunk-YFPDICPL.js", "/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-O7XZGY4N.js", "/build/_shared/chunk-7BYTOSXB.js", "/build/_shared/chunk-JPHS4WOZ.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-6XVT3Z43.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-DIU63JXU.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-4QTHINK3.js", "/build/_shared/chunk-LHJNUGCT.js", "/build/_shared/chunk-55N6IB4Q.js", "/build/_shared/chunk-66TNMAI6.js", "/build/_shared/chunk-J2XOEO7W.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/dashboard/settings": { id: "routes/dashboard/settings", parentId: "routes/dashboard/layout", path: "settings", index: !0, caseSensitive: void 0, module: "/build/routes/dashboard/settings-ZVAUAD5Z.js", imports: ["/build/_shared/chunk-IMBE6CFW.js", "/build/_shared/chunk-JPHS4WOZ.js", "/build/_shared/chunk-32ADEX6R.js", "/build/_shared/chunk-LHXH6ZP4.js", "/build/_shared/chunk-VRTBQ7KW.js", "/build/_shared/chunk-OR2MFK5J.js", "/build/_shared/chunk-REZSZDSH.js", "/build/_shared/chunk-I352TAU4.js", "/build/_shared/chunk-6JI5EDX6.js", "/build/_shared/chunk-LLTVGY2H.js", "/build/_shared/chunk-WJSTJ75U.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/docs": { id: "routes/docs", parentId: "root", path: "docs", index: void 0, caseSensitive: void 0, module: "/build/routes/docs/route-UV2NK6NT.js", imports: ["/build/_shared/chunk-44NCY4AE.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/docs/route": { id: "routes/docs/route", parentId: "root", path: "docs", index: void 0, caseSensitive: void 0, module: "/build/routes/docs/route-UV2NK6NT.js", imports: ["/build/_shared/chunk-44NCY4AE.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/landing": { id: "routes/landing", parentId: "root", path: "landing", index: void 0, caseSensitive: void 0, module: "/build/routes/landing/route-QUGF4OB6.js", imports: ["/build/_shared/chunk-AXA273QB.js", "/build/_shared/chunk-MY323HGE.js", "/build/_shared/chunk-4QTHINK3.js", "/build/_shared/chunk-55N6IB4Q.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 }, "routes/landing/route": { id: "routes/landing/route", parentId: "root", path: "/", index: !0, caseSensitive: void 0, module: "/build/routes/landing/route-QUGF4OB6.js", imports: ["/build/_shared/chunk-AXA273QB.js", "/build/_shared/chunk-MY323HGE.js", "/build/_shared/chunk-4QTHINK3.js", "/build/_shared/chunk-55N6IB4Q.js"], hasAction: !1, hasLoader: !1, hasClientAction: !1, hasClientLoader: !1, hasErrorBoundary: !1 } }, version: "f46bec9f", hmr: void 0, url: "/build/manifest-F46BEC9F.js" };

// server-entry-module:@remix-run/dev/server-build
var mode = "production", assetsBuildDirectory = "public/build", future = { v3_fetcherPersist: !1, v3_relativeSplatPath: !1 }, publicPath = "/build/", entry = { module: entry_server_exports }, routes = {
  root: {
    id: "root",
    parentId: void 0,
    path: "",
    index: void 0,
    caseSensitive: void 0,
    module: root_exports
  },
  "routes/dashboard": {
    id: "routes/dashboard",
    parentId: "root",
    path: "dashboard",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports
  },
  "routes/landing": {
    id: "routes/landing",
    parentId: "root",
    path: "landing",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports2
  },
  "routes/docs": {
    id: "routes/docs",
    parentId: "root",
    path: "docs",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports3
  },
  "routes/landing/route": {
    id: "routes/landing/route",
    parentId: "root",
    path: "/",
    index: !0,
    caseSensitive: void 0,
    module: route_exports2
  },
  "routes/docs/route": {
    id: "routes/docs/route",
    parentId: "root",
    path: "docs",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports3
  },
  "routes/auth/layout": {
    id: "routes/auth/layout",
    parentId: "root",
    path: void 0,
    index: void 0,
    caseSensitive: void 0,
    module: layout_exports
  },
  "routes/auth/login/route": {
    id: "routes/auth/login/route",
    parentId: "routes/auth/layout",
    path: "login",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports4
  },
  "routes/auth/login/email/route": {
    id: "routes/auth/login/email/route",
    parentId: "routes/auth/layout",
    path: "login/email",
    index: !0,
    caseSensitive: void 0,
    module: route_exports5
  },
  "routes/auth/signup/route": {
    id: "routes/auth/signup/route",
    parentId: "routes/auth/layout",
    path: "signup",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports6
  },
  "routes/auth/signup/email/route": {
    id: "routes/auth/signup/email/route",
    parentId: "routes/auth/layout",
    path: "signup/email",
    index: !0,
    caseSensitive: void 0,
    module: route_exports7
  },
  "routes/dashboard/layout": {
    id: "routes/dashboard/layout",
    parentId: "root",
    path: "dashboard",
    index: void 0,
    caseSensitive: void 0,
    module: layout_exports2
  },
  "routes/dashboard/route": {
    id: "routes/dashboard/route",
    parentId: "routes/dashboard/layout",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: route_exports
  },
  "routes/dashboard/project/layout": {
    id: "routes/dashboard/project/layout",
    parentId: "routes/dashboard/layout",
    path: ":projectId",
    index: void 0,
    caseSensitive: void 0,
    module: layout_exports3
  },
  "routes/dashboard/project/feedbacks": {
    id: "routes/dashboard/project/feedbacks",
    parentId: "routes/dashboard/project/layout",
    path: void 0,
    index: !0,
    caseSensitive: void 0,
    module: feedbacks_exports
  },
  "routes/dashboard/project/team": {
    id: "routes/dashboard/project/team",
    parentId: "routes/dashboard/project/layout",
    path: "team",
    index: !0,
    caseSensitive: void 0,
    module: team_exports
  },
  "routes/dashboard/project/settings": {
    id: "routes/dashboard/project/settings",
    parentId: "routes/dashboard/project/layout",
    path: "settings",
    index: !0,
    caseSensitive: void 0,
    module: settings_exports
  },
  "routes/dashboard/email-verification/route": {
    id: "routes/dashboard/email-verification/route",
    parentId: "routes/dashboard/layout",
    path: "email-verification",
    index: void 0,
    caseSensitive: void 0,
    module: route_exports8
  },
  "routes/dashboard/settings": {
    id: "routes/dashboard/settings",
    parentId: "routes/dashboard/layout",
    path: "settings",
    index: !0,
    caseSensitive: void 0,
    module: settings_exports2
  }
};

// server.ts
var onRequest = createPagesFunctionHandler({
  // @ts-ignore
  build: server_build_exports,
  getLoadContext: (context) => ({ env: context.env }),
  mode
});
export {
  onRequest
};
/*! Bundled license information:

cookie/index.js:
  (*!
   * cookie
   * Copyright(c) 2012-2014 Roman Shtylman
   * Copyright(c) 2015 Douglas Christopher Wilson
   * MIT Licensed
   *)

@remix-run/server-runtime/dist/esm/warnings.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/cookies.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/formData.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/router/dist/router.js:
  (**
   * @remix-run/router v1.14.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/mode.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/errors.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/responses.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/entry.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/headers.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/invariant.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routeMatching.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/data.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/routes.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/markup.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/serverHandoff.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/dev.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/server.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/cookieStorage.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/sessions/memoryStorage.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/upload/errors.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/upload/memoryUploadHandler.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/server-runtime/dist/esm/index.js:
  (**
   * @remix-run/server-runtime v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/crypto.js:
  (**
   * @remix-run/cloudflare v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/implementations.js:
  (**
   * @remix-run/cloudflare v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/sessions/workersKVStorage.js:
  (**
   * @remix-run/cloudflare v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare/dist/index.js:
  (**
   * @remix-run/cloudflare v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/router/dist/router.js:
  (**
   * @remix-run/router v1.14.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react/cjs/react.production.min.js:
  (**
   * @license React
   * react.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-router/dist/index.js:
  (**
   * React Router v6.21.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

scheduler/cjs/scheduler.production.min.js:
  (**
   * @license React
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.production.min.js:
  (**
   * @license React
   * react-dom.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-router-dom/dist/index.js:
  (**
   * React Router DOM v6.21.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

react-dom/cjs/react-dom-server-legacy.browser.production.min.js:
  (**
   * @license React
   * react-dom-server-legacy.browser.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom-server.browser.production.min.js:
  (**
   * @license React
   * react-dom-server.browser.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react/cjs/react-jsx-runtime.production.min.js:
  (**
   * @license React
   * react-jsx-runtime.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

@remix-run/cloudflare-pages/dist/esm/worker.js:
  (**
   * @remix-run/cloudflare-pages v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/cloudflare-pages/dist/esm/index.js:
  (**
   * @remix-run/cloudflare-pages v2.4.1
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/_virtual/_rollupPluginBabelHelpers.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/invariant.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routeModules.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/links.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/markup.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/components.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/errorBoundaries.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/fallback.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/routes.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/scroll-restoration.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/server.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)

@remix-run/react/dist/esm/index.js:
  (**
   * @remix-run/react v2.4.0
   *
   * Copyright (c) Remix Software Inc.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE.md file in the root directory of this source tree.
   *
   * @license MIT
   *)
*/
